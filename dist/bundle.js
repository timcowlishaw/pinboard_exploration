/******/ (function(modules) { // webpackBootstrap
/******/ 	function hotDisposeChunk(chunkId) {
/******/ 		delete installedChunks[chunkId];
/******/ 	}
/******/ 	var parentHotUpdateCallback = this["webpackHotUpdate"];
/******/ 	this["webpackHotUpdate"] = 
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	} ;
/******/ 	
/******/ 	function hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars
/******/ 		var head = document.getElementsByTagName("head")[0];
/******/ 		var script = document.createElement("script");
/******/ 		script.type = "text/javascript";
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		head.appendChild(script);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadManifest() { // eslint-disable-line no-unused-vars
/******/ 		return new Promise(function(resolve, reject) {
/******/ 			if(typeof XMLHttpRequest === "undefined")
/******/ 				return reject(new Error("No browser support"));
/******/ 			try {
/******/ 				var request = new XMLHttpRequest();
/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 				request.open("GET", requestPath, true);
/******/ 				request.timeout = 10000;
/******/ 				request.send(null);
/******/ 			} catch(err) {
/******/ 				return reject(err);
/******/ 			}
/******/ 			request.onreadystatechange = function() {
/******/ 				if(request.readyState !== 4) return;
/******/ 				if(request.status === 0) {
/******/ 					// timeout
/******/ 					reject(new Error("Manifest request to " + requestPath + " timed out."));
/******/ 				} else if(request.status === 404) {
/******/ 					// no update available
/******/ 					resolve();
/******/ 				} else if(request.status !== 200 && request.status !== 304) {
/******/ 					// other failure
/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
/******/ 				} else {
/******/ 					// success
/******/ 					try {
/******/ 						var update = JSON.parse(request.responseText);
/******/ 					} catch(e) {
/******/ 						reject(e);
/******/ 						return;
/******/ 					}
/******/ 					resolve(update);
/******/ 				}
/******/ 			};
/******/ 		});
/******/ 	}

/******/ 	
/******/ 	
/******/ 	var hotApplyOnUpdate = true;
/******/ 	var hotCurrentHash = "4885e5b4eea12b6c7a85"; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotMainModule = true; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentParents = []; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentParentsTemp = []; // eslint-disable-line no-unused-vars
/******/ 	
/******/ 	function hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var me = installedModules[moduleId];
/******/ 		if(!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if(me.hot.active) {
/******/ 				if(installedModules[request]) {
/******/ 					if(installedModules[request].parents.indexOf(moduleId) < 0)
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 				} else hotCurrentParents = [moduleId];
/******/ 				if(me.children.indexOf(request) < 0)
/******/ 					me.children.push(request);
/******/ 			} else {
/******/ 				console.warn("[HMR] unexpected require(" + request + ") from disposed module " + moduleId);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			hotMainModule = false;
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		var ObjectFactory = function ObjectFactory(name) {
/******/ 			return {
/******/ 				configurable: true,
/******/ 				enumerable: true,
/******/ 				get: function() {
/******/ 					return __webpack_require__[name];
/******/ 				},
/******/ 				set: function(value) {
/******/ 					__webpack_require__[name] = value;
/******/ 				}
/******/ 			};
/******/ 		};
/******/ 		for(var name in __webpack_require__) {
/******/ 			if(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {
/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
/******/ 			}
/******/ 		}
/******/ 		Object.defineProperty(fn, "e", {
/******/ 			enumerable: true,
/******/ 			value: function(chunkId) {
/******/ 				if(hotStatus === "ready")
/******/ 					hotSetStatus("prepare");
/******/ 				hotChunksLoading++;
/******/ 				return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
/******/ 					finishChunkLoading();
/******/ 					throw err;
/******/ 				});
/******/ 	
/******/ 				function finishChunkLoading() {
/******/ 					hotChunksLoading--;
/******/ 					if(hotStatus === "prepare") {
/******/ 						if(!hotWaitingFilesMap[chunkId]) {
/******/ 							hotEnsureUpdateChunk(chunkId);
/******/ 						}
/******/ 						if(hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 							hotUpdateDownloaded();
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		});
/******/ 		return fn;
/******/ 	}
/******/ 	
/******/ 	function hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 			_main: hotMainModule,
/******/ 	
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfAccepted = true;
/******/ 				else if(typeof dep === "function")
/******/ 					hot._selfAccepted = dep;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
/******/ 				else
/******/ 					hot._acceptedDependencies[dep] = callback || function() {};
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfDeclined = true;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 				else
/******/ 					hot._declinedDependencies[dep] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if(idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if(!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if(idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		hotMainModule = true;
/******/ 		return hot;
/******/ 	}
/******/ 	
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/ 	
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for(var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/ 	
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailableFilesMap = {};
/******/ 	var hotDeferred;
/******/ 	
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/ 	
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = (+id) + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/ 	
/******/ 	function hotCheck(apply) {
/******/ 		if(hotStatus !== "idle") throw new Error("check() is only allowed in idle status");
/******/ 		hotApplyOnUpdate = apply;
/******/ 		hotSetStatus("check");
/******/ 		return hotDownloadManifest().then(function(update) {
/******/ 			if(!update) {
/******/ 				hotSetStatus("idle");
/******/ 				return null;
/******/ 			}
/******/ 	
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			hotAvailableFilesMap = update.c;
/******/ 			hotUpdateNewHash = update.h;
/******/ 	
/******/ 			hotSetStatus("prepare");
/******/ 			var promise = new Promise(function(resolve, reject) {
/******/ 				hotDeferred = {
/******/ 					resolve: resolve,
/******/ 					reject: reject
/******/ 				};
/******/ 			});
/******/ 			hotUpdate = {};
/******/ 			var chunkId = 0;
/******/ 			{ // eslint-disable-line no-lone-blocks
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if(hotStatus === "prepare" && hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 			return promise;
/******/ 		});
/******/ 	}
/******/ 	
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		if(!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for(var moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if(!hotAvailableFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var deferred = hotDeferred;
/******/ 		hotDeferred = null;
/******/ 		if(!deferred) return;
/******/ 		if(hotApplyOnUpdate) {
/******/ 			hotApply(hotApplyOnUpdate).then(function(result) {
/******/ 				deferred.resolve(result);
/******/ 			}, function(err) {
/******/ 				deferred.reject(err);
/******/ 			});
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for(var id in hotUpdate) {
/******/ 				if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			deferred.resolve(outdatedModules);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotApply(options) {
/******/ 		if(hotStatus !== "ready") throw new Error("apply() is only allowed in ready status");
/******/ 		options = options || {};
/******/ 	
/******/ 		var cb;
/******/ 		var i;
/******/ 		var j;
/******/ 		var module;
/******/ 		var moduleId;
/******/ 	
/******/ 		function getAffectedStuff(updateModuleId) {
/******/ 			var outdatedModules = [updateModuleId];
/******/ 			var outdatedDependencies = {};
/******/ 	
/******/ 			var queue = outdatedModules.slice().map(function(id) {
/******/ 				return {
/******/ 					chain: [id],
/******/ 					id: id
/******/ 				};
/******/ 			});
/******/ 			while(queue.length > 0) {
/******/ 				var queueItem = queue.pop();
/******/ 				var moduleId = queueItem.id;
/******/ 				var chain = queueItem.chain;
/******/ 				module = installedModules[moduleId];
/******/ 				if(!module || module.hot._selfAccepted)
/******/ 					continue;
/******/ 				if(module.hot._selfDeclined) {
/******/ 					return {
/******/ 						type: "self-declined",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				if(module.hot._main) {
/******/ 					return {
/******/ 						type: "unaccepted",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				for(var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if(!parent) continue;
/******/ 					if(parent.hot._declinedDependencies[moduleId]) {
/******/ 						return {
/******/ 							type: "declined",
/******/ 							chain: chain.concat([parentId]),
/******/ 							moduleId: moduleId,
/******/ 							parentId: parentId
/******/ 						};
/******/ 					}
/******/ 					if(outdatedModules.indexOf(parentId) >= 0) continue;
/******/ 					if(parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if(!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push({
/******/ 						chain: chain.concat([parentId]),
/******/ 						id: parentId
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 	
/******/ 			return {
/******/ 				type: "accepted",
/******/ 				moduleId: updateModuleId,
/******/ 				outdatedModules: outdatedModules,
/******/ 				outdatedDependencies: outdatedDependencies
/******/ 			};
/******/ 		}
/******/ 	
/******/ 		function addAllToSet(a, b) {
/******/ 			for(var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if(a.indexOf(item) < 0)
/******/ 					a.push(item);
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/ 	
/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
/******/ 			console.warn("[HMR] unexpected require(" + result.moduleId + ") to disposed module");
/******/ 		};
/******/ 	
/******/ 		for(var id in hotUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				moduleId = toModuleId(id);
/******/ 				var result;
/******/ 				if(hotUpdate[id]) {
/******/ 					result = getAffectedStuff(moduleId);
/******/ 				} else {
/******/ 					result = {
/******/ 						type: "disposed",
/******/ 						moduleId: id
/******/ 					};
/******/ 				}
/******/ 				var abortError = false;
/******/ 				var doApply = false;
/******/ 				var doDispose = false;
/******/ 				var chainInfo = "";
/******/ 				if(result.chain) {
/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 				}
/******/ 				switch(result.type) {
/******/ 					case "self-declined":
/******/ 						if(options.onDeclined)
/******/ 							options.onDeclined(result);
/******/ 						if(!options.ignoreDeclined)
/******/ 							abortError = new Error("Aborted because of self decline: " + result.moduleId + chainInfo);
/******/ 						break;
/******/ 					case "declined":
/******/ 						if(options.onDeclined)
/******/ 							options.onDeclined(result);
/******/ 						if(!options.ignoreDeclined)
/******/ 							abortError = new Error("Aborted because of declined dependency: " + result.moduleId + " in " + result.parentId + chainInfo);
/******/ 						break;
/******/ 					case "unaccepted":
/******/ 						if(options.onUnaccepted)
/******/ 							options.onUnaccepted(result);
/******/ 						if(!options.ignoreUnaccepted)
/******/ 							abortError = new Error("Aborted because " + moduleId + " is not accepted" + chainInfo);
/******/ 						break;
/******/ 					case "accepted":
/******/ 						if(options.onAccepted)
/******/ 							options.onAccepted(result);
/******/ 						doApply = true;
/******/ 						break;
/******/ 					case "disposed":
/******/ 						if(options.onDisposed)
/******/ 							options.onDisposed(result);
/******/ 						doDispose = true;
/******/ 						break;
/******/ 					default:
/******/ 						throw new Error("Unexception type " + result.type);
/******/ 				}
/******/ 				if(abortError) {
/******/ 					hotSetStatus("abort");
/******/ 					return Promise.reject(abortError);
/******/ 				}
/******/ 				if(doApply) {
/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
/******/ 					for(moduleId in result.outdatedDependencies) {
/******/ 						if(Object.prototype.hasOwnProperty.call(result.outdatedDependencies, moduleId)) {
/******/ 							if(!outdatedDependencies[moduleId])
/******/ 								outdatedDependencies[moduleId] = [];
/******/ 							addAllToSet(outdatedDependencies[moduleId], result.outdatedDependencies[moduleId]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 				if(doDispose) {
/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for(i = 0; i < outdatedModules.length; i++) {
/******/ 			moduleId = outdatedModules[i];
/******/ 			if(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 		}
/******/ 	
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
/******/ 			if(hotAvailableFilesMap[chunkId] === false) {
/******/ 				hotDisposeChunk(chunkId);
/******/ 			}
/******/ 		});
/******/ 	
/******/ 		var idx;
/******/ 		var queue = outdatedModules.slice();
/******/ 		while(queue.length > 0) {
/******/ 			moduleId = queue.pop();
/******/ 			module = installedModules[moduleId];
/******/ 			if(!module) continue;
/******/ 	
/******/ 			var data = {};
/******/ 	
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for(j = 0; j < disposeHandlers.length; j++) {
/******/ 				cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/ 	
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/ 	
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/ 	
/******/ 			// remove "parents" references from all children
/******/ 			for(j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if(!child) continue;
/******/ 				idx = child.parents.indexOf(moduleId);
/******/ 				if(idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// remove outdated dependency from module children
/******/ 		var dependency;
/******/ 		var moduleOutdatedDependencies;
/******/ 		for(moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				module = installedModules[moduleId];
/******/ 				if(module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					for(j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 						dependency = moduleOutdatedDependencies[j];
/******/ 						idx = module.children.indexOf(dependency);
/******/ 						if(idx >= 0) module.children.splice(idx, 1);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Not in "apply" phase
/******/ 		hotSetStatus("apply");
/******/ 	
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/ 	
/******/ 		// insert new code
/******/ 		for(moduleId in appliedUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for(moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				module = installedModules[moduleId];
/******/ 				moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				var callbacks = [];
/******/ 				for(i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 					dependency = moduleOutdatedDependencies[i];
/******/ 					cb = module.hot._acceptedDependencies[dependency];
/******/ 					if(callbacks.indexOf(cb) >= 0) continue;
/******/ 					callbacks.push(cb);
/******/ 				}
/******/ 				for(i = 0; i < callbacks.length; i++) {
/******/ 					cb = callbacks[i];
/******/ 					try {
/******/ 						cb(moduleOutdatedDependencies);
/******/ 					} catch(err) {
/******/ 						if(options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "accept-errored",
/******/ 								moduleId: moduleId,
/******/ 								dependencyId: moduleOutdatedDependencies[i],
/******/ 								error: err
/******/ 							});
/******/ 						}
/******/ 						if(!options.ignoreErrored) {
/******/ 							if(!error)
/******/ 								error = err;
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Load self accepted modules
/******/ 		for(i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch(err) {
/******/ 				if(typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch(err2) {
/******/ 						if(options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "self-accept-error-handler-errored",
/******/ 								moduleId: moduleId,
/******/ 								error: err2,
/******/ 								orginalError: err
/******/ 							});
/******/ 						}
/******/ 						if(!options.ignoreErrored) {
/******/ 							if(!error)
/******/ 								error = err2;
/******/ 						}
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				} else {
/******/ 					if(options.onErrored) {
/******/ 						options.onErrored({
/******/ 							type: "self-accept-errored",
/******/ 							moduleId: moduleId,
/******/ 							error: err
/******/ 						});
/******/ 					}
/******/ 					if(!options.ignoreErrored) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if(error) {
/******/ 			hotSetStatus("fail");
/******/ 			return Promise.reject(error);
/******/ 		}
/******/ 	
/******/ 		hotSetStatus("idle");
/******/ 		return Promise.resolve(outdatedModules);
/******/ 	}

/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {},
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
/******/ 			children: []
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "dist";

/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };

/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire(242)(__webpack_require__.s = 242);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(23);


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var emptyFunction = __webpack_require__(11);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  (function () {
    var printWarning = function printWarning(format) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch (x) {}
    };

    warning = function warning(condition, format) {
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }

      if (format.indexOf('Failed Composite propType: ') === 0) {
        return; // Ignore CompositeComponent proptype check.
      }

      if (!condition) {
        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
          args[_key2 - 2] = arguments[_key2];
        }

        printWarning.apply(undefined, [format].concat(args));
      }
    };
  })();
}

module.exports = warning;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */


/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var DOMProperty = __webpack_require__(15);
var ReactDOMComponentFlags = __webpack_require__(69);

var invariant = __webpack_require__(2);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(19);

var ReactCurrentOwner = __webpack_require__(13);

var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty)
  // Strip regex characters so we can use it for regex
  .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  // Remove hasOwnProperty from the template to make it generic
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs
};

module.exports = ReactComponentTreeHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if (process.env.NODE_ENV !== 'production') {
  var ReactDebugTool = __webpack_require__(148);
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(6);

var CallbackQueue = __webpack_require__(67);
var PooledClass = __webpack_require__(17);
var ReactFeatureFlags = __webpack_require__(72);
var ReactReconciler = __webpack_require__(21);
var Transaction = __webpack_require__(34);

var invariant = __webpack_require__(2);

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var PooledClass = __webpack_require__(17);

var emptyFunction = __webpack_require__(11);
var warning = __webpack_require__(3);

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (process.env.NODE_ENV !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (process.env.NODE_ENV !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {

  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      // eslint-disable-line valid-typeof
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // eslint-disable-line valid-typeof
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (process.env.NODE_ENV !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (process.env.NODE_ENV !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }

});

SyntheticEvent.Interface = EventInterface;

if (process.env.NODE_ENV !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(2);

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if (process.env.NODE_ENV !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (process.env.NODE_ENV !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _constants = __webpack_require__(22);

var _constants2 = _interopRequireDefault(_constants);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Icon = function (_Component) {
  _inherits(Icon, _Component);

  function Icon() {
    _classCallCheck(this, Icon);

    return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).apply(this, arguments));
  }

  _createClass(Icon, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var classes = {
        'material-icons': true
      };
      _constants2.default.PLACEMENTS.forEach(function (p) {
        classes[p] = _this2.props[p];
      });

      _constants2.default.ICON_SIZES.forEach(function (s) {
        classes[s] = _this2.props[s];
      });

      return _react2.default.createElement(
        'i',
        { className: (0, _classnames2.default)(classes, this.props.className) },
        this.props.children
      );
    }
  }]);

  return Icon;
}(_react.Component);

Icon.propTypes = {
  className: _react.PropTypes.string,
  children: _react.PropTypes.node,
  tiny: _react.PropTypes.bool,
  small: _react.PropTypes.bool,
  medium: _react.PropTypes.bool,
  large: _react.PropTypes.bool
};

exports.default = Icon;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(2);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var ReactCurrentOwner = __webpack_require__(13);

var warning = __webpack_require__(3);
var canDefineProperty = __webpack_require__(59);
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = __webpack_require__(92);

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (process.env.NODE_ENV !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */


/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMNamespaces = __webpack_require__(40);
var setInnerHTML = __webpack_require__(36);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(47);
var setTextContent = __webpack_require__(85);

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactRef = __webpack_require__(162);
var ReactInstrumentation = __webpack_require__(10);

var warning = __webpack_require__(3);

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots
  ) {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }

};

module.exports = ReactReconciler;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  STYLES: ['large', 'floating', 'flat'],
  WAVES: ['light', 'red', 'yellow', 'orange', 'purple', 'green', 'teal'],
  SIZES: ['s', 'm', 'l'],
  PLACEMENTS: ['left', 'center', 'right'],
  SCALES: ['big', 'small'],
  ICON_SIZES: ['tiny', 'small', 'medium', 'large']
};

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var ReactChildren = __webpack_require__(230);
var ReactComponent = __webpack_require__(56);
var ReactPureComponent = __webpack_require__(234);
var ReactClass = __webpack_require__(231);
var ReactDOMFactories = __webpack_require__(232);
var ReactElement = __webpack_require__(18);
var ReactPropTypes = __webpack_require__(233);
var ReactVersion = __webpack_require__(235);

var onlyChild = __webpack_require__(237);
var warning = __webpack_require__(3);

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = __webpack_require__(93);
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;

if (process.env.NODE_ENV !== 'production') {
  var warned = false;
  __spread = function () {
    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
    warned = true;
    return _assign.apply(null, arguments);
  };
}

var React = {

  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactComponent,
  PureComponent: ReactPureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: ReactClass.createClass,
  createFactory: createFactory,
  createMixin: function (mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

module.exports = React;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var EventPluginRegistry = __webpack_require__(31);
var EventPluginUtils = __webpack_require__(41);
var ReactErrorUtils = __webpack_require__(45);

var accumulateInto = __webpack_require__(79);
var forEachAccumulated = __webpack_require__(80);
var invariant = __webpack_require__(2);

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }

};

module.exports = EventPluginHub;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPluginHub = __webpack_require__(25);
var EventPluginUtils = __webpack_require__(41);

var accumulateInto = __webpack_require__(79);
var forEachAccumulated = __webpack_require__(80);
var warning = __webpack_require__(3);

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(14);

var getEventTarget = __webpack_require__(50);

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _constants = __webpack_require__(22);

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Col = function Col(_ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$node = _ref.node,
      C = _ref$node === undefined ? 'div' : _ref$node,
      s = _ref.s,
      m = _ref.m,
      l = _ref.l,
      offset = _ref.offset,
      other = _objectWithoutProperties(_ref, ['children', 'className', 'node', 's', 'm', 'l', 'offset']);

  var sizes = { s: s, m: m, l: l };
  var classes = { col: true };
  _constants2.default.SIZES.forEach(function (size) {
    classes[size + sizes[size]] = sizes[size];
  });

  if (offset) {
    offset.split(' ').forEach(function (off) {
      classes['offset-' + off] = true;
    });
  }

  return _react2.default.createElement(
    C,
    _extends({}, other, { className: (0, _classnames2.default)(classes, className) }),
    children
  );
};

Col.propTypes = {
  children: _react2.default.PropTypes.node,
  className: _react2.default.PropTypes.string,
  /**
   * Columns for large size screens
   */
  l: _react2.default.PropTypes.number,
  /**
   * Columns for middle size screens
   */
  m: _react2.default.PropTypes.number,
  /**
   * The node to be used for the column
   * @default div
   */
  node: _react2.default.PropTypes.node,
  /**
   * To offset, simply add s2 to the class where s signifies the screen
   * class-prefix (s = small, m = medium, l = large) and the number after
   * is the number of columns you want to offset by.
   */
  offset: _react2.default.PropTypes.string,
  /**
   * Columns for small size screens
   */
  s: _react2.default.PropTypes.number
};

exports.default = Col;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resetID = resetID;
exports.default = idgen;
var id = 0;

function resetID() {
  id = 0;
}

function idgen() {
  var oldId = id;
  id += 1;
  return oldId;
}

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(2);

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if (process.env.NODE_ENV !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (injectedEventPluginOrder) {
    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }

};

module.exports = EventPluginRegistry;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var EventPluginRegistry = __webpack_require__(31);
var ReactEventEmitterMixin = __webpack_require__(152);
var ViewportMetrics = __webpack_require__(78);

var getVendorPrefixedEventName = __webpack_require__(188);
var isEventSupported = __webpack_require__(51);

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function () {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }

});

module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(28);
var ViewportMetrics = __webpack_require__(78);

var getEventModifierState = __webpack_require__(49);

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(2);

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */



// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html


/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(8);
var DOMNamespaces = __webpack_require__(40);

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = __webpack_require__(47);

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xFEFF) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(133);


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMLazyTree = __webpack_require__(20);
var Danger = __webpack_require__(125);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactInstrumentation = __webpack_require__(10);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(47);
var setInnerHTML = __webpack_require__(36);
var setTextContent = __webpack_require__(85);

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if (process.env.NODE_ENV !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if (process.env.NODE_ENV !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: { toIndex: update.toIndex, content: update.content.toString() }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var ReactErrorUtils = __webpack_require__(45);

var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if (process.env.NODE_ENV !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var React = __webpack_require__(23);
var ReactPropTypesSecret = __webpack_require__(77);

var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: React.PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(2);

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (process.env.NODE_ENV !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = func.bind(null, a);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      // $FlowFixMe https://github.com/facebook/flow/issues/2336
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var ReactCurrentOwner = __webpack_require__(13);
var ReactInstanceMap = __webpack_require__(27);
var ReactInstrumentation = __webpack_require__(10);
var ReactUpdates = __webpack_require__(12);

var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }

};

module.exports = ReactUpdateQueue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals MSApp */



/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(8);

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var emptyFunction = __webpack_require__(11);
var warning = __webpack_require__(3);

var validateDOMNesting = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':

      case 'pre':
      case 'listing':

      case 'table':

      case 'hr':

      case 'xmp':

      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = ' Make sure you don\'t have any extra whitespace between tags on ' + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _constants = __webpack_require__(22);

var _constants2 = _interopRequireDefault(_constants);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = __webpack_require__(16);

var _Icon2 = _interopRequireDefault(_Icon);

var _idgen = __webpack_require__(30);

var _idgen2 = _interopRequireDefault(_idgen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Button = function (_Component) {
  _inherits(Button, _Component);

  function Button(props) {
    _classCallCheck(this, Button);

    var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));

    _this.renderIcon = _this.renderIcon.bind(_this);
    _this.renderFab = _this.renderFab.bind(_this);
    return _this;
  }

  _createClass(Button, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          node = _props.node,
          fab = _props.fab,
          fabClickOnly = _props.fabClickOnly,
          modal = _props.modal,
          flat = _props.flat,
          floating = _props.floating,
          large = _props.large,
          disabled = _props.disabled,
          waves = _props.waves,
          other = _objectWithoutProperties(_props, ['className', 'node', 'fab', 'fabClickOnly', 'modal', 'flat', 'floating', 'large', 'disabled', 'waves']);

      var toggle = fabClickOnly ? 'click-to-toggle' : '';
      var C = node;
      var classes = {
        btn: true,
        disabled: disabled,
        'waves-effect': waves
      };

      if (_constants2.default.WAVES.indexOf(waves) > -1) {
        classes['waves-' + waves] = true;
      }

      var styles = { flat: flat, floating: floating, large: large };
      _constants2.default.STYLES.forEach(function (style) {
        classes['btn-' + style] = styles[style];
      });

      if (modal) {
        classes['modal-action'] = true;
        classes['modal-' + modal] = true;
      }
      if (fab) {
        return this.renderFab((0, _classnames2.default)(classes, className), fab, toggle);
      } else {
        return _react2.default.createElement(
          C,
          _extends({}, other, {
            disabled: !!disabled,
            onClick: this.props.onClick,
            className: (0, _classnames2.default)(classes, className)
          }),
          this.renderIcon(),
          this.props.children
        );
      }
    }
  }, {
    key: 'renderFab',
    value: function renderFab(className, orientation, clickOnly) {
      var classes = (0, _classnames2.default)(orientation, clickOnly);
      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('fixed-action-btn', classes) },
        _react2.default.createElement(
          'a',
          { className: className },
          this.renderIcon()
        ),
        _react2.default.createElement(
          'ul',
          null,
          _react2.default.Children.map(this.props.children, function (child) {
            return _react2.default.createElement(
              'li',
              { key: (0, _idgen2.default)() },
              child
            );
          })
        )
      );
    }
  }, {
    key: 'renderIcon',
    value: function renderIcon() {
      var icon = this.props.icon;

      if (!icon) return;

      return _react2.default.createElement(
        _Icon2.default,
        null,
        icon
      );
    }
  }]);

  return Button;
}(_react.Component);

Button.propTypes = {
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  disabled: _react.PropTypes.bool,
  /**
   * Enable other styles
   */
  flat: _react.PropTypes.bool,
  large: _react.PropTypes.bool,
  floating: _react.PropTypes.bool,
  /**
   * Fixed action button
   * If enabled, any children button will be rendered as actions, remember to provide an icon.
   * @default vertical
   */
  fab: _react.PropTypes.oneOf(['vertical', 'horizontal']),
  /**
   * The icon to display, if specified it will create a button with the material icon
   */
  icon: _react.PropTypes.string,
  modal: _react.PropTypes.oneOf(['close', 'confirm']),
  node: _react.PropTypes.node,
  /**
   * Tooltip to show when mouse hovered
   */
  onClick: _react.PropTypes.func,
  tooltip: _react.PropTypes.string,
  waves: _react.PropTypes.oneOf(_constants2.default.WAVES),
  /**
   * FAB Click-Only
   * Turns a FAB from a hover-toggle to a click-toggle
   */
  fabClickOnly: _react.PropTypes.bool
};

Button.defaultProps = {
  node: 'button'
};

exports.default = Button;

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Row = function Row(_ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$node = _ref.node,
      Node = _ref$node === undefined ? 'div' : _ref$node;
  return _react2.default.createElement(
    Node,
    { className: (0, _classnames2.default)('row', className) },
    children
  );
};

Row.propTypes = {
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  node: _react.PropTypes.node
};

exports.default = Row;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(19);

var ReactNoopUpdateQueue = __webpack_require__(57);

var canDefineProperty = __webpack_require__(59);
var emptyObject = __webpack_require__(24);
var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var warning = __webpack_require__(3);

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var PALLETTE = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];
var QUARTER = 91 * 24 * 60 * 60 * 1000;
module.exports.PALLETTE = PALLETTE;
module.exports.QUARTER = QUARTER;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(103);
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  'lightseagreen',
  'forestgreen',
  'goldenrod',
  'dodgerblue',
  'darkorchid',
  'crimson'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {
    return true;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  try {
    return exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (typeof process !== 'undefined' && 'env' in process) {
    return process.env.DEBUG;
  }
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @typechecks
 */

var emptyFunction = __webpack_require__(11);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 */
function getActiveElement() /*?DOMElement*/{
  if (typeof document === 'undefined') {
    return null;
  }
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(5);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PooledClass = __webpack_require__(17);

var invariant = __webpack_require__(2);

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */


  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */


  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */


  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */


  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(15);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactInstrumentation = __webpack_require__(10);

var quoteAttributeValueForBrowser = __webpack_require__(189);
var warning = __webpack_require__(3);

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }

};

module.exports = DOMPropertyOperations;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var LinkedValueUtils = __webpack_require__(43);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactUpdates = __webpack_require__(12);

var warning = __webpack_require__(3);

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(2);

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMSelection = __webpack_require__(143);

var containsNode = __webpack_require__(106);
var focusNode = __webpack_require__(64);
var getActiveElement = __webpack_require__(65);

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var DOMLazyTree = __webpack_require__(20);
var DOMProperty = __webpack_require__(15);
var React = __webpack_require__(23);
var ReactBrowserEventEmitter = __webpack_require__(32);
var ReactCurrentOwner = __webpack_require__(13);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactDOMContainerInfo = __webpack_require__(135);
var ReactDOMFeatureFlags = __webpack_require__(137);
var ReactFeatureFlags = __webpack_require__(72);
var ReactInstanceMap = __webpack_require__(27);
var ReactInstrumentation = __webpack_require__(10);
var ReactMarkupChecksum = __webpack_require__(157);
var ReactReconciler = __webpack_require__(21);
var ReactUpdateQueue = __webpack_require__(46);
var ReactUpdates = __webpack_require__(12);

var emptyObject = __webpack_require__(24);
var instantiateReactComponent = __webpack_require__(83);
var invariant = __webpack_require__(2);
var setInnerHTML = __webpack_require__(36);
var shouldUpdateReactComponent = __webpack_require__(52);
var warning = __webpack_require__(3);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (process.env.NODE_ENV !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {

  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
    // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (process.env.NODE_ENV !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if (process.env.NODE_ENV !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(5);

var React = __webpack_require__(23);

var invariant = __webpack_require__(2);

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(2);

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactNodeTypes = __webpack_require__(76);

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(8);

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(6);

var ReactCompositeComponent = __webpack_require__(132);
var ReactEmptyComponent = __webpack_require__(71);
var ReactHostComponent = __webpack_require__(73);

var getNextDebugID = __webpack_require__(186);
var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};
_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if (process.env.NODE_ENV !== 'production') {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (process.env.NODE_ENV !== 'production') {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (process.env.NODE_ENV !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(8);
var escapeTextContentForBrowser = __webpack_require__(35);
var setInnerHTML = __webpack_require__(36);

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var ReactCurrentOwner = __webpack_require__(13);
var REACT_ELEMENT_TYPE = __webpack_require__(151);

var getIteratorFn = __webpack_require__(185);
var invariant = __webpack_require__(2);
var KeyEscapeUtils = __webpack_require__(42);
var warning = __webpack_require__(3);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _Chart = __webpack_require__(191);

var _Chart2 = _interopRequireDefault(_Chart);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = { Chart: _Chart2.default };
module.exports = exports['default'];

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Chip = function Chip(_ref) {
  var children = _ref.children,
      close = _ref.close;

  return _react2.default.createElement(
    'div',
    { className: 'chip' },
    children,
    close ? _react2.default.createElement(
      'i',
      { className: 'material-icons' },
      'close'
    ) : null
  );
};

Chip.propTypes = {
  children: _react.PropTypes.node,
  /**
   * If show a close icon
   * @default false
   */
  close: _react.PropTypes.bool
};

exports.default = Chip;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(38);

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Overlay = function (_Component) {
  _inherits(Overlay, _Component);

  function Overlay() {
    _classCallCheck(this, Overlay);

    return _possibleConstructorReturn(this, (Overlay.__proto__ || Object.getPrototypeOf(Overlay)).apply(this, arguments));
  }

  _createClass(Overlay, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      try {
        this._unrenderOverlay();
      } catch (e) {
        this._overlayInstance = null;
      }
      if (this._overlayTarget) {
        this.getContainerDOMNode().removeChild(this._overlayTarget);
        this._overlayTarget = null;
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this._renderOverlay();
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this._renderOverlay();
    }
  }, {
    key: '_mountOverlayTarget',
    value: function _mountOverlayTarget() {
      this._overlayTarget = document.createElement('div');
      this.getContainerDOMNode().appendChild(this._overlayTarget);
    }
  }, {
    key: '_renderOverlay',
    value: function _renderOverlay() {
      if (!this._overlayTarget) {
        this._mountOverlayTarget();
      }

      // Save reference to help testing
      this._overlayInstance = _reactDom2.default.unstable_renderSubtreeIntoContainer(this, this.renderOverlay(), this._overlayTarget);
    }
  }, {
    key: '_unrenderOverlay',
    value: function _unrenderOverlay() {
      _react2.default.unmountComponentAtNode(this._overlayTarget);
      this._overlayInstance = null;
    }
  }, {
    key: 'getOverlayDOMNode',
    value: function getOverlayDOMNode() {
      if (!this.isMounted()) {
        throw new Error('getOverlayDOMNode(): A component must be mounted to have a DOM node.');
      }

      return this._overlayInstance.getDOMNode();
    }
  }, {
    key: 'getContainerDOMNode',
    value: function getContainerDOMNode() {
      return this.props.container.getDOMNode ? this.props.container.getDOMNode() : this.props.container;
    }
  }]);

  return Overlay;
}(_react.Component);

Overlay.propTypes = {
  container: _react.PropTypes.any.isRequired
};

Overlay.defaultProps = {
  container: {
    // Provide `getDOMNode` fn mocking a React component API. The `document.body`
    // reference needs to be contained within this function so that it is not accessed
    // in environments where it would not be defined, e.g. nodejs. Equally this is needed
    // before the body is defined where `document.body === null`, this ensures
    // `document.body` is only accessed after componentDidMount.
    getDOMNode: function getDOMNode() {
      return document.body;
    }
  }
};

exports.default = Overlay;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _Overlay2 = __webpack_require__(89);

var _Overlay3 = _interopRequireDefault(_Overlay2);

var _idgen = __webpack_require__(30);

var _idgen2 = _interopRequireDefault(_idgen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var OverlayTrigger = function (_Overlay) {
  _inherits(OverlayTrigger, _Overlay);

  function OverlayTrigger(props) {
    _classCallCheck(this, OverlayTrigger);

    var _this = _possibleConstructorReturn(this, (OverlayTrigger.__proto__ || Object.getPrototypeOf(OverlayTrigger)).call(this, props));

    _this.showOverlay = _this.showOverlay.bind(_this);
    _this.renderOverlay = _this.renderOverlay.bind(_this);
    _this.overlayID = _this.props.overlay.props.id || 'overlay_' + (0, _idgen2.default)();
    return _this;
  }

  _createClass(OverlayTrigger, [{
    key: 'render',
    value: function render() {
      var child = _react2.default.Children.only(this.props.children);

      return _react2.default.cloneElement(child, {
        onClick: this.showOverlay
      });
    }
  }, {
    key: 'renderOverlay',
    value: function renderOverlay() {
      return _react2.default.cloneElement(this.props.overlay, {
        id: this.overlayID
      });
    }
  }, {
    key: 'showOverlay',
    value: function showOverlay(e) {
      e.preventDefault();
      $('#' + this.overlayID).modal(this.props.modalOptions).modal('open');
    }
  }]);

  return OverlayTrigger;
}(_Overlay3.default);

OverlayTrigger.propTypes = {
  modalOptions: _react.PropTypes.object,
  overlay: _react.PropTypes.node
};

exports.default = OverlayTrigger;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PaginationButton = function PaginationButton(_ref) {
  var _ref$active = _ref.active,
      active = _ref$active === undefined ? false : _ref$active,
      children = _ref.children,
      className = _ref.className,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === undefined ? false : _ref$disabled,
      _ref$href = _ref.href,
      href = _ref$href === undefined ? '#' : _ref$href,
      onSelect = _ref.onSelect;

  var classes = {
    'waves-effect': true,
    disabled: disabled,
    active: active
  };

  return _react2.default.createElement(
    'li',
    { className: (0, _classnames2.default)(classes, className), onClick: onSelect },
    _react2.default.createElement(
      'a',
      { href: href },
      children
    )
  );
};

PaginationButton.propTypes = {
  active: _react.PropTypes.bool,
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  disabled: _react.PropTypes.bool,
  href: _react.PropTypes.string,
  onSelect: _react.PropTypes.func
};

exports.default = PaginationButton;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */



var ReactCurrentOwner = __webpack_require__(13);
var ReactComponentTreeHook = __webpack_require__(9);
var ReactElement = __webpack_require__(18);

var checkReactTypeSpec = __webpack_require__(236);

var canDefineProperty = __webpack_require__(59);
var getIteratorFn = __webpack_require__(60);
var warning = __webpack_require__(3);

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {

  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + 'it\'s defined in.';
        }
        info += getDeclarationErrorAddendum();
        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),
/* 95 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(38);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _vis = __webpack_require__(101);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var bookmarks = __webpack_require__(97);
var clusters = __webpack_require__(98);

_reactDom2.default.render(_react2.default.createElement(_vis.Vis, {
    bookmarks: bookmarks,
    clusters: clusters
}), document.querySelector('.react-root'));

/***/ }),
/* 97 */
/***/ (function(module, exports) {

module.exports = [
	{
		"cluster": 17,
		"tags": [
			"programming",
			"metaphor",
			"storytelling",
			"language",
			"computerscience",
			"culture",
			"knowledge",
			"communication"
		],
		"y": -10.625188820363343,
		"x": 7.73498527777514,
		"extended": "Charles Baker in a letter to Donald Knuth said that to program is to write to another programmer about our solution to a problem.",
		"description": "Metaphors We Compute By",
		"time": "2017-02-11T17:16:04Z",
		"href": "http://alvaro-videla.com/2017/01/metaphors-we-code-by.html"
	},
	{
		"cluster": 3,
		"tags": [
			"taylorism",
			"data",
			"measurement",
			"efficiency",
			"timemanagement",
			"quantifiedself",
			"bigdata",
			"surveillance",
			"politics",
			"management",
			"managerialism",
			"culture",
			"criticism"
		],
		"y": 0.09796397131577109,
		"x": 9.185701238174643,
		"extended": "Because artists’ work is not always seen as work, they are accustomed to exposure to potentially exploitative labor conditions and practices. They often know by experience the implications of having their work abstracted and systematized into market data. So they may be well-placed to recognize similar practices in other areas and offer strategies for coping, resisting, or rejecting them.",
		"description": "Selfwork — Real Life",
		"time": "2017-02-11T17:11:08Z",
		"href": "http://reallifemag.com/selfwork/"
	},
	{
		"cluster": 10,
		"tags": [
			"nuclear",
			"war",
			"history",
			"weapons",
			"systems",
			"failure",
			"security",
			"politics",
			"catastrophe",
			"technology",
			"unintendedconsequences"
		],
		"y": 5.4650081349152195,
		"x": 9.248787037224204,
		"extended": "",
		"description": "World War Three, by Mistake - The New Yorker",
		"time": "2017-02-11T16:59:58Z",
		"href": "http://www.newyorker.com/news/news-desk/world-war-three-by-mistake"
	},
	{
		"cluster": 10,
		"tags": [
			"timemanagement",
			"productivity",
			"psychology",
			"management",
			"taylorism",
			"culture",
			"leisure",
			"politics",
			"attention",
			"notifications",
			"communication",
			"digitaldualism"
		],
		"y": 0.3744801581342585,
		"x": 10.553369108260522,
		"extended": "",
		"description": "Why time management is ruining our lives | Oliver Burkeman | Technology | The Guardian",
		"time": "2017-02-11T16:35:42Z",
		"href": "https://www.theguardian.com/technology/2016/dec/22/why-time-management-is-ruining-our-lives"
	},
	{
		"cluster": 1,
		"tags": [
			"musictheory",
			"music",
			"theory",
			"ambiguouskeycentres",
			"harmony",
			"tonality",
			"scienceofpop",
			"actual_scienceofpop"
		],
		"y": -9.504497756169828,
		"x": 4.6665903233273935,
		"extended": "",
		"description": "The music theory principle that unifies 2016’s radio hits - Vox",
		"time": "2017-02-11T15:51:43Z",
		"href": "http://www.vox.com/culture/2016/12/26/13956220/top-40-ambiguous-key-centers-bieber-chainsmokers-adele"
	},
	{
		"cluster": 10,
		"tags": [
			"ecology",
			"mieville",
			"cityandthecity",
			"geography",
			"place",
			"cornucopia",
			"politics",
			"literature"
		],
		"y": -2.3287843863610798,
		"x": 8.739843298902935,
		"extended": "",
		"description": "The City and The City Theoretical Reading",
		"time": "2017-02-11T15:45:28Z",
		"href": "http://www2.warwick.ac.uk/fac/arts/english/currentstudents/undergraduate/modules/fulllist/first/en123/contemporary2014/thecityandthecity/thecityandthecityclosereading/thecityandthecityhistoricalreading/thecityandthecitygeographicalreading/thecityandthecitytheoreticalreading/"
	},
	{
		"cluster": 1,
		"tags": [
			"granular",
			"synthesis",
			"dsp",
			"maxmsp",
			"programing",
			"audio",
			"sound",
			"music",
			"michaelnorris"
		],
		"y": -10.739128171465444,
		"x": 4.905268405353269,
		"extended": "",
		"description": "spindrift~",
		"time": "2017-02-11T15:42:24Z",
		"href": "http://www.michaelnorris.info/software/spindrift"
	},
	{
		"cluster": 2,
		"tags": [
			"identity",
			"space",
			"mieville",
			"cityandthecity",
			"psychogeography",
			"literature",
			"geography"
		],
		"y": -2.39916639975452,
		"x": 8.622570623466565,
		"extended": "",
		"description": "Besźel, Ul Qoma, and the Alterity of City Space",
		"time": "2017-02-11T15:41:11Z",
		"href": "http://www2.warwick.ac.uk/fac/arts/english/currentstudents/undergraduate/modules/fulllist/first/en123/cwl-litcrit/thecityandthecity/closereading/"
	},
	{
		"cluster": 10,
		"tags": [
			"posttruth",
			"politics",
			"culture",
			"ufos",
			"stories",
			"conspiracies",
			"fear",
			"terrorism",
			"history"
		],
		"y": 0.21119778677099055,
		"x": 10.66429601223384,
		"extended": "",
		"description": "The Quietus | Opinion | The Quietus Essay | The Rise Of Fear & The Strange Death Of The UFO",
		"time": "2017-02-11T15:32:39Z",
		"href": "http://thequietus.com/articles/21627-ufos-conspiracy-theories-trump-alex-jones"
	},
	{
		"cluster": 2,
		"tags": [
			"audio",
			"diy",
			"pedal",
			"electronics",
			"kits",
			"sound",
			"fx",
			"effects"
		],
		"y": -12.246513631654532,
		"x": 5.302944161459217,
		"extended": "",
		"description": "FX-Kits – Build Your Own Clone",
		"time": "2017-02-11T15:21:23Z",
		"href": "http://buildyourownclone.com/collections/fx-kits?page=1"
	},
	{
		"cluster": 2,
		"tags": [
			"bigmuff",
			"audio",
			"pedal",
			"effect",
			"fx",
			"electronics",
			"circuit",
			"learning",
			"education",
			"sound"
		],
		"y": -12.247330538507907,
		"x": 5.294552139450462,
		"extended": "",
		"description": "BIG MUFF CIRCUIT GUIDE.jpg (1008×749)",
		"time": "2017-02-11T15:21:01Z",
		"href": "http://www.kitrae.net/music/Images_Secret_Music_Page/BIG%20MUFF%20CIRCUIT%20GUIDE.jpg"
	},
	{
		"cluster": 1,
		"tags": [
			"thecityandthecity",
			"mieville",
			"geography",
			"culture",
			"literature",
			"psychogeography",
			"mapping"
		],
		"y": -2.4026808823790855,
		"x": 8.621394306482422,
		"extended": "",
		"description": "Mapping The City & The City on “real” Maps | Miéville's Geolocative Cities",
		"time": "2017-02-11T15:20:13Z",
		"href": "https://locativeliterature.wordpress.com/sections/section-1/"
	},
	{
		"cluster": 2,
		"tags": [
			"electronics",
			"reference",
			"diy",
			"capacitors",
			"learning",
			"audio",
			"sound",
			"effects"
		],
		"y": -12.249073817117933,
		"x": 5.300706045747994,
		"extended": "",
		"description": "FAQ About Capacitors",
		"time": "2017-02-11T15:20:04Z",
		"href": "http://www.muzique.com/cap_faq.htm"
	},
	{
		"cluster": 18,
		"tags": [
			"synthcore",
			"synthesis",
			"programming",
			"DSP",
			"audio",
			"music",
			"software",
			"MAX",
			"MSP",
			"MaxMSP",
			"gen"
		],
		"y": 1.5788477125603597,
		"x": -3.644155772470032,
		"extended": "",
		"description": "Synthcore Library - Yofiel",
		"time": "2017-02-11T15:18:47Z",
		"href": "http://www.yofiel.com/software/cycling-74-patches/250-synthcore-lib"
	},
	{
		"cluster": 1,
		"tags": [
			"synthesis",
			"celluarautomata",
			"computerscience",
			"generative",
			"music",
			"complexsystems",
			"sequencer",
			"eurorack",
			"modular"
		],
		"y": -10.284284619775224,
		"x": 4.035078869880165,
		"extended": "",
		"description": "MATRIXSYNTH: Noyzelab Ulamizer II Cellular Automata Sequencer & MANIAC - Prototype Cellular Automata Module",
		"time": "2017-02-11T15:17:48Z",
		"href": "http://www.matrixsynth.com/2014/08/noyzlab-ulamizer-ii-cellular-automata.html?m=1"
	},
	{
		"cluster": 1,
		"tags": [
			"bigmuff",
			"pedal",
			"effects",
			"audio",
			"electronics",
			"mod",
			"distortion",
			"sound",
			"music",
			"learning"
		],
		"y": -12.188315565468878,
		"x": 5.272499705772283,
		"extended": "",
		"description": "Big Muff Pi Mods and Tweaks",
		"time": "2017-02-11T15:16:42Z",
		"href": "http://www.kitrae.net/music/Big_Muff_Mods_and_Tweaks_Page.html"
	},
	{
		"cluster": 2,
		"tags": [
			"synth",
			"effects",
			"electronics",
			"diy",
			"learning",
			"education",
			"pedals",
			"sound",
			"audio",
			"fx"
		],
		"y": -12.262280878402244,
		"x": 5.302191845277691,
		"extended": "",
		"description": "ElectroSmash - Electronics for Audio Circuits.",
		"time": "2017-02-11T15:08:05Z",
		"href": "http://www.electrosmash.com/"
	},
	{
		"cluster": 9,
		"tags": [
			"audio",
			"linux",
			"plugins",
			"recording",
			"sound"
		],
		"y": -7.13431467831594,
		"x": 2.412294745402135,
		"extended": "",
		"description": "Calf Studio Gear - GNU/Linux Audio Plug-Ins",
		"time": "2017-02-11T15:07:26Z",
		"href": "http://calf-studio-gear.org/"
	},
	{
		"cluster": 3,
		"tags": [
			"brutalism",
			"art",
			"politics",
			"culture",
			"constructivism",
			"architecture",
			"ussr",
			"communism",
			"russia"
		],
		"y": -0.7381778755753593,
		"x": 11.382435689167478,
		"extended": "",
		"description": "Ruin porn: the art world’s awkward obsession with abandoned Soviet architecture",
		"time": "2017-02-11T15:04:41Z",
		"href": "http://www.newstatesman.com/culture/art-design/2016/08/ruin-porn-art-world-s-awkward-obsession-abandoned-soviet-architecture"
	},
	{
		"cluster": 2,
		"tags": [
			"mastering",
			"audio",
			"sound",
			"recording"
		],
		"y": -7.152350605542166,
		"x": 2.344972340371791,
		"extended": "",
		"description": "Audio Mastering In Your Computer |",
		"time": "2017-02-11T15:02:06Z",
		"href": "http://www.soundonsound.com/techniques/audio-mastering-in-your-computer"
	},
	{
		"cluster": 2,
		"tags": [
			"reeltoreel",
			"reel",
			"tape",
			"layout",
			"audio",
			"recording",
			"technology",
			"sound"
		],
		"y": -7.11959944196927,
		"x": 2.350951178437915,
		"extended": "",
		"description": "Reel2reel track widths | äänitteiden digitointi | tonfiks.fi",
		"time": "2017-02-11T15:01:43Z",
		"href": "http://www.tonfiks.fi/reel2reel-track-widths"
	},
	{
		"cluster": 10,
		"tags": [
			"twitter",
			"politics",
			"censorship",
			"architecture",
			"nazism"
		],
		"y": 5.800506550170891,
		"x": 10.673451541015881,
		"extended": "",
		"description": "It took Twitter 4hrs to block my modernist architecture bot. Why don’t they block anti-semitism? – Medium",
		"time": "2017-02-11T15:00:58Z",
		"href": "https://medium.com/@tomwhitwell/it-took-twitter-4hrs-to-block-my-modernist-architecture-bot-why-dont-they-block-anti-semitism-4bb146c7f361#.swvksejcd"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"identity",
			"class",
			"left",
			"socialism",
			"liberalism"
		],
		"y": 2.4291063628791667,
		"x": 9.319674074139428,
		"extended": " all forms of politics arguably involve some kind of appeal to an identity, insofar as, to use the language of political theorist Michael Saward, they entail claims to speak for a politically salient constituency (and thus an “identity” of sorts). This applies as much to “class” as any other dimension of power and identity. Indeed, as Gurminder Bhambra has argued in a recent piece for The Sociological Review, these appeals to “class” are quintessential identity politics: they appeal to an identity category – the (presumed white) working class – whose interests have been shamefully neglected by elitist, out of touch leftists and liberals. The question is not, therefore, universalism or identitarianism, but whether or not we acknowledge the “identitarian” character of our political claims",
		"description": "Who’s afraid of identity politics? | British Politics and Policy at LSE",
		"time": "2017-02-11T14:57:18Z",
		"href": "http://blogs.lse.ac.uk/politicsandpolicy/whos-afraid-of-identity-politics/"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"algorithms",
			"data",
			"ethics",
			"decisiontheory",
			"decision",
			"theory",
			"statistics",
			"computerscience",
			"politics",
			"society"
		],
		"y": 3.000647933419892,
		"x": 14.270818001217169,
		"extended": "",
		"description": "How do you quantify morality? | mathbabe",
		"time": "2017-02-11T14:51:23Z",
		"href": "https://mathbabe.org/2016/12/20/how-do-you-quantify-morality/"
	},
	{
		"cluster": 1,
		"tags": [
			"synthesis",
			"diy",
			"electronics",
			"reference",
			"synths",
			"music",
			"electronic",
			"kits",
			"parts",
			"components"
		],
		"y": -10.139029749550286,
		"x": 3.899859296362006,
		"extended": "",
		"description": "Music From Outer Space - Your Synth-DIY Headquarters",
		"time": "2017-02-11T14:23:46Z",
		"href": "http://musicfromouterspace.com/index.php?MAINTAB=SYNTHDIY&VPW=1274&VPH=950"
	},
	{
		"cluster": 14,
		"tags": [
			"prototype",
			"agile",
			"ux",
			"designsprints",
			"design",
			"process",
			"work"
		],
		"y": -5.443480131291753,
		"x": 1.2836966505013188,
		"extended": "",
		"description": "What design sprints are good for — Cennydd Bowles",
		"time": "2017-02-11T14:22:25Z",
		"href": "https://www.cennydd.com/writing/what-design-sprints-are-good-for"
	},
	{
		"cluster": 10,
		"tags": [
			"architecture",
			"psychogeography",
			"walthamstow",
			"gentrification",
			"hipsters",
			"aesthetics",
			"politics",
			"culture"
		],
		"y": 0.371127823587246,
		"x": 11.516505273895886,
		"extended": "",
		"description": "Interurban Lines: Alternate realities in the high street – a small psychogeography of gentrification in E17",
		"time": "2017-02-11T14:21:40Z",
		"href": "http://interurbanlines.blogspot.co.uk/2016/12/alternate-realities-in-high-street.html"
	},
	{
		"cluster": 8,
		"tags": [
			"digitaldualism",
			"culture",
			"internet",
			"distraction",
			"notifications",
			"attention",
			"socialmedia",
			"technology",
			"performativity",
			"connection"
		],
		"y": -7.862965241572988,
		"x": 6.604412524482312,
		"extended": "But as the proliferation of such essays and books suggests, we are far from forgetting about the offline; rather we have become obsessed with being offline more than ever before. We have never appreciated a solitary stroll, a camping trip, a face-to-face chat with friends, or even our boredom better than we do now. Nothing has contributed more to our collective appreciation for being logged off and technologically disconnected than the very technologies of connection. The ease of digital distraction has made us appreciate solitude with a new intensity. We savor being face-to-face with a small group of friends or family in one place and one time far more thanks to the digital sociality that so fluidly rearranges the rules of time and space. In short, we’ve never cherished being alone, valued introspection, and treasured information disconnection more than we do now. Never has being disconnected — even if for just a moment — felt so profound.",
		"description": "The IRL Fetish – The New Inquiry",
		"time": "2017-02-11T14:20:03Z",
		"href": "http://thenewinquiry.com/essays/the-irl-fetish/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"culture",
			"protest",
			"passivity",
			"philistinism",
			"pretentiousness",
			"politics",
			"all_the_ps",
			"2016",
			"posttruth"
		],
		"y": -0.3747645144128024,
		"x": 11.484579623843118,
		"extended": "To be honest, I despise this calendarial meme for its droopy passivity, its assumption than time itself, whatever that would mean, elected Donald Trump and caused Brexit and did away with half the people responsible for our record collections. It tethers the preventably political and the unpreventably mortal under a single malign cause; it defers hope to mere chronology – next year simply must be better – and washes liberal hands of a culpability with which those hands are surely stained. And yet I'll always think not of 2016, but of 'Do one, 2016', in that this was the year that despair became not just a culture's darkening fringe, but its looming preoccupation.",
		"description": "The Quietus | Opinion | Wreath Lectures | Why 'Do One 2016' Isn't Enough & We Need Aesthetic Dissent",
		"time": "2017-02-11T14:16:48Z",
		"href": "http://thequietus.com/articles/21478-2016-review-trump-brexit-think-harder"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"technology",
			"process",
			"perfection",
			"culture",
			"digital",
			"simulacra",
			"eno"
		],
		"y": -8.761052303500744,
		"x": 5.675812594295114,
		"extended": "“So the question that everybody’s asking is, is it getting any better as a result of all this? But it’s such a hard temptation to resist. You’re recording a song and find a note that is really quite out of tune. In the past, you’d have said, it’s a great performance, so we’ll just live with it. What you do now is retune that note. So you’re always asking yourself, have we lost something of the tension of the performance, of the feeling of humanity and vulnerability and organic truth or whatever, by making these corrections? It does make you question the role of new technology in the studio. ",
		"description": "The dangers of digital: Brian Eno on technology and modern music - The Vinyl Factory",
		"time": "2017-02-11T14:08:17Z",
		"href": "http://thevinylfactory.com/features/the-dangers-of-digital-brian-eno-on-technology-and-modern-music/"
	},
	{
		"cluster": 17,
		"tags": [
			"music",
			"programming",
			"synthesis",
			"indeterminacy",
			"constraints",
			"creativity",
			"finishingthings"
		],
		"y": -5.959538266655931,
		"x": -2.350125821523957,
		"extended": "",
		"description": "How I recorded an album in an evening with a lunchbox modular and a python script – Music Thing Modular Notes – Medium",
		"time": "2017-02-11T13:54:49Z",
		"href": "https://medium.com/music-thing-modular-notes/how-i-recorded-an-album-in-an-evening-with-a-lunchbox-modular-and-a-python-script-443ca08f34da#.x3n5h3fop"
	},
	{
		"cluster": 17,
		"tags": [
			"python",
			"types",
			"programming",
			"computerscience",
			"typechecking",
			"staticanalysis"
		],
		"y": 0.905557935457194,
		"x": -10.130935954207958,
		"extended": "",
		"description": "Python 3 Type Hints and Static Analysis",
		"time": "2017-02-09T19:18:55Z",
		"href": "https://code.tutsplus.com/tutorials/python-3-type-hints-and-static-analysis--cms-25731"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"depression",
			"psychology",
			"capitalism",
			"markfisher",
			"davidsmail",
			"power"
		],
		"y": 6.164322162413171,
		"x": 9.727706042801827,
		"extended": "",
		"description": "Good For Nothing | The Occupied Times",
		"time": "2017-02-06T14:23:46Z",
		"href": "https://theoccupiedtimes.org/?p=12841"
	},
	{
		"cluster": 2,
		"tags": [
			"tensorflow",
			"machinelearning",
			"computerscience",
			"amazon",
			"cloud",
			"computation",
			"deeplearning",
			"neuralnetworks"
		],
		"y": -0.8232943196554386,
		"x": -5.026257139929679,
		"extended": "",
		"description": "Floyd Zero Setup Deep Learning",
		"time": "2017-01-30T21:00:42Z",
		"href": "https://www.floydhub.com/"
	},
	{
		"cluster": 0,
		"tags": [
			"consul",
			"nomad",
			"ec2",
			"aws",
			"computing",
			"operations",
			"cluster",
			"devops",
			"programming"
		],
		"y": -8.25264063353527,
		"x": -1.7889716799054316,
		"extended": "",
		"description": "Setting up Nomad and Consul in EC2 instead of Mesophere · advantageous/vertx-node-ec2-eventbus-example Wiki",
		"time": "2017-01-30T16:11:49Z",
		"href": "https://github.com/advantageous/vertx-node-ec2-eventbus-example/wiki/Setting-up-Nomad-and-Consul-in-EC2-instead-of-Mesophere"
	},
	{
		"cluster": 2,
		"tags": [
			"oscillator",
			"filter",
			"audio",
			"circuit",
			"electronics"
		],
		"y": -3.408421034640952,
		"x": 4.42183606985066,
		"extended": "",
		"description": "(4) Can a filter be built with an oscillator? - Quora",
		"time": "2017-01-28T11:03:42Z",
		"href": "https://www.quora.com/Can-a-filter-be-built-with-an-oscillator"
	},
	{
		"cluster": 2,
		"tags": [
			"books",
			"reading",
			"literature",
			"recommendations"
		],
		"y": -7.251708133736791,
		"x": -4.6939806563340944,
		"extended": "",
		"description": "Tim Cowlishaw - Anyone recommend any entertaining (but also good)...",
		"time": "2017-01-27T22:49:38Z",
		"href": "https://www.facebook.com/timcowlishaw/posts/553599417950?match=aG9saWRheQ%3D%3D"
	},
	{
		"cluster": 17,
		"tags": [
			"c",
			"programming",
			"make",
			"autotools",
			"configure"
		],
		"y": 3.6142664442373653,
		"x": -5.887065706802515,
		"extended": "",
		"description": "Creating an open-source program in C with Autotools (part 1 of 2) - The Blog of Fourthbit",
		"time": "2017-01-27T08:34:08Z",
		"href": "http://blog.fourthbit.com/2013/06/18/creating-an-open-source-program-in-c-with-autotools-part-1-of-2"
	},
	{
		"cluster": 2,
		"tags": [
			"latex",
			"collaborative",
			"editor",
			"online",
			"academic",
			"paper",
			"typesetting"
		],
		"y": -3.27733379158247,
		"x": 4.394073734375119,
		"extended": "",
		"description": "Plans and Pricing - Overleaf",
		"time": "2017-01-26T16:02:01Z",
		"href": "https://www.overleaf.com/plans"
	},
	{
		"cluster": 2,
		"tags": [
			"upsampling",
			"dsp",
			"interpolation",
			"FIR",
			"filter"
		],
		"y": -2.8410755211822263,
		"x": 4.998115869041998,
		"extended": "",
		"description": "Interpolation | dspGuru.com",
		"time": "2017-01-24T14:12:47Z",
		"href": "http://dspguru.com/dsp/faqs/multirate/interpolation"
	},
	{
		"cluster": 16,
		"tags": [
			"machinelearning",
			"imbalancedclasses",
			"data",
			"evaluation"
		],
		"y": -1.5374254462770045,
		"x": -0.7572620543147961,
		"extended": "",
		"description": "8 Tactics to Combat Imbalanced Classes in Your Machine Learning Dataset - Machine Learning Mastery",
		"time": "2017-01-23T18:07:24Z",
		"href": "http://machinelearningmastery.com/tactics-to-combat-imbalanced-classes-in-your-machine-learning-dataset/"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"interpretation",
			"accuracy",
			"train",
			"test",
			"evaluation"
		],
		"y": -1.2513487218155395,
		"x": -0.12782562579875364,
		"extended": "",
		"description": "classification - Test accuracy higher than training. How to interpret? - Cross Validated",
		"time": "2017-01-23T18:04:52Z",
		"href": "http://stats.stackexchange.com/questions/59630/test-accuracy-higher-than-training-how-to-interpret"
	},
	{
		"cluster": 5,
		"tags": [
			"hypothesistesting",
			"experimentaldesign",
			"statistics",
			"visualisation",
			"cohensd",
			"power",
			"effectsize",
			"significance",
			"statisticalpower",
			"statisticalsignificance",
			"researchmethods",
			"research"
		],
		"y": -4.391674066319618,
		"x": -1.0904129484631262,
		"extended": "",
		"description": "Understanding Statistical Power and Significance Testing — an Interactive Visualization",
		"time": "2017-01-23T17:48:00Z",
		"href": "http://rpsychologist.com/d3/NHST/"
	},
	{
		"cluster": 5,
		"tags": [
			"biasvariancetradeoff",
			"bias",
			"variance",
			"statistics",
			"machinelearning"
		],
		"y": -3.1777624131731015,
		"x": -2.864153450362797,
		"extended": "Imagine some 2D data--let's say height versus weight for students at a high school--plotted on a pair of axes.\r\n\r\nNow suppose you fit a straight line through it. This line, which of course represents a set of predicted values, has zero statistical variance. But the bias is (probably) high--i.e., it doesn't fit the data very well.\r\n\r\nNext, suppose you model the data with a high-degree polynomial spline. You're not satisfied with the fit, so you increase the polynomial degree until the fit improves (and it will, to arbitrary precision, in fact). Now you have a situation with bias that tends to zero, but the variance is very high.\r\n\r\n",
		"description": "regression - Intuitive explanation of the bias-variance tradeoff? - Cross Validated",
		"time": "2017-01-23T17:33:54Z",
		"href": "http://stats.stackexchange.com/questions/4284/intuitive-explanation-of-the-bias-variance-tradeoff/237850#237850"
	},
	{
		"cluster": 5,
		"tags": [
			"significancetesting",
			"hypothesistesting",
			"testing",
			"significance",
			"hypothesis",
			"research",
			"methods",
			"researchmethods",
			"statistics",
			"fisher",
			"neymanpearson"
		],
		"y": -4.869212235715954,
		"x": -2.2274538487188926,
		"extended": "",
		"description": "What is the difference between \"testing of hypothesis\" and \"test of significance\"? - Cross Validated",
		"time": "2017-01-23T16:25:16Z",
		"href": "http://stats.stackexchange.com/questions/16218/what-is-the-difference-between-testing-of-hypothesis-and-test-of-significance"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"hypothesistest",
			"hypothesis",
			"testing",
			"paired",
			"unpaired",
			"student",
			"ttest",
			"research"
		],
		"y": -4.956082747250347,
		"x": -2.2367165257574513,
		"extended": "",
		"description": "(2) What is the difference between a paired and unpaired t-test? - Quora",
		"time": "2017-01-23T13:32:16Z",
		"href": "https://www.quora.com/What-is-the-difference-between-a-paired-and-unpaired-t-test"
	},
	{
		"cluster": 17,
		"tags": [
			"ipython",
			"progressbar",
			"progress",
			"floatprogress",
			"python",
			"jupyter",
			"datascience",
			"programming"
		],
		"y": 3.433415695403901,
		"x": -5.839343808422712,
		"extended": "from ipywidgets import FloatProgress\r\nfrom IPython.display import display",
		"description": "Jupyter Progress Bars - James Gardiner",
		"time": "2017-01-20T07:48:04Z",
		"href": "http://jgardiner.co.uk/blog/jupyter_progress_bar"
	},
	{
		"cluster": 1,
		"tags": [
			"bolano",
			"robertobolano",
			"spanish",
			"literature",
			"mexican",
			"books",
			"art",
			"savagedetectives",
			"culture"
		],
		"y": -10.290682533081673,
		"x": 2.31129092873489,
		"extended": "",
		"description": "Vagabonds - The New Yorker",
		"time": "2017-01-18T16:20:22Z",
		"href": "http://www.newyorker.com/magazine/2007/03/26/vagabonds"
	},
	{
		"cluster": 2,
		"tags": [
			"philosophy",
			"interpretivism",
			"positivism",
			"qualitative",
			"quantitative",
			"epistemology",
			"ontology",
			"research",
			"researchmethods",
			"sociology",
			"socialscience"
		],
		"y": -7.632020424580204,
		"x": -0.9243482474071323,
		"extended": "Therefore, the goal of interpretivist research is to understand and interpret the meanings in human behaviour rather than to generalize and predict causes and effects (Neuman, 2000; Hudson and Ozanne, 1988). For an interpretivist researcher it is important to understand motives, meanings, reasons and other subjective experiences which are time and context bound (Hudson and Ozanne, 1988; Neuman, 2000).\r\n\r\n",
		"description": "Interpretivism and Positivism (Ontological and Epistemological Perspectives)",
		"time": "2017-01-18T16:11:09Z",
		"href": "https://prabash78.wordpress.com/2012/03/14/interpretivism-and-postivism-ontological-and-epistemological-perspectives/"
	},
	{
		"cluster": 16,
		"tags": [
			"music",
			"data",
			"scienceofpop",
			"datascience",
			"machinelearning",
			"dsp",
			"musicology",
			"mir"
		],
		"y": -5.6333872476136095,
		"x": 0.19294485297756472,
		"extended": "",
		"description": "Big Data's Unexplored Frontier: Recorded Music | Motherboard",
		"time": "2017-01-17T13:53:44Z",
		"href": "http://motherboard.vice.com/en_uk/read/big-datas-unexplored-frontier-recorded-music"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"c20th",
			"twentiethcentury",
			"contemporary",
			"classical",
			"contemporaryclassical",
			"stevereich",
			"phillipglass",
			"johnadams"
		],
		"y": -9.29353359003891,
		"x": 4.380606833859577,
		"extended": "",
		"description": "The Sounds That Changed America",
		"time": "2017-01-17T13:52:34Z",
		"href": "http://www.barbican.org.uk/reichglassadams/"
	},
	{
		"cluster": 10,
		"tags": [
			"technology",
			"habit",
			"routine",
			"society",
			"attention",
			"luddism",
			"culture",
			"politics"
		],
		"y": -0.8086240982968123,
		"x": 12.658012870679013,
		"extended": "\"People may amuse themselves as they please. At least their chosen inanity, unlike yours, makes no claim to be anything finer than it is.\"",
		"description": "The Quietus | Opinion | Black Sky Thinking | Cast Off Thy Smartphone & Be Healed: Debunking The Digital Detox",
		"time": "2017-01-17T13:46:39Z",
		"href": "http://thequietus.com/articles/21521-digital-detox-technology-crusties-bellends"
	},
	{
		"cluster": 3,
		"tags": [
			"johnberger",
			"art",
			"criticism",
			"culture",
			"society",
			"politics",
			"feminism",
			"patriarchy"
		],
		"y": -0.053624316520718224,
		"x": 13.078945347274415,
		"extended": "",
		"description": "Why we still need John Berger’s Ways of Seeing | Dazed",
		"time": "2017-01-17T13:42:36Z",
		"href": "http://www.dazeddigital.com/artsandculture/article/34166/1/why-we-still-need-ways-of-seeing-john-berger"
	},
	{
		"cluster": 1,
		"tags": [
			"hipsters",
			"culture",
			"society",
			"ethnography"
		],
		"y": -3.665573350731973,
		"x": 11.317589530713734,
		"extended": "",
		"description": "Ethnography on Hipsters in Union Square and Williamsburg, Brooklyn - Sarah Oquendo - Cultural Studies for the Socially Liberated",
		"time": "2017-01-17T13:39:41Z",
		"href": "http://culturalresearchers.weebly.com/ethnographic-shorts/ethnography-on-hipsters-in-union-square-and-williamsburg-brooklyn-sarah-oquendo"
	},
	{
		"cluster": 3,
		"tags": [
			"fucktheory",
			"advice",
			"books",
			"capitalism",
			"politics",
			"apocalypse",
			"trump",
			"contradiction",
			"contrariety",
			"philosophy",
			"thought",
			"theory",
			"logic",
			"culture"
		],
		"y": -0.8230198753601022,
		"x": 10.721985815434788,
		"extended": "",
		"description": "Fuck Theory on a syllabus for the end times - artforum.com / slant",
		"time": "2017-01-17T13:36:44Z",
		"href": "https://www.artforum.com/slant/id=65193"
	},
	{
		"cluster": 2,
		"tags": [
			"godel",
			"ai",
			"artificialintelligence",
			"computerscience",
			"philosophy",
			"logic",
			"undecidability"
		],
		"y": 1.1865490991338996,
		"x": -11.125736310479015,
		"extended": "",
		"description": "Godel vs. Artificial Intelligence",
		"time": "2017-01-17T13:22:23Z",
		"href": "https://www.sdsc.edu/~jeff/Godel_vs_AI.html"
	},
	{
		"cluster": 1,
		"tags": [
			"maintenance",
			"technology",
			"models",
			"society",
			"culture",
			"organisations",
			"IML",
			"interactivemachinelearning"
		],
		"y": -3.9587992357882738,
		"x": 11.471433522470162,
		"extended": "",
		"description": "Maintenance in progress? — The Maintainers",
		"time": "2017-01-17T12:45:11Z",
		"href": "http://themaintainers.org/blog/2016/6/3/maintenance-in-progress#comments-5751acc37da24ff1d8def211="
	},
	{
		"cluster": 1,
		"tags": [
			"attention",
			"affect",
			"computing",
			"hci",
			"truth",
			"society",
			"culture",
			"routine",
			"habit"
		],
		"y": -1.3565544849400972,
		"x": 12.771111386042868,
		"extended": "",
		"description": "How I Got My Attention Back",
		"time": "2017-01-17T12:44:45Z",
		"href": "https://backchannel.com/how-i-got-my-attention-back-c7fc9297d347#.shev0kulh"
	},
	{
		"cluster": 15,
		"tags": [
			"convolution",
			"reverb",
			"realtime",
			"dsp",
			"mathematics",
			"audio",
			"digitalsignalprocessing",
			"digital",
			"signalprocessing",
			"signals"
		],
		"y": -9.111371349584626,
		"x": -3.480801273854355,
		"extended": "",
		"description": "impulse response - Conceptually, how does real time convolution reverb work? - Signal Processing Stack Exchange",
		"time": "2017-01-11T14:51:55Z",
		"href": "http://dsp.stackexchange.com/questions/11151/conceptually-how-does-real-time-convolution-reverb-work"
	},
	{
		"cluster": 2,
		"tags": [
			"dsp",
			"maths",
			"signalprocessing",
			"frequency",
			"signals",
			"negativefrequency"
		],
		"y": -2.9444839121236224,
		"x": 2.5061849829147054,
		"extended": "",
		"description": "frequency - What is the physical significance of negative frequencies? - Signal Processing Stack Exchange",
		"time": "2017-01-11T14:28:02Z",
		"href": "http://dsp.stackexchange.com/questions/431/what-is-the-physical-significance-of-negative-frequencies"
	},
	{
		"cluster": 1,
		"tags": [
			"hipsters",
			"gentrification",
			"culture",
			"urbanism",
			"sociology"
		],
		"y": -3.084114378355324,
		"x": 10.57406646443636,
		"extended": "The Gentrification of the Mind: Witness to a Lost Imagination",
		"description": "Interurban Lines: What hipsters tell us about cities",
		"time": "2017-01-05T14:16:09Z",
		"href": "http://interurbanlines.blogspot.co.uk/2016/11/what-hipsters-tell-us-about-cities.html"
	},
	{
		"cluster": 2,
		"tags": [
			"entities",
			"nlp",
			"entityextraction",
			"entitylinking",
			"IR",
			"machinelearning"
		],
		"y": -0.9978408615624613,
		"x": 3.305854018270187,
		"extended": "",
		"description": "Presenting an Open Source Toolkit for Lightweight... | Yahoo Research",
		"time": "2017-01-05T14:05:25Z",
		"href": "https://yahooresearch.tumblr.com/post/154110423951/presenting-an-open-source-toolkit-for-lightweight"
	},
	{
		"cluster": 10,
		"tags": [
			"design",
			"exhibition",
			"education",
			"ulm",
			"culture",
			"politics"
		],
		"y": -0.4921821511644129,
		"x": 10.261563953143066,
		"extended": "",
		"description": "The Quietus | Features | Craft/Work | A New Material Vocabulary: The Ulm Model At Raven Row",
		"time": "2016-12-11T12:55:15Z",
		"href": "http://thequietus.com/articles/21470-ulm-model-raven-row-review"
	},
	{
		"cluster": 10,
		"tags": [
			"class",
			"technology",
			"politics",
			"business",
			"startups"
		],
		"y": 5.283526364048398,
		"x": 7.169846496880568,
		"extended": "",
		"description": "» The class politics of innovation and the new digital elite The Sociological Imagination",
		"time": "2016-11-29T13:37:56Z",
		"href": "http://sociologicalimagination.org/archives/19005"
	},
	{
		"cluster": 1,
		"tags": [
			"bureaucracy",
			"surveillance",
			"privacy",
			"culture",
			"efficiency",
			"managerialism"
		],
		"y": -2.2717683423566997,
		"x": 9.589974926929893,
		"extended": "",
		"description": "The bureaucratic origins of algorithmic authoritarianism | The Sociological Imagination",
		"time": "2016-11-29T09:04:39Z",
		"href": "http://sociologicalimagination.org/archives/19002"
	},
	{
		"cluster": 15,
		"tags": [
			"optimization",
			"algorithms",
			"machine-learning",
			"machine",
			"learning",
			"numerical",
			"computerscience",
			"mathematics",
			"ml"
		],
		"y": -1.4638970173072405,
		"x": -10.213999767734704,
		"extended": "",
		"description": "An Interactive Tutorial on Numerical Optimization",
		"time": "2016-11-29T09:03:51Z",
		"href": "http://www.benfrederickson.com/numerical-optimization/"
	},
	{
		"cluster": 5,
		"tags": [
			"tsne",
			"dataviz",
			"data",
			"visualization",
			"machinelearning",
			"dimensionalityreduction",
			"statistics",
			"computerscience",
			"datascience"
		],
		"y": -1.8420342136119143,
		"x": -3.809470998854692,
		"extended": "",
		"description": "How to Use t-SNE Effectively — Distill",
		"time": "2016-11-28T17:25:01Z",
		"href": "http://distill.pub/2016/misread-tsne/"
	},
	{
		"cluster": 3,
		"tags": [
			"tech",
			"industry",
			"criticism",
			"technology",
			"websummit",
			"society",
			"culture",
			"economics",
			"bullshit",
			"startups",
			"siliconvalley",
			"future",
			"critique"
		],
		"y": -5.797308812481711,
		"x": 10.48849715030696,
		"extended": "",
		"description": "Watching the World Rot at Europe's Largest Tech Conference - The Atlantic",
		"time": "2016-11-28T17:20:04Z",
		"href": "https://www.theatlantic.com/technology/archive/2016/11/the-warped-world-of-web-summit/508442/?single_page=true"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"war",
			"nuclearwar",
			"nuclear",
			"history",
			"armageddon",
			"future",
			"futurism"
		],
		"y": 5.277000166631674,
		"x": 9.598337009377454,
		"extended": "",
		"description": "Fat Man - The New Yorker",
		"time": "2016-11-28T17:15:37Z",
		"href": "http://www.newyorker.com/magazine/2005/06/27/fat-man"
	},
	{
		"cluster": 1,
		"tags": [
			"technology",
			"future",
			"futurism",
			"culture",
			"perception"
		],
		"y": -8.37384876758593,
		"x": 6.332966824749799,
		"extended": "",
		"description": "Welcome to the Future Nauseous",
		"time": "2016-11-28T16:49:57Z",
		"href": "http://www.ribbonfarm.com/2012/05/09/welcome-to-the-future-nauseous/"
	},
	{
		"cluster": 8,
		"tags": [
			"fandom",
			"community",
			"culture",
			"online",
			"unintendedconsequences",
			"pinboard",
			"history",
			"internet",
			"society",
			"diversity"
		],
		"y": -4.300718810594351,
		"x": 11.359813093209809,
		"extended": "",
		"description": "Fan Is A Tool-Using Animal—dConstruct Conference Talk",
		"time": "2016-11-28T09:57:41Z",
		"href": "http://idlewords.com/talks/fan_is_a_tool_using_animal.htm"
	},
	{
		"cluster": 10,
		"tags": [
			"corbyn",
			"labour",
			"politics",
			"uk",
			"book",
			"review"
		],
		"y": 6.374422215164566,
		"x": 13.611379453793074,
		"extended": "",
		"description": "All That Is Solid ...: The Candidate by Alex Nunns",
		"time": "2016-11-27T22:07:51Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2016/11/the-candidate-by-alex-nunns.html?m=1"
	},
	{
		"cluster": 1,
		"tags": [
			"diversity",
			"technology",
			"culture",
			"onedirection",
			"education",
			"larries",
			"fanfic",
			"fanart",
			"community",
			"tumblr"
		],
		"y": -7.984932380978968,
		"x": 6.566442287908206,
		"extended": "",
		"description": "How the tech sector could move in One Direction — Sacha Judd",
		"time": "2016-11-27T18:33:25Z",
		"href": "http://www.sachajudd.com/one-direction/"
	},
	{
		"cluster": 13,
		"tags": [
			"geography",
			"evgencymorozov",
			"davidharvey",
			"politics",
			"culture",
			"society",
			"sharingeconomy",
			"smartcities",
			"infrastructure",
			"economics",
			"capitalism",
			"neoliberalism"
		],
		"y": 4.159308454855206,
		"x": 12.882429917058348,
		"extended": "",
		"description": "Evgeny Morozov & David Harvey on post-neoliberalism, Trump, infrastructure, sharing economy, smart city | Progressive Geographies",
		"time": "2016-11-27T12:54:38Z",
		"href": "https://progressivegeographies.com/2016/11/17/evgeny-morozov-david-harvey-on-post-neoliberalism-trump-infrastructure-sharing-economy-smart-city/"
	},
	{
		"cluster": 1,
		"tags": [
			"ai",
			"machinelearning",
			"productdesign",
			"bias",
			"organisations",
			"culture",
			"diversity"
		],
		"y": -7.443158397545121,
		"x": 6.86204799789192,
		"extended": "",
		"description": "When bias in product design means life or death | TechCrunch",
		"time": "2016-11-27T10:57:15Z",
		"href": "https://techcrunch.com/2016/11/16/when-bias-in-product-design-means-life-or-death/"
	},
	{
		"cluster": 2,
		"tags": [
			"bias",
			"organisational",
			"discrimination",
			"business",
			"organisations",
			"management",
			"psychology"
		],
		"y": 1.859423494068601,
		"x": 4.1431882332765255,
		"extended": "",
		"description": "Tim Harford — Article — The best ways to combat bias from Airbnb to eBay",
		"time": "2016-11-27T10:50:17Z",
		"href": "http://timharford.com/2016/11/the-best-ways-to-combat-bias-from-airbnb-to-ebay/"
	},
	{
		"cluster": 2,
		"tags": [
			"subtitles",
			"analysis",
			"text",
			"R",
			"datamining",
			"textmining",
			"nlp"
		],
		"y": -1.1246042483316188,
		"x": -1.6048442054413607,
		"extended": "",
		"description": "Movies and Series subtitles in R with subtools – Piece of K",
		"time": "2016-11-24T09:54:57Z",
		"href": "http://www.pieceofk.fr/?p=437"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"politics",
			"culture",
			"adamcurtis",
			"bbc"
		],
		"y": 0.6883610921925255,
		"x": 12.30423076475412,
		"extended": "",
		"description": "The Quietus | Opinion | Black Sky Thinking | HyperNormalisation: Is Adam Curtis, Like Trump, Just A Master Manipulator?",
		"time": "2016-11-24T09:54:34Z",
		"href": "http://thequietus.com/articles/21077-adam-curtis-hypernormalisation-review-bbc-politics-doom"
	},
	{
		"cluster": 2,
		"tags": [
			"rnns",
			"recurrentneuralnetworks",
			"neuralnetworks",
			"machinelearning",
			"sequences",
			"deeplearning",
			"computerscience",
			"ml",
			"ai",
			"artificialintelligence"
		],
		"y": -0.7947838296065409,
		"x": -5.1294926424474925,
		"extended": "",
		"description": "The Unreasonable Effectiveness of Recurrent Neural Networks",
		"time": "2016-11-23T10:28:28Z",
		"href": "http://karpathy.github.io/2015/05/21/rnn-effectiveness/"
	},
	{
		"cluster": 10,
		"tags": [
			"managerialism",
			"bullshit",
			"bullshitjobs",
			"employment",
			"business",
			"culture",
			"labour",
			"work",
			"society",
			"politics"
		],
		"y": 1.1966866588155929,
		"x": 13.30402435317726,
		"extended": "",
		"description": "You don’t have to be stupid to work here, but it helps | Aeon Essays",
		"time": "2016-11-21T12:11:15Z",
		"href": "https://aeon.co/essays/you-don-t-have-to-be-stupid-to-work-here-but-it-helps"
	},
	{
		"cluster": 14,
		"tags": [
			"google",
			"assistant",
			"CUI",
			"CUIs",
			"conversational",
			"UI",
			"design",
			"machinelearning",
			"interaction",
			"AI",
			"interactivemachinelearning"
		],
		"y": -4.9872135815575405,
		"x": 1.4962730297544653,
		"extended": "",
		"description": "Google: Our Assistant Will Trigger the Next Era of AI",
		"time": "2016-11-21T11:03:54Z",
		"href": "https://backchannel.com/google-our-assistant-will-trigger-the-next-era-of-ai-3c72a4d7bc75#.rhs17kv6e"
	},
	{
		"cluster": 10,
		"tags": [
			"algorithms",
			"bigdata",
			"justice",
			"politics",
			"technology",
			"data",
			"quantification",
			"capitalism",
			"society"
		],
		"y": 2.838140310854348,
		"x": 11.467487717571819,
		"extended": "",
		"description": "Welcome to the Black Box | Jacobin",
		"time": "2016-11-21T11:01:25Z",
		"href": "https://www.jacobinmag.com/2016/09/big-data-algorithms-math-facebook-advertisement-marketing/"
	},
	{
		"cluster": 1,
		"tags": [
			"memory",
			"cities",
			"geography",
			"psychogeography",
			"culture",
			"art",
			"society"
		],
		"y": -2.498526104197854,
		"x": 10.640123314335035,
		"extended": "",
		"description": "The Haunted City | White Noise",
		"time": "2016-11-21T10:46:18Z",
		"href": "http://www.whitenoise.city/articles/remembering-city-memory-cities-ghosts-urban-haunting-emily-reynolds"
	},
	{
		"cluster": 3,
		"tags": [
			"jamesbridle",
			"bigdata",
			"big",
			"data",
			"technology",
			"scicen",
			"quantitative",
			"thinking",
			"quantitativethinking",
			"psychology",
			"cognitivebias",
			"epistemology",
			"culture",
			"criticism",
			"politics",
			"extremism",
			"philosophy"
		],
		"y": -0.5113148051445765,
		"x": 10.192526647715376,
		"extended": "",
		"description": "What's wrong with big data? | New Humanist",
		"time": "2016-11-21T10:42:58Z",
		"href": "https://newhumanist.org.uk/articles/5104/whats-wrong-with-big-data"
	},
	{
		"cluster": 14,
		"tags": [
			"tv",
			"television",
			"technology",
			"interface",
			"experience",
			"ux",
			"userexperience",
			"smarttvs",
			"home",
			"leisure"
		],
		"y": -4.498474392878525,
		"x": 1.9479367500417566,
		"extended": "",
		"description": "A Dumb TV Is a Smart TV + Subtraction.com",
		"time": "2016-11-21T10:17:51Z",
		"href": "https://www.subtraction.com/2016/10/18/a-dumb-tv-is-a-smart-tv/"
	},
	{
		"cluster": 13,
		"tags": [
			"tv",
			"television",
			"culture",
			"business",
			"film",
			"economics",
			"streaming",
			"netflix"
		],
		"y": 3.252836315501595,
		"x": 4.467175021038913,
		"extended": "",
		"description": "The Business of Too Much TV -- Vulture",
		"time": "2016-11-21T10:15:36Z",
		"href": "http://www.vulture.com/2016/05/peak-tv-business-c-v-r.html"
	},
	{
		"cluster": 2,
		"tags": [
			"socialmedia",
			"life",
			"society",
			"technology",
			"productivity",
			"concentration",
			"work",
			"leisure",
			"affectivelabour",
			"addiction",
			"psychology"
		],
		"y": 1.6503891652824003,
		"x": 11.263744737376895,
		"extended": "",
		"description": "Quit Social Media. Your Career May Depend on It. - The New York Times",
		"time": "2016-11-21T09:47:05Z",
		"href": "http://www.nytimes.com/2016/11/20/jobs/quit-social-media-your-career-may-depend-on-it.html"
	},
	{
		"cluster": 2,
		"tags": [
			"deeplearning",
			"neuralnetworks",
			"machinelearning",
			"cnns",
			"convnets",
			"convolutional",
			"neural",
			"networks",
			"metaphor",
			"physics"
		],
		"y": 2.4249652177894165,
		"x": 1.9655702137525277,
		"extended": "",
		"description": "The Extraordinary Link Between Deep Neural Networks and the Nature of the Universe",
		"time": "2016-11-17T17:47:26Z",
		"href": "https://www.technologyreview.com/s/602344/the-extraordinary-link-between-deep-neural-networks-and-the-nature-of-the-universe/"
	},
	{
		"cluster": 2,
		"tags": [
			"convnets",
			"convolutional",
			"neural",
			"network",
			"cnns",
			"deaplearning",
			"neuralnetworks",
			"machinelearning"
		],
		"y": 2.4184888475264033,
		"x": 1.9802762819698396,
		"extended": "",
		"description": "How do Convolutional Neural Networks work?",
		"time": "2016-11-17T17:44:48Z",
		"href": "https://brohrer.github.io/how_convolutional_neural_networks_work.html"
	},
	{
		"cluster": 1,
		"tags": [
			"patrickcowley",
			"patrick",
			"cowley",
			"sylvester",
			"disco",
			"gay",
			"lgbt",
			"sanfrancisco",
			"culture",
			"art",
			"music",
			"electronicmusic"
		],
		"y": -10.362300028310305,
		"x": 2.723925532914491,
		"extended": "Candida Cosmica",
		"description": "San Fran-disco: how Patrick Cowley and Sylvester changed dance music forever | Music | The Guardian",
		"time": "2016-11-17T17:33:34Z",
		"href": "https://www.theguardian.com/music/2016/oct/26/dance-music-san-francisco-patrick-cowley-sylvester"
	},
	{
		"cluster": 5,
		"tags": [
			"glue",
			"python",
			"datavis",
			"datamining",
			"statistics",
			"datascience",
			"visualisation",
			"tool",
			"library"
		],
		"y": -3.027158703134334,
		"x": 0.05017433800772709,
		"extended": "",
		"description": "Glue Documentation — Glue 0.9.1 documentation",
		"time": "2016-11-17T17:22:53Z",
		"href": "http://glueviz.org/en/stable/"
	},
	{
		"cluster": 13,
		"tags": [
			"business",
			"co-op",
			"cooperative",
			"socialism",
			"anarchism",
			"economics"
		],
		"y": 8.634714452582566,
		"x": 7.14874680751555,
		"extended": "",
		"description": "setupaworkerscoop-lowres.pdf",
		"time": "2016-11-17T17:21:42Z",
		"href": "http://www.radicalroutes.org.uk/publicdownloads/setupaworkerscoop-lowres.pdf"
	},
	{
		"cluster": 12,
		"tags": [
			"fm",
			"synthesiser",
			"synth",
			"music",
			"synthesis",
			"webaudio",
			"html5",
			"web",
			"deveopment",
			"programming"
		],
		"y": -10.55370279058959,
		"x": 4.14304036478656,
		"extended": "",
		"description": "Web FM synthesizer made with HTML5",
		"time": "2016-11-17T17:01:49Z",
		"href": "http://www.taktech.org/takm/WebFMSynth/"
	},
	{
		"cluster": 10,
		"tags": [
			"postcapitalism",
			"righttothecity",
			"politics",
			"cities",
			"geography",
			"culture",
			"society"
		],
		"y": -0.36211786462546647,
		"x": 11.904452243343693,
		"extended": "",
		"description": "Postcapitalism and the city – Mosquito Ridge – Medium",
		"time": "2016-11-17T16:56:19Z",
		"href": "https://medium.com/mosquito-ridge/postcapitalism-and-the-city-6dda80bc201d#.th45u4k8c"
	},
	{
		"cluster": 10,
		"tags": [
			"uber",
			"labour",
			"politics",
			"algorithms",
			"society",
			"work",
			"business",
			"socialism",
			"machinelearning",
			"technocracy",
			"technocratic",
			"managerialism"
		],
		"y": 2.4443471439315867,
		"x": 11.078740135061786,
		"extended": "",
		"description": "When your boss is an algorithm",
		"time": "2016-11-17T16:55:59Z",
		"href": "https://www.ft.com/content/88fdc58e-754f-11e6-b60a-de4532d5ea35"
	},
	{
		"cluster": 8,
		"tags": [
			"notability",
			"fame",
			"society",
			"culture",
			"art",
			"wikipedia",
			"netart",
			"internet"
		],
		"y": -10.061864744155374,
		"x": 1.0862406558848492,
		"extended": "",
		"description": "Dictionary of non-notable Artists : Gregor Weichbrodt",
		"time": "2016-11-17T16:48:55Z",
		"href": "http://ggor.de/en/project/dictionary-of-non-notable-artists/"
	},
	{
		"cluster": 2,
		"tags": [
			"projects",
			"bestiary",
			"work",
			"business"
		],
		"y": 1.8284345754234357,
		"x": 4.082651131837523,
		"extended": "",
		"description": "Where do projects come from? – Medium",
		"time": "2016-11-17T14:10:31Z",
		"href": "https://medium.com/@tristanf/where-do-projects-come-from-232beede1273#.coveu236s"
	},
	{
		"cluster": 1,
		"tags": [
			"classical",
			"metadata",
			"music",
			"discovery",
			"browsing",
			"streaming",
			"ux",
			"user",
			"experience"
		],
		"y": -9.205258219928583,
		"x": 4.4025197159303655,
		"extended": "",
		"description": "Why Can't Streaming Services Get Classical Music Right? : The Record : NPR",
		"time": "2016-11-17T13:57:56Z",
		"href": "http://www.npr.org/sections/therecord/2015/06/04/411963624/why-cant-streaming-services-get-classical-music-right"
	},
	{
		"cluster": 2,
		"tags": [
			"personas",
			"activitytheory",
			"userresearch",
			"hci",
			"research",
			"ux"
		],
		"y": -8.763007605258734,
		"x": -1.6195623745214494,
		"extended": "",
		"description": "Using Activity Theory to build effective personas | User research",
		"time": "2016-11-17T13:48:07Z",
		"href": "https://userresearch.blog.gov.uk/2016/09/06/using-activity-theory-to-build-effective-personas/"
	},
	{
		"cluster": 1,
		"tags": [
			"modular",
			"synthesiser",
			"synthesis",
			"music"
		],
		"y": -9.977332555671708,
		"x": 3.942680031979964,
		"extended": "",
		"description": "8 Artists Making Brilliant Exploratory Music Using Modular Synths – Soundfly",
		"time": "2016-11-17T13:44:24Z",
		"href": "http://flypaper.soundfly.com/discovery/8-artists-making-brilliant-exploratory-music-using-modular-synths/"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"art",
			"notation",
			"score"
		],
		"y": -10.001175000701442,
		"x": 3.08924053650965,
		"extended": "",
		"description": "5 1/2 Examples of Experimental Music Notation | Arts & Culture | Smithsonian",
		"time": "2016-11-17T13:42:08Z",
		"href": "http://www.smithsonianmag.com/arts-culture/5-12-examples-of-experimental-music-notation-92223646/?no-ist"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"adversarial",
			"training"
		],
		"y": -1.1331735028638321,
		"x": 3.247174793616971,
		"extended": "",
		"description": "Deep Learning Adversarial Examples – Clarifying Misconceptions",
		"time": "2016-11-17T10:08:23Z",
		"href": "http://www.kdnuggets.com/2015/07/deep-learning-adversarial-examples-misconceptions.html"
	},
	{
		"cluster": 3,
		"tags": [
			"mancuso",
			"music",
			"politics",
			"disco",
			"collective",
			"experience",
			"collectiveexperience",
			"participation",
			"art",
			"culture",
			"society"
		],
		"y": -1.1230203250171797,
		"x": 13.096035200717715,
		"extended": "",
		"description": "Goodbye David Mancuso – we love you | jeremygilbertwriting",
		"time": "2016-11-17T10:08:09Z",
		"href": "https://jeremygilbertwriting.wordpress.com/2016/11/15/goodby-david-mancuso-we-loved-you/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"culture",
			"society",
			"liberalism",
			"trump",
			"america",
			"usa",
			"democrats",
			"republicans"
		],
		"y": 0.8556402747096966,
		"x": 12.76669084793701,
		"extended": "",
		"description": "The smug style in American liberalism - Vox",
		"time": "2016-11-09T14:57:50Z",
		"href": "http://www.vox.com/2016/4/21/11451378/smug-american-liberalism"
	},
	{
		"cluster": 14,
		"tags": [
			"prototyping",
			"voice",
			"ui",
			"ux",
			"experience",
			"design",
			"conversational"
		],
		"y": -4.696990686958991,
		"x": 1.3647692376020915,
		"extended": "",
		"description": "Prototyping for Voice UI - BBC R&D",
		"time": "2016-11-07T17:10:29Z",
		"href": "http://www.bbc.co.uk/rd/blog/2016/11/voice-user-interface-ui"
	},
	{
		"cluster": 1,
		"tags": [
			"diaries",
			"records",
			"curation",
			"music",
			"culture",
			"society",
			"consumption"
		],
		"y": -6.163650457531089,
		"x": 10.21728837766459,
		"extended": "",
		"description": "Why i wrote down every single record I bought for 14 years in 3 tatty diaries. | Made of Stone",
		"time": "2016-11-03T11:30:14Z",
		"href": "https://jemstone.wordpress.com/2014/11/15/why-i-wrote-down-every-single-record-i-bought-for-14-years-in-3-tatty-diaries/"
	},
	{
		"cluster": 10,
		"tags": [
			"tax",
			"accounting",
			"politics",
			"business",
			"fairtaxpledge"
		],
		"y": 8.370920930907017,
		"x": 7.242251264412603,
		"extended": "",
		"description": "Tax Research UK » How to tell your accountant you don’t want them to tax cheat for you",
		"time": "2016-10-31T10:35:54Z",
		"href": "http://www.taxresearch.org.uk/Blog/2016/10/30/how-to-tell-your-accountant-you-dont-want-them-to-tax-cheat-for-you/"
	},
	{
		"cluster": 10,
		"tags": [
			"refugees",
			"Calais",
			"identity",
			"politics",
			"men",
			"gender",
			"islam",
			"intersectionality"
		],
		"y": 2.026724684478133,
		"x": 8.969745329721874,
		"extended": "",
		"description": "The Calais children caught between racism and misandry",
		"time": "2016-10-24T22:17:44Z",
		"href": "http://freethoughtblogs.com/hetpat/2016/10/21/the-calais-children-caught-between-racism-and-misandry/"
	},
	{
		"cluster": 1,
		"tags": [
			"juliuseastman",
			"julius",
			"eastman",
			"music",
			"composer",
			"classical",
			"history"
		],
		"y": -9.281518666110934,
		"x": 4.437992516672669,
		"extended": "",
		"description": "Outrageous Fortune | Frieze",
		"time": "2016-10-24T12:39:37Z",
		"href": "https://frieze.com/article/outrageous-fortune"
	},
	{
		"cluster": 10,
		"tags": [
			"ai",
			"ml",
			"society",
			"ethics",
			"politics",
			"technology",
			"algorithms",
			"artificialintelligence",
			"interactivemachinelearning",
			"machinelearning"
		],
		"y": 1.9481621014211816,
		"x": 13.82106100177218,
		"extended": "",
		"description": "There is a blind spot in AI research : Nature News & Comment",
		"time": "2016-10-24T12:31:59Z",
		"href": "http://www.nature.com/news/there-is-a-blind-spot-in-ai-research-1.20805"
	},
	{
		"cluster": 2,
		"tags": [
			"psychology",
			"identity",
			"behaviour",
			"transformation",
			"agile"
		],
		"y": -2.088673034157756,
		"x": 5.288940408621731,
		"extended": "",
		"description": "The Psychology of Change – Agile in the Wild",
		"time": "2016-10-20T10:45:21Z",
		"href": "https://salfreudenberg.wordpress.com/2014/04/03/the-psychology-of-change/"
	},
	{
		"cluster": 10,
		"tags": [
			"janejacobs",
			"urbanism",
			"cities",
			"righttothecity",
			"biography",
			"geography",
			"politics",
			"society"
		],
		"y": -1.1646809515013223,
		"x": 9.351350871853114,
		"extended": "",
		"description": "The Life That Shaped Jane Jacobs - CityLab",
		"time": "2016-10-20T09:19:59Z",
		"href": "http://www.citylab.com/design/2016/09/the-life-that-shaped-jane-jacobs/500546/"
	},
	{
		"cluster": 1,
		"tags": [
			"tv",
			"magicalrealism",
			"magical",
			"realism",
			"society",
			"culture",
			"art",
			"storytelling"
		],
		"y": -5.922295900071407,
		"x": 10.671368774381811,
		"extended": "",
		"description": "Stranger Things, The Leftovers, Westworld, Cleverman, and the rise of magic realism as a TV genre — Quartz",
		"time": "2016-10-19T08:26:46Z",
		"href": "http://qz.com/811700/stranger-things-the-leftovers-westworld-cleverman-and-the-rise-of-magic-realism-as-a-tv-genre/"
	},
	{
		"cluster": 2,
		"tags": [
			"ethnography",
			"life",
			"research",
			"method",
			"living",
			"sociology",
			"society"
		],
		"y": -3.538114616181497,
		"x": 10.825459168796426,
		"extended": "",
		"description": "» Ethnography as being-in-the-world rather than method The Sociological Imagination",
		"time": "2016-10-18T19:13:10Z",
		"href": "http://sociologicalimagination.org/archives/18860"
	},
	{
		"cluster": 1,
		"tags": [
			"modular",
			"synthesis",
			"art",
			"music",
			"electronics"
		],
		"y": -10.056071973268104,
		"x": 3.6251913937126914,
		"extended": "",
		"description": "Absurd Wurld: Bleeping Modular Synths!",
		"time": "2016-10-18T19:02:37Z",
		"href": "http://absurdwurld.blogspot.co.uk/2016/10/bleeping-modular-synths.html?m=1"
	},
	{
		"cluster": 1,
		"tags": [
			"london",
			"music",
			"art",
			"klf",
			"manifesto",
			"participation",
			"democracy",
			"politics",
			"foundry"
		],
		"y": -10.396672908825764,
		"x": 3.2249410515310264,
		"extended": "",
		"description": "ICFDBTT – Alex McLean",
		"time": "2016-10-18T17:07:52Z",
		"href": "http://slab.org/icfdbtt/"
	},
	{
		"cluster": 1,
		"tags": [
			"bbc",
			"webaudio",
			"html",
			"signal",
			"processing",
			"sound",
			"work",
			"music"
		],
		"y": -9.339583761158787,
		"x": 4.3237616814157525,
		"extended": "",
		"description": "Ring Modulator : Recreating the sounds of the BBC Radiophonic Workshop",
		"time": "2016-10-18T16:56:53Z",
		"href": "http://webaudio.prototyping.bbc.co.uk/ring-modulator/"
	},
	{
		"cluster": 1,
		"tags": [
			"powerelectronics",
			"power",
			"electronics",
			"noise",
			"music"
		],
		"y": -9.71677207407405,
		"x": 4.064221562111452,
		"extended": "",
		"description": "UbuWeb Sound :: Tellus #13 - Power Electronics",
		"time": "2016-10-18T16:55:46Z",
		"href": "http://www.ubu.com/sound/tellus_13.html"
	},
	{
		"cluster": 10,
		"tags": [
			"sound",
			"noise",
			"weapon",
			"politics",
			"torture",
			"war"
		],
		"y": 5.288381844646164,
		"x": 9.791862394091169,
		"extended": "",
		"description": "The Sound of Fear: The history of noise as a weapon",
		"time": "2016-10-18T14:36:29Z",
		"href": "http://www.factmag.com/2016/10/09/sound-fear-room40-boss-lawrence-english-history-noise-weapon/"
	},
	{
		"cluster": 10,
		"tags": [
			"technology",
			"philosophy",
			"simulation",
			"hypothesis",
			"bullshit",
			"politics"
		],
		"y": 6.9603708376014755,
		"x": 11.329550769085262,
		"extended": "",
		"description": "Tech Billionaires Want to Destroy the Universe - The Atlantic",
		"time": "2016-10-18T14:36:17Z",
		"href": "http://www.theatlantic.com/technology/archive/2016/10/silicon-valley-is-obsessed-with-a-false-notion-of-reality/503963/"
	},
	{
		"cluster": 2,
		"tags": [
			"paychology",
			"cognition",
			"brain",
			"science",
			"consciousness",
			"memory",
			"ai",
			"computers",
			"metaphor"
		],
		"y": -3.3595507991223,
		"x": 2.733530587974088,
		"extended": "",
		"description": "Your brain does not process information and it is not a computer | Aeon Essays",
		"time": "2016-10-04T17:38:11Z",
		"href": "https://aeon.co/essays/your-brain-does-not-process-information-and-it-is-not-a-computer"
	},
	{
		"cluster": 10,
		"tags": [
			"ai",
			"future",
			"machinelearning",
			"technology",
			"society",
			"politics"
		],
		"y": 1.9785388484668014,
		"x": 13.681913241607171,
		"extended": "",
		"description": "True AI is both logically possible and utterly implausible | Aeon Essays",
		"time": "2016-10-04T17:26:46Z",
		"href": "https://aeon.co/essays/true-ai-is-both-logically-possible-and-utterly-implausible"
	},
	{
		"cluster": 14,
		"tags": [
			"dsp",
			"maxmsp",
			"max",
			"filter",
			"design",
			"chebyshev",
			"butterworth",
			"biquad"
		],
		"y": -4.091521012049953,
		"x": 6.006908385909068,
		"extended": "",
		"description": "A Tour of Filtering Tools in Max | Cycling ’74",
		"time": "2016-10-04T09:28:01Z",
		"href": "https://cycling74.com/2016/03/08/a-tour-of-filtering-tools-in-max/#.V_NyDZMrLfA"
	},
	{
		"cluster": 2,
		"tags": [
			"communications",
			"infrastructure",
			"tube",
			"train",
			"london",
			"history"
		],
		"y": -1.729859773501338,
		"x": 6.491253446980631,
		"extended": "",
		"description": "It's Good To Talk: A History of Telecoms on the Underground",
		"time": "2016-10-04T06:55:50Z",
		"href": "http://www.londonreconnections.com/2016/its-good-to-talk/"
	},
	{
		"cluster": 10,
		"tags": [
			"cities",
			"culture",
			"gentrification",
			"music",
			"fatwhitefamily",
			"brixton",
			"righttothecity",
			"politics"
		],
		"y": -1.0006363362932376,
		"x": 11.781984547536256,
		"extended": "",
		"description": "The Quietus | Features | Three Songs No Flash | Capital Offences: Fat White Family Versus Zombie Urbanism",
		"time": "2016-09-22T15:27:32Z",
		"href": "http://thequietus.com/articles/20954-fat-white-family-live-review-brixton-academy-gentrification-london"
	},
	{
		"cluster": 10,
		"tags": [
			"labour",
			"coryn",
			"politics"
		],
		"y": 6.219075645926125,
		"x": 13.151665827707484,
		"extended": "",
		"description": "Hard Labour - Jackson - 2016 - The Political Quarterly - Wiley Online Library",
		"time": "2016-09-12T12:19:11Z",
		"href": "http://onlinelibrary.wiley.com/doi/10.1111/1467-923X.12222/full"
	},
	{
		"cluster": 10,
		"tags": [
			"gender",
			"sexuality",
			"queer",
			"feminism",
			"philosophy",
			"politics",
			"identity"
		],
		"y": 1.7270376954760918,
		"x": 8.434676697116958,
		"extended": "",
		"description": "The idea that gender is a spectrum is a new gender prison | Aeon Essays",
		"time": "2016-09-12T12:04:31Z",
		"href": "https://aeon.co/essays/the-idea-that-gender-is-a-spectrum-is-a-new-gender-prison"
	},
	{
		"cluster": 1,
		"tags": [
			"wordembeddings",
			"nlp",
			"bias",
			"language",
			"associations",
			"iat",
			"culture",
			"society",
			"dunningkrugerish",
			"machinelearning",
			"models",
			"assumptions"
		],
		"y": -3.3618107352932096,
		"x": 11.378984144685631,
		"extended": "Our finding of pervasive, human-like bias in AI may be surprising, but we consider it inevitable. We mean “bias” in a morally neutral sense. Some biases are prejudices, which society deems unacceptable. Others are facts about the real world (such as gender gaps in occupations), even if they reflect historical injustices that we wish to mitigate. Yet others are perfectly innocuous.\r\nAlgorithms don’t have a good way of telling these apart. If AI learns language sufficiently well, it will also learn cultural associations that are offensive, objectionable, or harmful. At a high level, bias is meaning. “Debiasing” these machine models, while intriguing and technically interesting, necessarily harms meaning.\r\nInstead, we suggest that mitigating prejudice should be a separate component of an AI system. Rather than altering AI’s representation of language, we should alter how or whether it acts on that knowledge, just as humans are able to learn not to act on our implicit biases. This requires a long-term research program that includes ethicists and domain experts, rather than formulating ethics as just another technical constraint in a learning system.",
		"description": "Language necessarily contains human biases, and so will machines trained on language corpora",
		"time": "2016-08-25T16:08:00Z",
		"href": "https://freedom-to-tinker.com/blog/randomwalker/language-necessarily-contains-human-biases-and-so-will-machines-trained-on-language-corpora/"
	},
	{
		"cluster": 17,
		"tags": [
			"ml",
			"machinelearning",
			"error",
			"optimisation",
			"debugging",
			"process",
			"programming",
			"computerscience",
			"bias",
			"noise",
			"overfitting",
			"underfitting",
			"modelselection"
		],
		"y": -1.1425102883080205,
		"x": -7.628111035481089,
		"extended": "",
		"description": "natural language processing blog: Debugging machine learning",
		"time": "2016-08-25T09:30:37Z",
		"href": "http://nlpers.blogspot.co.uk/2016/08/debugging-machine-learning.html?m=1"
	},
	{
		"cluster": 13,
		"tags": [
			"neoliberal",
			"subjectivity",
			"sociology",
			"society",
			"politics",
			"history",
			"economics",
			"lifestyle",
			"habits"
		],
		"y": 4.079720223536685,
		"x": 12.442650000171241,
		"extended": "he features of this sensibility is treating oneself as a bearer of different kinds of capital that, regardless of your situation and personal outlooks on life, you're expected to deploy. In a work setting, you're performance-managed as an individual in terms of how you mobilise your capitals to get the tasks done and further the objectives of the employer. In leisure time, many practices revolve around looking after one's self. Health and wellbeing employ similar techniques exhorting you to motivate yourself and perform fitness regimens, abide by diets, take exercise. Package holidays with their itineraries are designed to maximise your limited 'time capital' with things you Must Simply See and Do, and if you're going to be a good neoliberal tourist you mobilise your time accordingly. It spills over into all endeavours of life. How big your collections of whatevers are. The cramming of free time with Interesting Things. The accumulation of friends/followers/likes on social media. The number of liaisons on the trendy dating app. The good life is defined in terms of the accumulation of things and experiences, and this behaviour is a mere extension of one's habits in \"professional\" life.",
		"description": "All That Is Solid ...: After Neoliberalism",
		"time": "2016-08-25T09:29:44Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2016/08/after-neoliberalism.html?m=1"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"goldstandard",
			"macro",
			"monetary",
			"policy"
		],
		"y": 10.307217158169937,
		"x": 9.108340054145753,
		"extended": "",
		"description": "Why the Gold Standard Is the World's Worst Economic Idea, in 2 Charts - The Atlantic",
		"time": "2016-08-24T06:11:59Z",
		"href": "http://www.theatlantic.com/business/archive/2012/08/why-the-gold-standard-is-the-worlds-worst-economic-idea-in-2-charts/261552/"
	},
	{
		"cluster": 1,
		"tags": [
			"pop",
			"music",
			"theory",
			"quotation",
			"sampling",
			"maps",
			"yeahyeahyeahs",
			"history",
			"culture",
			"art"
		],
		"y": -10.47654208648361,
		"x": 2.8244245234224468,
		"extended": "",
		"description": "All Mapped Out",
		"time": "2016-08-16T09:00:17Z",
		"href": "http://popbitch.com/home/2016/08/14/all-mapped-out/"
	},
	{
		"cluster": 14,
		"tags": [
			"notifications",
			"adaptive",
			"interfaces",
			"design",
			"hci",
			"interface",
			"ux",
			"ui",
			"interfacedesign"
		],
		"y": -4.682471915207431,
		"x": 1.3183002735166574,
		"extended": "Although every user is unique, you can’t build everything for everyone, so compromises have to be made. Notifications that react intelligently rather than having dumb defaults can help provide a layer of product personalisation.",
		"description": "Designing smart notifications — Medium",
		"time": "2016-08-15T21:13:41Z",
		"href": "https://medium.com/@intercom/designing-smart-notifications-36336b9c58fb#.ynb73hu18"
	},
	{
		"cluster": 10,
		"tags": [
			"futurism",
			"diversity",
			"technology",
			"politics",
			"culture",
			"prediction",
			"bias"
		],
		"y": -0.6668012743421676,
		"x": 11.159224864769918,
		"extended": "",
		"description": "Futurism Needs More Women - The Atlantic",
		"time": "2016-08-15T21:11:12Z",
		"href": "http://www.theatlantic.com/technology/archive/2015/07/futurism-sexism-men/400097/"
	},
	{
		"cluster": 10,
		"tags": [
			"futurism",
			"politics",
			"culture",
			"ethics"
		],
		"y": -0.3716597677143223,
		"x": 10.71299314909431,
		"extended": "",
		"description": "The Absurd Moral Authority of Futurism | mathbabe",
		"time": "2016-08-15T21:03:09Z",
		"href": "https://mathbabe.org/2016/08/05/the-absurd-moral-authority-of-futurism/"
	},
	{
		"cluster": 10,
		"tags": [
			"futurism",
			"anarchism",
			"politics",
			"diversity",
			"culture",
			"transhumanism"
		],
		"y": -0.5615427523993965,
		"x": 10.875372394397312,
		"extended": "",
		"description": "Who Counts as a Futurist? Whose Future Counts? | mathbabe",
		"time": "2016-08-15T21:02:48Z",
		"href": "https://mathbabe.org/2016/08/09/who-counts-as-a-futurist-whose-future-counts/"
	},
	{
		"cluster": 1,
		"tags": [
			"games",
			"play",
			"culture",
			"pokemon",
			"Huizinga",
			"knowledge"
		],
		"y": 0.9319355849601036,
		"x": 4.250486529343042,
		"extended": "",
		"description": "The Case for Pokémon at Auschwitz – Tablet Magazine",
		"time": "2016-08-15T20:42:36Z",
		"href": "http://www.tabletmag.com/jewish-life-and-religion/209382/the-case-for-pokemon-at-auschwitz"
	},
	{
		"cluster": 13,
		"tags": [
			"polticics",
			"economics",
			"culture",
			"basicincome",
			"basicoutcome",
			"neoliberalism",
			"capitalism"
		],
		"y": 7.274901351403794,
		"x": 8.592172302810587,
		"extended": "",
		"description": "Universal Basic Income Is a Neoliberal Plot To Make You Poorer | www.furtherfield.org",
		"time": "2016-08-15T20:25:22Z",
		"href": "http://www.furtherfield.org/features/articles/universal-basic-income-neoliberal-plot-make-you-poorer"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"gentrification",
			"cosmopolitan",
			"elite",
			"globalisation"
		],
		"y": 5.741480832256898,
		"x": 11.143685949975767,
		"extended": "",
		"description": "The Myth of Cosmopolitanism - The New York Times",
		"time": "2016-08-15T20:11:41Z",
		"href": "http://www.nytimes.com/2016/07/03/opinion/sunday/the-myth-of-cosmopolitanism.html?_r=2"
	},
	{
		"cluster": 13,
		"tags": [
			"randomization",
			"choice",
			"cognitive",
			"bias",
			"psychology",
			"economics"
		],
		"y": 6.454136156792664,
		"x": 6.7219839933649705,
		"extended": "",
		"description": "Stumbling and Mumbling: On randomization",
		"time": "2016-08-15T20:07:58Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2016/08/on-randomization.html"
	},
	{
		"cluster": 1,
		"tags": [
			"aesthetics",
			"architecture",
			"culture",
			"airbnb",
			"sharingeconomy",
			"genetrification",
			"airspace",
			"space",
			"cities",
			"rightothecity"
		],
		"y": -6.9856916684756145,
		"x": 8.00170074830799,
		"extended": "",
		"description": "Welcome to AirSpace | The Verge",
		"time": "2016-08-15T20:04:49Z",
		"href": "http://www.theverge.com/2016/8/3/12325104/airbnb-aesthetic-global-minimalism-startup-gentrification"
	},
	{
		"cluster": 2,
		"tags": [
			"metal",
			"nlp",
			"language",
			"music",
			"lyrics",
			"natural",
			"processing",
			"machinelearning"
		],
		"y": -9.288782090910464,
		"x": 4.77517919653981,
		"extended": "",
		"description": "Heavy Metal and Natural Language Processing - Part 1",
		"time": "2016-08-15T18:44:08Z",
		"href": "http://www.degeneratestate.org/posts/2016/Apr/20/heavy-metal-and-natural-language-processing-part-1/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"unintendedconsequences",
			"emergence",
			"consequences",
			"technology"
		],
		"y": -7.941049369853372,
		"x": 5.933234266866621,
		"extended": "",
		"description": "Unintended Consequences — Medium",
		"time": "2016-08-15T18:16:05Z",
		"href": "https://medium.com/@prehensile/unintended-consequences-b2e23a9d0ba3#.iwry9k6m6"
	},
	{
		"cluster": 1,
		"tags": [
			"sound",
			"chriswatson",
			"art",
			"fieldrecording",
			"recording",
			"chris",
			"watson"
		],
		"y": -8.197058430461814,
		"x": 1.6106101089781364,
		"extended": "",
		"description": "Chris Watson: The Power of Sound — The Journal",
		"time": "2016-08-15T18:15:37Z",
		"href": "http://journal.beoplay.com/journal/2016/7/18/field-recording-with-chris-watson"
	},
	{
		"cluster": 8,
		"tags": [
			"listeningpost",
			"art",
			"sound",
			"internet",
			"digital",
			"installation",
			"online",
			"chat"
		],
		"y": -9.859892776103408,
		"x": 0.6547110461873911,
		"extended": "",
		"description": "Listening Post Ten Years On ← modes.io",
		"time": "2016-08-15T11:24:56Z",
		"href": "http://modes.io/listening-post-ten-years-on/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"polling",
			"economics",
			"cognitivebias",
			"bias",
			"psychology"
		],
		"y": 6.510815850326016,
		"x": 6.93273244073778,
		"extended": "",
		"description": "The importance of irrelevant alternatives | The Economist",
		"time": "2016-08-15T11:10:51Z",
		"href": "http://www.economist.com/blogs/democracyinamerica/2009/05/the_independence_of_irrelevant"
	},
	{
		"cluster": 2,
		"tags": [
			"topicmodel",
			"tv",
			"digitalhumanities",
			"narrative",
			"stories",
			"storylinedetection",
			"computerscience",
			"machinelearning",
			"work",
			"bbc",
			"atomised"
		],
		"y": -1.0017149486239958,
		"x": -4.732360754908069,
		"extended": "",
		"description": "Sapping Attention: Fundamental plot arcs, seen through multidimensional analysis of thousands of TV and movie scripts",
		"time": "2016-08-12T12:56:39Z",
		"href": "http://sappingattention.blogspot.co.uk/2014/12/fundamental-plot-arcs-seen-through.html"
	},
	{
		"cluster": 2,
		"tags": [
			"topicmodel",
			"tv",
			"digitalhumanities",
			"narrative",
			"stories",
			"storylinedetection",
			"computerscience",
			"machinelearning",
			"work",
			"bbc",
			"atomised"
		],
		"y": -1.023287296148487,
		"x": -4.538479098496502,
		"extended": "",
		"description": "Sapping Attention: Typical TV episodes: visualizing topics in screen time",
		"time": "2016-08-12T12:03:30Z",
		"href": "http://sappingattention.blogspot.co.uk/2014/12/typical-tv-episodes-visualizing-topics.html"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"literature",
			"ai",
			"technology",
			"bots",
			"poetry"
		],
		"y": -10.604251234831985,
		"x": -0.26272105106000226,
		"extended": "",
		"description": "CuratedAI",
		"time": "2016-08-08T15:27:26Z",
		"href": "http://curatedai.com/"
	},
	{
		"cluster": 3,
		"tags": [
			"film",
			"ai",
			"nlp",
			"text",
			"art",
			"criticism",
			"uncanny",
			"writing",
			"technology",
			"machinelearning",
			"culture",
			"sunspring"
		],
		"y": -11.108903180740615,
		"x": 0.9943055124949204,
		"extended": "",
		"description": "Movie written by algorithm turns out to be hilarious and intense | Ars Technica",
		"time": "2016-08-01T15:15:31Z",
		"href": "http://arstechnica.com/the-multiverse/2016/06/an-ai-wrote-this-movie-and-its-strangely-moving/"
	},
	{
		"cluster": 14,
		"tags": [
			"story",
			"model",
			"storytelling",
			"design",
			"atomised",
			"work",
			"data",
			"interaction",
			"ux",
			"narrative"
		],
		"y": 0.24451473791731174,
		"x": 1.4197508931264597,
		"extended": "",
		"description": "A Three-Part Model for Understanding Stories — Medium",
		"time": "2016-07-29T10:44:04Z",
		"href": "https://medium.com/@r4isstatic/a-three-part-model-for-understanding-stories-d0933f4d7460#.sd4h0q72d"
	},
	{
		"cluster": 14,
		"tags": [
			"story",
			"narrative",
			"news",
			"design",
			"content",
			"atomised",
			"work",
			"structure",
			"ux"
		],
		"y": 0.3351176690423841,
		"x": 1.428486152752311,
		"extended": "",
		"description": "Designing Structured Stories — Medium",
		"time": "2016-07-29T10:29:27Z",
		"href": "https://medium.com/@tristanf/designing-structured-stories-526277fe7a16#.1569u4ka1"
	},
	{
		"cluster": 14,
		"tags": [
			"news",
			"articles",
			"journalism",
			"design",
			"atomised",
			"particles",
			"work",
			"web",
			"ux"
		],
		"y": 0.4873907717029231,
		"x": 1.4040928576952132,
		"extended": "",
		"description": "The Future of News Is Not An Article | nytlabs ← Research, thoughts, and process from The New York Times R&D Lab",
		"time": "2016-07-29T10:16:35Z",
		"href": "http://nytlabs.com/blog/2015/10/20/particles/"
	},
	{
		"cluster": 2,
		"tags": [
			"quefrequency",
			"cepstrum",
			"spectral",
			"decomposition",
			"frequency",
			"time",
			"dsp",
			"signal",
			"processing",
			"speech",
			"seismology"
		],
		"y": -2.886930619419383,
		"x": 4.549570594714218,
		"extended": "",
		"description": "Thin-bed vowels and heterolithic consonants — Agile",
		"time": "2016-07-28T11:27:06Z",
		"href": "http://www.agilegeoscience.com/blog/2011/10/28/thin-bed-vowels-and-heterolithic-consonants.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mir",
			"music",
			"information",
			"retrieval",
			"scienceofpop",
			"computerscience",
			"signalprocessing",
			"signal",
			"processing",
			"machine",
			"learning",
			"machinelearning"
		],
		"y": -0.7763484063571693,
		"x": -5.686137391879148,
		"extended": "",
		"description": "A gentle Introduction to Music Information Retrieval: Making Computers Understand Music – Europeana Sounds",
		"time": "2016-07-18T09:42:59Z",
		"href": "http://www.europeanasounds.eu/news/a-gentle-introduction-to-music-information-retrieval-making-computers-understand-music"
	},
	{
		"cluster": 1,
		"tags": [
			"MIR",
			"scienceofpop",
			"music",
			"information",
			"retrieval",
			"evolution",
			"history",
			"culture",
			"pop",
			"charts",
			"learning",
			"computer",
			"science"
		],
		"y": -9.588706005636821,
		"x": 5.416287493995338,
		"extended": "",
		"description": "The evolution of popular music: USA 1960–2010",
		"time": "2016-07-18T09:40:52Z",
		"href": "http://rsos.royalsocietypublishing.org/content/2/5/150081"
	},
	{
		"cluster": 18,
		"tags": [
			"hypothesis",
			"driven",
			"development",
			"agile",
			"process",
			"bdd",
			"hdd",
			"continuous",
			"delivery",
			"experimentation",
			"software",
			"engineering"
		],
		"y": 6.741475997834656,
		"x": -4.4592888550216365,
		"extended": "",
		"description": "How to Implement Hypothesis-Driven Development | ThoughtWorks",
		"time": "2016-07-18T09:12:06Z",
		"href": "https://www.thoughtworks.com/insights/blog/how-implement-hypothesis-driven-development"
	},
	{
		"cluster": 2,
		"tags": [
			"ohmslaw",
			"electronics",
			"droppingresistor"
		],
		"y": -3.184735368169627,
		"x": 4.548282328010581,
		"extended": "",
		"description": "Dropping Resistor Calculator | GTSparkplugs",
		"time": "2016-07-12T13:18:19Z",
		"href": "http://www.gtsparkplugs.com/Dropping_Resistor_Calc.html"
	},
	{
		"cluster": 14,
		"tags": [
			"machinelearning",
			"design",
			"interaction",
			"machine",
			"learning",
			"interactivemachinelearning",
			"activelearning",
			"interface",
			"active",
			"ux"
		],
		"y": -5.233703826798087,
		"x": 1.1184381981319884,
		"extended": "",
		"description": "Power to the People: How One Unknown Group of Researchers Holds the Key to Using AI to Solve Real… — Medium",
		"time": "2016-07-11T16:12:30Z",
		"href": "https://medium.com/@atduskgreg/power-to-the-people-how-one-unknown-group-of-researchers-holds-the-key-to-using-ai-to-solve-real-cc9e75b1f334#.qixyo2375"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"myths",
			"memes",
			"folklore",
			"psychogeograpy",
			"society",
			"culture"
		],
		"y": -4.19005913234446,
		"x": 11.388152165904437,
		"extended": "",
		"description": "31. The Internet Will Destroy Us with James Burt - The Odditorium",
		"time": "2016-07-09T13:12:27Z",
		"href": "http://oddpodcast.com/portfolio/30-the-internet-will-destroy-us/"
	},
	{
		"cluster": 2,
		"tags": [
			"tsne",
			"machinelearning",
			"python",
			"dimensionalityreduction",
			"dimensionality",
			"reduction",
			"machine",
			"learning"
		],
		"y": -0.5527270325870476,
		"x": -5.61127370072665,
		"extended": "",
		"description": "oreillymedia/t-SNE-tutorial: A tutorial on the t-SNE learning algorithm",
		"time": "2016-07-07T16:20:13Z",
		"href": "https://github.com/oreillymedia/t-SNE-tutorial"
	},
	{
		"cluster": 17,
		"tags": [
			"bandits",
			"flask",
			"python",
			"library",
			"programming",
			"bandit",
			"algorithm",
			"reinforcement",
			"learning",
			"testing"
		],
		"y": 1.8734935019151058,
		"x": -5.744557018633695,
		"extended": "",
		"description": "Intro — Flask-MAB documentation",
		"time": "2016-07-05T13:45:46Z",
		"href": "http://pythonhosted.org/Flask-MAB/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"internet",
			"voices",
			"music",
			"culture"
		],
		"y": -10.151574252824217,
		"x": 2.2616007552456154,
		"extended": "",
		"description": "Listening Post: “I am” on Vimeo",
		"time": "2016-07-01T14:03:51Z",
		"href": "https://vimeo.com/3885443"
	},
	{
		"cluster": 12,
		"tags": [
			"react",
			"routing",
			"serverside",
			"clientside",
			"programming",
			"web",
			"js",
			"thickclient",
			"javascript",
			"development",
			"webdevelopment"
		],
		"y": 10.226953399195013,
		"x": -3.5534609235249115,
		"extended": "",
		"description": "Universal Routing in React with ES6",
		"time": "2016-06-28T12:55:15Z",
		"href": "https://ponyfoo.com/articles/universal-routing-react-es6"
	},
	{
		"cluster": 2,
		"tags": [
			"anxiety",
			"sociology",
			"internships",
			"socialmedia",
			"society",
			"performance",
			"performativity",
			"competition",
			"employment"
		],
		"y": -2.7426476259482686,
		"x": 11.20854145566056,
		"extended": "",
		"description": "» Digital capitalism and the imperative to be noticed The Sociological Imagination",
		"time": "2016-06-28T09:33:47Z",
		"href": "http://sociologicalimagination.org/archives/18705"
	},
	{
		"cluster": 2,
		"tags": [
			"anthropology",
			"research",
			"technology",
			"cuture",
			"intel"
		],
		"y": -9.006565058415282,
		"x": -1.0320942196669305,
		"extended": "",
		"description": "Intel’s Sharp-Eyed Social Scientist - The New York Times",
		"time": "2016-06-28T07:46:43Z",
		"href": "http://www.nytimes.com/2014/02/16/technology/intels-sharp-eyed-social-scientist.html?_r=0"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"culture",
			"brexit",
			"eu",
			"europe",
			"statistics",
			"data",
			"facts"
		],
		"y": 7.998557619945042,
		"x": 10.485482742690987,
		"extended": "",
		"description": "VersoBooks.com",
		"time": "2016-06-28T07:18:58Z",
		"href": "http://www.versobooks.com/blogs/2727-thoughts-on-the-sociology-of-brexit"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"ux",
			"algorithms",
			"data",
			"privacy",
			"models"
		],
		"y": -3.09037733274407,
		"x": 0.16189635647096676,
		"extended": "",
		"description": "Design like a Human in the Age of Algorithms | UX Magazine",
		"time": "2016-06-22T10:41:10Z",
		"href": "http://uxmag.com/articles/design-like-a-human-in-the-age-of-algorithms"
	},
	{
		"cluster": 8,
		"tags": [
			"news",
			"plurality",
			"bubble",
			"internet",
			"balance",
			"echochamber",
			"filterbubble",
			"criticism"
		],
		"y": -3.7886677834361437,
		"x": 3.501893820900365,
		"extended": "",
		"description": "All That Is Solid ...: The Echo Chamber and the Dying Press",
		"time": "2016-06-10T08:56:07Z",
		"href": "http://averypublicsociologist.blogspot.it/2016/06/the-echo-chamber-and-dying-press.html"
	},
	{
		"cluster": 17,
		"tags": [
			"karplusstrong",
			"physicalmodelling",
			"synthesis",
			"programming",
			"maxmsp",
			"max",
			"audio",
			"signalprocessing"
		],
		"y": 1.7812311137071033,
		"x": -3.7335845003372192,
		"extended": "",
		"description": "Delicious Max/MSP Tutorial 1: Karplus-Strong - YouTube",
		"time": "2016-06-09T13:42:28Z",
		"href": "https://www.youtube.com/watch?v=5RYy8Cvgkqk&feature=youtu.be"
	},
	{
		"cluster": 2,
		"tags": [
			"mfcc",
			"feature",
			"machinelearning",
			"audio",
			"signalprocessing",
			"dsp"
		],
		"y": -1.5122396956984199,
		"x": 3.111359859870266,
		"extended": "",
		"description": "Practical Cryptography",
		"time": "2016-06-03T08:06:55Z",
		"href": "http://practicalcryptography.com/miscellaneous/machine-learning/guide-mel-frequency-cepstral-coefficients-mfccs/"
	},
	{
		"cluster": 14,
		"tags": [
			"ux",
			"vr",
			"design",
			"resources",
			"list",
			"userexperience",
			"interface",
			"interaction",
			"virtualreality",
			"virtualenvironments"
		],
		"y": -5.241712812143103,
		"x": 1.2746807268838463,
		"extended": "",
		"description": "The User Experience of Virtual Reality",
		"time": "2016-06-03T07:38:20Z",
		"href": "http://www.uxofvr.com/"
	},
	{
		"cluster": 2,
		"tags": [
			"editorial",
			"news",
			"metadata",
			"algorithms",
			"ml",
			"learning"
		],
		"y": -1.8374122281713305,
		"x": 5.03146342912467,
		"extended": "",
		"description": "Using Algorithms to Understand Content - BBC R&D",
		"time": "2016-06-03T07:34:37Z",
		"href": "http://www.bbc.co.uk/rd/blog/2016/06/algorithms-understand-content"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"design",
			"persona",
			"anthropomorphism"
		],
		"y": -10.042065330314502,
		"x": 1.7292353015186468,
		"extended": "",
		"description": "Persona. Or how objects become human – We Make Money Not Art",
		"time": "2016-06-03T07:08:59Z",
		"href": "http://we-make-money-not-art.com/persona-or-how-objects-become-human/"
	},
	{
		"cluster": 14,
		"tags": [
			"pask",
			"interaction",
			"design",
			"cybernetics",
			"conversational",
			"interfaces",
			"ui",
			"work",
			"bbc"
		],
		"y": -4.898724856249367,
		"x": 1.8241696223896198,
		"extended": "",
		"description": "haque :: design + research",
		"time": "2016-06-03T07:02:38Z",
		"href": "http://www.haque.co.uk/paskianenvironments.php"
	},
	{
		"cluster": 17,
		"tags": [
			"modular",
			"eurorack",
			"synthesizer",
			"dsp",
			"programming",
			"computerscience",
			"music",
			"mutable",
			"clouds",
			"mutableinstruments"
		],
		"y": -13.512037547967013,
		"x": 0.05375851262760996,
		"extended": "",
		"description": "How to get started writing your own firmware for Mutable Instruments Clouds — Music Thing Modular Notes — Medium",
		"time": "2016-06-01T16:09:51Z",
		"href": "https://medium.com/music-thing-modular-notes/how-to-get-started-writing-your-own-firmware-for-mutable-instruments-clouds-a08173cec317#.ktvmaqjif"
	},
	{
		"cluster": 14,
		"tags": [
			"tv",
			"tellybox",
			"future",
			"design",
			"work",
			"television",
			"media"
		],
		"y": -4.143071552101509,
		"x": 6.274211697141109,
		"extended": "",
		"description": "The Future of TV | Ostmodern",
		"time": "2016-06-01T07:22:41Z",
		"href": "http://www.ostmodern.co.uk/blog/thoughts/future-tv/"
	},
	{
		"cluster": 10,
		"tags": [
			"class",
			"politics",
			"labour",
			"tristramhunt",
			"identity",
			"english"
		],
		"y": 2.6537771652848194,
		"x": 9.082513312163611,
		"extended": "",
		"description": "Labour’s Identity Crisis « LRB blog",
		"time": "2016-05-24T17:28:51Z",
		"href": "http://www.lrb.co.uk/blog/2016/05/23/dawn-foster/labours-identity-crisis/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"ltv",
			"labourtheoryofvalue",
			"marx",
			"socialism",
			"marxism"
		],
		"y": 8.767033329058671,
		"x": 11.322849121812437,
		"extended": "",
		"description": "Reconsidering the Labour Theory of Value | Unlearning Economics",
		"time": "2016-05-24T17:25:43Z",
		"href": "https://unlearningeconomics.wordpress.com/2013/07/20/reconsidering-the-labour-theory-of-value/"
	},
	{
		"cluster": 13,
		"tags": [
			"marxism",
			"labourtheoryofvalue",
			"ltv",
			"economics",
			"criticism",
			"politics"
		],
		"y": 8.796229251901261,
		"x": 11.206740630067523,
		"extended": "",
		"description": "Is the Marxian labour theory of value correct? | Though Cowards Flinch",
		"time": "2016-05-24T11:55:57Z",
		"href": "https://thoughcowardsflinch.com/2010/03/19/is-the-marxian-labour-theory-of-value-correct/"
	},
	{
		"cluster": 5,
		"tags": [
			"logic",
			"fuzzy",
			"fuzziness",
			"statistics",
			"bayesian",
			"probability",
			"mathematics"
		],
		"y": -4.843072125640921,
		"x": -4.432482993255017,
		"extended": "",
		"description": "Fuzzy Logic vs Probability | Good Math Bad Math",
		"time": "2016-05-24T11:43:36Z",
		"href": "http://goodmath.scientopia.org/2011/02/02/fuzzy-logic-vs-probability/"
	},
	{
		"cluster": 2,
		"tags": [
			"cooking",
			"food",
			"technology",
			"innovation",
			"fuzzylogic",
			"rice",
			"cooker"
		],
		"y": -3.590522060390758,
		"x": 1.4932388270989605,
		"extended": "",
		"description": "An Ode To The Rice Cooker, The Smartest Kitchen Appliance I’ve Ever Owned | FiveThirtyEight",
		"time": "2016-05-24T11:37:33Z",
		"href": "http://fivethirtyeight.com/features/an-ode-to-the-rice-cooker-the-smartest-kitchen-appliance-ive-ever-owned/"
	},
	{
		"cluster": 13,
		"tags": [
			"marxism",
			"politics",
			"economics",
			"arguments",
			"socialism"
		],
		"y": 4.055514005799155,
		"x": 11.33413969022953,
		"extended": "",
		"description": "Stumbling and Mumbling: Bad arguments against Marxism",
		"time": "2016-05-24T08:58:36Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2016/05/bad-arguments-against-marxism.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"psychology",
			"decisionmaking",
			"demandrevealingreferenda",
			"referenda",
			"demand"
		],
		"y": 7.81950306711382,
		"x": 7.674742181147501,
		"extended": "",
		"description": "Stumbling and Mumbling: Brexit: how big an issue?",
		"time": "2016-05-24T08:56:38Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2016/02/brexit-how-big-an-issue.html"
	},
	{
		"cluster": 3,
		"tags": [
			"highrise",
			"art",
			"culture",
			"architecture",
			"psychopathology",
			"film",
			"ballard",
			"criticism"
		],
		"y": -10.110175527857942,
		"x": 1.66254311084861,
		"extended": "",
		"description": "High-Rise; a very British psychopathology - Kill Screen",
		"time": "2016-05-24T08:56:03Z",
		"href": "https://killscreen.com/articles/high-rise-a-very-british-psychopathology/"
	},
	{
		"cluster": 5,
		"tags": [
			"ethics",
			"datascience",
			"machinelearning",
			"statistics",
			"culture",
			"biases",
			"politics"
		],
		"y": -0.4911249861504752,
		"x": 10.495977620422677,
		"extended": "",
		"description": "Consequences of an Insightful Algorithm",
		"time": "2016-05-23T16:04:21Z",
		"href": "http://www.slideshare.net/cczona/consequences-of-an-insightful-algorithm/114-C_C_Z_O_N"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"computerscience",
			"culture",
			"assumptions",
			"biases",
			"statistics",
			"criticism"
		],
		"y": -2.0609615648398165,
		"x": -5.592999517931787,
		"extended": "",
		"description": "A few reasons to be skeptical of machine learning - Julia Evans",
		"time": "2016-05-23T09:17:43Z",
		"href": "http://jvns.ca/blog/2016/05/19/a-few-reasons-to-be-skeptical-of-machine-learning-results/"
	},
	{
		"cluster": 5,
		"tags": [
			"surveillance",
			"privacy",
			"security",
			"statistics",
			"cognitivebiases",
			"biases",
			"psychology",
			"tech",
			"mobile",
			"search"
		],
		"y": -3.8549151704127977,
		"x": 5.667640850647371,
		"extended": "",
		"description": "Is your smartphone listening to you? - BBC News",
		"time": "2016-05-20T20:13:51Z",
		"href": "http://www.bbc.co.uk/news/technology-35639549"
	},
	{
		"cluster": 3,
		"tags": [
			"design",
			"education",
			"criticism",
			"theory",
			"culture",
			"speculation",
			"research"
		],
		"y": -6.902554822449337,
		"x": 7.372084843162332,
		"extended": "",
		"description": "Speculative and Critical Design for Designers",
		"time": "2016-05-18T08:49:46Z",
		"href": "http://blogs.arts.ac.uk/london-college-of-communication/2016/05/06/speculative-and-critical-design-for-designers/"
	},
	{
		"cluster": 10,
		"tags": [
			"bbc",
			"food",
			"business",
			"politics",
			"digial",
			"online",
			"publicspace",
			"publicservice",
			"public",
			"technology",
			"research",
			"innovation"
		],
		"y": 5.241504896131791,
		"x": 7.1367138708339795,
		"extended": "",
		"description": "Recipe for disaster — Medium",
		"time": "2016-05-17T13:28:59Z",
		"href": "https://medium.com/@lloydshep/recipe-for-disaster-24acde3f273a#.8somh8k0r"
	},
	{
		"cluster": 1,
		"tags": [
			"filters",
			"audio",
			"signalprocessing",
			"dsp",
			"maths",
			"synthesis",
			"music"
		],
		"y": -10.502824539113124,
		"x": 4.78867306564706,
		"extended": "",
		"description": "equalization - What does 'Poles' mean in relation to a filter? - Sound Design Stack Exchange",
		"time": "2016-05-16T17:06:50Z",
		"href": "http://sound.stackexchange.com/questions/24637/what-does-poles-mean-in-relation-to-a-filter"
	},
	{
		"cluster": 2,
		"tags": [
			"samples",
			"transport",
			"audio",
			"sound",
			"victorialine",
			"london",
			"fieldrecordings",
			"recordings"
		],
		"y": -6.8382020324302095,
		"x": 2.4564320745235317,
		"extended": "",
		"description": "Victoria Line Sample Set – Art on the Underground",
		"time": "2016-05-16T16:52:46Z",
		"href": "https://art.tfl.gov.uk/projects/sample-set/"
	},
	{
		"cluster": 10,
		"tags": [
			"brexit",
			"europe",
			"politics",
			"economic"
		],
		"y": 6.453297207397713,
		"x": 10.239935012669449,
		"extended": "",
		"description": "The leftwing case for Brexit (one day) | Opinion | The Guardian",
		"time": "2016-05-16T16:04:01Z",
		"href": "http://www.theguardian.com/commentisfree/2016/may/16/brexit-eu-referendum-boris-johnson-greece-tory"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"startups",
			"entrepreneurship",
			"education",
			"HE",
			"highereducation",
			"research",
			"business",
			"capitalism"
		],
		"y": 5.886948421486324,
		"x": 8.353083631882093,
		"extended": "",
		"description": "The Entrepreneurship Racket | Jacobin",
		"time": "2016-05-16T15:56:39Z",
		"href": "https://www.jacobinmag.com/2016/05/entrepreneurship-innovation-toyotism-college-startups/"
	},
	{
		"cluster": 3,
		"tags": [
			"dating",
			"relationships",
			"love",
			"firstdates",
			"politics",
			"theory",
			"society",
			"criticism",
			"affectivelabour",
			"emotionallabour",
			"feminism"
		],
		"y": 1.7438892279038891,
		"x": 12.434800361245289,
		"extended": "",
		"description": "On the Future Genealogy of the Date – blind field",
		"time": "2016-05-16T15:44:12Z",
		"href": "https://blindfieldjournal.com/2016/05/03/on-the-future-genealogy-of-the-date/"
	},
	{
		"cluster": 16,
		"tags": [
			"wallshaveeyes",
			"technology",
			"privacy",
			"iot",
			"tracking",
			"wifi",
			"data",
			"personalisation"
		],
		"y": -0.1202050180564385,
		"x": 4.613692027072646,
		"extended": "",
		"description": "Eye Spy, a Year of Tracking - BBC R&D",
		"time": "2016-05-16T15:26:14Z",
		"href": "http://www.bbc.co.uk/rd/blog/2016/04/eye-spy-a-year-of-tracking"
	},
	{
		"cluster": 2,
		"tags": [
			"news",
			"editorial",
			"journalism",
			"recommendation",
			"content",
			"discovery",
			"interaction"
		],
		"y": -2.788570785447763,
		"x": 4.533582671850908,
		"extended": "",
		"description": "Understanding Editorial Decisions - BBC R&D",
		"time": "2016-05-16T15:19:58Z",
		"href": "http://www.bbc.co.uk/rd/blog/2016/05/understanding-editorial-decisions"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"internet",
			"politics",
			"poetry",
			"twitter",
			"bots",
			"text",
			"criticism",
			"culture"
		],
		"y": -8.310200975936588,
		"x": 10.108850941761297,
		"extended": "",
		"description": "Some Strategies of Bot Poetics | Harry Giles",
		"time": "2016-05-03T15:18:34Z",
		"href": "https://harrygiles.org/2016/04/06/some-strategies-of-bot-poetics/"
	},
	{
		"cluster": 12,
		"tags": [
			"promises",
			"js",
			"web",
			"programming",
			"development",
			"es6",
			"javascript"
		],
		"y": 10.143396155012601,
		"x": -3.555238908066113,
		"extended": "",
		"description": "JavaScript Promises: There and back again - HTML5 Rocks",
		"time": "2016-05-03T14:26:04Z",
		"href": "http://www.html5rocks.com/en/tutorials/es6/promises/"
	},
	{
		"cluster": 2,
		"tags": [
			"catwigs",
			"project",
			"planning",
			"game",
			"cards",
			"bbc"
		],
		"y": -2.8689769425018206,
		"x": 4.956944906886261,
		"extended": "",
		"description": "Catwigs: A conversation with your project | PlanB",
		"time": "2016-05-03T14:13:57Z",
		"href": "https://planb.nicecupoftea.org/2014/12/13/catwigs-a-conversation-with-your-project/"
	},
	{
		"cluster": 14,
		"tags": [
			"prototyping",
			"bbc",
			"research",
			"methods",
			"design"
		],
		"y": -8.751065488290909,
		"x": -0.7915332664532496,
		"extended": "",
		"description": "MediaScape: Prototyping Techniques - BBC R&D",
		"time": "2016-05-01T09:19:12Z",
		"href": "http://www.bbc.co.uk/rd/blog/2014-09-mediascape-prototyping-techniques"
	},
	{
		"cluster": 2,
		"tags": [
			"bbc",
			"recommendations",
			"research",
			"technology",
			"iplayer",
			"tv",
			"diversification"
		],
		"y": -8.947059394503992,
		"x": -0.9064659330248664,
		"extended": "",
		"description": "Testing the Infinite Trailers experiment with our audiences - BBC R&D",
		"time": "2016-05-01T09:11:15Z",
		"href": "http://www.bbc.co.uk/rd/blog/2014-06-infinite-trailers-user-test"
	},
	{
		"cluster": 1,
		"tags": [
			"ti83",
			"firmware",
			"hack",
			"free",
			"music",
			"sequencer",
			"calculator",
			"tracker",
			"houstontracker"
		],
		"y": -9.272134204537789,
		"x": 4.389500130810695,
		"extended": "",
		"description": "HoustonTracker 2",
		"time": "2016-04-25T19:18:23Z",
		"href": "http://irrlichtproject.de/houston/"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"maps",
			"geography",
			"geoip",
			"location",
			"ip",
			"unintendedconsequences",
			"defaults",
			"design"
		],
		"y": -4.445715931144792,
		"x": 6.961347754018065,
		"extended": "",
		"description": "Internet mapping turned a remote farm into a digital hell | Fusion",
		"time": "2016-04-22T12:13:04Z",
		"href": "http://fusion.net/story/287592/internet-mapping-glitch-kansas-farm/"
	},
	{
		"cluster": 13,
		"tags": [
			"neoliberalism",
			"politics",
			"economics"
		],
		"y": 8.211475455009692,
		"x": 9.014855226872868,
		"extended": "",
		"description": "Stumbling and Mumbling: Over-estimating neoliberialism",
		"time": "2016-04-19T16:09:08Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2016/04/over-estimating-neoliberialism.html"
	},
	{
		"cluster": 13,
		"tags": [
			"neoliberalism",
			"politics",
			"economics"
		],
		"y": 8.23651615229443,
		"x": 9.016483412377102,
		"extended": "",
		"description": "Neoliberalism – the ideology at the root of all our problems | Books | The Guardian",
		"time": "2016-04-19T16:07:54Z",
		"href": "http://www.theguardian.com/books/2016/apr/15/neoliberalism-ideology-problem-george-monbiot?CMP=fb_gu"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"interesting",
			"drone",
			"catherinechristerhennix",
			"electronic",
			"instrumental"
		],
		"y": -9.669287771770238,
		"x": 4.464097321581802,
		"extended": "",
		"description": "Listen to two new releases by drone pioneer Catherine Christer Hennix - The Wire",
		"time": "2016-04-19T15:52:58Z",
		"href": "http://www.thewire.co.uk/audio/tracks/listen-to-two-new-releases-by-drone-pioneer-catherine-christer-hennix"
	},
	{
		"cluster": 3,
		"tags": [
			"musoc",
			"johncage",
			"cage",
			"sound",
			"texture",
			"timbre",
			"culture",
			"art",
			"criticism"
		],
		"y": -10.783478875170601,
		"x": 2.1329744956239938,
		"extended": "",
		"description": "Absurd Wurld: John Cage Once Again",
		"time": "2016-04-14T12:23:35Z",
		"href": "http://absurdwurld.blogspot.co.uk/2016/04/john-cage-once-again.html?m=1"
	},
	{
		"cluster": 1,
		"tags": [
			"society",
			"sociology",
			"durkeim",
			"gender",
			"trolls",
			"culture",
			"class"
		],
		"y": -3.3484128194881437,
		"x": 12.162337911923588,
		"extended": "",
		"description": "All That Is Solid ...: A Sociology of Sexist Trolling",
		"time": "2016-04-13T17:25:50Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2016/04/a-sociology-of-sexist-trolling.html?m=1"
	},
	{
		"cluster": 1,
		"tags": [
			"piano",
			"music",
			"improvisation",
			"algorithm",
			"computermusic",
			"interaction",
			"performance"
		],
		"y": -10.735985553058217,
		"x": 6.020502457908084,
		"extended": "",
		"description": "Dan Tepfer and Acoustic Informatics - YouTube",
		"time": "2016-04-12T11:36:06Z",
		"href": "https://www.youtube.com/watch?v=hahc6qG8zDs"
	},
	{
		"cluster": 1,
		"tags": [
			"improvisation",
			"interaction",
			"piano",
			"music",
			"computermusic",
			"algorithm",
			"composition",
			"affect"
		],
		"y": -10.749620957427883,
		"x": 6.036009838803689,
		"extended": "",
		"description": "Dan Tepfer - 'Acoustic Informatics' | Nextbop",
		"time": "2016-04-12T10:49:52Z",
		"href": "http://nextbop.com/blog/dantepferacousticinformatics"
	},
	{
		"cluster": 1,
		"tags": [
			"improvisation",
			"affect",
			"interaction",
			"music",
			"drumming",
			"computermusic",
			"machinelearning",
			"algorithmic",
			"composition",
			"robots",
			"drum"
		],
		"y": -10.772743548274276,
		"x": 6.059511871897892,
		"extended": "",
		"description": "Mortimer the Drumming Robot features in Royal Institution Christmas Lectures",
		"time": "2016-04-12T10:46:04Z",
		"href": "http://www.qmul.ac.uk/media/news/items/se/145445.html"
	},
	{
		"cluster": 14,
		"tags": [
			"stories",
			"narrative",
			"work",
			"interaction",
			"bbc",
			"news",
			"metadata",
			"design"
		],
		"y": -4.71371265959963,
		"x": 2.1605794099249915,
		"extended": "",
		"description": "Designing Structured Stories — Medium",
		"time": "2016-04-11T13:53:14Z",
		"href": "https://medium.com/@tristanf/designing-structured-stories-526277fe7a16#.d3bc7bzbp"
	},
	{
		"cluster": 13,
		"tags": [
			"work",
			"economics",
			"culture",
			"career",
			"life",
			"balance",
			"interruption",
			"boundarycrossing",
			"boundarymanagement"
		],
		"y": 0.8850295363871569,
		"x": 10.651574718541683,
		"extended": "",
		"description": "Why do we work so hard? | 1843",
		"time": "2016-04-11T13:43:26Z",
		"href": "https://www.1843magazine.com/features/why-do-we-work-so-hard"
	},
	{
		"cluster": 2,
		"tags": [
			"vr",
			"storytelling",
			"narrative",
			"interaction"
		],
		"y": -3.0479854403456565,
		"x": 4.583859918263063,
		"extended": "",
		"description": "The Storyteller’s Guide to the Virtual Reality Audience — Stanford d.school — Medium",
		"time": "2016-04-08T14:28:07Z",
		"href": "https://medium.com/stanford-d-school/the-storyteller-s-guide-to-the-virtual-reality-audience-19e92da57497#.ahgqz6e98"
	},
	{
		"cluster": 1,
		"tags": [
			"deanblunt",
			"music",
			"interview",
			"dean",
			"blunt",
			"race",
			"culture",
			"interesting"
		],
		"y": -9.847671646085173,
		"x": 4.535052040222155,
		"extended": "",
		"description": "Dean Blunt: 'Every Day Is A Lifetime' : Microphone Check : NPR",
		"time": "2016-04-07T08:52:40Z",
		"href": "http://www.npr.org/sections/microphonecheck/2016/04/01/472637838/dean-blunt-every-day-is-a-lifetime"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"business",
			"introduction"
		],
		"y": 0.6962259531143045,
		"x": 3.8493677965665514,
		"extended": "",
		"description": "How to approach machine learning as a non-technical person | TechCrunch",
		"time": "2016-04-07T08:41:09Z",
		"href": "http://techcrunch.com/2016/04/02/how-to-approach-machine-learning-as-a-non-technical-person/"
	},
	{
		"cluster": 10,
		"tags": [
			"london",
			"city",
			"class",
			"politics",
			"socialism",
			"geography",
			"psychogeography",
			"thecity",
			"culture"
		],
		"y": 1.7153849864302555,
		"x": 9.80731493901389,
		"extended": "",
		"description": "The London Royals | Jacobin",
		"time": "2016-04-07T08:38:07Z",
		"href": "https://www.jacobinmag.com/2016/04/class-inequality-city-of-london-england/"
	},
	{
		"cluster": 2,
		"tags": [
			"phd",
			"mobile",
			"interruption",
			"technology",
			"notification",
			"boundarycrossing"
		],
		"y": -3.8136275131680093,
		"x": 5.660863243268433,
		"extended": "",
		"description": "Why you shouldn’t let your smartphone be the boss of you | Peter Fleming | Opinion | The Guardian",
		"time": "2016-01-14T13:19:03Z",
		"href": "http://www.theguardian.com/commentisfree/2016/jan/13/smartphone-boss-of-you-burn-out-societal-malaise"
	},
	{
		"cluster": 10,
		"tags": [
			"labour",
			"politics",
			"corbyn",
			"jeremy"
		],
		"y": 6.363725247104227,
		"x": 13.458836168075807,
		"extended": "",
		"description": "'What we've achieved so far': an interview with Jeremy Corbyn | Red Pepper",
		"time": "2015-12-22T16:14:27Z",
		"href": "http://www.redpepper.org.uk/jeremy-corbyn-interview/"
	},
	{
		"cluster": 10,
		"tags": [
			"gramsci",
			"europe",
			"greece",
			"crisis",
			"politics",
			"paulmason",
			"syriza"
		],
		"y": 7.886712170568838,
		"x": 10.813869556980169,
		"extended": "",
		"description": "\"A Gramscian party in a non-Gramscian world.\" An interview with Paul Mason | openDemocracy",
		"time": "2015-12-22T11:10:19Z",
		"href": "https://opendemocracy.net/can-europe-make-it/paul-mason-alex-sakalis/gramscian-party-in-non-gramscian-world"
	},
	{
		"cluster": 1,
		"tags": [
			"hybridbeings",
			"sociology",
			"technology",
			"culture",
			"hybrid",
			"beings"
		],
		"y": -6.220862339002961,
		"x": 7.833910124442881,
		"extended": "",
		"description": "» Against ‘hybrid beings’ as a way of understanding our entanglement with digital tech The Sociological Imagination",
		"time": "2015-12-22T08:58:29Z",
		"href": "http://sociologicalimagination.org/archives/18305"
	},
	{
		"cluster": 2,
		"tags": [
			"work",
			"wages",
			"class",
			"capitalism",
			"unions",
			"tradeunionism",
			"ecomics",
			"socialism"
		],
		"y": 2.4078413274456936,
		"x": 10.539587467695082,
		"extended": "",
		"description": "The “middle class” myth: Here’s why wages are really so low today - Salon.com",
		"time": "2015-11-15T10:56:20Z",
		"href": "http://www.salon.com/2013/12/30/the_middle_class_myth_heres_why_wages_are_really_so_low_today/"
	},
	{
		"cluster": 2,
		"tags": [
			"nepomuk",
			"kde",
			"semantic",
			"desktop",
			"software",
			"phd"
		],
		"y": -2.7856314721818705,
		"x": 5.2618919692675545,
		"extended": "",
		"description": "Nepomuk - KDE UserBase Wiki",
		"time": "2015-11-10T13:16:30Z",
		"href": "https://userbase.kde.org/Nepomuk"
	},
	{
		"cluster": 13,
		"tags": [
			"sharingeconomy",
			"economy",
			"revolution",
			"capitalism",
			"politics",
			"economics",
			"culture"
		],
		"y": 7.122127689331195,
		"x": 9.323314594487897,
		"extended": "",
		"description": "Why revolution is no longer possible | openDemocracy",
		"time": "2015-11-10T12:53:28Z",
		"href": "https://www.opendemocracy.net/transformation/byung-chul-han/why-revolution-is-no-longer-possible"
	},
	{
		"cluster": 10,
		"tags": [
			"epthompson",
			"history",
			"marxism",
			"politics",
			"luddites",
			"luddism",
			"romanticism",
			"workingclass",
			"social",
			"socialhistory"
		],
		"y": 5.778559601893492,
		"x": 9.749549739043022,
		"extended": "",
		"description": "E. P. Thompson’s Romantic Marxism | Jacobin",
		"time": "2015-11-02T15:44:55Z",
		"href": "https://www.jacobinmag.com/2015/07/making-english-working-class-luddites-romanticism/"
	},
	{
		"cluster": 3,
		"tags": [
			"politics",
			"marxism",
			"theory",
			"criticism",
			"philosophy",
			"identity",
			"intersectionality"
		],
		"y": 1.9376256158668166,
		"x": 9.146455630508497,
		"extended": "",
		"description": "I am a woman and a human: a Marxist feminist critique of intersectionality theory - Eve Mitchell",
		"time": "2015-11-02T14:41:34Z",
		"href": "https://libcom.org/library/i-am-woman-human-marxist-feminist-critique-intersectionality-theory-eve-mitchell"
	},
	{
		"cluster": 16,
		"tags": [
			"android",
			"logging",
			"data",
			"phd",
			"lifelogging",
			"sensor",
			"programming",
			"mobile"
		],
		"y": 7.092010682839168,
		"x": -2.6831457995803474,
		"extended": "",
		"description": "funf | Open Sensing Framework",
		"time": "2015-11-02T12:13:27Z",
		"href": "http://funf.org/"
	},
	{
		"cluster": 7,
		"tags": [
			"agile",
			"scrum",
			"development",
			"Programming",
			"management"
		],
		"y": 7.966476826837055,
		"x": -1.4464353704513815,
		"extended": "",
		"description": "Why “Agile” and especially Scrum are terrible | Michael O. Church",
		"time": "2015-10-26T08:33:44Z",
		"href": "https://michaelochurch.wordpress.com/2015/06/06/why-agile-and-especially-scrum-are-terrible/"
	},
	{
		"cluster": 3,
		"tags": [
			"politics",
			"capitalism",
			"righttothecity",
			"urbanism",
			"development",
			"culture",
			"criticism",
			"cities",
			"westfield"
		],
		"y": -1.2418267394765015,
		"x": 11.53270214362718,
		"extended": "",
		"description": "Britain's Brezhnev-style capitalism | openDemocracy",
		"time": "2015-10-26T08:20:10Z",
		"href": "https://www.opendemocracy.net/ourkingdom/will-davies/britains-brezhnev-style-capitalism"
	},
	{
		"cluster": 1,
		"tags": [
			"sherryturkle",
			"hci",
			"computing",
			"culture",
			"phd",
			"mobile",
			"devices",
			"society",
			"conversation",
			"interaction"
		],
		"y": -3.7331463236441316,
		"x": 11.54484935919632,
		"extended": "",
		"description": "Sherry Turkle: ‘I am not anti-technology, I am pro-conversation’ | Science | The Guardian",
		"time": "2015-10-19T07:38:23Z",
		"href": "http://www.theguardian.com/science/2015/oct/18/sherry-turkle-not-anti-technology-pro-conversation?CMP=fb_gu"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"tulliabenedicta",
			"mnfn"
		],
		"y": -9.438761684888181,
		"x": 4.366535909043704,
		"extended": "",
		"description": "Tullia Benedicta - 'Anteros' by Second Language | Free Listening on SoundCloud",
		"time": "2015-10-16T13:56:45Z",
		"href": "https://soundcloud.com/second-language/sets/tullia-benedicta-anteros/s-v9ZNu"
	},
	{
		"cluster": 2,
		"tags": [
			"datascience",
			"careers",
			"ethics",
			"work"
		],
		"y": -1.9836946254423466,
		"x": 4.801096240642603,
		"extended": "",
		"description": "Guest Post: how to be a data scientist at a non-profit | mathbabe",
		"time": "2015-10-14T12:39:57Z",
		"href": "http://mathbabe.org/2015/09/30/guest-post-how-to-be-a-data-scientist-at-a-non-profit/"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"svm",
			"optimisation",
			"parameter",
			"rbf",
			"radialbasisfunction",
			"kernel",
			"scikit-learn",
			"python",
			"computerscience",
			"overfitting",
			"crossvalidation",
			"parameters"
		],
		"y": -0.0426510104390419,
		"x": -3.9140741128677283,
		"extended": "",
		"description": "RBF SVM parameters — scikit-learn 0.16.1 documentation",
		"time": "2015-10-14T12:38:53Z",
		"href": "http://scikit-learn.org/stable/auto_examples/svm/plot_rbf_parameters.html"
	},
	{
		"cluster": 2,
		"tags": [
			"svm",
			"cost",
			"overfitting",
			"machinelearning",
			"rbf",
			"kernel",
			"radialbasisfunction",
			"parameters",
			"c",
			"gamma"
		],
		"y": 0.0016083874130859313,
		"x": -3.905139484816047,
		"extended": "",
		"description": "(10) What are C and gamma with regards to a support vector machine? - Quora",
		"time": "2015-10-14T12:30:52Z",
		"href": "https://www.quora.com/What-are-C-and-gamma-with-regards-to-a-support-vector-machine"
	},
	{
		"cluster": 16,
		"tags": [
			"researchmethods",
			"digital",
			"sociology",
			"research",
			"methods",
			"quantitative",
			"qualitative",
			"technology",
			"data",
			"social",
			"science",
			"socialscience"
		],
		"y": -7.536160279494087,
		"x": -0.7898894157104485,
		"extended": "",
		"description": "(1) Report: Digital Tools for Qualitative Research | David Moats - Academia.edu",
		"time": "2015-10-14T11:55:50Z",
		"href": "https://www.academia.edu/11445802/Report_Digital_Tools_for_Qualitative_Research"
	},
	{
		"cluster": 10,
		"tags": [
			"dwyl",
			"employment",
			"passion",
			"technology",
			"culture",
			"phd",
			"lifelogging",
			"productivity",
			"boundarymanagement",
			"politics",
			"capitalism",
			"siliconvalley",
			"society"
		],
		"y": 0.7905519050109405,
		"x": 13.454795503118094,
		"extended": "",
		"description": "Forced to Love the Grind | Jacobin",
		"time": "2015-10-14T08:06:47Z",
		"href": "https://www.jacobinmag.com/2015/08/do-what-you-love-miya-tokumitsu-work-creative-passion/"
	},
	{
		"cluster": 10,
		"tags": [
			"happiness",
			"satisfaction",
			"philosophy",
			"politics",
			"stoicism",
			"badiou",
			"alainbadiou",
			"capitalism",
			"society"
		],
		"y": 3.0106471070801577,
		"x": 11.628959039732212,
		"extended": "",
		"description": "VersoBooks.com - Badiou's Happiness Lesson",
		"time": "2015-10-14T08:03:35Z",
		"href": "http://www.versobooks.com/blogs/2192-badiou-s-happiness-lesson"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"labour",
			"history",
			"gaitskill",
			"ralphmilliband",
			"milliband",
			"socialism",
			"labourism"
		],
		"y": 6.113673322425945,
		"x": 12.896782542177762,
		"extended": "There is no inherent virtue in opposition; but it is all too easy to exaggerate the virtues of office, as a thing-in-itself, independently of the real, concrete purposes office is intended to serve. ",
		"description": "VersoBooks.com - 'The perspective of tomorrow'—Ralph Miliband on 'The Sickness of Labourism' in 1960",
		"time": "2015-10-14T07:56:57Z",
		"href": "http://www.versobooks.com/blogs/2239-the-perspective-of-tomorrow-ralph-miliband-on-the-sickness-of-labourism-in-1960"
	},
	{
		"cluster": 1,
		"tags": [
			"fieldrecording",
			"sound",
			"music",
			"field",
			"recording",
			"relationality",
			"criticism",
			"affect",
			"culture",
			"lawrenceenglish"
		],
		"y": -10.024786122894515,
		"x": 3.9356862256937815,
		"extended": "",
		"description": "A Beginner’s Guide To…Field Recording",
		"time": "2015-10-14T07:40:58Z",
		"href": "http://www.factmag.com/2014/11/18/a-beginners-guide-to-field-recording/"
	},
	{
		"cluster": 10,
		"tags": [
			"security",
			"decisiontheory",
			"paranoia",
			"individuality",
			"confirmity",
			"politics",
			"culture"
		],
		"y": -0.13904778357380804,
		"x": 10.80553054864427,
		"extended": "",
		"description": "The War on the Unexpected - Schneier on Security",
		"time": "2015-10-14T07:28:02Z",
		"href": "https://www.schneier.com/blog/archives/2007/11/the_war_on_the.html"
	},
	{
		"cluster": 10,
		"tags": [
			"competition",
			"drugs",
			"business",
			"health",
			"mentalhealth",
			"depression",
			"capitalism",
			"politics"
		],
		"y": 5.937784038303621,
		"x": 8.90717934947747,
		"extended": "",
		"description": "VersoBooks.com - The Happiness Industry and Depressive-Competitive Disorder",
		"time": "2015-10-14T07:20:30Z",
		"href": "http://www.versobooks.com/blogs/2268-the-happiness-industry-and-depressive-competitive-disorder"
	},
	{
		"cluster": 13,
		"tags": [
			"demand",
			"economics",
			"politics",
			"productivity",
			"stagnation",
			"immigration"
		],
		"y": 8.487241938693652,
		"x": 8.903031326630272,
		"extended": "",
		"description": "Stumbling and Mumbling: Demand deniers",
		"time": "2015-10-07T09:51:36Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/10/demand-deniers.html"
	},
	{
		"cluster": 17,
		"tags": [
			"lda",
			"gensim",
			"topicmodel",
			"python",
			"programming",
			"machinelearning"
		],
		"y": 0.8927102876926243,
		"x": -5.100617529175887,
		"extended": "",
		"description": "Notebook",
		"time": "2015-10-05T15:10:47Z",
		"href": "http://radimrehurek.com/topic_modeling_tutorial/2%20-%20Topic%20Modeling.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"saving",
			"deflation"
		],
		"y": 8.150507005413925,
		"x": 8.015539129071504,
		"extended": "",
		"description": "Coppola Comment: The \"something for nothing\" society",
		"time": "2015-10-02T08:25:07Z",
		"href": "http://www.coppolacomment.com/2015/10/the-something-for-nothing-society.html?m=1"
	},
	{
		"cluster": 17,
		"tags": [
			"midje",
			"clojure",
			"testing",
			"functional",
			"programming"
		],
		"y": 2.274144695522235,
		"x": -6.6585623531988904,
		"extended": "",
		"description": "marick/Midje",
		"time": "2015-10-01T18:33:54Z",
		"href": "https://github.com/marick/Midje"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"style",
			"guide",
			"programming",
			"functional",
			"bestpractice"
		],
		"y": 2.2274712039940088,
		"x": -6.65721586680283,
		"extended": "",
		"description": "bbatsov/clojure-style-guide",
		"time": "2015-10-01T18:33:16Z",
		"href": "https://github.com/bbatsov/clojure-style-guide"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"phantomjs",
			"selenium",
			"testing",
			"web",
			"acceptance",
			"programming",
			"functional"
		],
		"y": 2.2623732868950133,
		"x": -6.640794251900512,
		"extended": "",
		"description": "Someone's Blog: Clojure, Selenium-WebDriver, and PhantomJS",
		"time": "2015-10-01T18:32:55Z",
		"href": "http://blog.zolotko.me/2012/12/clojure-selenium-webdriver-and-phantomjs.html"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"testing",
			"programming",
			"functional",
			"midje",
			"speclj"
		],
		"y": 2.2614666265717216,
		"x": -6.654503061630699,
		"extended": "",
		"description": "clojure - How do Midje and Speclj compare? - Stack Overflow",
		"time": "2015-10-01T18:32:34Z",
		"href": "http://stackoverflow.com/questions/12928250/how-do-midje-and-speclj-compare"
	},
	{
		"cluster": 10,
		"tags": [
			"privacy",
			"surveillance",
			"politics",
			"technology",
			"capitalism",
			"internet",
			"society",
			"advertising",
			"siliconvalley"
		],
		"y": 3.225342740082858,
		"x": 11.639149983446565,
		"extended": "",
		"description": "What Happens Next Will Amaze You",
		"time": "2015-10-01T18:25:23Z",
		"href": "http://idlewords.com/talks/what_happens_next_will_amaze_you.htm"
	},
	{
		"cluster": 10,
		"tags": [
			"corbyn",
			"socialism",
			"politics",
			"policy"
		],
		"y": 3.207642855596956,
		"x": 10.176712421348896,
		"extended": "",
		"description": "After Jeremy Corbyn’s victory – the responsibilities of the British left",
		"time": "2015-10-01T11:48:35Z",
		"href": "http://www.socialistaction.net/Britain/British-Politics/After-Jeremy-Corbyns-victory.html"
	},
	{
		"cluster": 2,
		"tags": [
			"writing",
			"blogging"
		],
		"y": -1.9693658428343663,
		"x": 5.247067285867763,
		"extended": "",
		"description": "Blogging as ‘writing without a parachute’ | The Sociological Imagination",
		"time": "2015-09-29T20:30:26Z",
		"href": "http://sociologicalimagination.org/archives/17890/comment-page-1"
	},
	{
		"cluster": 3,
		"tags": [
			"culture",
			"criticism",
			"theory",
			"jamesbond",
			"film",
			"book",
			"interesting"
		],
		"y": -1.5624540806350424,
		"x": 10.88640135691734,
		"extended": "",
		"description": "Popular geopolitics of James Bond – ‘The World is not Enough’ | rhulgeopolitics",
		"time": "2015-09-29T20:18:52Z",
		"href": "https://rhulgeopolitics.wordpress.com/2015/09/29/popular-geopolitics-of-james-bond-a-brief-update/"
	},
	{
		"cluster": 3,
		"tags": [
			"infantilisation",
			"culture",
			"criticism",
			"theory",
			"society",
			"politics",
			"childhood"
		],
		"y": -0.6215837774542521,
		"x": 12.867020855098335,
		"extended": "t is that, as has been said, for the child, play can involve bringing about new imaginative possibilities. But for the reasons outlined above, the demand cannot be then to become like children. As we can see with the phenomenon of infantilisation, all this means is that the world becomes smaller and more restricted, as we simply repeat childhood (or some reduced approximation thereof), endlessly. Rather, the interest should be in what we can learn, as adults, from the ways of seeing of children.",
		"description": "Infantilisation | Infinitely Full Of Hope",
		"time": "2015-09-29T19:52:10Z",
		"href": "https://infinitelyfullofhope.wordpress.com/2013/06/24/infantilisation/"
	},
	{
		"cluster": 18,
		"tags": [
			"engineering",
			"effectiveness",
			"productivity",
			"management",
			"programming",
			"tools",
			"organisations"
		],
		"y": 8.708182405518782,
		"x": -1.2751746118435303,
		"extended": "",
		"description": "Let a 1,000 flowers bloom. Then rip 999 of them out by the roots.",
		"time": "2015-09-29T19:25:47Z",
		"href": "http://www.gigamonkeys.com/flowers/"
	},
	{
		"cluster": 3,
		"tags": [
			"criticism",
			"culture",
			"politics",
			"identitypolitics",
			"identity",
			"feminism",
			"literature",
			"jonathanfranzen",
			"internet",
			"twitter"
		],
		"y": 1.2677016440988311,
		"x": 9.488249886951618,
		"extended": "",
		"description": "Jonathan Franzen and the Politics of Context — Medium",
		"time": "2015-09-29T16:28:12Z",
		"href": "https://medium.com/@rey_z/jonathan-franzen-and-the-politics-of-context-618a085e12e6"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"lens",
			"specter",
			"datastructure",
			"programming",
			"functional"
		],
		"y": 2.2063213854327235,
		"x": -6.663297124797785,
		"extended": "",
		"description": "Functional-navigational programming in Clojure(Script) with Specter - thoughts from the red planet - thoughts from the red planet",
		"time": "2015-09-29T09:50:32Z",
		"href": "http://nathanmarz.com/blog/functional-navigational-programming-in-clojurescript-with-sp.html"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"programming",
			"functional"
		],
		"y": 2.268035668891595,
		"x": -6.6757414676773,
		"extended": "",
		"description": "Code reuse in clojure — Medium",
		"time": "2015-09-28T20:10:47Z",
		"href": "https://medium.com/@niquola/code-reuse-in-clojure-a027ff7925b3"
	},
	{
		"cluster": 2,
		"tags": [
			"enactment",
			"sensemaking",
			"psychology",
			"organisations"
		],
		"y": -2.0905924593731915,
		"x": 4.481731999269122,
		"extended": "",
		"description": "Enactment Theory",
		"time": "2015-09-28T11:33:06Z",
		"href": "https://www.utwente.nl/cw/theorieenoverzicht/Theory%20clusters/Organizational%20Communication/enactment_theory/"
	},
	{
		"cluster": 14,
		"tags": [
			"ui",
			"ux",
			"design",
			"interaction",
			"culture",
			"context",
			"politics",
			"friction"
		],
		"y": -0.7049811497907003,
		"x": 10.107023692959407,
		"extended": "",
		"description": "NoUI, informed consent and the internet of things | Smethurst",
		"time": "2015-09-28T07:27:14Z",
		"href": "http://smethur.st/posts/176135799"
	},
	{
		"cluster": 1,
		"tags": [
			"autotune",
			"music",
			"audio",
			"soubd",
			"culture",
			"criticism",
			"society",
			"sociology",
			"humanity",
			"authenticity",
			"technology"
		],
		"y": -8.584031549334528,
		"x": 6.270489460462516,
		"extended": "",
		"description": "Human After All: Auto-tune, Technology and Human Creativity / In Depth // Drowned In Sound",
		"time": "2015-09-28T07:27:13Z",
		"href": "http://drownedinsound.com/in_depth/4149415-human-after-all--auto-tune-technology-and-human-creativity"
	},
	{
		"cluster": 13,
		"tags": [
			"righttothecity",
			"agency",
			"economics",
			"politics",
			"community",
			"systemic",
			"complexadaptivesystems",
			"geography",
			"place"
		],
		"y": 8.512744110193498,
		"x": 8.937869553544937,
		"extended": "",
		"description": "How “place” subverts two false narratives of the economy — Medium",
		"time": "2015-09-26T10:39:59Z",
		"href": "https://medium.com/@timsoerens/how-place-subverts-two-false-narratives-of-the-economy-25875add792c"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"control",
			"ideology",
			"complexadaptivesystems",
			"emergence",
			"publicopinion"
		],
		"y": 6.430313821852135,
		"x": 12.631007478030023,
		"extended": "",
		"description": "Stumbling and Mumbling: Paradoxes of control",
		"time": "2015-09-26T10:18:10Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/09/paradoxes-of-control.html"
	},
	{
		"cluster": 3,
		"tags": [
			"cities",
			"politics",
			"capitalism",
			"culture",
			"criticism",
			"gentrification",
			"righttothecity",
			"walterbenjamin",
			"walter",
			"benjamin",
			"marseille"
		],
		"y": -1.2197562853976331,
		"x": 11.674043993606485,
		"extended": "",
		"description": "In praise of dirty, sexy cities: the urban world according to Walter Benjamin | Cities | The Guardian",
		"time": "2015-09-26T10:00:38Z",
		"href": "http://www.theguardian.com/cities/2015/sep/21/walter-benjamin-marseille-moscow-cities"
	},
	{
		"cluster": 3,
		"tags": [
			"audio",
			"culture",
			"criticism",
			"aesthetics",
			"perception",
			"analysis",
			"society",
			"sound",
			"technology"
		],
		"y": -8.57363322260835,
		"x": 6.304674713146436,
		"extended": "",
		"description": "The Lossless Self – The New Inquiry",
		"time": "2015-09-26T10:00:06Z",
		"href": "http://thenewinquiry.com/essays/the-lossless-self/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"demographics",
			"secularstagnation",
			"inflation"
		],
		"y": 8.504420556867034,
		"x": 8.910506115305886,
		"extended": "",
		"description": "The world economy as we know it is about to be turned on its head - Telegraph",
		"time": "2015-09-26T09:52:56Z",
		"href": "http://www.telegraph.co.uk/finance/comment/ambroseevans_pritchard/11882915/Deflation-supercyle-is-over-as-world-runs-out-of-workers.html"
	},
	{
		"cluster": 13,
		"tags": [
			"corbyn",
			"economics",
			"innovation",
			"knowledge"
		],
		"y": 7.945817621483145,
		"x": 7.852774611702177,
		"extended": "",
		"description": "Stumbling and Mumbling: NIB: good economics, bad politics",
		"time": "2015-09-23T11:48:59Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/09/nib-good-economics-bad-politics.html"
	},
	{
		"cluster": 2,
		"tags": [
			"attention",
			"multitasking",
			"phd",
			"informationretrieval",
			"hci",
			"interaction",
			"browsing",
			"behaviour",
			"information",
			"retrieval",
			"session"
		],
		"y": 5.978171071944619,
		"x": 3.4830628231571445,
		"extended": "",
		"description": "Online, users multitask | From the Lab to the Market",
		"time": "2015-09-23T11:45:31Z",
		"href": "https://labtomarket.wordpress.com/2013/10/10/online-users-multitask/"
	},
	{
		"cluster": 14,
		"tags": [
			"development",
			"cities",
			"architecture",
			"planning",
			"urbanism",
			"economics",
			"design",
			"janejacobs",
			"righttothecity"
		],
		"y": 7.574986393080377,
		"x": 6.438796155628782,
		"extended": "",
		"description": "Tim Harford — Article — What cities tell us about the economy",
		"time": "2015-09-23T11:16:40Z",
		"href": "http://timharford.com/2015/09/what-cities-tell-us-about-the-economy/"
	},
	{
		"cluster": 2,
		"tags": [
			"productivity",
			"multitasking",
			"life",
			"behaviour",
			"technology",
			"phd",
			"psychology"
		],
		"y": -3.8578099085506303,
		"x": 6.191042816270451,
		"extended": "",
		"description": "Tim Harford — Article — Multi-tasking: how to survive in the 21st century",
		"time": "2015-09-22T14:36:23Z",
		"href": "http://timharford.com/2015/09/multi-tasking-how-to-survive-in-the-21st-century/"
	},
	{
		"cluster": 10,
		"tags": [
			"stewartlee",
			"jeremycorbyn",
			"politics",
			"culture",
			"absurd",
			"fool",
			"comedy",
			"nativeamerican"
		],
		"y": -0.1345615112299309,
		"x": 10.773580706638123,
		"extended": "",
		"description": "Jezza the jester? He’s here to satirise politics as we know it | Stewart Lee | Comment is free | The Guardian",
		"time": "2015-09-22T09:19:54Z",
		"href": "http://www.theguardian.com/commentisfree/2015/sep/20/jeremy-corbyn-court-jester-satirise-politics?CMP=Share_AndroidApp_Facebook"
	},
	{
		"cluster": 2,
		"tags": [
			"pig",
			"class",
			"society",
			"sociology",
			"ritual",
			"bonding",
			"privilege"
		],
		"y": -3.170392437835897,
		"x": 12.373203166396046,
		"extended": "",
		"description": "All That Is Solid ...: Sociology Meets Piggate",
		"time": "2015-09-22T07:31:24Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2015/09/sociology-meets-piggate.html?m=1"
	},
	{
		"cluster": 1,
		"tags": [
			"mnfn",
			"london",
			"music",
			"noise",
			"experimental",
			"gigs"
		],
		"y": -9.594948411529666,
		"x": 4.527962537959618,
		"extended": "",
		"description": "Noise/Experimental Promoters And/Or Nights In London / Music Forum // Drowned In Sound",
		"time": "2015-09-21T19:47:36Z",
		"href": "http://drownedinsound.com/community/boards/music/4306584"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"technology",
			"capitalism",
			"uber",
			"sharingeconomy",
			"evgenymorozov",
			"siliconvalley",
			"society",
			"culture"
		],
		"y": 7.312539930389826,
		"x": 11.6452321212149,
		"extended": "",
		"description": "Does Silicon Valley’s reign herald the end of social democracy? | Comment is free | The Guardian",
		"time": "2015-09-21T19:31:29Z",
		"href": "http://www.theguardian.com/commentisfree/2015/sep/20/silicon-valley-end-of-social-democracy"
	},
	{
		"cluster": 10,
		"tags": [
			"futurism",
			"culture",
			"technology",
			"change",
			"society",
			"future",
			"prediction",
			"politics"
		],
		"y": -0.40748097412927237,
		"x": 12.161682086109334,
		"extended": "",
		"description": "Tom Vanderbilt Explains Why We Could Predict Self-Driving Cars, But Not Women in the Workplace",
		"time": "2015-09-21T19:31:03Z",
		"href": "http://nautil.us/issue/28/2050/why-futurism-has-a-cultural-blindspot"
	},
	{
		"cluster": 2,
		"tags": [
			"uber",
			"business",
			"value"
		],
		"y": 1.1221771605110054,
		"x": 4.067205468845973,
		"extended": "",
		"description": "The Unicorn Bubble — Bad Words — Medium",
		"time": "2015-09-21T13:26:08Z",
		"href": "https://medium.com/bad-words/the-unicorn-bubble-or-why-you-shouldn-t-want-to-be-the-next-uber-95bb823f6ca9"
	},
	{
		"cluster": 13,
		"tags": [
			"qe",
			"economics",
			"monetary",
			"policy",
			"politics",
			"inequality",
			"quantitativeeasing",
			"monetarypolicy"
		],
		"y": 9.65418859787715,
		"x": 9.234017840048159,
		"extended": "",
		"description": "Coppola Comment: All QE is \"\"people's QE\" - just not the right people",
		"time": "2015-09-18T12:01:49Z",
		"href": "http://www.coppolacomment.com/2015/09/all-qe-is-peoples-qe-just-not-right.html"
	},
	{
		"cluster": 8,
		"tags": [
			"sharing",
			"economy",
			"sharingeconomy",
			"business",
			"community",
			"technology",
			"internet",
			"righttothenetwork"
		],
		"y": 4.990877427177943,
		"x": 4.57344548567623,
		"extended": "",
		"description": "The \"Sharing Economy\" Is Dead, And We Killed It | Fast Company | Business + Innovation",
		"time": "2015-09-18T09:17:24Z",
		"href": "http://www.fastcompany.com/3050775/the-sharing-economy-is-dead-and-we-killed-it"
	},
	{
		"cluster": 13,
		"tags": [
			"debt",
			"deficit",
			"fiscalpolicy",
			"fiscal",
			"policy",
			"politics",
			"economics",
			"marxism",
			"redistribution",
			"equality"
		],
		"y": 9.654996426995796,
		"x": 8.95811326952066,
		"extended": "",
		"description": "The National Debtors’ Prison | Jacobin",
		"time": "2015-09-18T09:15:20Z",
		"href": "https://www.jacobinmag.com/2015/09/national-debt-deficit-paul-krugman/"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"syntax",
			"programming",
			"functional",
			"reference"
		],
		"y": 2.2318347214546277,
		"x": -6.725825691297736,
		"extended": "",
		"description": "The Weird and Wonderful Characters of Clojure",
		"time": "2015-09-17T13:21:46Z",
		"href": "https://yobriefca.se/blog/2014/05/19/the-weird-and-wonderful-characters-of-clojure/"
	},
	{
		"cluster": 17,
		"tags": [
			"transducer",
			"clojure",
			"programming",
			"functional"
		],
		"y": 2.249789974427266,
		"x": -6.66883173876027,
		"extended": "",
		"description": "Transducers are fundamental",
		"time": "2015-09-17T13:20:02Z",
		"href": "http://ignaciothayer.com/post/Transducers-Are-Fundamental/"
	},
	{
		"cluster": 17,
		"tags": [
			"nil",
			"punning",
			"nilpunning",
			"maybe",
			"clojure",
			"programming"
		],
		"y": 2.364297762715782,
		"x": -6.501664528236555,
		"extended": "",
		"description": "Nil Punning (Or Null Pointers Considered Not So Bad) | LispCast",
		"time": "2015-09-17T13:07:36Z",
		"href": "http://www.lispcast.com/nil-punning"
	},
	{
		"cluster": 10,
		"tags": [
			"governance",
			"politics",
			"uber",
			"righttothecity",
			"righttothenetwork",
			"society",
			"sharingeconomy"
		],
		"y": 2.966154113421132,
		"x": 12.298510557971715,
		"extended": "",
		"description": "Is Uber's ultimate goal the privatisation of city governance? | Technology | The Guardian",
		"time": "2015-09-17T13:02:07Z",
		"href": "http://www.theguardian.com/technology/2015/sep/15/is-ubers-ultimate-goal-the-privatisation-of-city-governance"
	},
	{
		"cluster": 16,
		"tags": [
			"clojure",
			"transient",
			"concurrency",
			"data",
			"structure",
			"datastructure",
			"programming"
		],
		"y": 2.2253147707945646,
		"x": -6.711717319873457,
		"extended": "",
		"description": "Clojure - transients",
		"time": "2015-09-17T11:04:18Z",
		"href": "http://clojure.org/transients"
	},
	{
		"cluster": 16,
		"tags": [
			"clojure",
			"data",
			"structures",
			"datastructures",
			"programming",
			"reference"
		],
		"y": 1.613784513732481,
		"x": -7.14008356727352,
		"extended": "",
		"description": "Clojure - data_structures",
		"time": "2015-09-17T11:01:54Z",
		"href": "http://clojure.org/data_structures"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"record",
			"type",
			"reify",
			"programming",
			"datatypes"
		],
		"y": 2.3416604768446194,
		"x": -6.534685565008661,
		"extended": "",
		"description": "Clojure - datatypes",
		"time": "2015-09-17T10:42:26Z",
		"href": "http://clojure.org/datatypes"
	},
	{
		"cluster": 2,
		"tags": [
			"protocol",
			"clojure",
			"programing",
			"functional",
			"interface",
			"polymorphism"
		],
		"y": 2.199708405447442,
		"x": -6.524544155174014,
		"extended": "",
		"description": "Clojure - protocols",
		"time": "2015-09-17T10:35:07Z",
		"href": "http://clojure.org/protocols"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"multimethod",
			"programming",
			"polymorphism"
		],
		"y": 2.3310477672518326,
		"x": -6.554951186399778,
		"extended": "",
		"description": "Clojure - multimethods",
		"time": "2015-09-17T10:31:03Z",
		"href": "http://clojure.org/multimethods"
	},
	{
		"cluster": 18,
		"tags": [
			"routes",
			"clojure",
			"compojure",
			"design",
			"organisation",
			"programming",
			"development",
			"architecture"
		],
		"y": 6.023003343315157,
		"x": -5.569747877230694,
		"extended": "",
		"description": "Organizing Clojure and Compojure web applications — rycole.com",
		"time": "2015-09-17T10:17:07Z",
		"href": "http://rycole.com/2013/02/05/organizing-clojure-compojure.html"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"errors",
			"economics",
			"uncertainty"
		],
		"y": 8.438749027451657,
		"x": 8.974887274394463,
		"extended": "",
		"description": "Stumbling and Mumbling: Inevitable \"errors\"",
		"time": "2015-09-16T17:15:22Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/09/inevitable-errors.html"
	},
	{
		"cluster": 12,
		"tags": [
			"clojure",
			"compojure",
			"web",
			"development",
			"functional",
			"programming",
			"api",
			"rest"
		],
		"y": 10.236967559644379,
		"x": -4.654875230662039,
		"extended": "",
		"description": "A REST API in Clojure - IMHO",
		"time": "2015-09-16T16:52:13Z",
		"href": "https://blog.interlinked.org/programming/clojure_rest.html"
	},
	{
		"cluster": 10,
		"tags": [
			"history",
			"corbyn",
			"labour",
			"falklands",
			"politics",
			"sdp",
			"michaelfoot",
			"tonybenn"
		],
		"y": 6.391251403380054,
		"x": 13.554840049402763,
		"extended": "",
		"description": "The Electable Jeremy Corbyn | Jacobin",
		"time": "2015-09-15T16:35:27Z",
		"href": "https://www.jacobinmag.com/2015/09/corbyn-labour-michael-foot-blair-benn-thatcher-falklands/"
	},
	{
		"cluster": 10,
		"tags": [
			"microagressions",
			"politics",
			"culture",
			"society",
			"victimhood"
		],
		"y": 0.6845334237769058,
		"x": 12.301636615457747,
		"extended": "",
		"description": "Microaggressions and the Rise of Victimhood Culture - The Atlantic",
		"time": "2015-09-12T13:34:56Z",
		"href": "http://www.theatlantic.com/politics/archive/2015/09/the-rise-of-victimhood-culture/404794/"
	},
	{
		"cluster": 7,
		"tags": [
			"go",
			"development",
			"programming",
			"environment"
		],
		"y": 8.424227569306003,
		"x": -2.5168878421132863,
		"extended": "",
		"description": "How to Write Go Code - The Go Programming Language",
		"time": "2015-09-10T17:07:39Z",
		"href": "https://golang.org/doc/code.html"
	},
	{
		"cluster": 7,
		"tags": [
			"go",
			"development",
			"programming",
			"environment"
		],
		"y": 8.49585863579616,
		"x": -2.5211721780361227,
		"extended": "",
		"description": "Go Development Environment · coding in the rain",
		"time": "2015-09-10T17:07:27Z",
		"href": "http://ascarter.net/2014/06/30/go-development-environment.html"
	},
	{
		"cluster": 7,
		"tags": [
			"go",
			"env",
			"virtualenv",
			"programming",
			"development"
		],
		"y": 8.509864774529323,
		"x": -2.5051666102868264,
		"extended": "",
		"description": "crsmithdev/goenv",
		"time": "2015-09-10T17:07:09Z",
		"href": "https://github.com/crsmithdev/goenv"
	},
	{
		"cluster": 3,
		"tags": [
			"theory",
			"culture",
			"privilege",
			"politics",
			"queertheory",
			"queer"
		],
		"y": -0.776417802420128,
		"x": 10.692515106136659,
		"extended": "",
		"description": "Mask: On Queer Privilege",
		"time": "2015-09-09T20:14:34Z",
		"href": "http://www.maskmagazine.com/the-hacker-issue/life/on-queer-privilege"
	},
	{
		"cluster": 13,
		"tags": [
			"privilege",
			"business",
			"startups",
			"economics",
			"capitalism",
			"entrepreneurship",
			"risk"
		],
		"y": 7.114419248930553,
		"x": 7.8203448774799025,
		"extended": "",
		"description": "Entrepreneurs don’t have a special gene for risk—they come from families with money - Quartz",
		"time": "2015-09-09T16:54:51Z",
		"href": "http://qz.com/455109/entrepreneurs-dont-have-a-special-gene-for-risk-they-come-from-families-with-money/"
	},
	{
		"cluster": 10,
		"tags": [
			"gentrification",
			"culture",
			"politics",
			"society"
		],
		"y": 0.5716872527718176,
		"x": 12.197061209624923,
		"extended": "",
		"description": "COMMENT: Advice for the ethical gentrifier - Brixton Blog",
		"time": "2015-09-08T20:23:07Z",
		"href": "http://www.brixtonblog.com/comment-advice-for-the-ethical-gentrifier"
	},
	{
		"cluster": 10,
		"tags": [
			"language",
			"referendum",
			"politics",
			"linguistics"
		],
		"y": 0.14218476733769964,
		"x": 8.298287520671382,
		"extended": "",
		"description": "Language Log » In the European Union or out?",
		"time": "2015-09-08T20:21:46Z",
		"href": "http://languagelog.ldc.upenn.edu/nll/?p=21062"
	},
	{
		"cluster": 3,
		"tags": [
			"hipsters",
			"culture",
			"politics",
			"barthes",
			"semiotics",
			"mythologies",
			"criticism"
		],
		"y": -0.28549917953847803,
		"x": 10.895072906640245,
		"extended": "",
		"description": "VersoBooks.com",
		"time": "2015-09-08T20:21:45Z",
		"href": "http://ec2-184-73-161-97.compute-1.amazonaws.com/blogs/2189-sylvie-tissot-mythologies-of-the-hipster"
	},
	{
		"cluster": 3,
		"tags": [
			"politics",
			"libertarianism",
			"burningman",
			"culture",
			"siliconvalley",
			"wealth",
			"art"
		],
		"y": -0.561035393412679,
		"x": 11.05409873475127,
		"extended": "",
		"description": "Why the Rich Love Burning Man | Jacobin",
		"time": "2015-09-08T20:08:08Z",
		"href": "https://www.jacobinmag.com/2015/08/burning-man-one-percent-silicon-valley-tech/"
	},
	{
		"cluster": 7,
		"tags": [
			"fsharp",
			"icommand",
			"wpf",
			"gui",
			"development",
			"programming",
			"f#",
			"windows",
			"command"
		],
		"y": 11.722916076248255,
		"x": -1.9861854589551615,
		"extended": "",
		"description": "F#/WPF event binding - Stack Overflow",
		"time": "2015-09-01T14:57:40Z",
		"href": "http://stackoverflow.com/questions/4149198/f-wpf-event-binding"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"rails",
			"domaindrivendesign",
			"oop",
			"softwareengineering"
		],
		"y": 4.156532180174836,
		"x": -6.67976813999177,
		"extended": "",
		"description": "Domain Driven Design, Where the real value lies.",
		"time": "2015-08-28T10:43:02Z",
		"href": "http://insights.workshop14.io/2015/08/20/domain-driven-design-where-the-real-value-lies.html"
	},
	{
		"cluster": 8,
		"tags": [
			"viral",
			"negativity",
			"culture",
			"internet",
			"facebook"
		],
		"y": -4.632584670085018,
		"x": 10.673496584387005,
		"extended": "",
		"description": "The Internet's Newest Plague: The Cult of Negative Viral Content | VICE | United States",
		"time": "2015-08-27T17:13:25Z",
		"href": "http://www.vice.com/read/facebook-click-traps-and-the-cult-of-negative-virality-303"
	},
	{
		"cluster": 2,
		"tags": [
			"informationretrieval",
			"informationseeking",
			"task",
			"context",
			"hci",
			"interaction",
			"search",
			"information",
			"phd"
		],
		"y": 5.996182411496598,
		"x": 3.4924408994903486,
		"extended": "",
		"description": "Information seeking research needs extension towards tasks and technology",
		"time": "2015-08-20T12:06:25Z",
		"href": "http://www.informationr.net/ir/10-1/paper212.html"
	},
	{
		"cluster": 10,
		"tags": [
			"cities",
			"righttothecity",
			"urbanism",
			"london",
			"gentrification",
			"geography",
			"architecture",
			"politics",
			"janejacobs",
			"diversity"
		],
		"y": -1.2189560570507254,
		"x": 9.19495489359609,
		"extended": "“Mix” is an important word here. More than 50 years ago, in The Death and Life of Great American Cities, Jane Jacobs emphasised the merits of variety in city life. If a neighbourhood had a mix of homes, offices, factories, shops and nightlife, then the streets would be interesting, well used and, therefore, safe for many hours a day. More rigorous zoning might look tidy on a city map but would leave streets (and shops) unusably overcrowded at some times and deadly boring at others. Tedious and perhaps dangerous, such a neighbourhood would be fragile. Jacobs also advocated a mix of different industries so that ideas could spread from one to another. Her most famous example was Ida Rosenthal’s invention of the bra after working not in lingerie but in dressmaking.\r\n\r\nFundamental to all this, wrote Jacobs, was a mix of old and new buildings. Leaving aside unusual cases such as Venice, cities need a mix of higher-rent buildings and more decrepit low-rent buildings, because such buildings house different kinds of activity. Experimental projects, in particular, need somewhere cheap — the Silicon Valley garage, perhaps, or the east London warehouse. “Old ideas can sometimes use new buildings,” Jacobs wrote. “New ideas must use old buildings.”\r\n\r\n",
		"description": "Tim Harford — Article — London’s turning . . .",
		"time": "2015-08-18T11:16:47Z",
		"href": "http://timharford.com/2015/08/londons-turning%e2%80%89-%e2%80%89-%e2%80%89-%e2%80%89/"
	},
	{
		"cluster": 15,
		"tags": [
			"hilbertcurve",
			"geometry",
			"comuterscience",
			"algorithms",
			"mathematics"
		],
		"y": -6.287511292702649,
		"x": -2.6339717014067827,
		"extended": "",
		"description": "Hilbert Curves",
		"time": "2015-08-17T09:32:20Z",
		"href": "http://datagenetics.com/blog/march22013/index.html"
	},
	{
		"cluster": 15,
		"tags": [
			"google",
			"s2",
			"gis",
			"python",
			"mathematics",
			"computerscience",
			"datastructure",
			"hilbertcurve"
		],
		"y": -1.1978366163846033,
		"x": -11.702613255707277,
		"extended": "",
		"description": "Google’s S2, geometry on the sphere, cells and Hilbert curve | Pyevolve",
		"time": "2015-08-17T09:27:28Z",
		"href": "http://blog.christianperone.com/?p=2840"
	},
	{
		"cluster": 10,
		"tags": [
			"commune",
			"paris",
			"history",
			"socialism",
			"anarchism",
			"taylorism",
			"labour",
			"righttothecity",
			"aesthetics",
			"hacker",
			"culture",
			"divisionoflabour",
			"williammorris",
			"design",
			"craft",
			"politics",
			"society",
			"rigghttothecity",
			"education"
		],
		"y": 1.026352651672024,
		"x": 10.028823940378937,
		"extended": "The Commune is usually told as a tragic story, ending in the massacre of some thirty thousand Communards and the exile or transportation of many more. It is a way of closing off the story. But that might be a mode of narration that can also be consigned to the past. Ross: “...thinking of the Paris Commune in terms of the classic unities of tragedy risked isolating it from its conceptual and political afterlives”",
		"description": "VersoBooks.com",
		"time": "2015-08-12T08:13:44Z",
		"href": "http://www.versobooks.com/blogs/2170-the-beauty-of-the-commons-mackenzie-wark-on-communal-luxury"
	},
	{
		"cluster": 3,
		"tags": [
			"instagram",
			"politics",
			"culture",
			"taste",
			"distinction",
			"berger",
			"photography",
			"identity",
			"performativity",
			"waysofseeing",
			"gentrification",
			"criticism"
		],
		"y": 0.6907869698879893,
		"x": 11.632918111475675,
		"extended": "you might well ask what Instagram DOES for its users. If we believe the marketing team, the app is “a fast, beautiful and fun way to share your life with friends and family”, but things are rarely so straightforward when it comes to the internet of things.  \r\n‘Friends’, ‘life’ and ‘sharing’ are nebulous concepts in the social media age: ‘friends’ are sometimes people we’ve never met; ‘life’ can be a complex, coded and exhibitionist projection; and ‘to share’ our lives with our friends can sometimes mean flaunting unrepresentative facsimiles of the real thing. This is not a simple activity, nor is it always benign. ",
		"description": "Anxious on Instagram: The Socially Divisive, Sepia-Tinted Display of Cultural Assets",
		"time": "2015-08-11T15:49:29Z",
		"href": "http://www.disclaimermag.com/other-stuff/anxious-on-instagram-the-socially-divisive-sepia-tinted-display-of-cultural-assets/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"ideology",
			"labour"
		],
		"y": 6.244882334130474,
		"x": 13.079414035266366,
		"extended": "I would like to see a left that reimagines the state’s purpose to create a fairer, more fulfilling society; a party which talks about civic ideology. Labour could speak about capitalism’s limits by proposing to create and increase democratic space; that embraces a creative approach to education by ending the apartheid between state and private; that democratises culture beyond public funding of arts; that revolutionises charity structures so that we can all play a role in their goals. The left can articulate the idea of social equality: no matter what their background or market position every citizen has the ability to pursue a life that is equally fulfilling.",
		"description": "Labour Beyond Corbyn and the Need for a New Language of the Left",
		"time": "2015-08-11T15:36:54Z",
		"href": "http://www.disclaimermag.com/politics/labour-beyond-corbyn-and-the-need-for-a-new-language-of-the-left/"
	},
	{
		"cluster": 10,
		"tags": [
			"uk",
			"politics",
			"labour",
			"left",
			"corbyn",
			"leadership"
		],
		"y": 6.383359759364373,
		"x": 13.620852755775372,
		"extended": "Political analysis isn’t sports commentary. In sport, winning is an end in itself, and the tactics used to secure victory are nothing more than a technical matter. Arsenal and Chelsea don’t covet the league title for fundamentally different reasons, and there are no moral or social consequences to whether they choose to play 4-3-3 or 4-2-3-1 in pursuit of it. For a political party, on the other hand, the first questions it needs to answer are what it wants power for, and what it is prepared to do to get it. In the case of Labour, those questions now go way beyond the current leadership election, calling into doubt the very nature and future of the party itself.\r\n\r\nWhen Labour abstains on the Welfare Reform Bill - wanting to show that it accepts the current ‘bash the poor’ narrative and only seeks to quibble at the margins - that tactical decision has real-world consequences. It helps turn Victorian moralising about the ‘undeserving poor’ from a contestable point of view into a common sense that all right-thinking people buy into. This in turn sets the scene for further punitive measures down the road, making Britain a darker, more threatening place to live for those unlucky enough to have to rely on some form of social security. It pushes the hallowed ‘centre ground’ further to the right, and shrinks the space available for any genuinely progressive, humane political project.",
		"description": "A party of enemies has no future. Labour’s left and right need to go their separate ways. | openDemocracy",
		"time": "2015-08-11T09:20:30Z",
		"href": "https://opendemocracy.net/ourkingdom/david-wearing/party-of-enemies-has-no-future-labour%E2%80%99s-left-and-right-need-to-go-their-sep"
	},
	{
		"cluster": 2,
		"tags": [
			"sevensisters",
			"underground",
			"signalling",
			"london",
			"infrastructure",
			"tube",
			"rail",
			"trains"
		],
		"y": -1.7457854120526912,
		"x": 6.447608949933619,
		"extended": "",
		"description": "The Secret Life of Seven Sisters - London Reconnections",
		"time": "2015-08-10T15:41:51Z",
		"href": "http://www.londonreconnections.com/2012/the-secret-life-of-seven-sisters/"
	},
	{
		"cluster": 2,
		"tags": [
			"tube",
			"engineering",
			"london",
			"infrastructure",
			"victorialine",
			"walthamstow"
		],
		"y": -1.7347627376447865,
		"x": 6.471952862135491,
		"extended": "",
		"description": "Blue Monday: Why the Victoria Line to Walthamstow is Closed",
		"time": "2015-08-10T15:32:28Z",
		"href": "http://www.londonreconnections.com/2015/blue-monday-why-the-victoria-line-to-walthamstow-is-closed/"
	},
	{
		"cluster": 0,
		"tags": [
			"dm-crypt",
			"centos",
			"linux",
			"encryption",
			"filesystem",
			"programming",
			"operations",
			"devops",
			"sysadmin"
		],
		"y": -8.673878151835245,
		"x": 8.216435030791292,
		"extended": "",
		"description": "HowTos/EncryptedFilesystem - CentOS Wiki",
		"time": "2015-08-10T15:00:56Z",
		"href": "http://wiki.centos.org/HowTos/EncryptedFilesystem"
	},
	{
		"cluster": 7,
		"tags": [
			"spacemacs",
			"emacs",
			"configuration",
			"programming",
			"development"
		],
		"y": 8.856238819109906,
		"x": -2.973158966244576,
		"extended": "",
		"description": "Trying out Spacemacs",
		"time": "2015-08-10T11:08:40Z",
		"href": "http://dannysu.com/2014/12/14/spacemacs/"
	},
	{
		"cluster": 7,
		"tags": [
			"spacemacs",
			"emacs",
			"configuration",
			"tutorial",
			"programming",
			"development"
		],
		"y": 8.852306913807594,
		"x": -2.9900410408540283,
		"extended": "",
		"description": "Configuring Spacemacs: A Tutorial - Tristan Hume",
		"time": "2015-08-10T11:08:15Z",
		"href": "http://thume.ca/howto/2015/03/07/configuring-spacemacs-a-tutorial/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"society",
			"capitalism",
			"socialenterprise"
		],
		"y": 2.813783378311564,
		"x": 11.477154508772315,
		"extended": "",
		"description": "Exposing the false prophets of social transformation | openDemocracy",
		"time": "2015-08-10T11:01:35Z",
		"href": "https://www.opendemocracy.net/transformation/nicole-aschoff/exposing-false-prophets-of-social-transformation#.Vb9KPpvS5hp.twitter"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"leadership",
			"labour",
			"history",
			"walterbenjamin",
			"jeremycorbyn",
			"corbyn",
			"uk"
		],
		"y": 6.406545248396748,
		"x": 13.67061279982587,
		"extended": "When the gains of 1945 were being dismantled in the 1980s by a ruling class with whom Labour’s moderate leadership had always tried to compromise, the left of the party - who had always seen the rich for what they really were - were being instructed to adapt to the “new times” or face oblivion. Today, as even the modest gains of New Labour - rebuilt public services, tax credits, sure start - are stripped away by a government blatantly representing the very richest, the left are told once again to get with the programme and abstain, offer “reasoned amendments”, and try to swim with the tide. \r\n\r\nThe Labour left has always been aware that real political power begins and ends in the workplace and on the street, even if it might need to pass through parliament on the way. To secure any future gains of the labour movement against the kind of destruction that is happening today, the forces that would reverse them need to be dealt with permanently. This requires much more than a few principled MPs and cabinet members; it requires massive popular education, organisation and action. Can Andy Burnham or Yvette Cooper inspire anything approaching that? Do they even want to? It is not youthful or ageing idealism but a determined, long-term strategic mindset which is animating Corbyn’s campaign, and reanimating an idea that many in the party thought was dead and buried.  ",
		"description": "Who’s afraid of Jeremy Corbyn? | openDemocracy",
		"time": "2015-08-10T10:49:38Z",
		"href": "https://www.opendemocracy.net/ourkingdom/rory-scothorne/who%E2%80%99s-afraid-of-jeremy-corbyn"
	},
	{
		"cluster": 2,
		"tags": [
			"london",
			"tubes",
			"psychogeography",
			"underground"
		],
		"y": -1.9306884933176636,
		"x": 6.215731465947472,
		"extended": "In the late 90s I again asked mum about her time as a station worker. I was getting to grips with the city through adult eyes, was falling in love with its mysteries and hidden byways. The gas towers along the canals were more beautiful than any tourist-destination architecture, the spriggan sliding from brickwork in the disused arches of Parkland Walk gripped my imagination hard, and the dead stations of the tube were begging to be explored. I hunted down out-of-print books of tube lore, traumatic urban sightings, weird short fiction charting the city’s psychosis.\r\n\r\nIt’s a bit like those sci-fi films you watch, mum said. You enter at point A and appear at point B, but while you travel you’re not here, in the city, but you’re travelling through another space. Things work differently there. It’s not empty space either.",
		"description": "New Lexicons: Tunnels",
		"time": "2015-08-09T21:36:05Z",
		"href": "http://newlexicons.blogspot.co.uk/2015/08/tunnels.html"
	},
	{
		"cluster": 2,
		"tags": [
			"technology",
			"lightning",
			"military",
			"navigation",
			"science",
			"crazy"
		],
		"y": -6.004299981503262,
		"x": 7.6398286845657735,
		"extended": "Something akin to a strobe light begins pulsing atop a small camp of unmarked military vehicles parked far outside a desert city known for its insurgent activities. These flashes gradual lengthen, both temporally and physically, lasting longer and stretching upward into the sky; the clouds above are beginning to thicken, grumbling with quiet rolls of thunder. \r\n\r\nThen the lightning strikes begin—but they're unlike any natural lightning you've ever seen. They're more like pops of static electricity—a pulsing halo or toroidal crown of light centered on the caravan of trucks below—and they seem carefully timed.\r\n\r\nTo defensive spotters watching them through binoculars in the city, it's obvious what this means: there must be a team of soldiers underground somewhere, using artificial sferics to navigate. They must be pushing forward relentlessly through the sewers and smuggling tunnels, crawling around the roots of buildings and maneuvering through the mazework of infrastructure that constitutes the city's underside, locating themselves by way of these rhythmic flashes of false lightning.\r\n\r\nOf course, this equipment would eventually be de-militarized and handed down to the civilian sector, in which case you can imagine four friends leaving REI on a Friday afternoon after work with an artificial lightning generator split between them; no larger than a camp stove, it would eventually be set up with their other weekend caving equipment, used to help navigate through deep, stream-slick caves an hour and a half outside town, beneath tall mountains where GPS can't always be trusted. \r\n\r\nOr, perhaps fifty years from now, salvage teams are sent deep into the flooded cities of the eastern seaboard to look for and retrieve valuable industrial equipment. They install an artificial lightning unit on the salt-bleached roof of a crumbling Brooklyn warehouse before heading off in a small armada of marsh boats, looking for entrances to old maintenance facilities whose basement storage rooms might have survived rapid sea-level rise.\r\n\r\nDisappearing down into these lost rooms—like explorers of Egyptian tombs—they are guided by bolts of artificial lightning that spark upward above the ruins, reflected by tides.",
		"description": "BLDGBLOG: Subterranean Lightning Brigade",
		"time": "2015-08-09T21:30:21Z",
		"href": "http://bldgblog.blogspot.co.uk/2015/08/subterranean-lightning-brigade.html"
	},
	{
		"cluster": 1,
		"tags": [
			"dubka",
			"synth",
			"modular",
			"music",
			"electronic"
		],
		"y": -9.813512858210244,
		"x": 4.171330511983044,
		"extended": "",
		"description": "Dubka - Stage Tour - YouTube",
		"time": "2015-08-07T10:06:01Z",
		"href": "https://www.youtube.com/watch?v=6E-9EN1u6EY"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"power",
			"decentralisation",
			"righttothecity"
		],
		"y": 5.804239587093592,
		"x": 10.694809399157666,
		"extended": "",
		"description": "Liz Kendall and the meanings of empowerment | Though Cowards Flinch",
		"time": "2015-08-07T07:15:36Z",
		"href": "http://thoughcowardsflinch.com/2015/08/06/liz-kendall-and-the-meanings-of-empowement/"
	},
	{
		"cluster": 10,
		"tags": [
			"corbyn",
			"labour",
			"democracy",
			"politics",
			"society",
			"speculation",
			"occupy"
		],
		"y": 6.020916832415594,
		"x": 13.603625018446756,
		"extended": "As the newspaper columnists woke up to what was happening, they reached for easy historical parallels. Among the most popular was the Militant tendency, the Trotskyite group whose entryist tactics saw them expelled from the Labour party in the 1980s.\r\n\r\nThe comparison reflects a failure to understand how the world had changed in the intervening decades. A takeover might be under way, but it was of an entirely different kind.\r\n\r\nMilitant was a party-within-a-party, a Marxist sect with an ideological leader, hierarchical, disciplined in its tactics, wedded to its own ‘correct analysis’. It belonged to another era, an era in which you met someone who told you a totally different story of how the world worked to anything you’d ever heard, gave you a newspaper and invited you to a meeting. An era in which almost the only way to develop and sustain a critique of the society in which you had grown up was to adhere to an alternative orthodoxy, a support group of people who schooled you in a different way of making sense of the world.\r\n\r\nThis mode of politicisation belonged to an era in which Google and Wikipedia were unimaginable. You had no way of checking or filtering the information and analysis on offer from your new friends, little chance of exploring and developing it. The experience resembled joining an evangelical sect.\r\n\r\nThe survivors of these sects may have got excited by the Corbyn surge, but the character of the surge was quite different: it resembled the waves of networked disruption that first broke into view in the events of 2011. This was not a stealthy entryist takeover, years in the planning, it was a spontaneous movement to Occupy the Labour party, a suggestion taken up with an energy that took everyone by surprise. Such networks are like a mood in action, a rolling conversation that gathers momentum and brings the boundaries of possibility into question.\r\n\r\n",
		"description": "Labour through the looking glass: 15 early-morning speculations on the Corbyn surge | Dougald Hine",
		"time": "2015-08-06T13:11:19Z",
		"href": "http://dougald.nu/labour-through-the-looking-glass-15-early-morning-speculations-on-the-corbyn-surge/"
	},
	{
		"cluster": 10,
		"tags": [
			"davidharvey",
			"capitalism",
			"growth",
			"politics",
			"society"
		],
		"y": 2.8211614334904787,
		"x": 11.412895512087374,
		"extended": "",
		"description": "Interview with David Harvey | Novara Media",
		"time": "2015-08-06T11:01:49Z",
		"href": "http://novaramedia.com/2014/04/interview-with-david-harvey/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"video",
			"davidharvey",
			"capitalism",
			"crisis",
			"socialism",
			"society",
			"future"
		],
		"y": 2.826378363192066,
		"x": 11.184128106596864,
		"extended": "",
		"description": "HARDtalk Marxist David Harvey Academic Geographer New York - YouTube",
		"time": "2015-08-06T10:26:05Z",
		"href": "https://www.youtube.com/watch?v=UkWvx1QQ76c&feature=share&app=desktop"
	},
	{
		"cluster": 10,
		"tags": [
			"care",
			"government",
			"politics",
			"society",
			"managerialism",
			"outsourcing"
		],
		"y": 2.410888572785966,
		"x": 13.442737302771473,
		"extended": "",
		"description": "Outsourcing reality (part I) | Though Cowards Flinch",
		"time": "2015-08-05T15:23:31Z",
		"href": "http://thoughcowardsflinch.com/2015/08/05/outsourcing-reality-part-i/"
	},
	{
		"cluster": 8,
		"tags": [
			"culture",
			"sexism",
			"internet",
			"fedora",
			"tehmenz",
			"fashion"
		],
		"y": -4.139985284484764,
		"x": 11.243323485625991,
		"extended": "The problem is that the fedora has become a go-to accessory for a peculiar subculture of love-entitled male nerds whose social inexperience and awkwardness manifests in a world rocked by a gender revolution—a tectonic shift in the makeup of formerly cloistered, rule-bound clubs. They aren't bad people – they simply need a place from which to draw a sense of manhood, if not from women. When deciding how to represent themselves in a dating profile, why wouldn’t they cling to a fashion emblem from a bygone age, a time when guy was just a guy and a doll was just a doll? A fashion which recalls Frank Sinatra and Al Capone, a conventional masculinity marked by elegant detachment and an appeal to women that remains decidedly independent of their approval?",
		"description": "Why the fedora grosses out geekdom - Boing Boing",
		"time": "2015-08-05T14:31:32Z",
		"href": "http://boingboing.net/2012/10/02/why-the-fedora-grosses-out-gee.html"
	},
	{
		"cluster": 16,
		"tags": [
			"ai",
			"bigdata",
			"machinelearning",
			"technology",
			"politics",
			"privacy",
			"data"
		],
		"y": 4.078133027580922,
		"x": 6.5269954248969455,
		"extended": "At the moment, Artificial Intuition is just you and the Cloud doing a little dance with a few simple algorithms. But everyone’s dance with the Cloud will shortly be happening together in a cosmic cyber ballroom, and everyone’s data stream will be communicating with everyone else’s and they’ll be talking about you: what did you buy today? What did you drink, ingest, excrete, inhale, view, unfriend, read, lean towards, reject, talk to, smile at, get nostalgic about, get angry about, link to, like or get off on? Tie these quotidian data hits within the longer time framework matrices of Wonkr, Believr, Grindr, Tinder et al, and suddenly you as a person, and you as a group of people, become something that’s humblingly easy to predict, please, anticipate, forecast and replicate. Tie this new machine intelligence realm in with some smart 3D graphics that have captured your body metrics and likeness, and a few years down the road you become sort of beside the point. There will, at some point, be a dematerialised, duplicate you. While this seems sort of horrifying in a Stepford Wife-y kind of way, the difference is that instead of killing you, your replicant meta-entity, your synthetic doppelgänger will merely try to convince you to buy a piqué-knit polo shirt in tones flattering to your skin at Abercrombie & Fitch",
		"description": "We are data: the future of machine intelligence - FT.com",
		"time": "2015-08-05T12:21:29Z",
		"href": "http://www.ft.com/cms/s/2/475789b8-2b2b-11e5-acfb-cbd2e1c81cca.html"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"siliconvalley",
			"technology",
			"bullshit",
			"economics",
			"internet"
		],
		"y": 7.404198616916435,
		"x": 10.948336437777098,
		"extended": "As George Packer wrote in the New Yorker, the apps that supposedly \"change the world\" don't really affect anyone except for the wealthy young men who design them:\r\n\r\n\"San Francisco is a place where we can go downstairs and get in an Uber and go to dinner at a place that I got a restaurant reservation for halfway there,\" [startup founder Dave Morin] said. \"And, if not, we could go to my place, and on the way there I could order takeout food from my favorite restaurant on Postmates, and a bike messenger will go and pick it up for me. We'll watch it happen on the phone. These things are crazy ideas.\"\r\n\r\nIt suddenly occurred to me that the hottest tech start-ups are solving all the problems of being twenty years old, with cash on hand, because that's who thinks them up.\r\nServices like Washio act like handmaids to wealthy young elites; Washio even hands you a nice warm cookie when they come to pick up your laundry, since you'll be missing your blankie while it's in spin cycle.\r\n\r\nAnd this is the way it is with many Silicon Valley startups. The services are designed to nurture the needs of those who can afford to use them. \r\n\r\nUber, the multibillion-dollar on-demand ride service, is largely eating away the taxi-cab business by providing a more convenient, boutique service. It's another middleman between independent contractors and customers. It is not meant to supplant public transit, because public transit is a utility created by municipal governments to serve those who can't afford private cab services to begin with.",
		"description": "One Tweet Shows What Silicon Valley Really Thinks of the People It's Crushing",
		"time": "2015-08-05T12:20:46Z",
		"href": "http://mic.com/articles/123311/silicon-valley-white-male-privilege-class-war"
	},
	{
		"cluster": 10,
		"tags": [
			"labour",
			"politics",
			"alexandreou",
			"leadership",
			"democracy",
			"socliasm"
		],
		"y": 6.348171241994288,
		"x": 13.549824057236089,
		"extended": "“You voted for the Greens at the Euro elections”, accuses one. Yes, I did so specifically and publicly for the first time in my life, because I felt that Labour had drifted too much to the right. I now see an opportunity to reclaim my place in the party. Hundreds of thousands see the same to a sufficient extent to part with money – even if only three quid. I note that, when I campaigned vocally for my local Labour candidate in May, nobody asked me to show them a membership card. Anyone can join, it seems, as long as they toe the line. If you don’t, it doesn’t matter if you’ve been a Labour voter all your life, the “worthy” will find a way to discredit you as disloyal to the party.\r\n\r\nThis is why Labour lost the last election. And why it will probably lose the next one and the one after that. Because it sees anyone not voting for it as either cruel or stupid, anyone critical of its policies as disloyal, and feels absolutely entitled to electoral success. The Pasokification of the party will continue apace unless it understands that this is not so.",
		"description": "On Labour being taken over by Lefties | openDemocracy",
		"time": "2015-08-05T12:18:04Z",
		"href": "https://www.opendemocracy.net/ourkingdom/alex-andreou/on-labour-being-taken-over-by-lefties"
	},
	{
		"cluster": 13,
		"tags": [
			"greece",
			"europe",
			"politics",
			"economics",
			"varoufakis",
			"interview"
		],
		"y": 8.14644324839281,
		"x": 10.427314377647381,
		"extended": "",
		"description": "Greek tragedy: Former finance minister Yanis Varoufakis on Greece’s economic crisis | The Monthly",
		"time": "2015-08-05T12:17:03Z",
		"href": "https://www.themonthly.com.au/issue/2015/august/1438351200/christos-tsiolkas/greek-tragedy"
	},
	{
		"cluster": 10,
		"tags": [
			"time",
			"management",
			"work",
			"politics",
			"culture",
			"society"
		],
		"y": 1.1401071373521956,
		"x": 11.986324107869065,
		"extended": "",
		"description": "Go tell the boss: let me work less and I’ll produce more | Life and style | The Guardian",
		"time": "2015-08-05T12:16:48Z",
		"href": "http://www.theguardian.com/lifeandstyle/2015/jul/31/work-less-produce-more?CMP=fb_gu"
	},
	{
		"cluster": 10,
		"tags": [
			"leadership",
			"management",
			"culture",
			"demagogue",
			"politics",
			"managerialism"
		],
		"y": 0.4008902851282471,
		"x": 9.132441953885593,
		"extended": "So what gives? What happened to this generation of leaders?\r\n\r\nThere is something very different about many of today’s so-called leaders. And it is not merely that we, or they, are the helpless victims of “late capitalism”, or any other number of modish buzzwords, for, like every kind of buzzword, that sophomoric grad-school 101 level non-explanation does not illuminate much at all, except perhaps our own outmoded beliefs.\r\n\r\nIt is that they are demagogues. Let’s review what “demagogue” actually means. Here’s a decent definition:\r\n\r\n“a person, especially an orator or political leader, who gains power and popularity by arousing the emotions, passions, and prejudices of the people.”",
		"description": "The End of Leadership — On Leadership — Medium",
		"time": "2015-08-05T12:16:01Z",
		"href": "https://medium.com/on-life-and-leadership/the-rise-of-the-demagogues-e56a3f0b6a3c"
	},
	{
		"cluster": 10,
		"tags": [
			"labour",
			"politics",
			"leadership",
			"management"
		],
		"y": 6.3075994122950965,
		"x": 13.433278486197425,
		"extended": "Here we come to the fifth why. Building an alliance of ethnic, ideological and demographic radicalisms is much harder than building an alliance of two historic classes. Where it works, you often find a mesmeric leader whose entire life is spent camouflaging or mediating the conflicts of interest. And it draws on cultural moments during which the diverse elements of the coalition can sink their differences – like Euro 96 or the last big Oxi demonstration in Greece.\r\n\r\nModern radical parties are built around a cause, a vision, an aura. All parts of modern Labour are struggling to define what their cause and vision is, and the aura is non-existent.",
		"description": "How the man from Toyota’s ‘Five Whys’ could help the Labour party | Comment is free | The Guardian",
		"time": "2015-08-05T12:15:16Z",
		"href": "http://www.theguardian.com/commentisfree/2015/jul/26/how-man-from-toyotas-five-whys-could-help-labour-party"
	},
	{
		"cluster": 10,
		"tags": [
			"marxism",
			"socialism",
			"politics",
			"philosophy",
			"reading",
			"download",
			"resources",
			"sociology",
			"society"
		],
		"y": 3.604698271760136,
		"x": 11.489176655804744,
		"extended": "",
		"description": "Open source Marxism: Free PDFs from Historical Materialism, Verso, and Jacobin | The Charnel-House",
		"time": "2015-08-05T10:58:44Z",
		"href": "http://thecharnelhouse.org/2015/08/04/open-source-marxism-free-pdfs-from-historical-materialism-verso-and-jacobin/"
	},
	{
		"cluster": 7,
		"tags": [
			"emacs",
			"vim",
			"editor",
			"programming",
			"development",
			"text"
		],
		"y": 9.008812870426308,
		"x": -2.413666841491103,
		"extended": "",
		"description": "Emacs as my <Leader>: Vim Survival Guide - bling on software development",
		"time": "2015-08-05T08:33:20Z",
		"href": "http://bling.github.io/blog/2013/10/27/emacs-as-my-leader-vim-survival-guide/"
	},
	{
		"cluster": 10,
		"tags": [
			"space",
			"geography",
			"politics",
			"publicspace",
			"public",
			"righttothecity",
			"cities",
			"urbanism"
		],
		"y": -1.2322265740512732,
		"x": 9.123775956565934,
		"extended": "",
		"description": "The privatisation of cities' public spaces is escalating. It is time to take a stand | Cities | The Guardian",
		"time": "2015-08-04T10:08:43Z",
		"href": "http://www.theguardian.com/cities/2015/aug/04/pops-privately-owned-public-space-cities-direct-action?CMP=share_btn_tw"
	},
	{
		"cluster": 13,
		"tags": [
			"corbyn",
			"housing",
			"politics",
			"economics",
			"london",
			"labour"
		],
		"y": 6.7759042965853435,
		"x": 13.239959107555418,
		"extended": "",
		"description": "Jeremy Corbyn MP on Housing | Red Brick",
		"time": "2015-08-04T08:34:35Z",
		"href": "https://redbrickblog.wordpress.com/2015/08/04/jeremy-corbyn-mp-on-housing/"
	},
	{
		"cluster": 7,
		"tags": [
			"com",
			"windows",
			"programming",
			"development",
			".new",
			"c#",
			"f#"
		],
		"y": 11.444588552517919,
		"x": -2.0180179267092213,
		"extended": "",
		"description": "Using Obscure Windows COM APIs in .NET",
		"time": "2015-08-04T08:03:25Z",
		"href": "http://www.moserware.com/2009/04/using-obscure-windows-com-apis-in-net.html"
	},
	{
		"cluster": 7,
		"tags": [
			"windows",
			"com",
			"programming",
			"c++",
			"c#",
			"f#",
			"development"
		],
		"y": 11.435737017940367,
		"x": -2.0183900525311733,
		"extended": "",
		"description": "Finally Understanding COM After Changing a Light Bulb",
		"time": "2015-08-04T07:58:16Z",
		"href": "http://www.moserware.com/2008/01/finally-understanding-com-after.html"
	},
	{
		"cluster": 7,
		"tags": [
			"fsharp",
			"accessibility",
			"COM",
			"windows",
			"accessibleobjectfromevent",
			"pinvoke",
			"programming",
			"development",
			"desktop"
		],
		"y": 11.512141566510376,
		"x": -2.0071939482059236,
		"extended": "",
		"description": "Walkthrough: Embedding Types from Managed Assemblies (C# and Visual Basic)",
		"time": "2015-08-03T13:55:43Z",
		"href": "https://msdn.microsoft.com/en-us/library/dd409610.aspx?cs-save-lang=1&cs-lang=csharp#code-snippet-1"
	},
	{
		"cluster": 7,
		"tags": [
			"fsharp",
			"accessibility",
			"COM",
			"windows",
			"accessibleobjectfromevent",
			"pinvoke",
			"programming",
			"development",
			"desktop"
		],
		"y": 11.48226182878225,
		"x": -2.0102969660946806,
		"extended": "",
		"description": "c# - How to access a document's HTML in Firefox using IAccessible - Stack Overflow",
		"time": "2015-08-03T13:55:36Z",
		"href": "http://stackoverflow.com/questions/542395/how-to-access-a-documents-html-in-firefox-using-iaccessible"
	},
	{
		"cluster": 8,
		"tags": [
			"history",
			"internet",
			"empire",
			"politics",
			"dns",
			"technology"
		],
		"y": 5.693359796326301,
		"x": 6.869921702468564,
		"extended": "The undersea cables and satellite dishes which carry today’s bits and bytes still trace the old ship routes of national empires. In similar fashion, the expropriation and occlusion of .io mirrors the murky colonial history of the British Indian Ocean Territory. The network is neither good, nor bad, and never neutral; instead, the repetition of national politics in virtual space reminds us that our digital lives take place in the context of history and society, subject to the same powers and pressures as our physical lives. The network can be occupied, controlled, forbidden and attacked in just the same way as any other territory. But unlike other territories, its nature is to reveal its workings to the curious enquirer, to state its nature, and make itself amenable to investigation and change. What was not visible is written down, if we understand how to read it. By following the network, it’s possible to illuminate other narratives of history and politics, ones which have not been seen and told so clearly before, and may point the way to other futures.",
		"description": "The story of .io | Citizen Ex",
		"time": "2015-07-31T12:44:48Z",
		"href": "http://citizen-ex.com/stories/io"
	},
	{
		"cluster": 13,
		"tags": [
			"corbyn",
			"labour",
			"economics",
			"investment",
			"productivity",
			"qe",
			"politics"
		],
		"y": 6.948121972551658,
		"x": 13.339119542928504,
		"extended": "",
		"description": "Stumbling and Mumbling: On Corbynomics",
		"time": "2015-07-30T13:57:23Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/07/on-corbynomics.html"
	},
	{
		"cluster": 10,
		"tags": [
			"greece",
			"socialism",
			"politics",
			"europe",
			"corbyn",
			"labour",
			"leadership"
		],
		"y": 6.380998612707692,
		"x": 13.59346604334982,
		"extended": "And what of the centrist voters we hear so much about? Where are the millions, that the rest of the candidates claim to be able to speak directly to and attract, joining the Labour Party in droves to ensure they get elected? They're nowhere. Because they are the cynical fiction of an establishment who wants us to always enter the polling booth with no real choice - despondent, apathetic, disdainful. \r\nAll this shows a profound lack of understanding about how the political landscape is shaped by all parties, not just the one governing. See how UKIP have defined the European debate. Observe how a young SNP MPs speech can go viral. A vigorous opposition that articulates a clear alternative, can be infinitely more useful that an \"electable\" one that rolls over on every issue. An effective opposition is an integral part of our democracy and has been sadly absent. We need someone to drag the landscape to the left or, at least, halt its inexorable Thatcherite slide to the right. ",
		"description": "Corbyn, Tsipras, Maggie and TINA",
		"time": "2015-07-30T10:11:03Z",
		"href": "https://www.byline.com/column/11/article/209"
	},
	{
		"cluster": 17,
		"tags": [
			"testing",
			"functional",
			"programming",
			"scala",
			"mocks",
			"architecture",
			"design"
		],
		"y": 2.6747150961018096,
		"x": -7.426593142560492,
		"extended": "",
		"description": "Testing without mocking in Scala - Engineering at Monsanto",
		"time": "2015-07-30T08:35:08Z",
		"href": "http://engineering.monsanto.com/2015/07/28/avoiding-mocks/"
	},
	{
		"cluster": 0,
		"tags": [
			"nodejs",
			"centos",
			"node",
			"linux",
			"sysadmin",
			"operations",
			"deployment"
		],
		"y": -8.686765673804343,
		"x": 8.193414914478701,
		"extended": "",
		"description": "How To Install Node.js on a CentOS 7 server | DigitalOcean",
		"time": "2015-07-29T20:06:34Z",
		"href": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-a-centos-7-server"
	},
	{
		"cluster": 0,
		"tags": [
			"centos",
			"nodejs",
			"systemd",
			"deployment",
			"operations",
			"linux",
			"sysadmin"
		],
		"y": -8.686765791976635,
		"x": 8.19341495874628,
		"extended": "",
		"description": "How To Deploy Node.js Applications Using Systemd and Nginx | DigitalOcean",
		"time": "2015-07-29T20:05:33Z",
		"href": "https://www.digitalocean.com/community/tutorials/how-to-deploy-node-js-applications-using-systemd-and-nginx"
	},
	{
		"cluster": 13,
		"tags": [
			"inequality",
			"politics",
			"economics"
		],
		"y": 8.536270273382442,
		"x": 9.195336367970203,
		"extended": "",
		"description": "So What Can We Do About Inequality? | Institute for New Economic Thinking",
		"time": "2015-07-29T13:39:42Z",
		"href": "http://ineteconomics.org/ideas-papers/blog/so-what-can-we-do-about-inequality"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"manufacturing",
			"uk"
		],
		"y": 8.045017521973053,
		"x": 7.853789130752565,
		"extended": "",
		"description": "Investors Chronicle - Yes, manufacturing matters",
		"time": "2015-07-29T13:28:59Z",
		"href": "http://www.investorschronicle.co.uk/2015/07/28/comment/chris-dillow/yes-manufacturing-matters-KOtyoysH5C7arEy6no5FaN/article.html"
	},
	{
		"cluster": 2,
		"tags": [
			"walthamstow",
			"history",
			"local",
			"london"
		],
		"y": -1.7641699276676848,
		"x": 6.520899958715081,
		"extended": "",
		"description": "the blue plaques | Queens Boundary Community",
		"time": "2015-07-29T13:26:41Z",
		"href": "https://queensboundary.wordpress.com/local-history/the-blue-plaques/"
	},
	{
		"cluster": 10,
		"tags": [
			"gentrification",
			"london",
			"politics",
			"geography",
			"tottenham",
			"markfieldpark",
			"life"
		],
		"y": 4.933909275503498,
		"x": 12.012523922187073,
		"extended": "The problem is, I love London, I really do. I love my London, at least - how could it ever be one stable thing? But the London I love is a London inefficient, weird, overgrown, ripe for development, a place whose creases are being ironed out. This is a common argument, a point made many times before. What else is there to say? I’ve thought of leaving and I’ve thought of staying and so far I am still here.\r\n\r\nWhat helps is that there are places that still surprise me. That’s a real joy of the city. Not new places, but new to me, and they will always be new to someone.",
		"description": "New Lexicons: Markfield Park and the Politics of Existence",
		"time": "2015-07-29T13:17:57Z",
		"href": "http://newlexicons.blogspot.co.uk/2015/07/markfield-park-and-politics-of-existence.html"
	},
	{
		"cluster": 2,
		"tags": [
			"walking",
			"england",
			"geography",
			"dungeness",
			"seaside"
		],
		"y": -2.5044881047318186,
		"x": 5.223706209493973,
		"extended": "",
		"description": "New Lexicons: Dungeness Defeat",
		"time": "2015-07-29T13:14:08Z",
		"href": "http://newlexicons.blogspot.co.uk/2015/03/dungeness-defeat.html"
	},
	{
		"cluster": 7,
		"tags": [
			"notifyicon",
			"wpf",
			"windows",
			"fsharp",
			"programming",
			"development",
			"userinterface",
			"ui"
		],
		"y": 11.711416407266414,
		"x": -1.989598015780222,
		"extended": "",
		"description": "WPF NotifyIcon - CodeProject",
		"time": "2015-07-29T12:40:06Z",
		"href": "http://www.codeproject.com/Articles/36468/WPF-NotifyIcon#wpfapi"
	},
	{
		"cluster": 13,
		"tags": [
			"capital",
			"politics",
			"economics",
			"investment",
			"innovation"
		],
		"y": 8.652112218544646,
		"x": 9.393032560169317,
		"extended": "The point is we have moved a long way. Capital no longer takes risk. Real enterprise is all too often found in the voluntary sector. It is the state who has to fund much innovation because business prefers financial speculation. And despite this we are told it is markets that are our salvation and too many people believe that is true. I have to wonder why this belief continues and keep concluding that it is only the power or propaganda that sustains the argument when the evidence suggests that a cooperative model of engagement within the broader economy can deliver so much more for us all.",
		"description": "Tax Research UK » The power of capital well used",
		"time": "2015-07-29T11:36:49Z",
		"href": "http://www.taxresearch.org.uk/Blog/2015/07/29/the-power-of-capital-well-used/"
	},
	{
		"cluster": 7,
		"tags": [
			"fsharp",
			"pinvoke",
			"native",
			"interop",
			"pointer",
			"programming",
			"development",
			"windows"
		],
		"y": 11.494680613445954,
		"x": -2.0098522078143115,
		"extended": "Dereferencing a double pointer is done the same way a dereference to any other structure is done: Marshal.PtrToStructure.  PtrToStructure is used to transform a native pointer, in the form of an IntPtr, into a managed version of the native data structure the native pointer points to.",
		"description": "Dereference a double IntPtr - jaredpar's WebLog - Site Home - MSDN Blogs",
		"time": "2015-07-28T09:37:52Z",
		"href": "http://blogs.msdn.com/b/jaredpar/archive/2008/11/05/dereference-a-double-intptr.aspx"
	},
	{
		"cluster": 14,
		"tags": [
			"ux",
			"testing",
			"decisiontheory",
			"interaction",
			"design",
			"download",
			"app",
			"mobile",
			"web"
		],
		"y": -4.573895432985001,
		"x": 1.0715425215047791,
		"extended": "Despite our intuition that we should remove the interstitial, we prefer to let data guide our decisions, so we set out to learn how the interstitial affected our users. Our analysis found that:\r\n9% of the visits to our interstitial page resulted in the ‘Get App’ button being pressed. (Note that some percentage of these users already have the app installed or may never follow through with the app store download.)\r\n69% of the visits abandoned our page. These users neither went to the app store nor continued to our mobile website.",
		"description": "Official Google Webmaster Central Blog: Google+: A case study on App Download Interstitials",
		"time": "2015-07-28T09:16:11Z",
		"href": "http://googlewebmastercentral.blogspot.co.uk/2015/07/google-case-study-on-app-download-interstitials.html?m=1"
	},
	{
		"cluster": 10,
		"tags": [
			"millenials",
			"politics",
			"socialism",
			"intersectionality"
		],
		"y": 2.543954582864665,
		"x": 9.50279087484675,
		"extended": "The emerging forms of Leftism within the Millennial generation are far removed from the highly romanticized brand of Communism that occupied prior generations. The Soviet system has been six-feet deep for going on two decades.  The Cold War bogeyman of the past has given way to new forms of fabricated “evils” like “Islamic extremists,” “border-crossing drug cartels” and “terrorists.”  For these reasons, “Socialism” is no longer a scary word.  And the total absence of Left-wing politics in the United States is a void that is screaming to be filled.  This need – and opportune time – has created a healthy combination of traditional and new political philosophies, including everything from Anarchism, Syndicalism, and participatory economics to a revival of Marxism and radical labor movements.\r\n\r\nTheir attributes, along with the era in which they have been placed, make Millennials the most promising generation for radical change and Left unity in American history.",
		"description": "Emerging Forms of Leftism in the Millennial Generation",
		"time": "2015-07-27T20:15:14Z",
		"href": "http://www.thenorthstar.info/?p=12361"
	},
	{
		"cluster": 10,
		"tags": [
			"corbyn",
			"labour",
			"leadership",
			"socialism",
			"politics"
		],
		"y": 6.321687957690419,
		"x": 13.540211554086314,
		"extended": " the concerted demonisation of left-wing politics has continued unabated. By the time of the 2015 general election campaign, we had reached the stage at which a TV audience and, more damningly, various high-profile Tories, were happy to applaud a politically illiterate pop singer for describing Ed Miliband as ‘a fucking Communist’. Never mind that Ed Miliband, like Tony Blair before him, is a politician demonstrably more right-wing than Edward Heath; the idea that parties might drift this way or that is far too complicated for this sort of idiot rhetoric, and anyway it doesn’t fit the tribal narrative.",
		"description": "The s-word | Guts of a Beggar",
		"time": "2015-07-27T19:46:38Z",
		"href": "https://gutsofabeggar.wordpress.com/2015/07/27/the-s-word/"
	},
	{
		"cluster": 14,
		"tags": [
			"ux",
			"design",
			"process",
			"product",
			"interaction"
		],
		"y": -5.353065432276353,
		"x": 1.2746969130355952,
		"extended": "",
		"description": "The User Experience of Creative Sprints | Info | The Guardian",
		"time": "2015-07-27T17:55:41Z",
		"href": "https://www.theguardian.com/info/developer-blog/2015/jul/27/the-user-experience-of-creative-sprints"
	},
	{
		"cluster": 7,
		"tags": [
			"OnStartup",
			"Startup",
			"f#",
			"wpf",
			"xaml",
			"fsharp",
			"programming",
			"windows",
			"gui",
			"development",
			"fsxaml"
		],
		"y": 11.752171813344125,
		"x": -1.9770466400938826,
		"extended": "",
		"description": "Creating a WPF application in F# (a more complete solution) | My Memory",
		"time": "2015-07-27T14:05:13Z",
		"href": "http://putridparrot.com/blog/creating-a-wpf-application-in-f-a-more-complete-solution/"
	},
	{
		"cluster": 10,
		"tags": [
			"corbyn",
			"labour",
			"leadership",
			"politics"
		],
		"y": 6.357792086520737,
		"x": 13.50739726283482,
		"extended": "There is nothing \"aspirational\" about spending a hundred billion on nukes or having the taxpayer subsidise private train operators, energy companies and landlords. While there are areas where much of the public disagrees with Corbyn, most notably on Britain getting rid of its monarchy and becoming a republic, more and more people are realising that this Labour-lefty is the only politician offering solutions to the biggest challenges of our time: low pay, high bills and not much of a future for young people. Corbyn might win the leadership and never become Prime Minister, but if he prevails this September it will be the beginning of a realignment in English politics. The old guard of New Labour, meanwhile, has never looked more out of touch with the public.",
		"description": "Jeremy Corbyn Is the Only Labour Leader Candidate at the Centre of British Politics | VICE | United Kingdom",
		"time": "2015-07-27T13:30:00Z",
		"href": "http://www.vice.com/en_uk/read/jeremy-corbyn-is-at-britains-political-centre-893"
	},
	{
		"cluster": 10,
		"tags": [
			"labour",
			"politics",
			"corbyn",
			"leadership"
		],
		"y": 6.361678019779667,
		"x": 13.508261756594896,
		"extended": "There is no way to triangulate out of the electoral impasse that faces Labour: in order to build a convincing narrative, either it must reject the (broadly speaking neo-liberal) premises that have constituted the political consensus since the 1990s, or it must embrace them and follow them to their logical right-of-centre conclusions in an attempt to outperform the Conservatives on their own terrain. At present, there are only two candidates offering to do these things – Jeremy Corbyn and Liz Kendall – and, if electability was all one cared about, there is ample reason to believe that only Corbyn and Kendall could win for Labour in 2020.\r\n\r\n",
		"description": "There are two ways out of the wilderness for Labour: Jeremy Corbyn or Liz Kendall",
		"time": "2015-07-27T10:19:56Z",
		"href": "http://www.newstatesman.com/politics/2015/07/there-are-two-ways-out-wilderness-labour-jeremy-corbyn-or-liz-kendall"
	},
	{
		"cluster": 10,
		"tags": [
			"corbyn",
			"labour",
			"leadership",
			"politics",
			"overtonwindow",
			"policy",
			"socialism"
		],
		"y": 6.3144862374037425,
		"x": 13.594889050028371,
		"extended": "It doesn’t matter that Corbyn’s record is one of democratic socialism (remember that?). It doesn’t matter that there are trends in his favour. It doesn’t matter that his economic policies are comparatively bold and redistributive. It doesn’t even matter that many of Corbyn’s policies are popular. One line of Blair’s intervention was widely cited: “I wouldn’t want to win on an old fashioned leftist platform”. Few completed the quote: “…even if it was the route to victory“. This is not political argument, nor even Machiavellian electoral planning, but the tantrum-jitters of the self-appointed aristocracy. Having passed out lectures on loyalty and collective responsibility on Monday during the second reading of the Welfare Bill, the dauphins were by Thursday pre-declaring a coup should Corbyn win and practically spitting on their own activists besides. They saw no contradiction. Labour’s experts advocate not political communication but political manipulation, impersonating the enemy to take their place in our collective consciousness.\r\n\r\n",
		"description": "The Corbyn Effect | The Disorder Of Things",
		"time": "2015-07-27T10:17:32Z",
		"href": "http://thedisorderofthings.com/2015/07/24/the-corbyn-effect/"
	},
	{
		"cluster": 13,
		"tags": [
			"uber",
			"sharingeconomy",
			"economics",
			"politics",
			"technology"
		],
		"y": 7.424902208135147,
		"x": 11.478664943380469,
		"extended": "Does this suggest a shift towards a textbook market economy? Granted, Uber, Airbnb, Etsy and TaskRabbit are quite different from organisations such as Apple, BP or Sainsbury’s. Because you aren’t actually renting a space from Airbnb, taking a ride in a car owned by Uber or buying a product made by Etsy. The platform simply connects you with a provider of space, a driver of a vehicle or a seller who runs a virtual shop.\n\nBut these platforms are by no means merely the purveyors of Smith’s invisible hand. Rather, the hand they play in facilitating exchange is decidedly visible. Uber, not individual drivers, sets prices. Airbnb trains its hosts to be better providers of hospitality. Etsy facilitates seller community building. All of them provide user-generated feedback systems, creating a high-quality consumer experience. Much like an organisation building a brand might.\n\n",
		"description": "The ‘gig economy’ is coming. What will it mean for work? | Arun Sundararajan | Comment is free | The Guardian",
		"time": "2015-07-27T07:43:47Z",
		"href": "http://www.theguardian.com/commentisfree/2015/jul/26/will-we-get-by-gig-economy"
	},
	{
		"cluster": 10,
		"tags": [
			"capitalism",
			"culture",
			"politics",
			"community",
			"modernity",
			"activism"
		],
		"y": 0.21088536696161242,
		"x": 10.872013176017111,
		"extended": "or Giddens, modern capitalist society fosters a deep sense of anxiety, “free-floating” over time away from specific objects to be feared (p.44), and thus developing into a permanent lack of well-being, but driven by material changes in the way people have to live their lives, such as undervalued employment (cf. Richard Sennett’s “spectre of uselessness”) and now, in an instant feedback age which had not begun when Giddens was making his analysis, the seemingly constant need for validation of the self through Facebook ‘likes’ etc..\n\nIn turn, Giddens (and Sennett) suggests this leads to a turn away from the ‘traditional’ politics of the 20th century, and towards a ‘life politics’ focused on individual identity and activities which facilitate self-actualization.\n\nFor someone like me, involved for quite a long time in various forms of political and community activity – the landfill campaign above is just one of many things I’ve been invovlved in – this kind of analysis ring true, and increasingly so.  The challenges to getting people involved increase year on year, and while declining to get involve is often expressed in terms of just being busy with life (itself a consequence of capitalist modernity), it’s also increasingly, in my experience, expressed in terms of negativity to the whole concept of participation in activities beyond self-actualization [5].\n\n",
		"description": "What’s wrong with people? | Though Cowards Flinch",
		"time": "2015-07-27T07:30:53Z",
		"href": "http://thoughcowardsflinch.com/2015/07/26/whats-wrong-with-people/"
	},
	{
		"cluster": 1,
		"tags": [
			"psychogeography",
			"london",
			"geography",
			"culture",
			"britain",
			"stories",
			"history",
			"art",
			"literature"
		],
		"y": -2.0472579046480353,
		"x": 8.020962832530126,
		"extended": "",
		"description": "Landscape Punk to Supermarket Car Parks: Unofficial Britain Live in Stoke Newington | Unofficial Britain.",
		"time": "2015-07-26T11:41:42Z",
		"href": "http://www.unofficialbritain.com/landscape-punk-to-supermarket-car-parks-unofficial-britain-live-in-stoke-newington/"
	},
	{
		"cluster": 10,
		"tags": [
			"europe",
			"history",
			"politics",
			"capitalism"
		],
		"y": 6.35968777454037,
		"x": 9.816242887239214,
		"extended": "The radical sector of the right seems to have recently discovered Philosophy of History. They're more or less the basest of Fukuyama's readers, the kind that only know his name and the title of his book, and believe that along with said \"end of history\" comes what they call \"realism\". As if that was a wall against which we inevitably collide when we abandon the path of \"austerity\" and defy the TINA. A new law of gravity, if you will.\r\n",
		"description": "TwitLonger — When you talk too much for Twitter",
		"time": "2015-07-26T09:53:29Z",
		"href": "http://www.twitlonger.com/show/n_1sn55ig?new_post=true"
	},
	{
		"cluster": 13,
		"tags": [
			"uber",
			"technology",
			"politics",
			"economics",
			"innovation",
			"sharingeconomy"
		],
		"y": 7.483782523290837,
		"x": 11.478303443788205,
		"extended": "It’s surely possible to separate these two issues, to promote the use of new technology without prejudicing the interests of workers. But progressives need to work on doing that, and not let themselves get painted as enemies of innovation.\r\n\r\n",
		"description": "Uber and the New Liberal Consensus - The New York Times",
		"time": "2015-07-26T09:46:58Z",
		"href": "http://krugman.blogs.nytimes.com/2015/07/25/uber-and-the-new-liberal-consensus/?module=BlogPost-Title&version=Blog%20Main&contentCollection=Opinion&action=Click&pgtype=Blogs&region=Body"
	},
	{
		"cluster": 2,
		"tags": [
			"vagrant",
			"nfs",
			"bindfs",
			"performance",
			"permissions"
		],
		"y": 0.38523890503502967,
		"x": 2.9588124401416747,
		"extended": "",
		"description": "gael-ian/vagrant-bindfs",
		"time": "2015-07-24T14:48:02Z",
		"href": "https://github.com/gael-ian/vagrant-bindfs"
	},
	{
		"cluster": 11,
		"tags": [
			"vagrant",
			"development",
			"rails",
			"performance",
			"osx",
			"nfs"
		],
		"y": 0.4433520439179531,
		"x": 2.914590554227379,
		"extended": "",
		"description": "Stefan Wrobel - How to make Vagrant performance not suck",
		"time": "2015-07-24T14:47:46Z",
		"href": "https://stefanwrobel.com/how-to-make-vagrant-performance-not-suck"
	},
	{
		"cluster": 14,
		"tags": [
			"spotify",
			"design",
			"music",
			"web",
			"recommendations",
			"synergy",
			"interaction",
			"discovery",
			"informationretrieval",
			"hci"
		],
		"y": -8.201225180197754,
		"x": 5.452545135267966,
		"extended": "“For describing the way we do things at Spotify, ‘human vs algorithm’ doesn’t even make sense anymore,” said Ogle.\r\n\r\n“Discover Weekly is humans all the way down; we can only create a truly personalised playlist every Monday morning for 75 million people because we have so many music lovers on the service already, soundtracking their lives in ways we can learn from and build atop. Our algorithms stand on the shoulders of (human) giants.”\r\n\r\nDiscover Weekly also relies to some extent on some of the behaviours those humans have learned while using Spotify. The playlist refreshes every Monday, meaning they’ll need to save tracks to their collection or other playlists so they don’t forget them.\r\n\r\nIn a recent talk at The Great Escape, Spotify’s Will Hope said this process of “harvesting” playlists has become common on the service, and Ogle agreed.\r\n\r\n“Playlists are really the native format on Spotify; our users already know how to play, skim, offline, or save them,” he said. “That’s the aspect of Discover Weekly I’m most excited about — the approach to personalisation is totally new, but there’s no new mental model or UI to learn. I think people will know what to do.”",
		"description": "Spotify debuts Discover Weekly personalised ‘mixtape’ playlist",
		"time": "2015-07-24T14:08:38Z",
		"href": "http://musically.com/2015/07/20/spotify-discover-weekly-personalised-mixtape-playlist/"
	},
	{
		"cluster": 10,
		"tags": [
			"haroldwilson",
			"primeminister",
			"history",
			"conspiracy",
			"politics",
			"uk",
			"plot",
			"spies",
			"corruption"
		],
		"y": 4.476973559322485,
		"x": 11.255952370597074,
		"extended": "",
		"description": "The Plot Against Harold Wilson, BBC 2006 - YouTube",
		"time": "2015-07-23T20:42:03Z",
		"href": "https://www.youtube.com/watch?v=y6v1VxB5Lss"
	},
	{
		"cluster": 17,
		"tags": [
			"gibbssampler",
			"gibbs",
			"sampler",
			"probabilistic",
			"programming",
			"bayes",
			"functional"
		],
		"y": 1.9062189968251595,
		"x": -6.871396984086734,
		"extended": "",
		"description": "A functional Gibbs sampler in Scala | Darren Wilkinson's research blog",
		"time": "2015-07-23T15:37:47Z",
		"href": "https://darrenjw.wordpress.com/2013/10/04/a-functional-gibbs-sampler-in-scala/"
	},
	{
		"cluster": 13,
		"tags": [
			"minimumwage",
			"policy",
			"evidence",
			"economics",
			"wages",
			"politics",
			"theory"
		],
		"y": 10.294169943276225,
		"x": 9.524992789532043,
		"extended": "",
		"description": "mainly macro: Raising the minimum wage",
		"time": "2015-07-23T10:08:59Z",
		"href": "http://mainlymacro.blogspot.co.uk/2015/07/raising-minimum-wage.html"
	},
	{
		"cluster": 10,
		"tags": [
			"labour",
			"politics",
			"policy",
			"leadership",
			"election"
		],
		"y": 6.298342917724329,
		"x": 13.395970743841561,
		"extended": "In the end, all three non-Corbyn candidates are in a no-win situation, as long as they are campaigning as ‘future prime ministers’.  They’ll struggle to get elected by Labour peopole as leader if they aren’t seen to be oppositional enough, but they know any such oppositionalism ties their hands so much that they’ll struggle to become PM when the whole country votes.\r\n\r\nThere is, though, one way to cut through this Gordian knot.  It is to declare, as Corbyn has quietly done, that they’re not seeking – at least as this stage – to be elected by Labour leader as a future PM, but are trying to be elected as leader of the Labour official opposition.\r\n\r\nFrom there, they need to move quickly to define what official opposition is when there is majority government. While the constitution has it that Labour has to be called the opposition, in everyday use Labour should avoid it.  The phrase that should become the mantra is ‘holding the government to account’.   There is need hardly ever to say what Labour would have done had it been in power – the government’job is to govern, and Labour’s job is to assess the impact of that governing on citizens.   Inevitably, the impact is going to be awful.  All Labour has to do at parliamentary level is keep on asking how awful it is.**\r\n\r\nLabour doesn’t need to come up with alternatives. Does anyone remember what the Conservatives say they’d do in government in the 2005-2009 period?  (Clue: almost nothing).\r\n\r\nThis is what many opposition leaders in local government up and down the country get used to (I know, I’ve been one), in the knowledge that they won’t be running the council  any time soon, and they serve a perfectly useful function in scrutiny of what is being delivered by those actually in power.",
		"description": "Cutting Labour’s Gordian knot | Though Cowards Flinch",
		"time": "2015-07-21T16:51:24Z",
		"href": "http://thoughcowardsflinch.com/2015/07/21/cutting-labours-gordian-knot/"
	},
	{
		"cluster": 10,
		"tags": [
			"corbyn",
			"labour",
			"socialism",
			"blairism",
			"politics"
		],
		"y": 6.255060087130247,
		"x": 13.493753640970363,
		"extended": "To understand the politics of Liz Kendall we need to recall that there were two characteristic attributes of Blairism; which was only partly a distinct social agenda of boosting social capital while embracing the private sector; because it was also an electoral strategy predicated upon triangulating around the concerns of swing voters in marginal constituencies. This resulted in an inherent conservatism that militated against the radical solutions necessary to address the concerns of working class voters. Clearly, not only Kendall, but also Cooper and Burnham have drunk from this flask.\r\n\r\nIt is important to understand that these two aspects of Blairism could work against each other; and therefore that the current seeming abandonment of the policy agenda of Blairism by the right wing in the party is itself an attribute of the electoral strategy of Blairism, which is calibrated to exploiting minor differences with the Tories, and cannot cope with the paradigm shift created by the financial crisis, and Tory austerity. Blairism is no longer fit for purpose, even in its own terms.",
		"description": "British democracy requires a Corbyn victory | Left Futures",
		"time": "2015-07-21T15:20:02Z",
		"href": "http://www.leftfutures.org/2015/07/british-democracy-requires-a-corbyn-victory/"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"fun",
			"happiness",
			"utopia",
			"swift",
			"dickens",
			"orwell",
			"morris",
			"newsfromnowhere",
			"heaven",
			"culture",
			"politics"
		],
		"y": 1.2775333744469703,
		"x": 10.518998196928163,
		"extended": "The inability of mankind to imagine happiness except in the form of relief, either from effort or pain, presents Socialists with a serious problem. Dickens can describe a poverty-stricken family tucking into a roast goose, and can make them appear happy; on the other hand, the inhabitants of perfect universes seem to have no spontaneous gaiety and are usually somewhat repulsive into the bargain. But clearly we are not aiming at the kind of world Dickens described, nor, probably, at any world he was capable of imagining. The Socialist objective is not a society where everything comes right in the end, because kind old gentlemen give away turkeys. What are we aiming at, if not a society in which ‘charity’ would be unnecessary? We want a world where Scrooge, with his dividends, and Tiny Tim, with his tuberculous leg, would both be unthinkable. But does that mean we are aiming at some painless, effortless Utopia? At the risk of saying something which the editors of Tribune may not endorse, I suggest that the real objective of Socialism is not happiness. Happiness hitherto has been a by-product, and for all we know it may always remain so. The real objective of Socialism is human brotherhood. This is widely felt to be the case, though it is not usually said, or not said loudly enough. Men use up their lives in heart-breaking political struggles, or get themselves killed in civil wars, or tortured in the secret prisons of the Gestapo, not in order to establish some central-heated, air-conditioned, strip-lighted Paradise, but because they want a world in which human beings love one another instead of swindling and murdering one another. And they want that world as a first step. Where they go from there is not so certain, and the attempt to foresee it in detail merely confuses the issue.",
		"description": "George Orwell: Why Socialists Don't Believe In Fun",
		"time": "2015-07-21T12:07:36Z",
		"href": "http://orwell.ru/library/articles/socialists/english/e_fun"
	},
	{
		"cluster": 13,
		"tags": [
			"scheduling",
			"labour",
			"work",
			"life",
			"marxism",
			"politics",
			"economics",
			"socialism",
			"time"
		],
		"y": 4.194360767734565,
		"x": 11.524441664926796,
		"extended": "Clearly, the labor market is out of balance, as some workers are working too much and others too little. The fight for schedule control should also be a fight to redistribute work hours and shorten the average workweek. This would help spread labor around more evenly, and should allow more space for workers to determine their shifts.",
		"description": "Time Is Political | Jacobin",
		"time": "2015-07-21T11:58:07Z",
		"href": "https://www.jacobinmag.com/2015/07/luce-eight-hour-day-obama-overtime/"
	},
	{
		"cluster": 13,
		"tags": [
			"copyright",
			"patents",
			"economics",
			"politics",
			"innovation",
			"intellectualproperty",
			"alchemy",
			"ideas"
		],
		"y": 8.606197166334416,
		"x": 9.039265820223573,
		"extended": "“The alchemist fallacy” is the belief that once a simple method is found for turning lead into gold, gold will continue to be precious. We don’t have to rely on economic theory to refute this conclusion, because we have a fascinating case study of a close parallel.",
		"description": "Tim Harford — Article — It’s tough turning ideas into gold",
		"time": "2015-07-21T11:14:05Z",
		"href": "http://timharford.com/2015/07/its-tough-turning-ideas-into-gold/"
	},
	{
		"cluster": 13,
		"tags": [
			"labour",
			"politics",
			"welfare",
			"economics",
			"austerity"
		],
		"y": 9.105297151316545,
		"x": 10.299844637866824,
		"extended": "This electoral strategy of moving the party to the right by abandoning its core values seems doomed to failure. Unless the plan is to outdo the Conservatives in dismantling the welfare state, Labour will always be seen as ‘soft on welfare’ by the electorate. Even if they voted with the government on every single deficit reduction measure, the Conservatives will still argue that Labour’s claims to be competent at running the economy are not credible, and use the unchallenged assertion that Labour caused austerity as evidence. In addition, following the Conservatives to the right is potentially suicidal because it takes for granted that those on the left will continue to vote for them.",
		"description": "mainly macro: When Labour lost its soul, and the next election",
		"time": "2015-07-21T08:26:21Z",
		"href": "http://mainlymacro.blogspot.co.uk/2015/07/when-labour-lost-its-soul-and-next.html"
	},
	{
		"cluster": 13,
		"tags": [
			"capital",
			"economics",
			"capitalism",
			"paulmason",
			"postcapitalism",
			"sharingeconomy",
			"labour",
			"wages",
			"politics",
			"employment"
		],
		"y": 9.25178856190545,
		"x": 10.837718040177293,
		"extended": "there’s no evidence that info tech is “hugely diminish[ing] the amount of work needed.” Sure, wages and benefits stink, but that’s about politics and class power, not because of the latest generation of Intel chips or something fresh out of the latest TechCrunch Disrupt.",
		"description": "Workers Aren’t Disappearing | Jacobin",
		"time": "2015-07-21T07:37:13Z",
		"href": "https://www.jacobinmag.com/2015/07/mason-guardian-capitalism-new-economy-post-work/"
	},
	{
		"cluster": 1,
		"tags": [
			"kitsch",
			"aesthetics",
			"art",
			"culture",
			"technology",
			"neuralnets",
			"deeplearning",
			"machinelearning",
			"deepdream"
		],
		"y": -11.704262958379031,
		"x": 0.7308487398438479,
		"extended": " I don't think we should stop at puppyslug (and its involved intermediary layers), but training a separate neural network turns out to be more technically difficult for most artists. I believe applying machine learning in content synthesis is a wide open frontier in computational creativity, so let's please do what we can to save this emerging aesthetic from its puppyslug typecast.",
		"description": "Deepdream: Avoiding Kitsch – jtnimoy",
		"time": "2015-07-21T07:34:33Z",
		"href": "http://jtnimoy.com/blogs/projects/50616707-deepdream-avoiding-kitsch"
	},
	{
		"cluster": 1,
		"tags": [
			"radio",
			"music",
			"italo",
			"disco",
			"dance"
		],
		"y": -0.8461194850151409,
		"x": 6.9008891742333756,
		"extended": "",
		"description": "Intergalactic Classix Intergalactic FM",
		"time": "2015-07-20T16:06:13Z",
		"href": "https://intergalacticfm.com/intergalactic_classix.php"
	},
	{
		"cluster": 7,
		"tags": [
			"notifyicon",
			"wpf",
			"windows",
			"gui",
			"development",
			"programming",
			"c#",
			"f#"
		],
		"y": 11.694988697715223,
		"x": -1.9875137071359412,
		"extended": "",
		"description": "hardcodet.net » WPF NotifyIcon",
		"time": "2015-07-20T15:54:44Z",
		"href": "http://www.hardcodet.net/wpf-notifyicon"
	},
	{
		"cluster": 7,
		"tags": [
			"wpf",
			"xaml",
			"windows",
			"programming",
			"development",
			"xml",
			"f#",
			"c#"
		],
		"y": 11.654046118754259,
		"x": -1.9760423065697592,
		"extended": "When you use assembly-internal controls with the Xaml Type Provider you get a runtime error:\r\n\r\nSystem.Windows.Markup.XamlParseException : 'Cannot create unknown type '{clr-namespace:any}MyButton'.' Line number '15' and line position '14'.\r\n\r\n",
		"description": "Xaml Type Provider does not work with assembly-internal controls · Issue #159 · fsprojects/FSharpx.Extras",
		"time": "2015-07-20T15:54:11Z",
		"href": "https://github.com/fsprojects/FSharpx.Extras/issues/159"
	},
	{
		"cluster": 2,
		"tags": [
			"f#",
			"c#",
			"visualstudio",
			"windows",
			"development",
			"xaml",
			"icon",
			"resource"
		],
		"y": 11.651254371117723,
		"x": -1.8563937251173885,
		"extended": "",
		"description": "In WPF how do I specify the path to a file nested in a Directory using XAML? - Stack Overflow",
		"time": "2015-07-20T15:53:19Z",
		"href": "http://stackoverflow.com/questions/278943/in-wpf-how-do-i-specify-the-path-to-a-file-nested-in-a-directory-using-xaml"
	},
	{
		"cluster": 13,
		"tags": [
			"neoliberalism",
			"capitalism",
			"economics",
			"politics"
		],
		"y": 7.392085924362753,
		"x": 9.019546833679737,
		"extended": "Capitalism is essentially a set of social practices whose aim is the accumulation of capital. It is not exactly the same thing as commerce, as profit-seeking, as commodity-trading, as the general commodification of all goods, services and social relation, as ‘free’ markets in goods and services, as wage-labour and the oppression of labour to prevent workers intervening in labour markets in their own interests, or even as the private ownership of capital; although it can and usually does involve all those things.",
		"description": "‘Neoliberalism’ and ‘Capitalism’ – what’s the difference? | jeremygilbertwriting",
		"time": "2015-07-20T08:23:16Z",
		"href": "https://jeremygilbertwriting.wordpress.com/2015/07/14/neoliberalism-and-capitalism-whats-the-difference/"
	},
	{
		"cluster": 13,
		"tags": [
			"postcapitalism",
			"sharingeconomy",
			"technology",
			"information",
			"economics",
			"politics",
			"society",
			"capitalism",
			"marx"
		],
		"y": 7.319135512265129,
		"x": 11.654888037116287,
		"extended": "Today, the thing that is corroding capitalism, barely rationalised by mainstream economics, is information. Most laws concerning information define the right of corporations to hoard it and the right of states to access it, irrespective of the human rights of citizens. The equivalent of the printing press and the scientific method is information technology and its spillover into all other technologies, from genetics to healthcare to agriculture to the movies, where it is quickly reducing costs.",
		"description": "The end of capitalism has begun | Books | The Guardian",
		"time": "2015-07-20T08:15:20Z",
		"href": "http://www.theguardian.com/books/2015/jul/17/postcapitalism-end-of-capitalism-begun"
	},
	{
		"cluster": 13,
		"tags": [
			"ralphmilliband",
			"milliband",
			"class",
			"state",
			"socialism",
			"politics",
			"economics"
		],
		"y": 7.210004492199986,
		"x": 9.518293722699697,
		"extended": "But while another centrist leading the party may be taken as an indication of the Left’s irrelevance, the elder Miliband wouldn’t have conceded as much. Class exploitation and inequality didn’t disappear with the advent of labor laws or the welfare state or the Internet — they are at capitalism’s core. And as long as the system continued — characterized by “the subordination of the many to the few, on the basis of property and privilege” — it would generate opposition.",
		"description": "The Other Miliband | Jacobin",
		"time": "2015-07-20T08:02:55Z",
		"href": "https://www.jacobinmag.com/2015/07/miliband-ralph-ed-david-labour/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"inequality",
			"jobs",
			"labour",
			"economics",
			"unions",
			"tradeunionism"
		],
		"y": 8.90986220472477,
		"x": 9.811549145408687,
		"extended": "Concomitantly, politicians from both the Conservative and Labour party have started to understand “wealth creation” as something that only the employer does; no wealth, no productivity gains at all, come from the people who do the work, in the modern narrative.\r\n\r\nIndeed, work itself is no longer a process of production, of which one can be proud, but is instead something precarious, for which one should be extremely grateful. With that has come the additional surveillance culture where employers search your bags when you leave and count your paces to make sure you’re moving fast enough, or time your toilet breaks.",
		"description": "This Tory attack on unions should remind us how much we need them | Zoe Williams | Comment is free | The Guardian",
		"time": "2015-07-20T07:24:21Z",
		"href": "http://www.theguardian.com/commentisfree/2015/jul/15/tory-attack-unions-work"
	},
	{
		"cluster": 13,
		"tags": [
			"welface",
			"politics",
			"economics",
			"evidence"
		],
		"y": 8.432203969868917,
		"x": 9.325482907272779,
		"extended": "Except for the ill and disabled, there is not so much a bunch of claimants and bunch of workers, but rather people who shift from one category to another.\r\n\r\nWelfare is, therefore, a form of insurance; we pay in in good times and get a payout in bad.",
		"description": "Stumbling and Mumbling: In defence of welfare",
		"time": "2015-07-20T07:22:54Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/07/in-defence-of-welfare.html"
	},
	{
		"cluster": 13,
		"tags": [
			"uber",
			"sharingeconomy",
			"labour",
			"work",
			"economics",
			"politics",
			"technology"
		],
		"y": 7.4846064602289095,
		"x": 11.579299513489923,
		"extended": "The digital and technological revolution that created companies like Amazon and Facebook is making life easier, more entertaining and cheaper for many of us. But it also places secure jobs at risk and threatens to lay entire industries to waste. A Labour party whose founding mission was to make sure work pays needs to find its own answers to some of the hard questions Clinton identified.\r\n\r\n",
		"description": "I can’t wait for the next Airbnb or Uber, but we can’t let them kill middle-class jobs | Tom Watson | Comment is free | The Guardian",
		"time": "2015-07-20T07:22:10Z",
		"href": "http://www.theguardian.com/commentisfree/2015/jul/14/airbnb-uber-labour-middle-class-jobs-labour"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"inequality",
			"growth",
			"socialism",
			"equality"
		],
		"y": 8.64245051283546,
		"x": 9.534141713623592,
		"extended": "Controlling for other relevant factors, such as the country’s level of income and education, we demonstrate that countries could grow their economies faster if there were less money controlled by the uber-rich. This implies that economies could be more efficient if more money were allocated to people other than those at the top of the income and wealth pyramid.\r\n\r\n",
		"description": "No, billionaires don’t drive economic growth – and crony billionaires strangle it | Jan Svejnar | Comment is free | The Guardian",
		"time": "2015-07-20T07:21:31Z",
		"href": "http://www.theguardian.com/commentisfree/2015/jul/15/billionaires-drive-economic-growth-crony"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"problemsolving",
			"paradigms"
		],
		"y": 7.9848508195875,
		"x": 7.855690433823637,
		"extended": "Danny Finkelstein in the Times says game theory is often too complicated to solve real world problems. He's right, if you try to use it to get precise solutions. But it has another use. It reminds us that there are (at least) three paradigms in economics and it matters enormously that we know which paradigm is relevant for which problem*.\r\n\r\nOne paradigm is parametric maximization: we maximize expected utility subject to given parameters.",
		"description": "Stumbling and Mumbling: Three paradigms of maximization",
		"time": "2015-07-20T07:20:40Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/07/three-paradigms-of-maximization.html"
	},
	{
		"cluster": 10,
		"tags": [
			"corbyn",
			"socialism",
			"politics",
			"labbour"
		],
		"y": 3.116109429373413,
		"x": 10.146771069550331,
		"extended": "The Corbyn campaign condenses all these frustrations and combines it with the hope for something better. It's not that supporters don't care about winning power in 2020 - they do. But they think getting into a race to the bottom on immigration and beggar-thy-neighbour is not the way to win power again. If the Labour right wants to win these members over - and I assume they do - they need to understand this, because badging more of the same as 'electorally credible' won't wash.",
		"description": "All That Is Solid ...: Understanding Jeremy Corbyn's Support",
		"time": "2015-07-20T07:19:44Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2015/07/understanding-jeremy-corbyns-support.html"
	},
	{
		"cluster": 2,
		"tags": [
			"redhill",
			"urbanism",
			"geography",
			"history"
		],
		"y": -1.6703958684019387,
		"x": 8.25828788872421,
		"extended": "The discreet charms of mid-seventies Redhill are on display in this film from the North Downs Cinematographic Society - from its architectural delights to the orderliness of its streets. In fact the film provides an interesting record of the deterioration of a town's fabric prior to its total redevelopment.",
		"description": "Watch Welcome to Redhill; The Jewel of the South 1975 — BFI Player",
		"time": "2015-07-20T07:17:56Z",
		"href": "http://player.bfi.org.uk/film/watch-welcome-to-redhill-the-jewel-of-the-south-1975/#.VZ2FtzQrE-o.facebook"
	},
	{
		"cluster": 1,
		"tags": [
			"audio",
			"music",
			"livecoding",
			"creativity",
			"improvisation"
		],
		"y": -8.93847759323697,
		"x": 3.9886473502514175,
		"extended": "The live-coding languages I’ve tried so far take the same kind of approach. Perfection and crystal clear clarity are not the goals here. Tidal, the language I am currently least-bad at, is actually this kind of punk rock rhythm generator with some kind of compressor on the master bus that I don’t know how to access. It makes everything sound as crunchy as Death Grips. The freedom it allows reminds me of the freedom that Soundforge gave me. It’s the exact kind of freedom that is lost when you’re in a fancy recording studio with a Pro Tools rig and 100 channels of 96khz audio. Sometimes that’s completely necessary if you’re after a certain quality of sound (like when 65 made Wild Light) but if you get the urge to smash the entire song through an extra layer of distortion (which is all the time, right?) then suddenly the weight of all those individual tracks becomes a bigger problem. It’s like having to turn around a massive airplane mid-flight instead of just being a bird. Or some other, less weird metaphor.",
		"description": "Live Coding as a Force for Good | paulwolinski",
		"time": "2015-07-20T07:16:50Z",
		"href": "http://www.paulwolinski.co.uk/?p=357"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"expertise",
			"culture"
		],
		"y": -0.025673400556235522,
		"x": 10.606758372547743,
		"extended": "I am (or at least think I am) an expert. Not on everything, but in a particular area of human knowledge, specifically social science and public policy. When I say something on those subjects, I expect that my opinion holds more weight than that of most other people.\r\n\r\nI never thought those were particularly controversial statements. As it turns out, they’re plenty controversial. Today, any assertion of expertise produces an explosion of anger from certain quarters of the American public, who immediately complain that such claims are nothing more than fallacious “appeals to authority,” sure signs of dreadful “elitism,” and an obvious effort to use credentials to stifle the dialogue required by a “real” democracy.",
		"description": "The Death Of Expertise",
		"time": "2015-07-20T07:06:34Z",
		"href": "http://thefederalist.com/2014/01/17/the-death-of-expertise/"
	},
	{
		"cluster": 1,
		"tags": [
			"cities",
			"urbanism",
			"geography",
			"imagination",
			"culture"
		],
		"y": -1.727243313011696,
		"x": 8.879161182914176,
		"extended": "“Every city is more fantastical than fantasy,” Anderson is telling me. “Barcelona, Berlin, Tokyo, London – they’re more bizarre than we think.”\r\n\r\nIt’s the premise that’s at the centre of his new book, Imaginary Cities, a vast collage which teases out the links between fictional urban environments – the “imaginary” cities of its title – and real, inhabited places.",
		"description": "Interview: Darran Anderson, author of Imaginary Cities, on architecture, power & The Jetsons | CityMetric",
		"time": "2015-07-20T07:03:39Z",
		"href": "http://www.citymetric.com/skylines/interview-darran-anderson-author-imaginary-cities-architecture-power-jetsons-1238"
	},
	{
		"cluster": 1,
		"tags": [
			"italo",
			"disco",
			"italodisco",
			"music",
			"dance"
		],
		"y": -0.8412190349400673,
		"x": 6.901349349169245,
		"extended": "",
		"description": "Rewind: An Expert On How Italo Disco Became Cool Again › Electronic Beats",
		"time": "2015-07-18T21:20:10Z",
		"href": "http://www.electronicbeats.net/rewind-an-expert-on-how-italo-disco-became-cool-again/"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"politics",
			"utopian",
			"democracy",
			"utopia"
		],
		"y": 2.8805732223649403,
		"x": 9.936894849444386,
		"extended": "",
		"description": "Will Socialism Be Boring? | Jacobin",
		"time": "2015-07-18T21:20:09Z",
		"href": "https://www.jacobinmag.com/2015/07/russian-revolution-art-vonnegut-equality/"
	},
	{
		"cluster": 2,
		"tags": [
			"academic",
			"publishing",
			"openaccess"
		],
		"y": -3.2152485926628107,
		"x": 4.410902464619371,
		"extended": "",
		"description": "How to publish open access conference proceedings | Alex McLean",
		"time": "2015-07-18T21:20:08Z",
		"href": "http://yaxu.org/how-to-publish-open-access-conference-proceedings/"
	},
	{
		"cluster": 10,
		"tags": [
			"technology",
			"politics",
			"capitalism",
			"work",
			"time"
		],
		"y": 5.969093815405929,
		"x": 10.017058977072082,
		"extended": "",
		"description": "When we blame tech for everything, capitalism gets off the hook | SE Smith | Comment is free | The Guardian",
		"time": "2015-07-18T21:20:07Z",
		"href": "http://www.theguardian.com/commentisfree/2015/jul/06/blame-technology-capitalism-smartphones"
	},
	{
		"cluster": 2,
		"tags": [
			"google",
			"caffe",
			"visualisation",
			"deeplearning",
			"machinelearning",
			"neuralnetworks",
			"python",
			"inceptionism"
		],
		"y": -0.575533983726305,
		"x": -4.768710459202461,
		"extended": "",
		"description": "deepdream/dream.ipynb at master · google/deepdream",
		"time": "2015-07-03T22:30:13Z",
		"href": "https://github.com/google/deepdream/blob/master/dream.ipynb"
	},
	{
		"cluster": 10,
		"tags": [
			"progressive",
			"thrillers",
			"fiction",
			"culture",
			"book",
			"recommendations",
			"reading",
			"politics",
			"left"
		],
		"y": -0.1602709423633523,
		"x": 10.761150245649466,
		"extended": "",
		"description": "Goodreads | liberal/left wing thrillers (14 books)",
		"time": "2015-07-03T22:23:25Z",
		"href": "https://www.goodreads.com/list/show/32367.liberal_left_wing_thrillers"
	},
	{
		"cluster": 2,
		"tags": [
			"garden",
			"diy",
			"house",
			"sleepers",
			"raisedbeds",
			"beds",
			"flowerbeds"
		],
		"y": -0.16376376710938953,
		"x": 4.211473077135085,
		"extended": "",
		"description": "Railway Sleepers",
		"time": "2015-07-03T22:22:52Z",
		"href": "http://www.railwaysleepers.com/railway-sleepers/railway-sleeper-kits/raised-bed-kits-with-railway-sleepers"
	},
	{
		"cluster": 2,
		"tags": [
			"shed",
			"garden",
			"diy",
			"house"
		],
		"y": -0.3067491128227796,
		"x": 4.239561163116559,
		"extended": "",
		"description": "Empire 3000 Pent Range 10X5ft",
		"time": "2015-07-03T22:22:29Z",
		"href": "http://www.shedsandthings.co.uk/empire-3000-pent-range-10x5ft-10734-p.asp"
	},
	{
		"cluster": 2,
		"tags": [
			"web",
			"crawl",
			"aws",
			"architecture",
			"datamining",
			"search"
		],
		"y": -1.9132827049173993,
		"x": 4.259266246628386,
		"extended": "",
		"description": "How to crawl a quarter billion webpages in 40 hours | DDI",
		"time": "2015-07-03T20:10:42Z",
		"href": "http://www.michaelnielsen.org/ddi/how-to-crawl-a-quarter-billion-webpages-in-40-hours/"
	},
	{
		"cluster": 13,
		"tags": [
			"greece",
			"politics",
			"debt",
			"crisis",
			"europe",
			"euro",
			"economics"
		],
		"y": 8.21594710067514,
		"x": 10.46497811306133,
		"extended": "This idea ignores the structural reasons for Greece’s borrowing. All countries borrow money to invest in their economies and compete in the world economy. By 2009 the smaller Eurozone economies – Greece, Portugal, Ireland, Spain – were all burdened with massive debts because their borrowing failed to make them more competitive. As Costas Lapavitsas has shown, the reason for this is simple: the German government froze wages so as to out-compete countries like Greece. Given its superior economic and technological starting point, Germany was always going to win if its wages were low enough. Greece therefore built up a big trade deficit which was proportional to the German trade surplus. So Greek borrowing was actively encouraged by Germany which is now demanding Greece shoulder the blame for what was a failure of the entire Eurozone.",
		"description": "In Defence of Greece: 6 Myths Busted | Novara Wire",
		"time": "2015-07-01T11:45:34Z",
		"href": "http://wire.novaramedia.com/2015/06/in-defence-of-greece-6-myths-busted/"
	},
	{
		"cluster": 13,
		"tags": [
			"europe",
			"greece",
			"politics",
			"economics"
		],
		"y": 8.090177962382873,
		"x": 10.346545642034743,
		"extended": "And, still, I don't know whether voting \"yes\" or \"no\" will make life better or worse for her. I don't know what Magda would vote either. I can only guess. What I do know, is that the encounter was the beginning of the end of my love affair with the European project. Because, quite simply, it is no longer my European Union. It is Amazon's and Starbucks'. It is the politicians' and the IMF's. But it is not mine.\r\nIf belonging to the largest and richest trading bloc in the world cannot provide dinner for a retired teacher like her, it has no reason to exist. If a European Union which produces €28,000 of annual GDP for every single one of its citizens cannot provide a safety net for her, then it is profoundly wicked. If this is not a union of partners, but a gang of big players and small players, who cut the weakest loose at the first sign of trouble, then it is nothing.",
		"description": "Where is My European Union?",
		"time": "2015-06-30T10:32:42Z",
		"href": "https://www.byline.com/column/11/article/126"
	},
	{
		"cluster": 10,
		"tags": [
			"rand",
			"capitalism",
			"politics",
			"startups",
			"uber",
			"disruption"
		],
		"y": 6.294814333179494,
		"x": 9.814125108774714,
		"extended": "",
		"description": "Pando: Travis Shrugged: The creepy, dangerous ideology behind Silicon Valley's Cult of Disruption",
		"time": "2015-06-28T22:58:09Z",
		"href": "https://pando.com/2012/10/24/travis-shrugged/"
	},
	{
		"cluster": 2,
		"tags": [
			"geography",
			"europe",
			"baarle",
			"baarle-hertog",
			"baarle-nassau",
			"borders",
			"infrastructure",
			"psychogeography",
			"interesting"
		],
		"y": -2.448598226669078,
		"x": 5.460720053351559,
		"extended": "",
		"description": "The Village and The Village",
		"time": "2015-06-26T15:55:09Z",
		"href": "http://www.iamdanw.com/wrote/what-are-borders-anyway/"
	},
	{
		"cluster": 10,
		"tags": [
			"marxism",
			"innovation",
			"managerialism",
			"capitalism",
			"seedsofitsowndestruction",
			"politics"
		],
		"y": 6.107211306199414,
		"x": 9.158218503835558,
		"extended": "",
		"description": "Stumbling and Mumbling: Managerialism vs innovation",
		"time": "2015-06-25T21:13:20Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/06/managerialism-vs-innovation.html"
	},
	{
		"cluster": 2,
		"tags": [
			"psychology",
			"machine_learning",
			"perception",
			"machinelearning",
			"computervision"
		],
		"y": -1.4836081302143673,
		"x": 3.013265473281458,
		"extended": "",
		"description": "We have stumbled into the era of machine psychology | suboptimum",
		"time": "2015-06-25T16:26:57Z",
		"href": "https://suboptimum.wordpress.com/2015/06/21/we-have-stumbled-in-the-era-of-machine-psychology/"
	},
	{
		"cluster": 10,
		"tags": [
			"film",
			"culture",
			"politics",
			"gentrification",
			"history",
			"thatcher",
			"longgoodfriday",
			"society"
		],
		"y": 0.6955484840014753,
		"x": 12.102686757757093,
		"extended": "",
		"description": "First the gangsters, then the bankers: how The Long Good Friday foretold the future | Film | The Guardian",
		"time": "2015-06-25T16:25:01Z",
		"href": "http://www.theguardian.com/film/2015/jun/18/gangsters-then-bankers-the-long-good-friday-foretold-the-future-thatcherism-londons-docklands"
	},
	{
		"cluster": 17,
		"tags": [
			"fsharp",
			"maybe",
			"monad",
			"computationexpression",
			"f#",
			"programming"
		],
		"y": 3.2247749431101913,
		"x": -5.021096163766431,
		"extended": "",
		"description": "Computation expressions: Introduction | F# for fun and profit",
		"time": "2015-06-24T10:26:04Z",
		"href": "http://fsharpforfunandprofit.com/posts/computation-expressions-intro/"
	},
	{
		"cluster": 7,
		"tags": [
			"f#",
			"modules",
			"programming",
			"development",
			"organization"
		],
		"y": 8.242029106312616,
		"x": -2.540267610366277,
		"extended": "",
		"description": "Organizing modules in a project | F# for fun and profit",
		"time": "2015-06-23T16:13:28Z",
		"href": "http://fsharpforfunandprofit.com/posts/recipe-part3/"
	},
	{
		"cluster": 17,
		"tags": [
			"f#",
			"private",
			"field",
			"programming"
		],
		"y": 3.6571320017918905,
		"x": -5.802445174847441,
		"extended": "",
		"description": "f# - Is it possible to make a field of a record private? or to make a member of record private? - Stack Overflow",
		"time": "2015-06-23T16:13:09Z",
		"href": "http://stackoverflow.com/questions/12389308/is-it-possible-to-make-a-field-of-a-record-private-or-to-make-a-member-of-recor"
	},
	{
		"cluster": 17,
		"tags": [
			"f#",
			"extern",
			"private",
			"module",
			"programming",
			"native"
		],
		"y": 3.6018603796973396,
		"x": -5.781620673379346,
		"extended": "",
		"description": "f# - extern access modifiers don't work - Stack Overflow",
		"time": "2015-06-23T16:12:57Z",
		"href": "http://stackoverflow.com/questions/11216552/extern-access-modifiers-dont-work"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"varianrule",
			"sousveillance",
			"surveillance",
			"technology",
			"lifelogging",
			"qs",
			"quantifiedself"
		],
		"y": 7.314101587136711,
		"x": 8.047320940440692,
		"extended": "Consider the Varian rule, which says that you can forecast the future by looking at what the rich have today — that is, that what affluent people will want in the future is, in general, something like what only the truly rich can afford right now. Well, one thing that’s very clear if you spend any time around the rich — and one of the very few things that I, who by and large never worry about money, sometimes envy — is that rich people don’t wait in line. They have minions who ensure that there’s a car waiting at the curb, that the maitre-d escorts them straight to their table, that there’s a staff member to hand them their keys and their bags are already in the room.\r\n\r\nAnd it’s fairly obvious how smart wristbands could replicate some of that for the merely affluent. Your reservation app provides the restaurant with the data it needs to recognize your wristband, and maybe causes your table to flash up on your watch, so you don’t mill around at the entrance, you just walk in and sit down (which already happens in Disney World.) You walk straight into the concert or movie you’ve bought tickets for, no need even to have your phone scanned. And I’m sure there’s much more — all kinds of context-specific services that you won’t even have to ask for, because systems that track you know what you’re up to and what you’re about to need.",
		"description": "Apple and the Self-Surveillance State - NYTimes.com",
		"time": "2015-06-19T16:53:14Z",
		"href": "http://krugman.blogs.nytimes.com/2015/04/10/apple-and-the-self-surveillance-state/?module=BlogPost-Title&version=Blog%20Main&contentCollection=Opinion&action=Click&pgtype=Blogs&region=Body&_r=0"
	},
	{
		"cluster": 10,
		"tags": [
			"london",
			"pornography",
			"history",
			"victorian",
			"underworld",
			"criminality",
			"politics",
			"goings-on"
		],
		"y": 5.413496942601144,
		"x": 10.038137414721385,
		"extended": "",
		"description": "Lost London: a Victorian Street for Friggers and Radicals | Unofficial Britain.",
		"time": "2015-06-19T11:46:07Z",
		"href": "http://www.unofficialbritain.com/lost-london-a-victorian-street-for-friggers-and-radicals/"
	},
	{
		"cluster": 1,
		"tags": [
			"technology",
			"music",
			"art",
			"sound",
			"drummachine",
			"history",
			"rhythmicon"
		],
		"y": -11.497292725469265,
		"x": 1.832742185325833,
		"extended": "",
		"description": "The Legend of the Rhythmicon, the World’s First Drum Machine | Red Bull Music Academy Daily",
		"time": "2015-06-19T11:42:25Z",
		"href": "http://daily.redbullmusicacademy.com/2015/06/rhythmicon-feature"
	},
	{
		"cluster": 2,
		"tags": [
			"generative",
			"image",
			"neuralnetwork",
			"deepnetwork",
			"machinelearning",
			"computerscience",
			"generation",
			"visualisation",
			"ux"
		],
		"y": -0.5713057894438202,
		"x": -4.679355690796381,
		"extended": "",
		"description": "Research Blog: Inceptionism: Going Deeper into Neural Networks",
		"time": "2015-06-18T07:23:58Z",
		"href": "http://googleresearch.blogspot.co.uk/2015/06/inceptionism-going-deeper-into-neural.html"
	},
	{
		"cluster": 5,
		"tags": [
			"dirichletprocess",
			"chineserestaurantprocess",
			"indianbuffetprocess",
			"bayesiannonparametrics",
			"nonparametric",
			"bayesian",
			"statistics",
			"machinelearning",
			"automaticstatistician",
			"zoubin",
			"ghahramani",
			"intelligence",
			"neurology",
			"analogy",
			"invention",
			"anthroprocentricism"
		],
		"y": -2.705945157050203,
		"x": -4.28451569600698,
		"extended": "",
		"description": "The Automatic Statistician and Electrified Meat — Talking Machines",
		"time": "2015-06-12T10:09:44Z",
		"href": "http://www.thetalkingmachines.com/blog/2015/3/26/3mixrq61fb0tff4kn0mrkzsw2xma98"
	},
	{
		"cluster": 16,
		"tags": [
			"panda",
			"newsroom",
			"tools",
			"data",
			"journalism",
			"search"
		],
		"y": -2.8304868470946962,
		"x": 3.6311851735459397,
		"extended": "",
		"description": "PANDA Project — Data journalism makes your newsroom smarter",
		"time": "2015-06-09T07:51:21Z",
		"href": "http://pandaproject.net/"
	},
	{
		"cluster": 3,
		"tags": [
			"lefevbre",
			"geography",
			"urbanism",
			"marxism",
			"culture",
			"politics",
			"theory",
			"reading",
			"cities",
			"philosophy"
		],
		"y": -1.5533443397402427,
		"x": 9.316767134888732,
		"extended": "",
		"description": "Where to start with reading Henri Lefebvre? | Progressive Geographies",
		"time": "2015-06-09T07:50:14Z",
		"href": "http://progressivegeographies.com/resources/lefebvre-resources/where-to-start-with-reading-henri-lefebvre/"
	},
	{
		"cluster": 10,
		"tags": [
			"marxism",
			"socialism",
			"politics",
			"history",
			"capital",
			"dialecticalmaterialism"
		],
		"y": 2.940062016085126,
		"x": 9.938690600083008,
		"extended": "",
		"description": "Marx Was Right",
		"time": "2015-06-09T07:49:00Z",
		"href": "http://www.filmsforaction.org/articles/marx-was-right/"
	},
	{
		"cluster": 10,
		"tags": [
			"facebook",
			"realnames",
			"righttothenetwork",
			"identity",
			"society",
			"technology",
			"politics"
		],
		"y": 1.9091404808658266,
		"x": 12.717963547286576,
		"extended": "",
		"description": "A People’s Facebook | Jacobin",
		"time": "2015-06-09T07:37:08Z",
		"href": "https://www.jacobinmag.com/2015/06/facebook-real-names-lgbtq-zuckerberg/"
	},
	{
		"cluster": 1,
		"tags": [
			"capitalism",
			"ruins",
			"imagery",
			"culture",
			"decay",
			"cities",
			"architecture",
			"photography"
		],
		"y": -7.75298923455072,
		"x": 6.870140977487629,
		"extended": "",
		"description": "The Ruins of Capitalism | Jacobin",
		"time": "2015-06-09T07:34:07Z",
		"href": "https://www.jacobinmag.com/2015/06/ruin-porn-imagery-photography-detroit/"
	},
	{
		"cluster": 3,
		"tags": [
			"politics",
			"culture",
			"art",
			"conspicuousconsumption",
			"capitalism",
			"criticism",
			"consumerculture"
		],
		"y": -1.5564780649846803,
		"x": 11.928754909532293,
		"extended": "",
		"description": "The New Conspicuous Consumption | Jacobin",
		"time": "2015-06-09T07:30:00Z",
		"href": "https://www.jacobinmag.com/2015/06/rich-kids-of-instagram-berger-ways-of-seeing/"
	},
	{
		"cluster": 10,
		"tags": [
			"life",
			"work",
			"culture",
			"politics",
			"leisure"
		],
		"y": 0.7257379238473661,
		"x": 10.74894241115834,
		"extended": "",
		"description": "We don’t live to work, we work to live. Why don’t we say so? | Zoe Williams | Comment is free | The Guardian",
		"time": "2015-06-09T06:57:14Z",
		"href": "http://www.theguardian.com/commentisfree/2015/jun/09/we-dont-live-to-work-we-work-to-live-why-dont-we-say-so"
	},
	{
		"cluster": 17,
		"tags": [
			"windows",
			"lifelog",
			"setwineventhook",
			"UI",
			"automation",
			"f#",
			"programming",
			"API"
		],
		"y": 11.48053406149879,
		"x": -1.9411862563188946,
		"extended": "",
		"description": "c# - Setting up Hook on Windows messages - Stack Overflow",
		"time": "2015-06-08T15:26:23Z",
		"href": "http://stackoverflow.com/questions/9665579/setting-up-hook-on-windows-messages"
	},
	{
		"cluster": 7,
		"tags": [
			"scala",
			"play",
			"dependencyinjection",
			"di",
			"programming",
			"development"
		],
		"y": 6.58998569500336,
		"x": -2.540326795701783,
		"extended": "",
		"description": "Compile Time Dependency Injection with Play 2.4 – Loïc's Blog",
		"time": "2015-06-08T10:42:38Z",
		"href": "http://loicdescotte.github.io/posts/play24-compile-time-di/"
	},
	{
		"cluster": 2,
		"tags": [
			"accountability",
			"timemanagement",
			"academia"
		],
		"y": -2.7362866911184245,
		"x": 4.784810923083893,
		"extended": "",
		"description": "The Community You Have, The Community You Need: Building an Online Accountability Group | The Accidental Philologist",
		"time": "2015-06-08T10:33:56Z",
		"href": "https://theaccidentalphilologist.wordpress.com/2015/06/05/the-community-you-have-the-community-you-need-building-an-online-accountability-group/"
	},
	{
		"cluster": 10,
		"tags": [
			"change",
			"protest",
			"socialism",
			"politics",
			"society"
		],
		"y": 2.6351587095292195,
		"x": 11.390756292350252,
		"extended": "Feudalism did not give way to capitalism because villeins protested their moral superiority to their lords, so perhaps capitalism won't convert to socialism this way either.\r\n\r\nSo, what can lefties do instead?",
		"description": "Stumbling and Mumbling: The left, & social change",
		"time": "2015-06-01T15:13:04Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/06/the-left-social-change.html"
	},
	{
		"cluster": 10,
		"tags": [
			"socialmobility",
			"equality",
			"society",
			"politics"
		],
		"y": 2.599626285224291,
		"x": 12.098651135487016,
		"extended": "\"The unspoken implication of those politicians pushing social mobility is they want more people to be like them.\r\nThe phrase itself is erroneous. Mobility would imply that people can move from one social and employment circle to another; that a bricklayer could become a lawyer and a lawyer could become a bricklayer.\r\nInstead, social mobility is viewed only as a one-way street. A more accurate description would be social elitism. For that is what they are prescribing.\"",
		"description": "Britain Should Concentrate More on Social Equality Than on Social Mobility",
		"time": "2015-06-01T11:49:43Z",
		"href": "http://www.disclaimermag.com/politics/britain-should-concentrate-more-on-social-equality-than-on-social-mobility/"
	},
	{
		"cluster": 10,
		"tags": [
			"tax",
			"care",
			"government",
			"politics",
			"aspiration",
			"society"
		],
		"y": 2.427370825155009,
		"x": 13.440870939078717,
		"extended": "\"I can’t by myself care for everyone, of course. That is only possible collectively and that is not possible whimsically, which is the basis of philanthropy. Care requires systemic collective action that is accountable and subject to appropriate decision making. It’s precisely because I care that I believe in government and what it can do for people.\"",
		"description": "Tax Research UK » Aspiration doesn’t do it for me, but care definitely does",
		"time": "2015-05-31T11:17:38Z",
		"href": "http://www.taxresearch.org.uk/Blog/2015/05/31/aspiration-doesnt-do-it-for-me-but-care-definitely-does/"
	},
	{
		"cluster": 10,
		"tags": [
			"greece",
			"finance",
			"politics",
			"capitalism"
		],
		"y": 6.59119042059518,
		"x": 9.89585893603864,
		"extended": "\"Those who say that a default on Greece’s government bonds won’t hurt the market miss the point – it’s not about a particular set of financial assets – it’s about whether governments can be forced to enforce financial obligations on their citizens. If they can, if the web of global institutions designed to promote exactly that is strong enough, then the implication for markets is clear. Regardless of stated political beliefs, justice or human welfare – financial claims must be upheld.\"",
		"description": "Greece: Buy Stocks | Socialist in the City",
		"time": "2015-05-31T11:03:12Z",
		"href": "https://socialistinthecity.wordpress.com/2015/05/30/greece-buy-stocks/"
	},
	{
		"cluster": 3,
		"tags": [
			"politics",
			"estate",
			"housing",
			"urbanism",
			"geography",
			"photography",
			"art",
			"righttothecity",
			"righttobuy",
			"culture",
			"britain",
			"uk"
		],
		"y": -1.3597132901070554,
		"x": 9.339816396522439,
		"extended": "",
		"description": "estate: post-industrial ruin at the end of thatcher's britain | read | i-D",
		"time": "2015-05-29T12:37:49Z",
		"href": "https://i-d.vice.com/en_gb/article/estate-post-industrial-ruin-at-the-end-of-thatchers-britain"
	},
	{
		"cluster": 8,
		"tags": [
			"information",
			"survival",
			"preppers",
			"knowledge",
			"library",
			"hoarding",
			"internet",
			"endtimes",
			"libraries",
			"books",
			"ebooks",
			"culture",
			"future"
		],
		"y": -6.719025343990848,
		"x": 8.854826839753768,
		"extended": "",
		"description": "​Dawn of the Digital Preppers | Motherboard",
		"time": "2015-05-29T12:18:01Z",
		"href": "http://motherboard.vice.com/read/dawn-of-the-digital-preppers"
	},
	{
		"cluster": 2,
		"tags": [
			"radio",
			"spies",
			"history",
			"interference",
			"radar",
			"collectiveaction"
		],
		"y": -5.244126791458936,
		"x": 7.153650540670662,
		"extended": "",
		"description": "The Russian Woodpecker",
		"time": "2015-05-29T10:33:11Z",
		"href": "http://www.qsl.net/n1irz/woodpeck.html"
	},
	{
		"cluster": 16,
		"tags": [
			"capital",
			"data",
			"personal",
			"privacy",
			"economics",
			"technology",
			"righttothenetwork",
			"affectivelabour",
			"wagesforfacebook"
		],
		"y": 7.186291758934124,
		"x": 8.026695396302607,
		"extended": "",
		"description": "I Am Capital | Motherboard",
		"time": "2015-05-28T20:56:30Z",
		"href": "http://motherboard.vice.com/read/i-am-capital"
	},
	{
		"cluster": 3,
		"tags": [
			"thewire",
			"systems",
			"institutions",
			"tv",
			"politics",
			"criticism",
			"culture",
			"games",
			"procedure",
			"crime"
		],
		"y": -0.46871991823215925,
		"x": 12.160105538931587,
		"extended": "The Wire has … resisted the idea that, in this post-modern America, individuals triumph over institutions. The institution is always bigger. It doesn’t tolerate that degree of individuality on any level for any length of time. These moments of epic characterization are inherently false. They’re all rooted in, like, old Westerns or something. Guy rides into town, cleans up the town, rides out of town. There’s no cleaning it up anymore. There’s no riding in, there’s no riding out. The town is what it is.",
		"description": "All in the Game: The Wire, Serial Storytelling, and Procedural Logic | Electronic Book Review",
		"time": "2015-05-28T20:31:23Z",
		"href": "http://www.electronicbookreview.com/thread/firstperson/serial"
	},
	{
		"cluster": 2,
		"tags": [
			"health",
			"depression",
			"mental",
			"mentalhealth",
			"anxiety",
			"pregnancy",
			"medicine"
		],
		"y": 0.789387299268922,
		"x": 6.943412505584296,
		"extended": "",
		"description": "The Secret Sadness of Pregnancy With Depression - NYTimes.com",
		"time": "2015-05-28T15:25:45Z",
		"href": "http://www.nytimes.com/2015/05/31/magazine/the-secret-sadness-of-pregnancy-with-depression.html?smid=tw-nytimes"
	},
	{
		"cluster": 8,
		"tags": [
			"twitter",
			"#content",
			"meme",
			"sociology",
			"internet",
			"culture",
			"walterbenjamin",
			"authenticity",
			"folk",
			"cat",
			"kebab",
			"shop",
			"lamb",
			"mince",
			"picture"
		],
		"y": -6.228763349046807,
		"x": 8.542553657603515,
		"extended": "",
		"description": "The Kebab Shop Cat Tweet And The Inauthenticity Of #content",
		"time": "2015-05-26T14:41:43Z",
		"href": "http://www.buzzfeed.com/whyman/the-kebab-shop-cat-tweet-and-the-inauthenticity-of-hv17"
	},
	{
		"cluster": 13,
		"tags": [
			"history",
			"economics",
			"politics",
			"technology"
		],
		"y": 7.4802955309969565,
		"x": 8.735921910564695,
		"extended": "",
		"description": "The Big Meh - NYTimes.com",
		"time": "2015-05-25T17:36:02Z",
		"href": "http://www.nytimes.com/2015/05/25/opinion/paul-krugman-the-big-meh.html"
	},
	{
		"cluster": 10,
		"tags": [
			"localism",
			"labour",
			"politics",
			"aspiration"
		],
		"y": 6.138241426115521,
		"x": 13.2197014458334,
		"extended": "",
		"description": "Labour leadership contenders: aspiration isn’t enough! | labourelection2015",
		"time": "2015-05-25T17:10:15Z",
		"href": "http://labourelection2015.com/2015/05/25/labour-leadership-contenders-aspiration-isnt-enough/"
	},
	{
		"cluster": 10,
		"tags": [
			"participation",
			"community",
			"civic",
			"politics",
			"righttothecity",
			"communityorganising",
			"localism"
		],
		"y": 6.163195890450332,
		"x": 12.234537203129785,
		"extended": "",
		"description": "Why Labour lost and what we do now | Though Cowards Flinch",
		"time": "2015-05-21T16:27:13Z",
		"href": "http://thoughcowardsflinch.com/2015/05/21/why-labour-lost-and-what-we-do-now/"
	},
	{
		"cluster": 1,
		"tags": [
			"westfield",
			"capitalism",
			"society",
			"culture",
			"consumerism",
			"london",
			"gentrification",
			"renewal"
		],
		"y": 1.222365873955371,
		"x": 12.486628548729238,
		"extended": "",
		"description": "The Sheer, Unrelenting Horror of a First Trip to Westfield | VICE | United Kingdom",
		"time": "2015-05-21T16:01:40Z",
		"href": "http://www.vice.com/en_uk/read/trip-to-westfield-284"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"k-means",
			"dp-means",
			"bayesian",
			"nonparametrics",
			"clustering"
		],
		"y": -0.8862371676655864,
		"x": 2.7463422285232126,
		"extended": "",
		"description": "Comparing k-means and dp-means clustering | Skippy Records",
		"time": "2015-05-19T15:19:43Z",
		"href": "http://blog.drskippy.com/2012/07/06/comparing-k-means-and-dp-means-clustering/"
	},
	{
		"cluster": 13,
		"tags": [
			"banking",
			"finance",
			"politics",
			"economics",
			"boredom"
		],
		"y": 9.514827333933246,
		"x": 7.47083746615895,
		"extended": "",
		"description": "Coppola Comment: Banking should not be boring",
		"time": "2015-05-19T07:42:21Z",
		"href": "http://coppolacomment.blogspot.co.uk/2015/05/banking-should-not-be-boring.html?m=1"
	},
	{
		"cluster": 13,
		"tags": [
			"happiness",
			"self",
			"personality",
			"garybecker",
			"economics",
			"quantification",
			"politics",
			"transformation",
			"neoliberalism",
			"society"
		],
		"y": 7.627051676143951,
		"x": 9.874170829418446,
		"extended": "",
		"description": "The corruption of happiness | openDemocracy",
		"time": "2015-05-18T15:39:07Z",
		"href": "https://www.opendemocracy.net/transformation/william-davies/corruption-of-happiness"
	},
	{
		"cluster": 11,
		"tags": [
			"vagrant",
			"windows",
			"server",
			"2012",
			"virtualbox",
			"mac",
			"virtualisation",
			"development",
			"VM"
		],
		"y": 11.172904047132858,
		"x": -1.3799970477154393,
		"extended": "",
		"description": "In search of a light weight windows vagrant box — Hurry Up and Wait!",
		"time": "2015-05-18T15:20:29Z",
		"href": "http://www.hurryupandwait.io/blog/in-search-of-a-light-weight-windows-vagrant-box"
	},
	{
		"cluster": 10,
		"tags": [
			"aspiration",
			"politics",
			"labour",
			"socialism"
		],
		"y": 6.068964993499111,
		"x": 13.208348833838832,
		"extended": "",
		"description": "Aspiring to what? - Weekly Worker",
		"time": "2015-05-14T17:43:12Z",
		"href": "http://weeklyworker.co.uk/worker/1058/aspiring-to-what/"
	},
	{
		"cluster": 10,
		"tags": [
			"labour",
			"politics",
			"movement",
			"managerialism",
			"participation",
			"communityorganising"
		],
		"y": 6.220030335692225,
		"x": 13.093993985272764,
		"extended": "",
		"description": "From a politics of consumption to a politics of production | Though Cowards Flinch",
		"time": "2015-05-12T12:50:36Z",
		"href": "http://thoughcowardsflinch.com/2015/05/07/from-a-politics-of-consumption-to-a-politics-of-production/"
	},
	{
		"cluster": 13,
		"tags": [
			"data",
			"opendata",
			"markets",
			"government",
			"politics",
			"economics",
			"righttothenetwork",
			"privacy",
			"access"
		],
		"y": 7.4498182016959005,
		"x": 8.171595630638164,
		"extended": "",
		"description": "Seeing Like a Geek — Crooked Timber",
		"time": "2015-05-12T12:48:37Z",
		"href": "http://crookedtimber.org/2012/06/25/seeing-like-a-geek/"
	},
	{
		"cluster": 10,
		"tags": [
			"diy",
			"culture",
			"web",
			"ssl",
			"politics",
			"opensource",
			"righttothenetwork"
		],
		"y": -0.10092222441335814,
		"x": 10.54513260687324,
		"extended": "",
		"description": "HTTPS: the end of an era — Medium",
		"time": "2015-05-07T16:33:47Z",
		"href": "https://medium.com/@b_k/https-the-end-of-an-era-c106acded474"
	},
	{
		"cluster": 10,
		"tags": [
			"curation",
			"culture",
			"politics",
			"society",
			"technology"
		],
		"y": 0.26005291423366694,
		"x": 12.490968801361781,
		"extended": "",
		"description": "‘Reading lists, outfits, even salads are curated – it’s absurd’ | Books | The Guardian",
		"time": "2015-05-02T16:05:04Z",
		"href": "http://www.theguardian.com/books/2015/apr/18/david-balzer-curation-social-media-kanye-west?CMP=share_btn_tw"
	},
	{
		"cluster": 2,
		"tags": [
			"morphology",
			"morphologicalanalysis",
			"nlp",
			"language",
			"linguistics",
			"naturallanguageprocessing"
		],
		"y": -0.10665921234536897,
		"x": 7.868216171399735,
		"extended": "",
		"description": "SEM1A5 - Part 2 - Morphological analysis",
		"time": "2015-05-01T16:03:36Z",
		"href": "https://www.cs.bham.ac.uk/~pjh/sem1a5/pt2/pt2_intro_morphology.html"
	},
	{
		"cluster": 2,
		"tags": [
			"serendip",
			"visualization",
			"topicmodel",
			"topic",
			"model",
			"machinelearning",
			"naturallanguageprocessing",
			"ml",
			"nlp"
		],
		"y": -0.9148870632440594,
		"x": 3.2505710044470093,
		"extended": "",
		"description": "http://vep.cs.wisc.edu/serendip/",
		"time": "2015-04-28T13:36:31Z",
		"href": "http://vep.cs.wisc.edu/serendip/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"information",
			"riots",
			"race",
			"class",
			"capitalism",
			"consumerism"
		],
		"y": 4.856719373359056,
		"x": 10.461997750611179,
		"extended": "",
		"description": "New Left Project | The Impossible Class of 2011: Race, London’s Riots and Brixton ‘81",
		"time": "2015-04-28T13:33:12Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/the_impossible_class_of_2011_race_londons_riots_and_brixton_812"
	},
	{
		"cluster": 10,
		"tags": [
			"uber",
			"sharing",
			"startups",
			"arbitrage",
			"sharingeconomy",
			"politics",
			"business",
			"socialism"
		],
		"y": 5.024412143149316,
		"x": 7.390526860602295,
		"extended": "",
		"description": "How to Socialize Uber | Jacobin",
		"time": "2015-04-28T13:24:13Z",
		"href": "https://www.jacobinmag.com/2015/04/uber-exploitation-worker-cooperative-socialize/"
	},
	{
		"cluster": 11,
		"tags": [
			"apple",
			"programming",
			"cocoa",
			"osx",
			"statusbar"
		],
		"y": 7.663734109885742,
		"x": -6.1982652915706185,
		"extended": "",
		"description": "iOS and OS X Development: Cocoa Popup window in the Status bar",
		"time": "2015-04-28T13:18:41Z",
		"href": "http://blog.shpakovski.com/2011/07/cocoa-popup-window-in-status-bar.html"
	},
	{
		"cluster": 17,
		"tags": [
			"apple",
			"lifelogging",
			"events",
			"cocoa",
			"programming"
		],
		"y": 7.604395522763307,
		"x": -6.135124323474878,
		"extended": "",
		"description": "- notificationCenter - NSWorkspace Class Reference",
		"time": "2015-04-28T13:18:27Z",
		"href": "https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Classes/NSWorkspace_Class/index.html#//apple_ref/occ/instm/NSWorkspace/notificationCenter"
	},
	{
		"cluster": 16,
		"tags": [
			"scala",
			"pandas",
			"statistics",
			"dataframe",
			"saddle",
			"programming",
			"data"
		],
		"y": 6.283967033177868,
		"x": -2.8670728528159137,
		"extended": "",
		"description": "Welcome to Saddle Docs — Saddle 1.0.0 documentation",
		"time": "2015-04-28T13:18:14Z",
		"href": "https://saddle.github.io/doc/index.html"
	},
	{
		"cluster": 10,
		"tags": [
			"righttothenetwork",
			"morozov",
			"privacy",
			"lifelogging",
			"google",
			"capitalism",
			"technology",
			"politics"
		],
		"y": 4.9843182150228005,
		"x": 8.070505863470459,
		"extended": "",
		"description": "Facebook isn’t a charity. The poor will pay by surrendering their data | Technology | The Guardian",
		"time": "2015-04-28T07:11:31Z",
		"href": "http://www.theguardian.com/commentisfree/2015/apr/26/facebook-isnt-charity-poor-pay-by-surrending-their-data"
	},
	{
		"cluster": 10,
		"tags": [
			"proteinworld",
			"urbanism",
			"advertising",
			"city",
			"righttothecity",
			"politics",
			"urban",
			"environment",
			"commens"
		],
		"y": 0.8877594527784025,
		"x": 5.551474275909779,
		"extended": "",
		"description": "Protein World and the pollution of the commons",
		"time": "2015-04-27T19:40:58Z",
		"href": "http://freethoughtblogs.com/hetpat/2015/04/27/protein-world-and-the-pollution-of-the-commons/"
	},
	{
		"cluster": 10,
		"tags": [
			"internet",
			"politics",
			"righttothenetwork",
			"markets"
		],
		"y": 4.496185857768862,
		"x": 6.988604824489668,
		"extended": "",
		"description": "When apps are driven by the market, there’s only one winner. It’s not you … | Comment is free | The Guardian",
		"time": "2015-04-27T16:31:24Z",
		"href": "http://www.theguardian.com/commentisfree/2015/mar/29/apps-that-let-the-market-invade-private-lives-evgeny-morozov"
	},
	{
		"cluster": 10,
		"tags": [
			"digitalpublicspace",
			"righttothenetwork",
			"politics",
			"technology",
			"bbc"
		],
		"y": 0.31048575718039206,
		"x": 9.40631568929449,
		"extended": "",
		"description": "Tumbled Logic - To all whom these presents shall come, greeting!",
		"time": "2015-04-27T16:31:03Z",
		"href": "http://neva.li/post/115112955959"
	},
	{
		"cluster": 10,
		"tags": [
			"activism",
			"art",
			"facebook",
			"wagesforfacebook",
			"politics",
			"affective",
			"labour",
			"socialism",
			"righttothenetwork"
		],
		"y": 2.30642651468157,
		"x": 6.523960842503323,
		"extended": "",
		"description": "Wages for Facebook | Dissent Magazine",
		"time": "2015-04-27T16:29:02Z",
		"href": "http://www.dissentmagazine.org/article/wages-for-facebook"
	},
	{
		"cluster": 1,
		"tags": [
			"wagesforfacebook",
			"art",
			"facebook",
			"socialism",
			"manifesto",
			"righttothenetwork",
			"affective",
			"labour"
		],
		"y": 2.2800660993077773,
		"x": 6.481747801967448,
		"extended": "CAPITAL HAD TO CONVINCE US THAT IT IS A NATURAL, UNAVOIDABLE AND EVEN FULFILLING ACTIVITY TO MAKE US ACCEPT UNWAGED WORK. IN ITS TURN, THE UNWAGED CONDITION OF FACEBOOK HAS BEEN A POWERFUL WEAPON IN REINFORCING THE COMMON ASSUMPTION THAT FACEBOOK IS NOT WORK, THUS PREVENTING US FROM STRUGGLING AGAINST IT. WE ARE SEEN AS USERS OR POTENTIAL FRIENDS, NOT WORKERS IN STRUGGLE. WE MUST ADMIT THAT CAPITAL HAS BEEN VERY SUCCESSFUL IN HIDING OUR WORK.",
		"description": "Wages For Facebook",
		"time": "2015-04-27T16:28:29Z",
		"href": "http://wagesforfacebook.com/"
	},
	{
		"cluster": 13,
		"tags": [
			"deflation",
			"economics",
			"politics",
			"debt"
		],
		"y": 8.707798470172449,
		"x": 8.788208367116694,
		"extended": "",
		"description": "New Left Project | Deflation: Transferring Wealth to Rentiers",
		"time": "2015-04-27T07:58:46Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/deflation_transferring_wealth_to_rentiers"
	},
	{
		"cluster": 10,
		"tags": [
			"work",
			"politics",
			"gender",
			"creativity",
			"affect",
			"affectivelabour",
			"labour",
			"foucault"
		],
		"y": 6.069232454742178,
		"x": 12.993849663015219,
		"extended": "",
		"description": "Is passionate work a neoliberal delusion? | openDemocracy",
		"time": "2015-04-27T07:56:16Z",
		"href": "https://www.opendemocracy.net/transformation/angela-mcrobbie/is-passionate-work-neoliberal-delusion#.VTjJTpXe3AI.facebook"
	},
	{
		"cluster": 10,
		"tags": [
			"maps",
			"cartography",
			"criticism",
			"politics",
			"power",
			"space",
			"geography",
			"righttothecity",
			"urbanism"
		],
		"y": -1.1862141598608005,
		"x": 9.039074285811061,
		"extended": "",
		"description": "Critical Cartography | The Occupied Times",
		"time": "2015-04-23T07:01:27Z",
		"href": "http://theoccupiedtimes.org/?p=13771"
	},
	{
		"cluster": 11,
		"tags": [
			"NSStatusItem",
			"apple",
			"mac",
			"statusbar",
			"menu",
			"swift",
			"cocoa",
			"xcode",
			"howtu",
			"tutorial",
			"programming"
		],
		"y": 7.705280659356138,
		"x": -6.166245742771089,
		"extended": "",
		"description": "How I used Swift to build a Menubar App for OSX - John Mullins",
		"time": "2015-04-20T20:28:14Z",
		"href": "http://www.johnmullins.co/blog/2014/08/08/menubar-app/"
	},
	{
		"cluster": 10,
		"tags": [
			"aaronswartz",
			"film",
			"righttothenetwork",
			"politics",
			"activism",
			"technology",
			"freeculture",
			"sopa",
			"pipa",
			"netneutrality"
		],
		"y": 4.1675514243501555,
		"x": 8.899334471076383,
		"extended": "",
		"description": "The Internet's Own Boy: The Story of Aaron Swartz | full movie (2014) - YouTube",
		"time": "2015-04-16T12:39:25Z",
		"href": "https://www.youtube.com/watch?v=9vz06QO3UkQ"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"socialism",
			"class",
			"privilege",
			"income",
			"distribution",
			"capital",
			"identitypolitics"
		],
		"y": 2.153383724941271,
		"x": 9.607503511917514,
		"extended": "",
		"description": "Let Them Eat Privilege | Jacobin",
		"time": "2015-04-14T09:18:48Z",
		"href": "https://www.jacobinmag.com/2015/04/1-99-percent-class-inequality/"
	},
	{
		"cluster": 13,
		"tags": [
			"work",
			"culture",
			"politics",
			"socialism",
			"highvis",
			"economics",
			"taylorism"
		],
		"y": 2.264275571192064,
		"x": 10.741115790636346,
		"extended": "",
		"description": "Politicians love dressing up in hi-vis vests, but they ignore what’s really happening to modern workers | Comment is free | The Guardian",
		"time": "2015-04-13T19:24:38Z",
		"href": "http://www.theguardian.com/commentisfree/2015/apr/12/politicians-modern-workers-hi-vis-vests-stress-bullying"
	},
	{
		"cluster": 10,
		"tags": [
			"ul",
			"politics",
			"election",
			"may2015",
			"media",
			"culture",
			"government"
		],
		"y": 0.7298645184410639,
		"x": 11.335744740124007,
		"extended": "",
		"description": "The old order is dying, but refuses to go quietly | openDemocracy",
		"time": "2015-04-13T10:32:48Z",
		"href": "https://www.opendemocracy.net/ourkingdom/adam-ramsay/old-order-is-dying-but-refuses-to-go-quietly"
	},
	{
		"cluster": 10,
		"tags": [
			"sexism",
			"gender",
			"feminism",
			"politics",
			"malegaze",
			"johnberger",
			"criticism",
			"harassment"
		],
		"y": 1.709175401813452,
		"x": 8.351830237969349,
		"extended": "",
		"description": "Rookie » Eyes on Me",
		"time": "2015-04-10T12:23:42Z",
		"href": "http://www.rookiemag.com/2015/04/male-gaze-2/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"secularstagnation",
			"macro",
			"macroeconomics",
			"politics",
			"interestrates",
			"interest",
			"investment",
			"secular",
			"stagnation"
		],
		"y": 11.109871563299743,
		"x": 7.206417400716214,
		"extended": "",
		"description": "On secular stagnation: Larry Summers responds to Ben Bernanke | Brookings Institution",
		"time": "2015-04-09T07:33:49Z",
		"href": "http://www.brookings.edu/blogs/ben-bernanke/posts/2015/04/01-larry-summers-response?rssid=Ben+Bernanke"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"macro",
			"stagnation",
			"secularstagnation",
			"interest",
			"interestrates",
			"inflation",
			"macroeconomics"
		],
		"y": 11.096225021407756,
		"x": 7.174796485416822,
		"extended": "",
		"description": "Why are interest rates so low, part 2: Secular stagnation | Brookings Institution",
		"time": "2015-04-08T15:23:16Z",
		"href": "http://www.brookings.edu/blogs/ben-bernanke/posts/2015/03/31-why-interest-rates-low-secular-stagnation?rssid=Ben+Bernanke"
	},
	{
		"cluster": 10,
		"tags": [
			"capitalism",
			"marxism",
			"technology",
			"management",
			"socialism",
			"politics",
			"history",
			"class",
			"struggle",
			"work",
			"employment",
			"righttothenetwork"
		],
		"y": 3.802330959118717,
		"x": 10.068566655775987,
		"extended": "",
		"description": "Technology and Socialist Strategy | Jacobin",
		"time": "2015-04-07T14:01:55Z",
		"href": "https://www.jacobinmag.com/2015/04/braverman-gramsci-marx-technology/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"labour",
			"Marxism",
			"varoufakis",
			"socialism",
			"society",
			"syriza",
			"ideology",
			"criticism",
			"sociology"
		],
		"y": 4.965725281098941,
		"x": 12.881186959591396,
		"extended": "",
		"description": "All That Is Solid ...: The Socialist Party's Erratic Marxism",
		"time": "2015-04-03T08:31:33Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2015/04/the-socialist-partys-erratic-marxism.html?m=1"
	},
	{
		"cluster": 10,
		"tags": [
			"internet",
			"culture",
			"recommendation",
			"filterbubble",
			"reckons",
			"blah",
			"society",
			"politics",
			"bias"
		],
		"y": 0.5081506895104201,
		"x": 13.383898363820727,
		"extended": "",
		"description": "What you don’t know about Internet algorithms is hurting you. (And you probably don’t know very much!) - The Washington Post",
		"time": "2015-04-02T14:48:48Z",
		"href": "http://www.washingtonpost.com/news/the-intersect/wp/2015/03/23/what-you-dont-know-about-internet-algorithms-is-hurting-you-and-you-probably-dont-know-very-much/"
	},
	{
		"cluster": 17,
		"tags": [
			"akka",
			"scala",
			"typed",
			"actors",
			"akkatyped",
			"programming",
			"concurrency",
			"computerscience",
			"distributedsystems"
		],
		"y": 3.248978670074885,
		"x": -3.489592758523572,
		"extended": "",
		"description": "Akka Typed — Akka Documentation",
		"time": "2015-04-02T13:19:42Z",
		"href": "http://doc.akka.io/docs/akka/snapshot/scala/typed.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"math",
			"machinelearning",
			"datascience",
			"linearalgebra",
			"matrix",
			"tensor",
			"decomposition",
			"model",
			"topic"
		],
		"y": -3.2395911932612114,
		"x": -4.560389414134817,
		"extended": "",
		"description": "Let’s build open source tensor libraries for data science - O'Reilly Radar",
		"time": "2015-04-02T12:40:42Z",
		"href": "http://radar.oreilly.com/2015/03/lets-build-open-source-tensor-libraries-for-data-science.html"
	},
	{
		"cluster": 2,
		"tags": [
			"mallet",
			"lda",
			"topic",
			"modelling",
			"machinelearning"
		],
		"y": -0.9865119132085598,
		"x": 3.347356793531951,
		"extended": "",
		"description": "Topic Modelling: Working out the optimal number of topics at Mark Needham",
		"time": "2015-04-02T12:28:28Z",
		"href": "http://www.markhneedham.com/blog/2015/03/24/topic-modelling-working-out-the-optimal-number-of-topics/"
	},
	{
		"cluster": 10,
		"tags": [
			"attention",
			"cognitivsurplus",
			"advertising",
			"culture",
			"politics",
			"publicspace",
			"psychology",
			"righttothenetwork"
		],
		"y": -0.11563491667156243,
		"x": 10.538578542454228,
		"extended": "",
		"description": "Commercial interests exploit a limited resource on an industrial scale: your attention | Oliver Burkeman | Comment is free | The Guardian",
		"time": "2015-04-01T12:31:10Z",
		"href": "http://www.theguardian.com/commentisfree/oliver-burkeman-column/2015/apr/01/commercial-interests-exploit-limited-resource-attention"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"functional",
			"ml",
			"computerscience",
			"sml",
			"modules"
		],
		"y": 0.5820735548641401,
		"x": -9.036499740817742,
		"extended": "",
		"description": "scala-modules/README.md at master · yawaramin/scala-modules",
		"time": "2015-03-31T07:41:55Z",
		"href": "https://github.com/yawaramin/scala-modules/blob/master/README.md"
	},
	{
		"cluster": 13,
		"tags": [
			"interestrates",
			"economics",
			"macroeconomics",
			"benbernake",
			"centralbank",
			"inflation",
			"macro"
		],
		"y": 11.100080184996784,
		"x": 7.17357778356742,
		"extended": "",
		"description": "Why are interest rates so low? | Brookings Institution",
		"time": "2015-03-30T12:35:01Z",
		"href": "http://www.brookings.edu/blogs/ben-bernanke/posts/2015/03/30-why-interest-rates-so-low"
	},
	{
		"cluster": 10,
		"tags": [
			"cities",
			"history",
			"society",
			"cycling",
			"traffic",
			"cars",
			"planning",
			"politics",
			"urbanism"
		],
		"y": 2.136097657408201,
		"x": 12.198995087005526,
		"extended": "",
		"description": "Murder Machines: Why Cars Will Kill 30,000 Americans This Year | Collectors Weekly",
		"time": "2015-03-29T20:40:52Z",
		"href": "http://www.collectorsweekly.com/articles/murder-machines/"
	},
	{
		"cluster": 10,
		"tags": [
			"urbanism",
			"politics",
			"amateur",
			"professional",
			"righttotthecity",
			"righttothenetwork",
			"geography",
			"environment"
		],
		"y": -1.071531691561859,
		"x": 8.80829497915598,
		"extended": "For the urban is itself a political object, a very special virtual political object; so is the “right to the city.” Urban rights are ones that need inventing, need inventingoffensively; they aren’t established safeguards already there, ones you can invoke defensively, a Bill of Rights to which you can appeal in times of danger. Rights aren’t passive: they become your right by working through danger, by orchestrating effective political action. You make rights your right. Hence the reason why so many people misunderstand what’s meant by right to the city, where the future necessarily stalks the present; horizons open up for the virtual to be glimpsed, for rights to actualize themselves through politics. ",
		"description": "Intervention – “Future Shock” by Andy Merrifield | AntipodeFoundation.org",
		"time": "2015-03-29T12:54:56Z",
		"href": "http://antipodefoundation.org/2015/03/18/future-shock/"
	},
	{
		"cluster": 3,
		"tags": [
			"internet",
			"technology",
			"socialmedia",
			"culture",
			"criticism",
			"politics",
			"identity",
			"foucault"
		],
		"y": 0.5897819522234665,
		"x": 10.043640697572371,
		"extended": "",
		"description": "Social media theorist Nathan Jurgenson talks digital dualism, slacktivism, and why 'Videodrome' is the best movie about social media - citypaper.com",
		"time": "2015-03-28T13:29:52Z",
		"href": "http://www.citypaper.com/blogs/noise/bcpnews-nathan-jurgenson-at-stevenson-university-20150325,0,4918509.story"
	},
	{
		"cluster": 10,
		"tags": [
			"clarkson",
			"culturre",
			"politics",
			"establishment",
			"conservativism"
		],
		"y": 5.794937792259937,
		"x": 10.678880421669406,
		"extended": "",
		"description": "All That Is Solid ...: Why the Establishment Loves Jeremy Clarkson",
		"time": "2015-03-28T12:37:38Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2015/03/why-establishment-loves-jeremy-clarkson.html?m=1"
	},
	{
		"cluster": 18,
		"tags": [
			"management",
			"managerialism",
			"metrics",
			"measurement",
			"business",
			"culture",
			"software",
			"development",
			"design"
		],
		"y": 2.05061457331299,
		"x": 4.133553422473259,
		"extended": "",
		"description": "LShift - Is your organization riddled with The Cancer?",
		"time": "2015-03-28T12:30:38Z",
		"href": "http://www.lshift.net/blog/2015/03/27/is-your-organization-riddled-with-the-cancer/"
	},
	{
		"cluster": 13,
		"tags": [
			"nimbyism",
			"housing",
			"economics",
			"piketty",
			"politics",
			"capitalism"
		],
		"y": 7.277112192569085,
		"x": 9.372076699855528,
		"extended": "",
		"description": "Wealth inequality: NIMBYs in the twenty-first century | The Economist",
		"time": "2015-03-26T10:41:13Z",
		"href": "http://www.economist.com/blogs/freeexchange/2015/03/wealth-inequality?fsrc=scn/tw/te/bl/ed/nimbysinthetwentyfirstcentury"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"statistics",
			"bayesian",
			"survivalanalysis",
			"gameofthrones"
		],
		"y": -4.330596489684994,
		"x": -4.044028920697798,
		"extended": "",
		"description": "Probably Overthinking It: Bayesian survival analysis for \"Game of Thrones\"",
		"time": "2015-03-26T08:43:35Z",
		"href": "http://allendowney.blogspot.co.uk/2015/03/bayesian-survival-analysis-for-game-of.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"education",
			"tradeoffs"
		],
		"y": 8.136468102246988,
		"x": 9.36415642357665,
		"extended": "",
		"description": "Why Bank of England employees are reading my A-level economics textbook | Alain Anderton | Comment is free | The Guardian",
		"time": "2015-03-25T17:34:30Z",
		"href": "http://www.theguardian.com/commentisfree/2015/mar/25/bank-england-employees-a-level-economics-textbook"
	},
	{
		"cluster": 10,
		"tags": [
			"work",
			"alienation",
			"marx",
			"socialism",
			"marxism",
			"politics"
		],
		"y": 2.7808350531920834,
		"x": 10.521613531861478,
		"extended": "",
		"description": "Stumbling and Mumbling: Alienation: the non-issue",
		"time": "2015-03-25T16:03:56Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/03/alienation-the-non-issue.html"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"mediamacro",
			"economics",
			"debt",
			"deficit",
			"values",
			"culture"
		],
		"y": 8.966677376419915,
		"x": 8.66082943391423,
		"extended": "",
		"description": "Enough of the dry politics of numbers. We need to discuss values and vision | Will Hutton | Comment is free | The Guardian",
		"time": "2015-03-24T11:30:27Z",
		"href": "http://www.theguardian.com/commentisfree/2015/mar/22/britains-economic-recovery-end-obsession-with-debt-reduction"
	},
	{
		"cluster": 10,
		"tags": [
			"greece",
			"politics",
			"davidharvey",
			"socialism",
			"capitalism",
			"society",
			"syriza"
		],
		"y": 2.8842925470610643,
		"x": 11.187038156762023,
		"extended": "",
		"description": "VersoBooks.com",
		"time": "2015-03-24T10:13:20Z",
		"href": "http://www.versobooks.com/blogs/1920-david-harvey-on-syriza-and-podemos"
	},
	{
		"cluster": 10,
		"tags": [
			"digitalpublicspace",
			"culture",
			"digital",
			"internet",
			"righttothenetwork",
			"politics"
		],
		"y": 0.21301915140454245,
		"x": 9.447750269252397,
		"extended": "",
		"description": "Digital Public Spaces » FutureEverything",
		"time": "2015-03-24T10:12:46Z",
		"href": "http://futureeverything.org/ideas/digital-public-spaces/"
	},
	{
		"cluster": 10,
		"tags": [
			"tonyageh",
			"bbc",
			"digitalpublicspace",
			"culture",
			"digital",
			"politics",
			"righttothenetwork"
		],
		"y": 0.21131893706339092,
		"x": 9.452607581550158,
		"extended": "",
		"description": "The BBC, the licence fee and the digital public space | openDemocracy",
		"time": "2015-03-24T10:12:21Z",
		"href": "https://www.opendemocracy.net/ourbeeb/tony-ageh/bbc-licence-fee-and-digital-public-space"
	},
	{
		"cluster": 10,
		"tags": [
			"communism",
			"politics",
			"automation",
			"technology",
			"society",
			"future"
		],
		"y": 2.040553361444298,
		"x": 13.615744405614342,
		"extended": "",
		"description": "Fully automated luxury communism | Guardian Sustainable Business | The Guardian",
		"time": "2015-03-18T22:59:20Z",
		"href": "http://www.theguardian.com/sustainable-business/2015/mar/18/fully-automated-luxury-communism-robots-employment"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"basicincome",
			"history",
			"communism"
		],
		"y": 7.661549129258756,
		"x": 8.670035404687162,
		"extended": "",
		"description": "£1,000 A YEAR COMMUNISM » 25 Jul 1935 » The Spectator Archive",
		"time": "2015-03-18T22:56:28Z",
		"href": "http://archive.spectator.co.uk/article/26th-july-1935/11/1000-a-year-communism"
	},
	{
		"cluster": 10,
		"tags": [
			"squatting",
			"london",
			"politics",
			"music",
			"housing",
			"righttothecity",
			"anarchism"
		],
		"y": 5.3911069303439305,
		"x": 11.81011375086426,
		"extended": "",
		"description": "The Quietus | Features | Tome On The Range | Better Squat Than Rot: The Music Of The Housing Crisis",
		"time": "2015-03-17T13:21:28Z",
		"href": "http://thequietus.com/articles/17434-squat-squatting-total-shambles-george-f"
	},
	{
		"cluster": 10,
		"tags": [
			"agile",
			"management",
			"business",
			"managerialism",
			"behaviour",
			"psychology",
			"evolution",
			"leadership",
			"leadering",
			"culture",
			"politics"
		],
		"y": 0.38882298550444305,
		"x": 8.93934457045671,
		"extended": "",
		"description": "The Art of Agile Leadership",
		"time": "2015-03-17T12:22:46Z",
		"href": "http://www.ribbonfarm.com/2015/03/12/the-art-of-agile-leadership/"
	},
	{
		"cluster": 10,
		"tags": [
			"statistics",
			"biases",
			"knowledge",
			"decisions",
			"culture",
			"politics"
		],
		"y": -0.4454195593018107,
		"x": 10.561127161375408,
		"extended": "",
		"description": "Stumbling and Mumbling: \"We'll have to look at the data\"",
		"time": "2015-03-17T08:07:51Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/03/well-have-to-look-at-the-data.html"
	},
	{
		"cluster": 10,
		"tags": [
			"communism",
			"politics",
			"righttothecity",
			"society",
			"cooperative",
			"organization"
		],
		"y": 2.614904910736818,
		"x": 12.257231374035282,
		"extended": "Communism no longer means red flags and symbolic marches. It certainly doesn't mean a party or a centralised state enslaving its people. Today, it is what it was first intended as – working people organising democratically outside the specialised area allotted for politics by the state. It means organising in our workplace, our community, even in our homes, in order to gain control over the decisions that influence our everyday lives. It means those decisions being taken by all those whom they will affect, not just those with market power or the time and financial backing to climb the political hierarchy. I have found myself an accidental communist.",
		"description": "The accidental communist | Huw Lemmey | Comment is free | The Guardian",
		"time": "2015-03-16T16:14:59Z",
		"href": "http://www.theguardian.com/commentisfree/2010/mar/10/accidental-communist-cooperatives"
	},
	{
		"cluster": 17,
		"tags": [
			"mallet",
			"latentdirichletallocation",
			"topicmodelling",
			"NLP",
			"machinelearning",
			"java",
			"programming"
		],
		"y": 5.370711742910204,
		"x": -7.677655260950199,
		"extended": "",
		"description": "Latent Dirichlet Allocation with Mallet | Ben McCann",
		"time": "2015-03-16T11:19:37Z",
		"href": "http://www.benmccann.com/blog/latent-dirichlet-allocation-mallet/"
	},
	{
		"cluster": 1,
		"tags": [
			"poltiics",
			"fascism",
			"gentrification",
			"righttotthecity",
			"cupcakefascism",
			"culture",
			"society",
			"marxism"
		],
		"y": 0.4079508504088847,
		"x": 12.415030248973915,
		"extended": "",
		"description": "Cupcake Fascism: Gentrification, Infantilisation and Cake",
		"time": "2015-03-14T11:40:26Z",
		"href": "http://criticallegalthinking.com/2014/04/04/cupcake-fascism-gentrification-infantilisation-cake/"
	},
	{
		"cluster": 3,
		"tags": [
			"righttothecity",
			"politics",
			"queer",
			"gay",
			"sex",
			"power",
			"owenjones",
			"literature",
			"art",
			"culture"
		],
		"y": -1.2928119407814738,
		"x": 11.377407910792403,
		"extended": "",
		"description": "'Chubz: The Demonization of My Working Arse' Explores Radical Politics Through the Medium of Anal Apocalypse | VICE | United Kingdom",
		"time": "2015-03-12T19:59:13Z",
		"href": "http://www.vice.com/en_uk/read/james-butler-huw-lemmy-chubz-322"
	},
	{
		"cluster": 10,
		"tags": [
			"work",
			"jobs",
			"business",
			"leanin",
			"feminism",
			"politics",
			"women"
		],
		"y": 2.109772841911308,
		"x": 8.300448371261826,
		"extended": "",
		"description": "When Did Not Wanting to 'Lean In' Become So Taboo? | VICE | United Kingdom",
		"time": "2015-03-12T14:42:53Z",
		"href": "http://www.vice.com/en_uk/read/since-when-did-not-wanting-to-lean-in-become-so-taboo-572"
	},
	{
		"cluster": 10,
		"tags": [
			"bureaucracy",
			"culture",
			"capitalism",
			"society",
			"davidgraeber",
			"work",
			"politics"
		],
		"y": 1.141726479681475,
		"x": 11.905347697698176,
		"extended": "",
		"description": "Bureaucracy is tedious and frustrating. It's also capitalism's fault | Oliver Burkeman | Comment is free | The Guardian",
		"time": "2015-03-11T14:37:15Z",
		"href": "http://www.theguardian.com/commentisfree/oliver-burkeman-column/2015/mar/11/bureaucracy-tedious-frustrating-capitalisms-fault"
	},
	{
		"cluster": 13,
		"tags": [
			"marx",
			"economics",
			"policy",
			"politics"
		],
		"y": 9.675614158670678,
		"x": 9.151811817601592,
		"extended": "",
		"description": "Stumbling and Mumbling: Economists! Be more Marxist",
		"time": "2015-03-10T17:53:48Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/03/economists-be-more-marxist.html"
	},
	{
		"cluster": 2,
		"tags": [
			"science",
			"technology",
			"informationretrieval",
			"future",
			"prediction",
			"association",
			"recording",
			"knowledge"
		],
		"y": -6.089431367286829,
		"x": 7.648931790038348,
		"extended": "",
		"description": "As We May Think - The Atlantic",
		"time": "2015-03-10T11:59:59Z",
		"href": "http://www.theatlantic.com/magazine/archive/1945/07/as-we-may-think/303881/?single_page=true"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"scalaz",
			"dependencyinjection",
			"dip",
			"programming",
			"patterns",
			"monad",
			"reader",
			"readermonad",
			"functional",
			"oop"
		],
		"y": -0.32939355520611885,
		"x": -8.480112667051134,
		"extended": "",
		"description": "Scrap Your Cake Pattern Boilerplate: Dependency Injection Using the Reader Monad - Originate Developer Blog",
		"time": "2015-03-10T11:22:44Z",
		"href": "http://blog.originate.com/blog/2013/10/21/reader-monad-for-dependency-injection/"
	},
	{
		"cluster": 2,
		"tags": [
			"blei",
			"topicmodels",
			"lda",
			"interview",
			"optimisation",
			"machinelearning"
		],
		"y": -0.9602335724926442,
		"x": 3.3195335482137676,
		"extended": "",
		"description": "Topic models: Past, present, and future - O'Reilly Radar",
		"time": "2015-03-10T10:42:50Z",
		"href": "http://radar.oreilly.com/2015/02/topic-models-past-present-and-future.html"
	},
	{
		"cluster": 5,
		"tags": [
			"clustering",
			"em",
			"gaussianmixture",
			"gaussian",
			"machinelearning",
			"unsupervised",
			"statistics",
			"expectationmaximisation"
		],
		"y": -2.3875735024046514,
		"x": -4.249386776667366,
		"extended": "",
		"description": "mini Tech Blog: When not to use Gaussian Mixture Model (EM clustering)",
		"time": "2015-03-10T10:22:34Z",
		"href": "http://hameddaily.blogspot.co.uk/2015/03/when-not-to-use-gaussian-mixtures-model.html"
	},
	{
		"cluster": 13,
		"tags": [
			"cryptocurrency",
			"blockchain",
			"bitcoin",
			"economics"
		],
		"y": 7.940289622854207,
		"x": 7.578857721272386,
		"extended": "",
		"description": "Tim Harford — Article — Boom or bust for bitcoin?",
		"time": "2015-03-10T09:36:35Z",
		"href": "http://timharford.com/2015/03/boom-or-bust-for-bitcoin/"
	},
	{
		"cluster": 5,
		"tags": [
			"bayesian",
			"machinelearning",
			"statistics",
			"python",
			"kalmanfilter",
			"filter",
			"timeseries",
			"programming"
		],
		"y": -1.4425166613270288,
		"x": -6.611518069552191,
		"extended": "",
		"description": "nbviewer.ipython.org/github/rlabbe/Kalman-and-Bayesian-Filters-in-Python/blob/master/table_of_contents.ipynb",
		"time": "2015-03-09T15:43:14Z",
		"href": "http://nbviewer.ipython.org/github/rlabbe/Kalman-and-Bayesian-Filters-in-Python/blob/master/table_of_contents.ipynb"
	},
	{
		"cluster": 2,
		"tags": [
			"pystruct",
			"python",
			"machinelearning",
			"structuredlearning",
			"CRF",
			"conditionalrandomfields"
		],
		"y": -1.005203393064329,
		"x": 3.0077183728168,
		"extended": "",
		"description": "What is structured learning? — pystruct 0.1 documentation",
		"time": "2015-03-09T14:32:54Z",
		"href": "https://pystruct.github.io/intro.html#intro"
	},
	{
		"cluster": 16,
		"tags": [
			"spark",
			"dataframe",
			"python",
			"scala",
			"data",
			"analysis"
		],
		"y": -2.1339870556193743,
		"x": -1.5417339119121776,
		"extended": "",
		"description": "Introducing DataFrames in Spark for Large Scale Data Science | Databricks",
		"time": "2015-03-09T14:24:56Z",
		"href": "https://databricks.com/blog/2015/02/17/introducing-dataframes-in-spark-for-large-scale-data-science.html"
	},
	{
		"cluster": 1,
		"tags": [
			"maxpayne",
			"depression",
			"videogames",
			"culture",
			"mentalhealth"
		],
		"y": -5.008854152296821,
		"x": 8.119038528120019,
		"extended": "",
		"description": "‘Max Payne’ Was The Game That Understood My Depression | VICE | United Kingdom",
		"time": "2015-03-09T14:03:09Z",
		"href": "http://www.vice.com/en_uk/read/max-payne-was-the-game-that-understood-my-depression-233"
	},
	{
		"cluster": 13,
		"tags": [
			"acoustic",
			"architecture",
			"concerthalls",
			"politics",
			"music",
			"economics"
		],
		"y": 8.435129860515024,
		"x": 8.769435558613278,
		"extended": "",
		"description": "What is wrong with London’s concert halls | The Sound Blog",
		"time": "2015-03-09T13:19:55Z",
		"href": "https://acousticengineering.wordpress.com/2015/03/09/what-is-wrong-with-londons-concert-halls/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"regression",
			"visualisation",
			"linear",
			"gaussian",
			"gaussianprocess"
		],
		"y": -1.5536278456559567,
		"x": 0.774689814556853,
		"extended": "",
		"description": "Interactive demonstrations for linear and Gaussian process regressions - Statistical Modeling, Causal Inference, and Social Science Statistical Modeling, Causal Inference, and Social Science",
		"time": "2015-03-09T09:46:20Z",
		"href": "http://andrewgelman.com/2015/03/07/interactive-demonstrations-linear-gaussian-process-regressions/"
	},
	{
		"cluster": 15,
		"tags": [
			"dsp",
			"dft",
			"fft",
			"mathematics",
			"digitalsignalprocessing",
			"signals",
			"signalprocessing",
			"fourier",
			"transform",
			"fouriertransform"
		],
		"y": -9.087685165138263,
		"x": -3.6432532634010624,
		"extended": "",
		"description": "Circles Sines and Signals - Introduction",
		"time": "2015-03-07T13:42:09Z",
		"href": "http://jackschaedler.github.io/circles-sines-signals/index.html"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"ux",
			"usability",
			"difficulty",
			"mastery"
		],
		"y": 1.2867695026930128,
		"x": 1.2169186102001377,
		"extended": "",
		"description": "Why we should design things to be difficult to use | Brian Millar | Comment is free | The Guardian",
		"time": "2015-03-06T12:58:34Z",
		"href": "http://www.theguardian.com/commentisfree/2015/mar/04/why-we-should-design-things-to-be-difficult-mastery"
	},
	{
		"cluster": 1,
		"tags": [
			"destruction",
			"acoustics",
			"sound",
			"iamsittinginaroom",
			"music"
		],
		"y": -9.359029595075958,
		"x": 4.2526660329979356,
		"extended": "",
		"description": "I am sitting in a room | The Sound Blog",
		"time": "2015-03-05T16:39:59Z",
		"href": "https://acousticengineering.wordpress.com/2014/04/21/i-am-sitting-in-a-room/"
	},
	{
		"cluster": 1,
		"tags": [
			"destruction",
			"creativity",
			"culture",
			"art",
			"noise",
			"music",
			"packaging"
		],
		"y": -10.333996764408282,
		"x": 2.74390620423811,
		"extended": "",
		"description": "The Quietus | Opinion | The Quietus Essay | Sonic Sabotage: The Noisy History Of Auto-Destructive Music",
		"time": "2015-03-05T16:19:31Z",
		"href": "http://thequietus.com/articles/17368-auto-destructive-music-art"
	},
	{
		"cluster": 13,
		"tags": [
			"keynes",
			"economist",
			"economics",
			"history"
		],
		"y": 7.882276356163993,
		"x": 7.4713965584071,
		"extended": "s’s Universal Man: The Seven Lives of John Maynard ",
		"description": "Seven things you might not know about John Maynard Keynes | Books | The Guardian",
		"time": "2015-03-05T10:55:31Z",
		"href": "http://www.theguardian.com/books/2015/mar/05/seven-things-john-maynard-keynes"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"validation",
			"bond",
			"typelevel",
			"programming",
			"functional",
			"clever"
		],
		"y": 1.7767465553340307,
		"x": -7.580325033264333,
		"extended": "",
		"description": "bond/README.md at master · fwbrasil/bond",
		"time": "2015-03-04T08:00:02Z",
		"href": "https://github.com/fwbrasil/bond/blob/master/README.md"
	},
	{
		"cluster": 10,
		"tags": [
			"history",
			"minersstrike",
			"politics",
			"bastards",
			"newscorporation",
			"thesun",
			"policecorruption",
			"thatcher",
			"mi5"
		],
		"y": 6.250563502032956,
		"x": 12.20490538646879,
		"extended": "",
		"description": "New Left Project | The Breaking of the British Working Class",
		"time": "2015-03-03T10:23:56Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/the_breaking_of_the_british_working_class"
	},
	{
		"cluster": 15,
		"tags": [
			"dsp",
			"mathematics",
			"education",
			"visualisation",
			"signalprocessing",
			"digitalsignalprocessing",
			"discretefouriertransform",
			"fouriertransform"
		],
		"y": -9.010171263479071,
		"x": -3.8038641174665435,
		"extended": "",
		"description": "Circles Sines and Signals - Introduction",
		"time": "2015-03-03T08:11:34Z",
		"href": "http://jackschaedler.github.io/circles-sines-signals/"
	},
	{
		"cluster": 13,
		"tags": [
			"debt",
			"technilogy",
			"epthompson",
			"politics",
			"economics",
			"righttothenetwork"
		],
		"y": 8.86756074003444,
		"x": 8.794725645336346,
		"extended": "",
		"description": "New Left Project | The Moral Economy of the Twenty-First Century Debtor: Revisiting E.P. Thompson in an Online World",
		"time": "2015-03-02T08:13:35Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/the_moral_economy_of_the_twenty_first_century_debtor"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"libertarianism",
			"crime",
			"internet",
			"economics",
			"drugs",
			"silkroad",
			"hypocrisy"
		],
		"y": 8.478274288392184,
		"x": 8.874230846511354,
		"extended": "",
		"description": "The reluctant king of the hidden internet – Henry Farrell – Aeon",
		"time": "2015-02-26T14:14:34Z",
		"href": "http://aeon.co/magazine/technology/on-the-high-seas-of-the-hidden-internet/"
	},
	{
		"cluster": 13,
		"tags": [
			"trickledown",
			"economics",
			"politics",
			"laffercurve",
			"taxation",
			"inequality",
			"minnesota"
		],
		"y": 8.727587185110279,
		"x": 9.351755083271895,
		"extended": "",
		"description": "This Billionaire Governor Taxed the Rich and Raised the Minimum Wage. Now, His State's Economy Is One of the Best in the Country",
		"time": "2015-02-26T13:38:27Z",
		"href": "http://readersupportednews.org/opinion2/277-75/28729-this-billionaire-governor-taxed-the-rich-and-raised-the-minimum-wage-now-his-states-economy-is-one-of-the-best-in-the-country"
	},
	{
		"cluster": 2,
		"tags": [
			"reinforcementlearning",
			"markovdecisionprocess",
			"machinelearning",
			"computerscience",
			"mdp",
			"bellmansequation"
		],
		"y": -0.980346757590277,
		"x": -4.9869668562523195,
		"extended": "",
		"description": "Welcome to Epstein's Blog",
		"time": "2015-02-26T13:20:54Z",
		"href": "http://nathanepstein.github.io/jekyll/update/2015/02/22/MDP.html"
	},
	{
		"cluster": 10,
		"tags": [
			"postmodernism",
			"politics",
			"marxism",
			"history",
			"class",
			"socialtheory",
			"sociology",
			"criticism",
			"poststructuralism"
		],
		"y": 5.54263834479184,
		"x": 8.85118009895585,
		"extended": "",
		"description": "All That Is Solid ...: The Postmodern Effacement of Class",
		"time": "2015-02-26T13:05:02Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2015/02/the-postmodern-effacement-of-class.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"history",
			"labour",
			"milliband",
			"thatcher"
		],
		"y": 6.19571662356278,
		"x": 12.730072625305626,
		"extended": "",
		"description": "All That Is Solid ...: Is Ed Miliband the Next Margaret Thatcher?",
		"time": "2015-02-26T12:46:58Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2015/02/is-ed-miliband-next-margaret-thatcher.html"
	},
	{
		"cluster": 17,
		"tags": [
			"theano",
			"gpu",
			"optimization",
			"python",
			"machinelearning",
			"gpufromhost",
			"programming",
			"computerscience"
		],
		"y": 0.7078584838857038,
		"x": -5.232294060905474,
		"extended": "",
		"description": "brain of mat kelcey",
		"time": "2015-02-25T20:58:30Z",
		"href": "http://matpalm.com/blog/2015/02/22/the_curse_of_gpufromhost/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"programming",
			"systems"
		],
		"y": 4.818916641886869,
		"x": -5.793068391480627,
		"extended": "",
		"description": "Meta-design: The intersection of art, design, and computation - O'Reilly Radar",
		"time": "2015-02-24T14:26:01Z",
		"href": "http://radar.oreilly.com/2015/02/meta-design-the-intersection-of-art-design-and-computation.html"
	},
	{
		"cluster": 10,
		"tags": [
			"liverpool",
			"militanttendency",
			"politics",
			"history",
			"democracy",
			"government",
			"socialism",
			"militant"
		],
		"y": 3.8985922925819176,
		"x": 8.94701743136158,
		"extended": "",
		"description": "Liverpool - Network UK - World Service Radio Archive Prototype",
		"time": "2015-02-23T16:14:48Z",
		"href": "http://worldservice.prototyping.bbc.co.uk/programmes/XO268725"
	},
	{
		"cluster": 10,
		"tags": [
			"history",
			"politics",
			"militant",
			"militanttendency",
			"liverpool",
			"council"
		],
		"y": 3.975310104264273,
		"x": 8.913039406985847,
		"extended": "",
		"description": "Liverpools' crisis - a fight between a conservative government and labour city council - Network UK - World Service Radio Archive Prototype",
		"time": "2015-02-23T15:41:44Z",
		"href": "http://worldservice.prototyping.bbc.co.uk/programmes/X0204274"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"dependencyinjection",
			"di",
			"softwareengineering"
		],
		"y": 5.784342246994073,
		"x": -2.8299536603758666,
		"extended": "",
		"description": "Ruminations of a Programmer: Scala - To DI or not to DI",
		"time": "2015-02-23T15:30:04Z",
		"href": "http://debasishg.blogspot.co.uk/2008/02/scala-to-di-or-not-to-di.html"
	},
	{
		"cluster": 10,
		"tags": [
			"morozov",
			"politics",
			"data",
			"privacy",
			"righttothenetwork",
			"marxism",
			"internet",
			"ownership"
		],
		"y": 4.394336165967617,
		"x": 6.889484102276521,
		"extended": "for. On the one hand, we can foresee these companies extending their reach ever further into everyday life, to a point where it would become difficult to even articulate why you would want a different model, since our use of these technologies and the politics embedded in them also permits or restricts our ways of thinking about how to live. On the other hand, we can speculate about a utopian future in which technology plays the role that back in the sixties Murray Bookchin accorded it in his essays in Post-Scarcity Anarchism: helping us to live with abundance.",
		"description": "New Left Review - Evgeny Morozov: Socialize the Data Centres!",
		"time": "2015-02-23T13:37:22Z",
		"href": "http://newleftreview.org/II/91/evgeny-morozov-socialize-the-data-centres"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"innovation",
			"capitalism",
			"nanotechnology",
			"research",
			"marxism"
		],
		"y": 6.0995694434243335,
		"x": 9.196833792576472,
		"extended": "",
		"description": "▶ BBC World Service - The Forum, 02/05/2010",
		"time": "2015-02-23T10:53:00Z",
		"href": "http://www.bbc.co.uk/programmes/p0079y52"
	},
	{
		"cluster": 10,
		"tags": [
			"punchingup",
			"politics",
			"culture"
		],
		"y": -0.02471176219913248,
		"x": 10.60892430324249,
		"extended": "",
		"description": "Stumbling and Mumbling: Punching up",
		"time": "2015-02-22T17:12:16Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/02/punching-up.html"
	},
	{
		"cluster": 13,
		"tags": [
			"labour",
			"capital",
			"economics",
			"politics",
			"humancapital"
		],
		"y": 9.202084019501031,
		"x": 10.723740651329143,
		"extended": "",
		"description": "globalinequality: On \"human capital\" one more time",
		"time": "2015-02-22T16:56:46Z",
		"href": "http://glineq.blogspot.co.uk/2015/02/on-human-capital-one-more-time.html?m=1"
	},
	{
		"cluster": 13,
		"tags": [
			"humancapital",
			"capital",
			"labour",
			"economics",
			"language",
			"culture",
			"politics",
			"nomenclature"
		],
		"y": 9.277342561310036,
		"x": 10.858844317856246,
		"extended": "",
		"description": "Junk the Phrase Human Capital | Al Jazeera America",
		"time": "2015-02-22T16:35:13Z",
		"href": "http://america.aljazeera.com/opinions/2015/2/junk-the-phrase-human-capital.html"
	},
	{
		"cluster": 2,
		"tags": [
			"depression",
			"health",
			"mentalhealth",
			"suicide",
			"men",
			"male"
		],
		"y": 0.583930586682218,
		"x": 7.010022988763058,
		"extended": "",
		"description": "Men do cry: one man’s experience of depression | Society | The Guardian",
		"time": "2015-02-22T11:16:13Z",
		"href": "http://www.theguardian.com/society/2015/feb/22/men-do-cry-depression-matt-haig-reasons-to-stay-alive"
	},
	{
		"cluster": 10,
		"tags": [
			"davidharvey",
			"politics",
			"technology",
			"nanotechnology",
			"scale"
		],
		"y": 6.266473094026394,
		"x": 10.399834085461624,
		"extended": "",
		"description": "Innovation: the mysterious realm of nanotechnology. - The Forum - World Service Radio Archive Prototype",
		"time": "2015-02-22T10:59:09Z",
		"href": "http://worldservice.prototyping.bbc.co.uk/programmes/X0906678"
	},
	{
		"cluster": 14,
		"tags": [
			"urbanism",
			"righttothecity",
			"planning",
			"design",
			"architecture",
			"urban",
			"environment",
			"culture",
			"regeneration",
			"gentrification"
		],
		"y": -1.573258192680826,
		"x": 9.174348133284177,
		"extended": "",
		"description": "BBC iPlayer - London - I Love This Dirty Town",
		"time": "2015-02-21T16:19:39Z",
		"href": "http://www.bbc.co.uk/iplayer/episode/p00rzvqv/i-love-this-dirty-town#group=p00synd3"
	},
	{
		"cluster": 10,
		"tags": [
			"health",
			"mentalhealth",
			"urbanism",
			"geography",
			"politics",
			"architecture",
			"suicide"
		],
		"y": -1.0474934758603938,
		"x": 8.798642745787049,
		"extended": "",
		"description": "Why Are British and Irish Suicide Hotspots Allowed to Exist? | VICE | United States",
		"time": "2015-02-19T22:45:25Z",
		"href": "http://www.vice.com/read/suicide-is-about-the-how-as-well-as-the-why-233"
	},
	{
		"cluster": 13,
		"tags": [
			"greece",
			"euro",
			"economics",
			"politics"
		],
		"y": 8.24551730037034,
		"x": 10.220926669236583,
		"extended": "One of Greece’s most expensive outgoings is the interest on its debt. The country pays twice as much as the EU average on the servicing of debt - a debt which, according to Global Research Canada, was “incurred not to pay for relatively high levels of expenditure, but to cover for relatively low levels of revenue”.4 In addition, successive Greek governments have spent colossal amounts on military expenditure, and the country has the highest levels of defence spending (as a percentage of GDP) of any Nato member except the United States. Most Greek defence contracts are with the USA, but over the last 10 years France and Germany have done their best to link loans to successive Greek governments with contracts for military expenditure with their respective arms and electronics industries.\r\n\r\n",
		"description": "The debt is illegitimate - Weekly Worker",
		"time": "2015-02-19T17:39:13Z",
		"href": "http://weeklyworker.co.uk/worker/1046/the-debt-is-illegitimate/"
	},
	{
		"cluster": 10,
		"tags": [
			"jennyjones",
			"culture",
			"geography",
			"gentrification",
			"politics",
			"urbanism",
			"righttothecity",
			"regeneration"
		],
		"y": -1.2612510099204162,
		"x": 9.108499877208251,
		"extended": "",
		"description": "London’s industry is being cleared for a luxury flat monoculture | Left Foot Forward",
		"time": "2015-02-19T11:47:06Z",
		"href": "http://leftfootforward.org/2015/02/londons-industry-is-being-cleared-for-a-luxury-flat-monoculture/"
	},
	{
		"cluster": 5,
		"tags": [
			"mahout",
			"spark",
			"scala",
			"linearregression",
			"ols",
			"regression",
			"statistics",
			"distributedsystems",
			"machinelearning"
		],
		"y": 4.865439353695638,
		"x": -0.2844374414972059,
		"extended": "val drmXwithBiasColumn = drmX.mapBlock(ncol = drmX.ncol + 1) {\r\n  case(keys, block) =>\r\n    // create a new block with an additional column\r\n    val blockWithBiasColumn = block.like(block.nrow, block.ncol + 1)\r\n    // copy data from current block into the new block\r\n    blockWithBiasColumn(::, 0 until block.ncol) := block\r\n    // last column consists of ones\r\n    blockWithBiasColumn(::, block.ncol) := 1\r\n\r\n    keys -> blockWithBiasColumn\r\n}",
		"description": "Apache Mahout: Scalable machine learning and data mining",
		"time": "2015-02-19T09:54:30Z",
		"href": "http://mahout.apache.org/users/sparkbindings/play-with-shell.html"
	},
	{
		"cluster": 13,
		"tags": [
			"architecture",
			"business",
			"design",
			"homelessness",
			"exclusion",
			"discrimination",
			"povdrty",
			"politics",
			"economics",
			"urbanism",
			"righttothecity",
			"architecturesofcontrol"
		],
		"y": 8.823818293830726,
		"x": 7.534940174037843,
		"extended": "",
		"description": "Defensive architecture: keeping poverty unseen and deflecting our guilt | Society | The Guardian",
		"time": "2015-02-18T20:19:26Z",
		"href": "http://www.theguardian.com/society/2015/feb/18/defensive-architecture-keeps-poverty-undeen-and-makes-us-more-hostile"
	},
	{
		"cluster": 2,
		"tags": [
			"word2vec",
			"machinelearning",
			"nlp",
			"languagemodel",
			"probability",
			"language"
		],
		"y": -0.7615531326043696,
		"x": 1.6806825740116482,
		"extended": "",
		"description": "andy's blog — Why word2vec works.",
		"time": "2015-02-18T13:33:24Z",
		"href": "http://andyljones.tumblr.com/post/111299309808/why-word2vec-works"
	},
	{
		"cluster": 3,
		"tags": [
			"ambience",
			"art",
			"sound",
			"politics",
			"dub",
			"culture",
			"criticism"
		],
		"y": -1.6565056809360554,
		"x": 11.914413975131062,
		"extended": "Ambience, however, dematerializes away from ideas and relationships and toward an a-signifying, and a-signifiable, experience that pretends to be inoculated from real-world engagements. The ambient portrays itself as a-social, un-institutional, a-political, unbeholden to economics. If ambience is about bliss, it’s surely the bliss of ignorance.",
		"description": "Seth Kim-Cohen | EAR ROOM",
		"time": "2015-02-18T10:41:54Z",
		"href": "https://earroom.wordpress.com/2013/12/04/seth-kim-cohen/"
	},
	{
		"cluster": 13,
		"tags": [
			"EU",
			"europe",
			"economics",
			"greece",
			"euro",
			"politics"
		],
		"y": 8.157676447610367,
		"x": 10.41616823220223,
		"extended": "",
		"description": "New Left Project | Europe’s Stark Choice: Reform or Collapse",
		"time": "2015-02-18T10:23:35Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/europes_stark_choice_reform_or_collapse"
	},
	{
		"cluster": 5,
		"tags": [
			"mathematics",
			"informationtheory",
			"information",
			"codingtheory",
			"theory",
			"statistics",
			"probability",
			"shannon",
			"coding",
			"noise"
		],
		"y": -5.072779636948366,
		"x": -4.614307294166918,
		"extended": "",
		"description": "A Proofless Introduction to Information Theory | Math ∩ Programming",
		"time": "2015-02-18T10:19:02Z",
		"href": "http://jeremykun.com/2015/02/16/a-proofless-introduction-to-information-theory/"
	},
	{
		"cluster": 2,
		"tags": [
			"kaggle",
			"search",
			"personalisation",
			"yandex",
			"learningtorank",
			"featureengineering",
			"searchpersonalisation",
			"informationretrieval",
			"lambdamart"
		],
		"y": -4.56276315943866,
		"x": 7.745032284501514,
		"extended": "",
		"description": "Learning to rank for personalised search (Yandex Search Personalisation – Kaggle Competition Summary – Part 2) | Yanir Seroussi",
		"time": "2015-02-18T10:09:36Z",
		"href": "http://yanirseroussi.com/2015/02/11/learning-to-rank-for-personalised-search-yandex-search-personalisation-kaggle-competition-summary-part-2/"
	},
	{
		"cluster": 2,
		"tags": [
			"kaggle",
			"yandex",
			"informationretrieval",
			"learningtorank",
			"ndcg",
			"utility",
			"usersatisfaction",
			"machinelearning",
			"search"
		],
		"y": -4.563815916318785,
		"x": 7.744356836597675,
		"extended": "",
		"description": "Is thinking like a search engine possible? (Yandex search personalisation – Kaggle competition summary – part 1) | Yanir Seroussi",
		"time": "2015-02-18T10:02:36Z",
		"href": "http://yanirseroussi.com/2015/01/29/is-thinking-like-a-search-engine-possible-yandex-search-personalisation-kaggle-competition-summary-part-1/"
	},
	{
		"cluster": 10,
		"tags": [
			"marxism",
			"politics",
			"capitalism",
			"europe",
			"greece",
			"yanisvaroufakis"
		],
		"y": 6.6908147568631104,
		"x": 9.955550385002153,
		"extended": "",
		"description": "Yanis Varoufakis: How I became an erratic Marxist | News | The Guardian",
		"time": "2015-02-18T09:50:17Z",
		"href": "http://www.theguardian.com/news/2015/feb/18/yanis-varoufakis-how-i-became-an-erratic-marxist"
	},
	{
		"cluster": 17,
		"tags": [
			"streams",
			"akka",
			"reactive",
			"async",
			"programming",
			"dataflow",
			"FRP",
			"scala"
		],
		"y": 5.976797862162466,
		"x": -1.4141308449018908,
		"extended": "",
		"description": "Dr. Streamlove, or: How I Learned to Stop Worrying and Love the Flow",
		"time": "2015-02-16T12:18:35Z",
		"href": "http://www.infoq.com/presentations/streaming-data-back-pressure"
	},
	{
		"cluster": 10,
		"tags": [
			"bbc",
			"technology",
			"innovation",
			"archives",
			"publicspace",
			"righttothenetwork",
			"politics",
			"culture",
			"tonyageh"
		],
		"y": 0.12266448519498395,
		"x": 9.500147172782583,
		"extended": "",
		"description": "The BBC, The Licence fee, and Digital Public Space [pdf[",
		"time": "2015-02-16T11:01:27Z",
		"href": "https://www.royalholloway.ac.uk/harc/documents/pdf/tonyageh.pdf"
	},
	{
		"cluster": 15,
		"tags": [
			"machine",
			"learning",
			"classification",
			"margin",
			"svm",
			"supportvectormachine",
			"vcdimension",
			"theoreticalbounds",
			"theory",
			"mathematics"
		],
		"y": -7.799676264360544,
		"x": -5.568857498168636,
		"extended": "",
		"description": "How sure are you that large margin implies low VC dimension? | Win-Vector Blog",
		"time": "2015-02-15T11:26:29Z",
		"href": "http://www.win-vector.com/blog/2015/02/how-sure-are-you-that-large-margin-implies-low-vc-dimension/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"functional",
			"domain",
			"modelling",
			"programming",
			"invariant",
			"phantomtypes",
			"phantom",
			"types",
			"kleisli",
			"arrow",
			"monad",
			"static",
			"typing"
		],
		"y": -2.454970527578517,
		"x": -9.247477993511621,
		"extended": "",
		"description": "Ruminations of a Programmer: Functional Patterns in Domain Modeling - Composing a domain workflow with statically checked invariants",
		"time": "2015-02-13T09:28:53Z",
		"href": "http://debasishg.blogspot.co.uk/2015/02/functional-patterns-in-domain-modeling.html"
	},
	{
		"cluster": 10,
		"tags": [
			"rules",
			"paperwork",
			"bureaucracy",
			"culture",
			"politics",
			"consumerism",
			"work",
			"manegerialism"
		],
		"y": 0.5170584576459591,
		"x": 11.049342023128245,
		"extended": "",
		"description": "The Utopia of Rules – Why We're Drowning in More Paperwork Than Ever Before | VICE | United Kingdom",
		"time": "2015-02-12T12:34:57Z",
		"href": "http://www.vice.com/en_uk/read/the-dark-side-of-bureaucracy-190"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"inequality",
			"history",
			"culture",
			"society"
		],
		"y": 0.5480795821913218,
		"x": 12.4513466641434,
		"extended": "",
		"description": "Stumbling and Mumbling: Created by history",
		"time": "2015-02-12T12:34:14Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/02/created-by-history.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"voting",
			"labour"
		],
		"y": 6.218806504442208,
		"x": 13.15145062739372,
		"extended": "",
		"description": "All That Is Solid ...: The Unavoidable Horizon of Lesser Evilism",
		"time": "2015-02-11T18:09:31Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2015/02/the-unavoidable-horizon-of-lesser.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"vcr",
			"testing",
			"http",
			"mock",
			"betamax",
			"programming"
		],
		"y": 6.4573827112661,
		"x": -3.1739520200476896,
		"extended": "",
		"description": "Testing HTTP requests with Betamax in Scala",
		"time": "2015-02-10T14:27:13Z",
		"href": "http://www.scottlogic.com/blog/2013/07/18/betamax-in-scala.html"
	},
	{
		"cluster": 10,
		"tags": [
			"internet",
			"technology",
			"politics",
			"labour",
			"capitalism",
			"sharingeconomy",
			"andrewkeen"
		],
		"y": 7.008230417323418,
		"x": 12.201573357444753,
		"extended": "Not much on social media is truly social, he argues. “We personalise,” he says. “So, you know, it’s kind of social, but in a very personalised way … One of the most troubling things for me about social media is the lack of diversity. It’s like going to some expensive US college. You only meet people like yourself.” Then there’s the whole privacy issue: “The internet is becoming structurally parochial, like a village. So not only does everyone from the NSA to the big internet companies know pretty much everything there is to know about us, but we’re all clustering in these tighter and tighter little ideological and cultural networks. There’s no serendipity, no stumbling upon random people or random ideas. Everything is pre-ordained; you’re served with what they know will suit you.”",
		"description": "The great internet swindle: ever get the feeling you've been cheated? | Technology | The Guardian",
		"time": "2015-02-10T12:10:52Z",
		"href": "http://www.theguardian.com/technology/2015/feb/09/andrew-keen-internet-not-answer-interview"
	},
	{
		"cluster": 14,
		"tags": [
			"statistics",
			"reviews",
			"ratings",
			"UX",
			"interaction",
			"design",
			"data"
		],
		"y": -3.297137490014591,
		"x": 0.0412791580688491,
		"extended": "",
		"description": "Bayesian Book Forecasting: Experiment 3",
		"time": "2015-02-09T09:46:48Z",
		"href": "http://stephsun.com/metascores.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"capitalism",
			"archives",
			"investment",
			"culture",
			"policy"
		],
		"y": 0.22085136559283775,
		"x": 10.901755316408703,
		"extended": "",
		"description": "Go digital by all means, but don't bring the venture capitalists in to do it | Technology | The Guardian",
		"time": "2015-02-06T16:42:19Z",
		"href": "http://www.theguardian.com/technology/2015/feb/06/go-digital-by-all-means-but-dont-bring-the-venture-capitalists-in-to-do-it"
	},
	{
		"cluster": 10,
		"tags": [
			"london",
			"politics",
			"housing",
			"gentrification"
		],
		"y": 5.32224197095839,
		"x": 11.803150810066915,
		"extended": "",
		"description": "I'm Middle Class and Even I'm Being Pushed Out of London | VICE | United Kingdom",
		"time": "2015-02-06T08:15:29Z",
		"href": "http://www.vice.com/en_uk/read/im-middle-class-and-even-im-getting-exiled-by-new-london-748"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"welfarestate",
			"welfare",
			"neoliberalism",
			"charity",
			"socialenterprise",
			"thirdsector",
			"foodbanks"
		],
		"y": 7.487267002876936,
		"x": 9.647734490318715,
		"extended": "",
		"description": "Feeding into Scarcity | Jacobin",
		"time": "2015-02-05T21:43:39Z",
		"href": "https://www.jacobinmag.com/2015/02/britain-trussell-trust-austerity/"
	},
	{
		"cluster": 1,
		"tags": [
			"selfie",
			"art",
			"culture",
			"vernacular",
			"technology",
			"expression",
			"photography"
		],
		"y": -11.590828048105877,
		"x": 0.7604046297419846,
		"extended": "",
		"description": "Why we hate selfies so much | SE Smith | Comment is free | The Guardian",
		"time": "2015-02-05T17:01:09Z",
		"href": "http://www.theguardian.com/commentisfree/2015/feb/05/selfies-sexism-women"
	},
	{
		"cluster": 13,
		"tags": [
			"greece",
			"austerity",
			"economics",
			"politics",
			"debt",
			"moralhazard"
		],
		"y": 8.582246258191596,
		"x": 10.252935641369398,
		"extended": "",
		"description": "A Greek morality tale: why we need a global debt restructuring framework | Business | The Guardian",
		"time": "2015-02-05T08:24:42Z",
		"href": "http://www.theguardian.com/business/2015/feb/04/a-greek-morality-tale-global-debt-restructuring-framework"
	},
	{
		"cluster": 2,
		"tags": [
			"modernism",
			"socialscience",
			"climatechange",
			"science"
		],
		"y": -3.3075152260476024,
		"x": 2.6351873830537085,
		"extended": "",
		"description": "Climate change signals the end of the social sciences",
		"time": "2015-02-05T08:05:03Z",
		"href": "http://theconversation.com/climate-change-signals-the-end-of-the-social-sciences-11722"
	},
	{
		"cluster": 5,
		"tags": [
			"polling",
			"sampling",
			"error",
			"statistics",
			"science",
			"bias"
		],
		"y": -3.7096125519642897,
		"x": -1.9056151574483884,
		"extended": "",
		"description": "Straight talk about polling: Probability sampling can be helpful but it’s no magic bullet - The Washington Post",
		"time": "2015-02-04T18:00:44Z",
		"href": "http://www.washingtonpost.com/blogs/monkey-cage/wp/2015/02/04/straight-talk-about-polling-probability-sampling-can-be-helpful-but-its-no-magic-bullet/"
	},
	{
		"cluster": 10,
		"tags": [
			"managerialism",
			"ideology",
			"capitalism",
			"politics",
			"business"
		],
		"y": 6.037890438832793,
		"x": 8.977680184678857,
		"extended": "",
		"description": "Stumbling and Mumbling: Anti-business",
		"time": "2015-02-04T17:49:49Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/02/anti-business.html"
	},
	{
		"cluster": 0,
		"tags": [
			"hosting",
			"free",
			"open",
			"privacy",
			"cloud",
			"server",
			"security",
			"operations",
			"newsroom",
			"docker",
			"containers",
			"virtualisation"
		],
		"y": -8.703918847949785,
		"x": 9.268169163967304,
		"extended": "",
		"description": "Sandstorm",
		"time": "2015-02-04T17:16:05Z",
		"href": "https://sandstorm.io/"
	},
	{
		"cluster": 2,
		"tags": [
			"objectbasedmedia",
			"objectbased",
			"broadcasting",
			"responsivedesign",
			"interface",
			"adaptation",
			"interfaceadaptation",
			"phd",
			"narrative",
			"media"
		],
		"y": -3.252592631668751,
		"x": 3.9960813206276393,
		"extended": "",
		"description": "BBC Blogs - INTERNET BLOG - Perceptive Radio: Object-based broadcasting",
		"time": "2015-02-04T13:43:51Z",
		"href": "http://www.bbc.co.uk/blogs/internet/entries/ed27207c-c0c2-3927-835b-ccd7111d32e3"
	},
	{
		"cluster": 2,
		"tags": [
			"bbc",
			"perceptivemedia",
			"phd",
			"interfaceadaptation",
			"adaptation",
			"interfaces",
			"broadcast",
			"narrative",
			"storytelling"
		],
		"y": -3.29784112392043,
		"x": 4.085384207903135,
		"extended": "",
		"description": "BBC - Research and Development: What is Perceptive Media?",
		"time": "2015-02-04T13:40:39Z",
		"href": "http://www.bbc.co.uk/blogs/legacy/researchanddevelopment/2012/07/what-is-perceptive-media.shtml"
	},
	{
		"cluster": 8,
		"tags": [
			"metrics",
			"journalism",
			"culture",
			"newsroom",
			"ethnography",
			"internet"
		],
		"y": -4.296542044034561,
		"x": 10.869344125085377,
		"extended": "",
		"description": "When it comes to chasing clicks, journalists say one thing but feel pressure to do another » Nieman Journalism Lab",
		"time": "2015-02-04T13:15:53Z",
		"href": "http://www.niemanlab.org/2014/08/when-it-comes-to-chasing-clicks-journalists-say-one-thing-but-feel-pressure-to-do-another/"
	},
	{
		"cluster": 2,
		"tags": [
			"news",
			"enps",
			"systems",
			"newroom",
			"technology",
			"software"
		],
		"y": -3.701090377022718,
		"x": 5.648479160539132,
		"extended": "",
		"description": "4Learning - Breaking the News - Channel 4 newsroom - News technology - ENPS",
		"time": "2015-02-04T13:15:30Z",
		"href": "http://www.channel4.com/learning/breakingthenews/schools/channel4newsroom/ntenps.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"variance",
			"moments",
			"function",
			"analysis"
		],
		"y": -3.553879465310985,
		"x": -2.4705001087361214,
		"extended": "",
		"description": "Variance of a function of one random variable - Cross Validated",
		"time": "2015-02-04T10:30:00Z",
		"href": "http://stats.stackexchange.com/questions/5782/variance-of-a-function-of-one-random-variable"
	},
	{
		"cluster": 13,
		"tags": [
			"society",
			"politics",
			"economics"
		],
		"y": 3.752181335701882,
		"x": 12.221454991291267,
		"extended": "",
		"description": "Some deny society exists. Let’s prove them wrong | George Monbiot | Comment is free | The Guardian",
		"time": "2015-02-03T19:08:13Z",
		"href": "http://www.theguardian.com/commentisfree/2015/feb/03/society-consumerism-support"
	},
	{
		"cluster": 5,
		"tags": [
			"pymc",
			"scikitlearn",
			"bayesian",
			"regression",
			"statistics",
			"LASSO",
			"ridgeregression",
			"ridge",
			"priors",
			"montecarlo",
			"computerscience"
		],
		"y": -1.7386704772125032,
		"x": 0.6946848605950572,
		"extended": "",
		"description": "Austin Rochford - Prior Distributions for Bayesian Regression Using PyMC",
		"time": "2015-02-03T09:50:10Z",
		"href": "http://www.austinrochford.com/posts/2013-09-02-prior-distributions-for-bayesian-regression-using-pymc.html"
	},
	{
		"cluster": 10,
		"tags": [
			"housing",
			"finance",
			"politics"
		],
		"y": 6.465732891536776,
		"x": 10.702766248717927,
		"extended": "",
		"description": "Proprietors and Proletarians | Jacobin",
		"time": "2015-01-31T10:39:36Z",
		"href": "https://www.jacobinmag.com/2015/01/spain-evictions-pah/"
	},
	{
		"cluster": 1,
		"tags": [
			"wearables",
			"technology",
			"culture",
			"interruption",
			"attention"
		],
		"y": -7.837239868501511,
		"x": 6.463695983057044,
		"extended": "",
		"description": "Let’s Ignore Each Other Together — re:form — Medium",
		"time": "2015-01-30T13:18:43Z",
		"href": "https://medium.com/re-form/lets-ignore-each-other-together-d7cf46a8a8ad"
	},
	{
		"cluster": 16,
		"tags": [
			"phd",
			"privacy",
			"data",
			"personaldata",
			"culture",
			"ethics"
		],
		"y": -2.251600338216212,
		"x": 10.06363309868522,
		"extended": "",
		"description": "European data protection day - Blog - BBC R&D",
		"time": "2015-01-30T09:08:13Z",
		"href": "http://www.bbc.co.uk/rd/blog/2015/01/data-protection-day"
	},
	{
		"cluster": 9,
		"tags": [
			"haskell",
			"linux",
			"shellscripting",
			"shell",
			"scripting",
			"bash"
		],
		"y": -5.437191293148521,
		"x": 3.3866702444643733,
		"extended": "",
		"description": "Haskell for all: Use Haskell for shell scripting",
		"time": "2015-01-30T08:59:52Z",
		"href": "http://www.haskellforall.com/2015/01/use-haskell-for-shell-scripting.html"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"politics",
			"greenparty",
			"greens",
			"uk",
			"election"
		],
		"y": 3.3431809527180363,
		"x": 9.878390801238323,
		"extended": "",
		"description": "Green-tinted glasses - Weekly Worker",
		"time": "2015-01-29T21:39:14Z",
		"href": "http://weeklyworker.co.uk/worker/1043/green-tinted-glasses/"
	},
	{
		"cluster": 13,
		"tags": [
			"uk",
			"politics",
			"economics",
			"gdppercapita",
			"gdp",
			"growth",
			"recession",
			"government"
		],
		"y": 9.232614232441765,
		"x": 8.65264494827252,
		"extended": "",
		"description": "mainly macro: To all UK journalists",
		"time": "2015-01-29T20:54:03Z",
		"href": "http://mainlymacro.blogspot.co.uk/2015/01/to-all-uk-journalists.html"
	},
	{
		"cluster": 1,
		"tags": [
			"sound",
			"art",
			"language",
			"music",
			"soundart",
			"speech",
			"kalahari",
			"clicklanguage",
			"click"
		],
		"y": -10.454535432034854,
		"x": 2.9703058873055754,
		"extended": "",
		"description": "Endangered 'Click' Languages of The Kalahari - Hearing Voices - World Service Radio Archive Prototype",
		"time": "2015-01-29T12:05:01Z",
		"href": "http://worldservice.prototyping.bbc.co.uk/programmes/X0685959"
	},
	{
		"cluster": 10,
		"tags": [
			"williammorris",
			"william",
			"morris",
			"politics",
			"music",
			"socialism",
			"redwedge",
			"darrenhayman"
		],
		"y": 2.79762259665248,
		"x": 9.711291877769506,
		"extended": "",
		"description": "The Quietus | Features | A Quietus Interview | Chants For Socialists: Darren Hayman On William Morris",
		"time": "2015-01-28T15:32:41Z",
		"href": "http://thequietus.com/articles/17112-daren-hayman-interview-william-morris"
	},
	{
		"cluster": 10,
		"tags": [
			"class",
			"ecomics",
			"society",
			"socioeconomicstatus",
			"ses",
			"performativity",
			"culture",
			"politics",
			"marxism"
		],
		"y": 0.8143666448165618,
		"x": 12.906064727126912,
		"extended": "",
		"description": "Class and Socioeconomic Status: Why Organizers Should Make a Distinction",
		"time": "2015-01-28T15:28:22Z",
		"href": "http://www.thenorthstar.info/?p=12143"
	},
	{
		"cluster": 16,
		"tags": [
			"bandit",
			"algorithm",
			"testing",
			"statistics",
			"analytics",
			"data"
		],
		"y": -3.613679832313127,
		"x": -2.3138169927897088,
		"extended": "",
		"description": "Don't use Bandit Algorithms - they probably won't work for you - Chris Stucchio",
		"time": "2015-01-28T09:52:02Z",
		"href": "https://www.chrisstucchio.com/blog/2015/dont_use_bandits.html"
	},
	{
		"cluster": 2,
		"tags": [
			"documentary",
			"history",
			"finance",
			"banking",
			"thecity",
			"london",
			"city"
		],
		"y": -1.599491215954144,
		"x": 6.865978181006435,
		"extended": "",
		"description": "BBC iPlayer - London - Inside Story - 1976: The Market",
		"time": "2015-01-27T20:15:14Z",
		"href": "http://www.bbc.co.uk/iplayer/episode/p00rzvhb/inside-story-1976-the-market#group=p00synd3"
	},
	{
		"cluster": 1,
		"tags": [
			"soho",
			"london",
			"history",
			"documentary",
			"culture",
			"geography"
		],
		"y": -1.863932963390922,
		"x": 7.631337673046681,
		"extended": "",
		"description": "BBC iPlayer - London - Just Another Day - Series 2: Soho",
		"time": "2015-01-27T18:42:39Z",
		"href": "http://www.bbc.co.uk/iplayer/episode/p00s1mq1/just-another-day-series-2-soho#group=p00synd3"
	},
	{
		"cluster": 10,
		"tags": [
			"unions",
			"geography",
			"politics",
			"urbanism",
			"suburbs",
			"sprawl",
			"urbansprawl"
		],
		"y": -1.1238787324263988,
		"x": 8.846385547319967,
		"extended": "",
		"description": "Sprawl Is the Most Inconspicuous Adversary of Labor Unions – Next City",
		"time": "2015-01-27T16:38:00Z",
		"href": "http://nextcity.org/daily/entry/labor-unions-city-construction-sprawl"
	},
	{
		"cluster": 10,
		"tags": [
			"language",
			"history",
			"politics",
			"terrorist",
			"terrorism"
		],
		"y": 0.5350842291855029,
		"x": 8.752111133251393,
		"extended": "",
		"description": "Is it time to stop using the word 'terrorist'? | Global | The Guardian",
		"time": "2015-01-27T15:12:15Z",
		"href": "http://www.theguardian.com/global/commentisfree/2015/jan/27/is-it-time-to-stop-using-the-word-terrorist"
	},
	{
		"cluster": 13,
		"tags": [
			"statistics",
			"politics",
			"economics",
			"measurement",
			"science",
			"evidence",
			"data"
		],
		"y": 8.397087857711277,
		"x": 9.906419453321934,
		"extended": "",
		"description": "Tim Harford — Article — The great data debate",
		"time": "2015-01-27T14:04:44Z",
		"href": "http://timharford.com/2015/01/the-great-data-debate/"
	},
	{
		"cluster": 2,
		"tags": [
			"audio",
			"tool",
			"loudness",
			"normalisation",
			"normalization",
			"ffmpeg",
			"r128gain",
			"ebur128",
			"r128",
			"ebu",
			"processing",
			"signal"
		],
		"y": -6.789841356451923,
		"x": 2.3563663473042187,
		"extended": "",
		"description": "R128GAIN",
		"time": "2015-01-27T12:10:12Z",
		"href": "http://r128gain.sourceforge.net/"
	},
	{
		"cluster": 2,
		"tags": [
			"loudness",
			"dynamic",
			"compression",
			"normalisation",
			"ebur128",
			"ebu",
			"audio",
			"sound",
			"perception"
		],
		"y": -6.879460714044628,
		"x": 2.378143872049103,
		"extended": "",
		"description": "Auphonic Blog: Audio loudness measurement and normalization with EBU R128 (Calm Act, ATSC A/85)",
		"time": "2015-01-27T12:08:42Z",
		"href": "https://auphonic.com/blog/2012/08/02/loudness-measurement-and-normalization-ebu-r128-calm-act/"
	},
	{
		"cluster": 10,
		"tags": [
			"adamcurtis",
			"documentary",
			"film",
			"journalism",
			"bitterlake",
			"politics",
			"history",
			"culture"
		],
		"y": -0.8382147033656737,
		"x": 10.886589211718608,
		"extended": "",
		"description": "Adam Curtis: 'I try to make the complexity and chaos intelligible' | Television & radio | The Guardian",
		"time": "2015-01-25T10:04:05Z",
		"href": "http://www.theguardian.com/tv-and-radio/2015/jan/24/adam-curtis-bitter-lake"
	},
	{
		"cluster": 13,
		"tags": [
			"greece",
			"economics",
			"poltiics",
			"democracy"
		],
		"y": 8.265140368686257,
		"x": 10.28230403603724,
		"extended": "",
		"description": "Some thoughts from Greece, before I enter the polling booth | sturdyblog",
		"time": "2015-01-25T09:37:49Z",
		"href": "https://sturdyblog.wordpress.com/2015/01/25/some-thoughts-from-greece-before-i-enter-the-polling-booth/"
	},
	{
		"cluster": 2,
		"tags": [
			"infosec",
			"encryption",
			"journalism",
			"journalists",
			"information",
			"security",
			"privacy",
			"technology",
			"newsroom"
		],
		"y": -3.724601612589004,
		"x": 5.612805420685654,
		"extended": "",
		"description": "Information Security - Committee to Protect Journalists",
		"time": "2015-01-22T18:08:22Z",
		"href": "https://cpj.org/reports/2012/04/information-security.php"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"newsroom",
			"encryption",
			"security",
			"cloud",
			"service",
			"vps",
			"containers",
			"hosting",
			"operations"
		],
		"y": -8.689513895475377,
		"x": 9.27697660460972,
		"extended": "",
		"description": "Encrypting Docker containers on a Virtual Server",
		"time": "2015-01-22T17:57:00Z",
		"href": "https://launchbylunch.com/posts/2014/Jan/13/encrypting-docker-on-digitalocean/"
	},
	{
		"cluster": 5,
		"tags": [
			"davidblei",
			"topicmodel",
			"machinelearning",
			"nlp",
			"humanities",
			"digitalhumanities",
			"study",
			"academia",
			"criticism",
			"technology",
			"computerscience",
			"statistics"
		],
		"y": -2.0222510163270693,
		"x": -5.681828281794228,
		"extended": "",
		"description": "» Topic Modeling and Digital Humanities Journal of Digital Humanities",
		"time": "2015-01-21T23:20:17Z",
		"href": "http://journalofdigitalhumanities.org/2-1/topic-modeling-and-digital-humanities-by-david-m-blei/"
	},
	{
		"cluster": 10,
		"tags": [
			"gentrification",
			"culture",
			"politics",
			"society",
			"identity"
		],
		"y": 0.795375856210864,
		"x": 12.02415779541367,
		"extended": "",
		"description": "I'm the enemy! - Salon.com",
		"time": "2015-01-21T23:04:40Z",
		"href": "http://www.salon.com/1999/10/29/yuppies/"
	},
	{
		"cluster": 10,
		"tags": [
			"syriza",
			"greece",
			"elections",
			"socialism",
			"politics",
			"europe"
		],
		"y": 7.800629792952282,
		"x": 10.861083449127117,
		"extended": "",
		"description": "A Historic Opportunity | Jacobin",
		"time": "2015-01-21T18:54:52Z",
		"href": "https://www.jacobinmag.com/2015/01/alexis-tsipras-interview-syriza/"
	},
	{
		"cluster": 10,
		"tags": [
			"graysonperry",
			"equality",
			"defaultman",
			"privilege",
			"gender",
			"inequality",
			"politics",
			"society",
			"culture"
		],
		"y": 0.6044490483765816,
		"x": 12.640274732741542,
		"extended": "",
		"description": "Grayson Perry: The rise and fall of Default Man",
		"time": "2015-01-21T15:20:32Z",
		"href": "http://www.newstatesman.com/culture/2014/10/grayson-perry-rise-and-fall-default-man"
	},
	{
		"cluster": 13,
		"tags": [
			"inequality",
			"economics",
			"politics",
			"wealth",
			"emergence",
			"complexadaptivesystems"
		],
		"y": 8.71421271579297,
		"x": 9.418583286530346,
		"extended": "",
		"description": "Stumbling and Mumbling: The 1%, c'est moi",
		"time": "2015-01-21T08:57:03Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/01/the-1-cest-moi.html"
	},
	{
		"cluster": 1,
		"tags": [
			"photography",
			"architecture",
			"history",
			"ww2",
			"britain",
			"music",
			"rave",
			"dance"
		],
		"y": -9.261792314881818,
		"x": 4.526922353171899,
		"extended": "",
		"description": "From World War I to the Rave Scene: Britain's Forgotten Wartime Structures | VICE | United States",
		"time": "2015-01-21T00:16:50Z",
		"href": "http://www.vice.com/read/the-last-stand-marc-wilson-983"
	},
	{
		"cluster": 12,
		"tags": [
			"chrome",
			"extension",
			"javascript",
			"background_script",
			"content_script",
			"development"
		],
		"y": 10.019756652778565,
		"x": -2.3369111155492264,
		"extended": "",
		"description": "javascript - Chrome Extension - Get DOM content - Stack Overflow",
		"time": "2015-01-19T14:07:25Z",
		"href": "http://stackoverflow.com/questions/19758028/chrome-extension-get-dom-content"
	},
	{
		"cluster": 5,
		"tags": [
			"programming",
			"bayesian",
			"statistics",
			"probabilistic",
			"computerscience",
			"machinelearning",
			"probability",
			"bayes",
			"mathematics"
		],
		"y": -2.2017769355851007,
		"x": -6.75417832386767,
		"extended": "",
		"description": "Bayesian Methods for Hackers",
		"time": "2015-01-18T13:39:41Z",
		"href": "http://camdavidsonpilon.github.io/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/"
	},
	{
		"cluster": 2,
		"tags": [
			"blackbox",
			"testing",
			"machinelearning",
			"predictive",
			"analytics",
			"evaluation",
			"validation",
			"product",
			"research"
		],
		"y": -4.168276818643827,
		"x": -1.2642102786215794,
		"extended": "<blockquote>Don’t Use Black-Box Testing to Select a Predictive Lead Scoring Vendor. The blinded nature of the test can defeat your true goal of closing more sales.</blockquote>",
		"description": "Don’t Use Black-Box Testing to Select a Predictive Lead Scoring Vendor - Fliptop",
		"time": "2015-01-18T10:04:16Z",
		"href": "http://blog.fliptop.com/blog/2015/01/15/selecting-a-predictive-lead-scoring-vendor/"
	},
	{
		"cluster": 5,
		"tags": [
			"mean",
			"median",
			"mode",
			"statistics",
			"summary",
			"optimisation",
			"loss"
		],
		"y": -2.466937196648866,
		"x": 2.1630674597197506,
		"extended": "",
		"description": "Modes, Medians and Means: A Unifying Perspective",
		"time": "2015-01-17T12:38:55Z",
		"href": "http://www.johnmyleswhite.com/notebook/2013/03/22/modes-medians-and-means-an-unifying-perspective/"
	},
	{
		"cluster": 16,
		"tags": [
			"bayesian",
			"statistics",
			"data",
			"analysis",
			"loss",
			"utility",
			"expectedloss",
			"expectedutility",
			"decisiontheory",
			"machinelearning",
			"optimisation"
		],
		"y": -2.360096242463196,
		"x": -2.3613758766917012,
		"extended": "<blockquote>“Behind every great point estimate stands a minimized loss function.” – Me, just now This is a continuation of Probable Points and Credible …</blockquote>",
		"description": "Probable Points and Credible Intervals, Part 2: Decision Theory - Publishable Stuff",
		"time": "2015-01-17T12:27:09Z",
		"href": "http://www.sumsar.net/blog/2015/01/probable-points-and-credible-intervals-part-two/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"probability",
			"summary",
			"credibleinterval",
			"bayesian",
			"inference",
			"plotting",
			"graphical",
			"posterior"
		],
		"y": -4.858691981243467,
		"x": -4.310663799687702,
		"extended": "",
		"description": "Probable Points and Credible Intervals, Part 1: Graphical Summaries - Publishable Stuff",
		"time": "2015-01-17T12:12:17Z",
		"href": "http://www.sumsar.net/blog/2014/10/probable-points-and-credible-intervals-part-one/"
	},
	{
		"cluster": 10,
		"tags": [
			"palestine",
			"politics",
			"racism",
			"community",
			"charliehebdo",
			"culture",
			"antisemitism",
			"religion"
		],
		"y": 0.15262795642388813,
		"x": 10.94261756542315,
		"extended": "",
		"description": "Community Standards | Jacobin",
		"time": "2015-01-16T16:16:49Z",
		"href": "https://www.jacobinmag.com/2015/01/community-standards/"
	},
	{
		"cluster": 13,
		"tags": [
			"austerity",
			"interestrates",
			"saving",
			"investment",
			"economics",
			"politics",
			"pensionerbonds",
			"policymaking"
		],
		"y": 9.082746918911146,
		"x": 10.0238480310956,
		"extended": "<blockquote>Which interest rate would you rather borrow at - 4% or 0.6%? It sounds like a moronic question. Not if you're the Chancellor, it's not. In launching pensioner bonds yesterday which pay 4% pa over three years, he is choosing...</blockquote>",
		"description": "Stumbling and Mumbling: Against Pensioner bonds",
		"time": "2015-01-16T16:00:38Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/01/against-pensioner-bonds.html"
	},
	{
		"cluster": 10,
		"tags": [
			"media",
			"politics",
			"television",
			"archives",
			"society",
			"adamcurtis",
			"jonronson",
			"bbc",
			"aesthetics",
			"technology"
		],
		"y": 1.1642736590207858,
		"x": 12.652998498393737,
		"extended": "",
		"description": "Jon Ronson in Conversation with Adam Curtis | VICE | United States",
		"time": "2015-01-16T08:21:39Z",
		"href": "http://www.vice.com/read/jon-ronson-interviews-adam-curtis-393"
	},
	{
		"cluster": 10,
		"tags": [
			"football",
			"politics",
			"managerialism",
			"sapirwhorf",
			"language",
			"psychology",
			"wittgenstein"
		],
		"y": 0.47249309365459746,
		"x": 8.85306026470775,
		"extended": "",
		"description": "Steve Bruce and the Whorf-Sapir hypothesis | Though Cowards Flinch",
		"time": "2015-01-16T08:21:05Z",
		"href": "http://thoughcowardsflinch.com/2015/01/16/steve-bruce-and-the-whorf-sapir-hypothesis/"
	},
	{
		"cluster": 2,
		"tags": [
			"hci",
			"research",
			"human",
			"computer",
			"interaction",
			"researchmethods",
			"computerscience"
		],
		"y": -8.78332257109012,
		"x": -1.7490893744640685,
		"extended": "<blockquote>Research Tutorial in HCI</blockquote>",
		"description": "Paul Cairns: Research Methods in HCI Tutorial",
		"time": "2015-01-15T15:26:57Z",
		"href": "http://www-users.cs.york.ac.uk/~pcairns/RMHCI.html"
	},
	{
		"cluster": 2,
		"tags": [
			"flux",
			"yosemite",
			"bug",
			"graphics",
			"dualcpu",
			"profile",
			"color"
		],
		"y": -2.8035712713478937,
		"x": 4.998117795815595,
		"extended": "",
		"description": "f.lux beta update fixes dual GPU Macbooks",
		"time": "2015-01-15T11:00:02Z",
		"href": "https://justgetflux.com/news/2014/10/24/mac34.html"
	},
	{
		"cluster": 13,
		"tags": [
			"deflation",
			"economics",
			"kalecki",
			"policy",
			"politics",
			"taxation"
		],
		"y": 9.471761717205363,
		"x": 9.02371212927997,
		"extended": "",
		"description": "Dealing with deflation the Kalecki way | Though Cowards Flinch",
		"time": "2015-01-14T17:14:18Z",
		"href": "http://thoughcowardsflinch.com/2015/01/14/dealing-with-deflation-the-kalecki-way/"
	},
	{
		"cluster": 17,
		"tags": [
			"python",
			"datasetructures",
			"libraries",
			"programming",
			"computerscience",
			"data",
			"structures",
			"trie",
			"rope",
			"tree",
			"list",
			"bloomfilter",
			"hash",
			"lsh"
		],
		"y": 1.0523113823804902,
		"x": -7.594828626677634,
		"extended": "",
		"description": "Fast Non-Standard Data Structures for Python",
		"time": "2015-01-14T11:51:17Z",
		"href": "http://kmike.ru/python-data-structures/"
	},
	{
		"cluster": 18,
		"tags": [
			"git",
			"commit",
			"software",
			"development",
			"scm",
			"complexity",
			"documentation",
			"management"
		],
		"y": 7.512308060956228,
		"x": -0.19901267603960981,
		"extended": "<blockquote>Joel Chippindale, CTO at FutureLearn, shares some of the ways that you can improve how you develop code and communicate with your team through your commits. Th…</blockquote>",
		"description": "Telling stories through your commits",
		"time": "2015-01-14T10:04:52Z",
		"href": "http://www.slideshare.net/joelchippindale/telling-stories-through-your-commits"
	},
	{
		"cluster": 12,
		"tags": [
			"sinatra",
			"warden",
			"rails",
			"webdevelopment",
			"authentication",
			"web",
			"development"
		],
		"y": 11.490284499208054,
		"x": -6.048161965902391,
		"extended": "<blockquote>Steve Klise is a programmer and artist living in Brooklyn, NY.</blockquote>",
		"description": "Authentication with Sinatra and Warden",
		"time": "2015-01-13T17:10:18Z",
		"href": "http://sklise.com/2013/03/08/sinatra-warden-auth/"
	},
	{
		"cluster": 12,
		"tags": [
			"sinatra",
			"warden",
			"rails",
			"webdevelopment",
			"authentication",
			"web",
			"development"
		],
		"y": 11.523374166706438,
		"x": -6.042882739318191,
		"extended": "<blockquote>A protip by erikwco about ruby, sinatra, slim, sqlite3, warden, and foundation5.</blockquote>",
		"description": "coderwall.com : establishing geek cred since 1305712800",
		"time": "2015-01-13T17:10:10Z",
		"href": "https://coderwall.com/p/ellbgw/sinatra-authentication-with-warden"
	},
	{
		"cluster": 12,
		"tags": [
			"sinatra",
			"warden",
			"rails",
			"webdevelopment",
			"authentication",
			"web",
			"development"
		],
		"y": 11.490284503676202,
		"x": -6.048161970424885,
		"extended": "",
		"description": "Shifting - Wiring up Warden & Sinatra",
		"time": "2015-01-13T17:10:04Z",
		"href": "http://mikeebert.tumblr.com/post/27097231613/wiring-up-warden-sinatra"
	},
	{
		"cluster": 2,
		"tags": [
			"derive",
			"debory",
			"urbanism",
			"psychogeography",
			"situatiionism",
			"criticaltheory",
			"geography",
			"architecture"
		],
		"y": -1.6480467835505759,
		"x": 8.15950422969465,
		"extended": "<blockquote>One sequence of dérives was pursued without notable interruption for around two months. Such an experience gives rise to new objective conditions of behavior that bring about the disappearance of a good number of the old ones.(2)[2]</blockquote>",
		"description": "Theory of the Derive (Debord)",
		"time": "2015-01-12T22:15:54Z",
		"href": "http://www.bopsecrets.org/SI/2.derive.htm"
	},
	{
		"cluster": 13,
		"tags": [
			"business",
			"economics",
			"capital",
			"inequality",
			"veblen",
			"history",
			"siliconvalley",
			"technology",
			"politics"
		],
		"y": 7.409691605213936,
		"x": 8.449391613783911,
		"extended": "",
		"description": "Self-made wealth in America: Robber barons and silicon sultans | The Economist",
		"time": "2015-01-12T22:02:53Z",
		"href": "http://www.economist.com/news/briefing/21637338-todays-tech-billionaires-have-lot-common-previous-generation-capitalist"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"informationrtetrieval",
			"receiveroperatingcharacteristic",
			"evaluation",
			"precision",
			"recall",
			"AUC",
			"ROC",
			"computerscience",
			"informationscience"
		],
		"y": -1.0229862186227985,
		"x": -4.572045764459299,
		"extended": "",
		"description": "Precision, Recall, AUCs and ROCs | The Shape of Data",
		"time": "2015-01-12T20:47:44Z",
		"href": "http://shapeofdata.wordpress.com/2015/01/05/precision-recall-aucs-and-rocs/"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"evaluation",
			"randomsplit",
			"validation",
			"crossvalidation",
			"autocorrelation",
			"duplication",
			"computerscience"
		],
		"y": -1.0253401816785443,
		"x": -4.572594055925976,
		"extended": "",
		"description": "Random Test/Train Split is not Always Enough | Win-Vector Blog",
		"time": "2015-01-12T19:38:21Z",
		"href": "http://www.win-vector.com/blog/2015/01/random-testtrain-split-is-not-always-enough/"
	},
	{
		"cluster": 10,
		"tags": [
			"democracy",
			"protest",
			"politics",
			"culture",
			"hypocrisy"
		],
		"y": -0.0631078042014249,
		"x": 10.76826716806846,
		"extended": "",
		"description": "All That Is Solid ...: Je Suis Charlie and Hypocrisy",
		"time": "2015-01-12T08:37:12Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2015/01/je-suis-charlie-and-hypocrisy.html"
	},
	{
		"cluster": 0,
		"tags": [
			"ansible",
			"syntax",
			"devops",
			"yaml",
			"ops",
			"sysadmin"
		],
		"y": -2.1321397181710973,
		"x": 3.3175846832333784,
		"extended": "",
		"description": "That Damn Cabbage: Ansible Pit-Traps: The Hash-in-a-String DSL",
		"time": "2015-01-07T15:45:59Z",
		"href": "http://robhoward.id.au/blog/2015/01/ansible-pit-traps-the-key-value-dsl/"
	},
	{
		"cluster": 2,
		"tags": [
			"osx",
			"postgresql",
			"upgreade",
			"postgres",
			"macosx",
			"homebrew"
		],
		"y": -2.862769671942103,
		"x": 4.1432574962161475,
		"extended": "",
		"description": "Upgrading PostgreSQL 9.2 to 9.3 with Homebrew • 55 Minutes Blog",
		"time": "2015-01-07T11:51:43Z",
		"href": "http://blog.55minutes.com/2013/09/postgresql-93-brew-upgrade/"
	},
	{
		"cluster": 13,
		"tags": [
			"ukip",
			"immingration",
			"politics",
			"economics"
		],
		"y": 8.444528196192142,
		"x": 8.970076544343643,
		"extended": "<blockquote>I just watched a video of some lovely Ukip supporters being, well... Ukip supporters. I was particularly struck by the nice lady who suggested that a French person who has been living and working in the UK for years, should just be forcibly repatriated because \"well, yeah, we all go home to our own places\".…</blockquote>",
		"description": "The Ukip Fallacy | sturdyblog",
		"time": "2015-01-05T19:44:25Z",
		"href": "https://sturdyblog.wordpress.com/2015/01/05/the-ukip-fallacy/"
	},
	{
		"cluster": 10,
		"tags": [
			"jobs",
			"employment",
			"bullshit",
			"bullshitjobs",
			"politics",
			"managerialism",
			"capitalism"
		],
		"y": 6.047313576232762,
		"x": 9.02485626283981,
		"extended": "",
		"description": "Activists Plastered the Tube with Posters Telling People Their Jobs Are Bullshit | VICE | United Kingdom",
		"time": "2015-01-05T19:35:46Z",
		"href": "http://www.vice.com/en_uk/read/david-graeber-pointless-jobs-tube-poster-interview-912"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"ansible",
			"devops",
			"containers",
			"linux",
			"operations",
			"infrastructure",
			"vm",
			"sysadmin"
		],
		"y": -8.572266685997715,
		"x": 8.590579717127852,
		"extended": "",
		"description": "How Ansible & Docker fit: Using Ansible to bootstrap & coordinate Docker containers - Recursivity",
		"time": "2015-01-05T16:33:56Z",
		"href": "http://recursivity.com/blog/2014/09/08/how-ansible-docker-fit-using-ansible-to-bootstrap-coordinate-docker-containers/"
	},
	{
		"cluster": 16,
		"tags": [
			"privacy",
			"politics",
			"class",
			"bigdata",
			"technology",
			"data",
			"analytics",
			"surveillance",
			"privilege"
		],
		"y": 4.081048972380119,
		"x": 6.524976287348383,
		"extended": "",
		"description": "Big data and class | mathbabe",
		"time": "2015-01-05T11:53:38Z",
		"href": "http://mathbabe.org/2015/01/05/big-data-and-class/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"agentbasedmodelling",
			"greece",
			"finance",
			"housing",
			"austerity",
			"politics",
			"debt"
		],
		"y": 8.58500256318474,
		"x": 10.338269158364797,
		"extended": "<blockquote>Paul Mason: I would like to test the effects of wiping out Greece’s debt, raising wages and beginning a massive programme of social housebuilding</blockquote>",
		"description": "My wish for 2015: a machine to judge political claims against reality | Comment is free | The Guardian",
		"time": "2015-01-05T11:16:49Z",
		"href": "http://www.theguardian.com/commentisfree/2015/jan/04/economy-accurate-model-greek-debt-social-house-building"
	},
	{
		"cluster": 10,
		"tags": [
			"risk",
			"business",
			"employment",
			"capitalism",
			"socialism",
			"managerialism",
			"workerownership",
			"cooperatives",
			"politics"
		],
		"y": 5.797639938408519,
		"x": 8.825397679451703,
		"extended": "<blockquote>There's one aspect of the collapse of City Link that deserves more attention than it gets - that it undermines the conventional idea that firms' owners are risk-takers. Better Capital's stake in the firm took the firm of a secured...</blockquote>",
		"description": "Stumbling and Mumbling: Who bears risk?",
		"time": "2015-01-05T11:01:18Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2015/01/who-bears-risk.html"
	},
	{
		"cluster": 10,
		"tags": [
			"pcmusic",
			"gender",
			"culture",
			"politics",
			"musicindustry"
		],
		"y": 0.04919432518502945,
		"x": 10.380543776761382,
		"extended": "<blockquote>Underneath this year's freshest new music lurked an age-old cultural construct.</blockquote>",
		"description": "Feminine Appropriation Was 2014's Biggest Electronic Music Trend | The FADER",
		"time": "2015-01-03T12:47:28Z",
		"href": "http://www.thefader.com/2014/12/31/feminine-appropriation-2014-electronic-music-trend"
	},
	{
		"cluster": 10,
		"tags": [
			"urbanism",
			"gentrification",
			"deptford",
			"righttothecity",
			"politics",
			"development",
			"property",
			"housing",
			"londonconsortium"
		],
		"y": 5.339452024939971,
		"x": 11.814421187605902,
		"extended": "",
		"description": "How Deptford became the ‘apex of fashionability’ and other stories | Ian Jack | Comment is free | The Guardian",
		"time": "2015-01-02T18:31:42Z",
		"href": "http://www.theguardian.com/commentisfree/2015/jan/02/deptford-apex-of-fashionability"
	},
	{
		"cluster": 4,
		"tags": [
			"ghc",
			"haskell",
			"extensions",
			"staticpointers",
			"static",
			"pointers",
			"functional",
			"distributed",
			"computing"
		],
		"y": -3.622214835105475,
		"x": -8.497829845824167,
		"extended": "",
		"description": "24 Days of GHC Extensions: Static Pointers",
		"time": "2015-01-02T12:57:52Z",
		"href": "https://ocharles.org.uk/blog/guest-posts/2014-12-23-static-pointers.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"ghc",
			"extensions",
			"templatehaskell",
			"template",
			"macro",
			"metaprogramming",
			"functional",
			"programming"
		],
		"y": -3.6530288622404354,
		"x": -8.537576202617762,
		"extended": "",
		"description": "24 Days of GHC Extensions: Template Haskell",
		"time": "2015-01-02T12:39:02Z",
		"href": "https://ocharles.org.uk/blog/guest-posts/2014-12-22-template-haskell.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"ghc",
			"extensions",
			"arrows",
			"programming",
			"functionall"
		],
		"y": -3.541515833996686,
		"x": -8.49479529101717,
		"extended": "",
		"description": "24 Days of GHC Extensions: Arrows",
		"time": "2015-01-02T12:20:52Z",
		"href": "https://ocharles.org.uk/blog/guest-posts/2014-12-21-arrows.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"functional",
			"ghc",
			"extensions",
			"scopedtypevariables",
			"typesafety"
		],
		"y": -3.686591075677151,
		"x": -8.54029760573028,
		"extended": "",
		"description": "24 Days of GHC Extensions: Scoped Type Variables",
		"time": "2015-01-02T12:07:31Z",
		"href": "https://ocharles.org.uk/blog/guest-posts/2014-12-20-scoped-type-variables.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"ghc",
			"extensions",
			"ghcextensions",
			"types",
			"existentialtypes",
			"existentialquantification"
		],
		"y": -3.634401557860683,
		"x": -8.6073093835203,
		"extended": "",
		"description": "24 Days of GHC Extensions: Existential Quantification",
		"time": "2015-01-02T11:51:29Z",
		"href": "https://ocharles.org.uk/blog/guest-posts/2014-12-19-existential-quantification.html"
	},
	{
		"cluster": 10,
		"tags": [
			"chartercities",
			"enterprisezones",
			"politicaleconomy",
			"politics",
			"capitalism",
			"hongkong",
			"china",
			"paulromer",
			"neoliberalism",
			"urbanism",
			"planning",
			"geography"
		],
		"y": 6.787952786956314,
		"x": 9.140115577369524,
		"extended": "",
		"description": "The Book of Paul | Jacobin",
		"time": "2014-12-30T08:12:34Z",
		"href": "https://www.jacobinmag.com/2014/10/the-book-of-paul/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"gender",
			"feminism",
			"culture",
			"privilege",
			"intersectionality",
			"technology"
		],
		"y": 1.5445779529632522,
		"x": 8.532465484857678,
		"extended": "",
		"description": "On Nerd Entitlement",
		"time": "2014-12-30T08:04:27Z",
		"href": "http://www.newstatesman.com/laurie-penny/on-nerd-entitlement-rebel-alliance-empire"
	},
	{
		"cluster": 10,
		"tags": [
			"tax",
			"politics",
			"culturee"
		],
		"y": 5.55374195154069,
		"x": 9.616944181336702,
		"extended": "",
		"description": "Why we should all learn to love paying our taxes | Zoe Williams | Comment is free | The Guardian",
		"time": "2014-12-29T12:22:26Z",
		"href": "http://www.theguardian.com/commentisfree/2014/dec/29/love-paying-taxes-tax-policy"
	},
	{
		"cluster": 2,
		"tags": [
			"travel",
			"cityguide",
			"holiday"
		],
		"y": -0.8947551639266135,
		"x": 4.821188911186839,
		"extended": "<blockquote>A collection of travel guides for twenty-somethings and thirty-somethings - youth travelers who like to find the cool things in life. HIPSTERS HEY!</blockquote>",
		"description": "Hipster City Travel Guides",
		"time": "2014-12-28T11:56:06Z",
		"href": "http://travelsofadam.com/city-guides/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"polymorphism",
			"ghc",
			"extensions",
			"types",
			"higherrankpolymorphism",
			"rankntypes",
			"higherrank",
			"rank",
			"scottencoding",
			"churchencoding",
			"scott",
			"church",
			"lists",
			"computerscience"
		],
		"y": -6.399685139602998,
		"x": -10.954313877311279,
		"extended": "",
		"description": "24 Days of GHC Extensions: Rank N Types",
		"time": "2014-12-23T17:26:33Z",
		"href": "https://ocharles.org.uk/blog/guest-posts/2014-12-18-rank-n-types.html"
	},
	{
		"cluster": 13,
		"tags": [
			"balanceofpayments",
			"currentaccount",
			"deficit",
			"household",
			"debt",
			"macroeconomics",
			"economics"
		],
		"y": 8.629735266058795,
		"x": 8.259213541256361,
		"extended": "<blockquote>As ever, much of the attention around the Autumn Statement has been firmly on two numbers which define the coalition’s m…</blockquote>",
		"description": "The Other Debt and the Other Deficit — Medium",
		"time": "2014-12-23T11:03:54Z",
		"href": "https://medium.com/@DuncanWeldon/the-other-debt-and-the-other-deficit-78c44f7234ef"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"play",
			"dependencyinjection",
			"programming",
			"softwareengineering"
		],
		"y": 5.970881992974482,
		"x": -2.7616027990130063,
		"extended": "",
		"description": "Alois Cochard's Blog: The Cake Is a Lie",
		"time": "2014-12-22T15:15:04Z",
		"href": "http://aloiscochard.blogspot.ch/2014/12/the-cake-is-lie.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"servant",
			"webservice",
			"web",
			"service",
			"api",
			"programming",
			"functional-programming"
		],
		"y": -4.937576647231982,
		"x": -7.531350896758302,
		"extended": "",
		"description": "servant - Rethinking webservices and APIs in Haskell, one combinator at a time",
		"time": "2014-12-22T14:16:03Z",
		"href": "http://haskell-servant.github.io/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"overloadedstrings",
			"ghc",
			"extensions",
			"programming",
			"functionall"
		],
		"y": -3.5384882615168975,
		"x": -8.495465756489432,
		"extended": "",
		"description": "24 Days of GHC Extensions: Overloaded Strings",
		"time": "2014-12-18T14:51:01Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-17-overloaded-strings.html"
	},
	{
		"cluster": 4,
		"tags": [
			"derivegenerative",
			"generic",
			"programming",
			"ghc",
			"extension",
			"haskell",
			"functional",
			"computerscience"
		],
		"y": -4.168977249349686,
		"x": -8.780860254150348,
		"extended": "",
		"description": "24 Days of GHC Extensions: DeriveGeneric",
		"time": "2014-12-17T09:50:00Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-16-derive-generic.html"
	},
	{
		"cluster": 9,
		"tags": [
			"mysql",
			"performance",
			"tmpfs",
			"tmp",
			"linux",
			"sysadmin",
			"devops"
		],
		"y": -6.851497663975483,
		"x": 5.877198217835241,
		"extended": "",
		"description": "Reduce your server's resource usage by moving MySQL temporary directory to tmpfs | 2bits.com, Inc. - Drupal Performance Tuning and Optimization, Managed Hosting and Consulting",
		"time": "2014-12-16T08:57:09Z",
		"href": "http://2bits.com/articles/reduce-your-servers-resource-usage-moving-mysql-temporary-directory-ram-disk.html"
	},
	{
		"cluster": 16,
		"tags": [
			"geography",
			"urbanism",
			"data",
			"science",
			"classification",
			"machinelearning",
			"cities",
			"fingerprinting"
		],
		"y": -1.862617386261727,
		"x": 8.554689262761238,
		"extended": "",
		"description": "How to Fingerprint a City | Big Think",
		"time": "2014-12-16T07:45:42Z",
		"href": "http://bigthink.com/strange-maps/how-to-fingerprint-a-city"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"ghx",
			"extensions",
			"deriving"
		],
		"y": -4.414167370223483,
		"x": -8.425350738901086,
		"extended": "",
		"description": "24 Days of GHC Extensions: Deriving (Guest post by Andraz Bajt)",
		"time": "2014-12-15T23:44:49Z",
		"href": "http://www.reddit.com/r/haskell/comments/2pej3j/24_days_of_ghc_extensions_deriving_guest_post_by/"
	},
	{
		"cluster": 10,
		"tags": [
			"foucault",
			"politics",
			"socialism",
			"capitalism",
			"welfarestate",
			"criticism"
		],
		"y": 6.974606312589822,
		"x": 10.484953334034973,
		"extended": "",
		"description": "Foucault’s Responsibility | Jacobin",
		"time": "2014-12-15T21:28:49Z",
		"href": "https://www.jacobinmag.com/2014/12/michel-foucault-responsibility-socialist/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"fundeps",
			"functional",
			"dependencies",
			"programming",
			"ghc",
			"extensions"
		],
		"y": -3.685789064380457,
		"x": -8.537201187623936,
		"extended": "",
		"description": "24 Days of GHC Extensions: Functional Dependencies",
		"time": "2014-12-15T11:48:22Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-14-functional-dependencies.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"ghc",
			"extensions",
			"multiparametertypeclasses",
			"types",
			"typeclasses"
		],
		"y": -3.641623248673375,
		"x": -8.588388593922682,
		"extended": "",
		"description": "24 Days of GHC Extensions: Multi-parameter Type Classes",
		"time": "2014-12-15T11:40:07Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-13-multi-param-type-classes.html"
	},
	{
		"cluster": 4,
		"tags": [
			"ghc",
			"extensions",
			"haskell",
			"typefamilies",
			"types",
			"functional",
			"programming"
		],
		"y": -3.6767285906861855,
		"x": -8.592044928288951,
		"extended": "",
		"description": "24 Days of GHC Extensions: Type Families",
		"time": "2014-12-15T11:37:48Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-12-type-families.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"regression",
			"referencevariable",
			"dummycoding",
			"logistiregression"
		],
		"y": -1.576817098538202,
		"x": 0.8620694415556651,
		"extended": "",
		"description": "Strategies for Choosing the Reference Category in Dummy Coding",
		"time": "2014-12-12T09:04:38Z",
		"href": "http://www.theanalysisfactor.com/strategies-dummy-coding/"
	},
	{
		"cluster": 4,
		"tags": [
			"ghc",
			"extensions",
			"haskell",
			"programming",
			"functional",
			"implicit",
			"parameters"
		],
		"y": -3.6869190701100236,
		"x": -8.540524763771387,
		"extended": "",
		"description": "24 Days of GHC Extensions: Implicit Parameters",
		"time": "2014-12-12T09:02:52Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-11-implicit-params.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"economic",
			"marketsocialism",
			"markets",
			"socialism"
		],
		"y": 2.9237668413833986,
		"x": 9.923538693341985,
		"extended": "",
		"description": "All That Is Solid ...: Market Socialism: Basic Ideas",
		"time": "2014-12-11T10:23:29Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/12/market-socialism-basic-ideas.html"
	},
	{
		"cluster": 4,
		"tags": [
			"ghc",
			"logging",
			"typeclasses",
			"programming",
			"haskell",
			"functional",
			"nullary",
			"extensions"
		],
		"y": -3.641858673962471,
		"x": -8.551045627520208,
		"extended": "",
		"description": "24 Days of GHC Extensions: Nullary Type Classes",
		"time": "2014-12-11T10:08:37Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-10-nullary-type-classes.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"ghc",
			"extensions",
			"recursivedo",
			"circular",
			"laziness",
			"circularprogramming"
		],
		"y": -3.68788963636928,
		"x": -8.563998805003367,
		"extended": "",
		"description": "24 Days of GHC Extensions: Recursive Do",
		"time": "2014-12-11T10:05:07Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-09-recursive-do.html"
	},
	{
		"cluster": 10,
		"tags": [
			"cooperatives",
			"politics",
			"business",
			"technology",
			"startups"
		],
		"y": 5.288334056420803,
		"x": 7.168931404280742,
		"extended": "",
		"description": "New Left Project | Co-operatives in the Internet Age",
		"time": "2014-12-11T09:57:14Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/co_operatives_in_the_internet_age"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"gentrification",
			"urbanism",
			"geography",
			"regeneration"
		],
		"y": -1.1903192358936732,
		"x": 8.97798549228082,
		"extended": "",
		"description": "These Corny Videos Show How Property Developers Are Turfing Out London’s Poor | VICE | United Kingdom",
		"time": "2014-12-11T09:35:34Z",
		"href": "http://www.vice.com/en_uk/read/london-regeneration-videos-dan-honcox-374"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"foucault",
			"economics",
			"neoliberalism",
			"welfarestate",
			"socialism",
			"criticism"
		],
		"y": 7.155819436278766,
		"x": 10.375626235676643,
		"extended": "",
		"description": "Can We Criticize Foucault? | Jacobin",
		"time": "2014-12-10T13:06:54Z",
		"href": "https://www.jacobinmag.com/2014/12/foucault-interview/"
	},
	{
		"cluster": 15,
		"tags": [
			"python",
			"agentbasedmodels",
			"Agent_based_Models",
			"modelling",
			"mathematics",
			"emergent",
			"complex",
			"adaptive",
			"systems",
			"shelling",
			"population",
			"intollerance",
			"race",
			"similarity",
			"segregation"
		],
		"y": -6.384055787176804,
		"x": -3.051539580318699,
		"extended": "<blockquote>Adil Moujahid, Data Analytics and more</blockquote>",
		"description": "An Introduction to Agent-based Models: Simulating Segregation with Python // Adil Moujahid // Data Analytics and more",
		"time": "2014-12-09T09:27:42Z",
		"href": "http://adilmoujahid.com/posts/2014/09/schelling-model/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"ghc",
			"extension",
			"typeoperators",
			"functional",
			"programming"
		],
		"y": -4.036629473732128,
		"x": -8.598101471228286,
		"extended": "",
		"description": "24 Days of GHC Extensions: Type Operators",
		"time": "2014-12-09T09:21:38Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-08-type-operators.html"
	},
	{
		"cluster": 10,
		"tags": [
			"fptp",
			"election",
			"polling",
			"labour",
			"politics"
		],
		"y": 6.2346026469207105,
		"x": 13.256905433086017,
		"extended": "",
		"description": "Ignore the flaws. For only Labour can beat the Tories. | Polly Toynbee | Comment is free | The Guardian",
		"time": "2014-12-09T09:17:38Z",
		"href": "http://www.theguardian.com/commentisfree/2014/dec/09/labour-tories-vote-osborne"
	},
	{
		"cluster": 2,
		"tags": [
			"games",
			"philosophy",
			"camus",
			"satra",
			"existentialism",
			"chance",
			"determinism",
			"absurd"
		],
		"y": -0.1390336781273794,
		"x": 4.779950596918121,
		"extended": "",
		"description": "Candyland and the Nature of the Absurd - Existential Comics",
		"time": "2014-12-09T07:37:59Z",
		"href": "http://existentialcomics.com/comic/58"
	},
	{
		"cluster": 17,
		"tags": [
			"martinodersky",
			"scala",
			"programming",
			"functional",
			"languages",
			"oop"
		],
		"y": 0.0575770151891136,
		"x": -8.885070400856485,
		"extended": "",
		"description": "While It’s Compiling: Skills Matter interviews Martin Odersky | The Skills Matter Blog",
		"time": "2014-12-08T16:32:53Z",
		"href": "http://blog.skillsmatter.com/2014/12/08/while-its-compiling-skills-matter-interviews-martin-odersky/"
	},
	{
		"cluster": 14,
		"tags": [
			"cyclehire",
			"usability",
			"ux",
			"design",
			"london",
			"bicycle",
			"hire"
		],
		"y": 1.2231219083986333,
		"x": 1.2702866502463346,
		"extended": "",
		"description": "How to hire a bike in London",
		"time": "2014-12-08T15:00:24Z",
		"href": "http://codon.com/how-to-hire-a-bike-in-london"
	},
	{
		"cluster": 10,
		"tags": [
			"work",
			"academia",
			"capitalism",
			"productivity",
			"politics",
			"competitiveness",
			"culture"
		],
		"y": 0.5549272994473681,
		"x": 10.729235341420347,
		"extended": "",
		"description": "“Wider lessons” | Music for Deckchairs",
		"time": "2014-12-07T17:45:49Z",
		"href": "http://musicfordeckchairs.wordpress.com/2014/12/02/wider-lessons/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"rebindablesyntax",
			"ghc",
			"extensions",
			"functional",
			"programming"
		],
		"y": -3.70890060145788,
		"x": -8.537453187395071,
		"extended": "",
		"description": "24 Days of GHC Extensions: Rebindable Syntax",
		"time": "2014-12-07T10:48:12Z",
		"href": "https://ocharles.org.uk/blog/guest-posts/2014-12-06-rebindable-syntax.html"
	},
	{
		"cluster": 4,
		"tags": [
			"strictness",
			"haskell",
			"laziness",
			"bangpatterns",
			"functional",
			"programming",
			"ghc",
			"extension"
		],
		"y": -4.029504994855421,
		"x": -8.614518678158474,
		"extended": "",
		"description": "24 Days of GHC Extensions: Bang Patterns",
		"time": "2014-12-06T16:33:20Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-05-bang-patterns.html"
	},
	{
		"cluster": 4,
		"tags": [
			"PatternSynonyms",
			"GHC",
			"haskell",
			"extension",
			"programming",
			"functional"
		],
		"y": -4.034595453986169,
		"x": -8.597139546083309,
		"extended": "",
		"description": "24 Days of GHC Extensions: Pattern Synonyms",
		"time": "2014-12-06T16:31:22Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-03-pattern-synonyms.html"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"compose",
			"swarm",
			"machine",
			"infrastructure",
			"containers",
			"devops",
			"ops"
		],
		"y": 1.533676716114017,
		"x": 5.474452026612431,
		"extended": "",
		"description": "Announcing Docker Machine, Swarm, and Compose for Orchestrating Distributed Apps | Docker Blog",
		"time": "2014-12-06T16:27:19Z",
		"href": "http://blog.docker.com/2014/12/announcing-docker-machine-swarm-and-compose-for-orchestrating-distributed-apps/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"religion",
			"christianity",
			"humanism"
		],
		"y": 0.44250876867757033,
		"x": 5.798212468001201,
		"extended": "",
		"description": "The whole point of Christianity is to create a deeper form of humanism | Giles Fraser | Comment is free | The Guardian",
		"time": "2014-12-06T12:57:41Z",
		"href": "http://www.theguardian.com/commentisfree/belief/2014/dec/05/point-christianity-creater-deeper-form-humanism"
	},
	{
		"cluster": 2,
		"tags": [
			"haskell",
			"ghc",
			"extensions",
			"view",
			"patterns",
			"programmin"
		],
		"y": -3.389261913193823,
		"x": -8.439930137352746,
		"extended": "",
		"description": "24 Days of GHC Extensions: View Patterns",
		"time": "2014-12-05T16:56:50Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-02-view-patterns.html"
	},
	{
		"cluster": 4,
		"tags": [
			"ghc",
			"haskell",
			"programming",
			"records",
			"recordwildcards"
		],
		"y": -3.7887216890569393,
		"x": -8.463166296112108,
		"extended": "",
		"description": "24 Days of GHC Extensions: Record Wildcards",
		"time": "2014-12-05T16:56:36Z",
		"href": "https://ocharles.org.uk/blog/posts/2014-12-04-record-wildcards.html"
	},
	{
		"cluster": 15,
		"tags": [
			"abstraction",
			"mathematics",
			"programming"
		],
		"y": -0.15726793973421258,
		"x": -11.000635595041766,
		"extended": "",
		"description": "A Lever for the Mind",
		"time": "2014-12-03T16:42:53Z",
		"href": "http://codon.com/a-lever-for-the-mind"
	},
	{
		"cluster": 10,
		"tags": [
			"russellbrand",
			"housing",
			"politics",
			"snide"
		],
		"y": 6.337563512340479,
		"x": 11.071010942825533,
		"extended": "",
		"description": "Russell Brand Isn't the Problem with London | VICE | United Kingdom",
		"time": "2014-12-03T14:06:49Z",
		"href": "http://www.vice.com/en_uk/read/russell-brand-calling-someone-a-snide-905"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"mvp",
			"leanux",
			"ux",
			"lean",
			"product",
			"technology",
			"blah"
		],
		"y": -5.644655948671521,
		"x": 1.3780681890021307,
		"extended": "",
		"description": "MVPs and experiments inform design decisions - O'Reilly Radar",
		"time": "2014-12-03T14:03:47Z",
		"href": "http://radar.oreilly.com/2014/12/mvps-and-experiments-inform-design-decisions.html"
	},
	{
		"cluster": 10,
		"tags": [
			"government",
			"land",
			"capital",
			"property",
			"politics",
			"taxation"
		],
		"y": 7.611553530029584,
		"x": 10.094780379336651,
		"extended": "",
		"description": "No wonder landowners are scared. We are starting to learn who owns Britain | George Monbiot | Comment is free | The Guardian",
		"time": "2014-12-03T08:37:42Z",
		"href": "http://www.theguardian.com/commentisfree/2014/dec/03/landowners-scotland-britain-feudal-highland-spring"
	},
	{
		"cluster": 10,
		"tags": [
			"marcuse",
			"sociology",
			"society",
			"criticaltheory",
			"culture",
			"politics"
		],
		"y": 0.33272938806380054,
		"x": 12.403539915281888,
		"extended": "",
		"description": "All That Is Solid ...: Herbert Marcuse and One-Dimensional Man",
		"time": "2014-12-02T22:28:59Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/11/herbert-marcuse-and-one-dimensional-man.html"
	},
	{
		"cluster": 15,
		"tags": [
			"lagrange",
			"multiplier",
			"constraint",
			"optimization",
			"mathematics",
			"tutorial",
			"analysis"
		],
		"y": -6.448111831831933,
		"x": -3.3950273422778627,
		"extended": "",
		"description": "An Introduction to Lagrange Multipliers",
		"time": "2014-12-02T22:06:17Z",
		"href": "http://www.slimy.com/~steuard/teaching/tutorials/Lagrange.html"
	},
	{
		"cluster": 13,
		"tags": [
			"gordonbrown",
			"politics",
			"economics"
		],
		"y": 8.36207723118908,
		"x": 8.989580234825056,
		"extended": "<blockquote>Gordon Brown's resignation as an MP has prompted many retrospectives. I suspect, though, that they are mostly misdiagnosing his strengths and weaknesses. First, his strengths. I agree with Jonathan that he deserves credit for keeping us out of the euro...</blockquote>",
		"description": "Stumbling and Mumbling: Gordon Brown: an assessment",
		"time": "2014-12-02T16:16:33Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/12/gordon-brown-an-assessment.html"
	},
	{
		"cluster": 1,
		"tags": [
			"journalism",
			"startups",
			"tech",
			"industy",
			"culture",
			"managerialism",
			"bullshit"
		],
		"y": -2.188314411132308,
		"x": 9.650873260791531,
		"extended": "",
		"description": "Reports from Inside First Look Media Suggest That Maybe Silicon Valley Shouldn’t Manage Journalists - In These Times",
		"time": "2014-12-01T16:58:44Z",
		"href": "http://inthesetimes.com/article/17403/reports_from_inside_first_look_media_suggest_that_maybe_silicon_valley_shou"
	},
	{
		"cluster": 10,
		"tags": [
			"productivity",
			"life",
			"culture",
			"politics"
		],
		"y": 0.3294530098460594,
		"x": 10.694023083488284,
		"extended": "<blockquote>This Essay Took Four Years to Write</blockquote>",
		"description": "Against Productivity — The Message — Medium",
		"time": "2014-12-01T16:50:38Z",
		"href": "https://medium.com/message/against-productivity-b19f56b67da6"
	},
	{
		"cluster": 10,
		"tags": [
			"uniformswing",
			"election",
			"analysis",
			"statistics",
			"swing",
			"voting",
			"politics"
		],
		"y": 6.726127093301173,
		"x": 12.789199036683618,
		"extended": "",
		"description": "Uniform swing, RIP | May 2015: UK Election Guide",
		"time": "2014-12-01T16:45:23Z",
		"href": "http://may2015.com/features/uniform-swing-rip/"
	},
	{
		"cluster": 2,
		"tags": [
			"google",
			"scholar",
			"citations",
			"search",
			"visualisation",
			"graph"
		],
		"y": -2.697630366833242,
		"x": 4.260405018028069,
		"extended": "",
		"description": "Google Scholar Citation Visualisation Tool",
		"time": "2014-12-01T13:10:31Z",
		"href": "http://www.madhavajay.com/kalki/"
	},
	{
		"cluster": 10,
		"tags": [
			"university",
			"education",
			"society",
			"politics",
			"admissions",
			"privateschools",
			"class"
		],
		"y": 3.2270495803802097,
		"x": 12.895636286396472,
		"extended": "",
		"description": "Private schools know how to game elite universities – state-educated kids don’t have this privilege | Comment is free | The Guardian",
		"time": "2014-12-01T11:07:03Z",
		"href": "http://www.theguardian.com/commentisfree/2014/nov/30/private-schools-game-elite-universities-privilege"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"society",
			"immigration",
			"welfare",
			"benefits",
			"lies"
		],
		"y": 2.8562478439241556,
		"x": 12.277655572451891,
		"extended": "<blockquote>Zoe Williams: When net migration falls, David Cameron can take the credit: for making Britain poor, hostile and pessimistic</blockquote>",
		"description": "Does Britain really want to be the country nobody would migrate to? | Zoe Williams | Comment is free | The Guardian",
		"time": "2014-12-01T11:03:30Z",
		"href": "http://www.theguardian.com/commentisfree/2014/nov/30/britain-migrate-net-migration-david-cameron"
	},
	{
		"cluster": 10,
		"tags": [
			"class",
			"politics",
			"socialism",
			"embourgoisement",
			"socialmobility"
		],
		"y": 2.134190036005342,
		"x": 9.70808883279744,
		"extended": "",
		"description": "Class war is back again – and British politicians are running scared | Society | The Guardian",
		"time": "2014-12-01T11:03:15Z",
		"href": "http://www.theguardian.com/society/2014/nov/30/class-war-is-back-again"
	},
	{
		"cluster": 10,
		"tags": [
			"education",
			"privateeducation",
			"tax",
			"politics"
		],
		"y": 5.433202789723948,
		"x": 9.471701426643598,
		"extended": "",
		"description": "We should tax private schools as businesses, not beg to borrow their cricket pitches | Ian Jack | Comment is free | The Guardian",
		"time": "2014-11-30T11:27:19Z",
		"href": "http://www.theguardian.com/commentisfree/2014/nov/29/we-should-tax-private-schools-as-businesses-not-beg-borrow-cricket-pitches"
	},
	{
		"cluster": 3,
		"tags": [
			"tv",
			"culture",
			"dance",
			"art",
			"strictly",
			"marxism",
			"politics"
		],
		"y": -0.5826247794687417,
		"x": 11.80209254354901,
		"extended": "<blockquote>The TV show has taken a great popular art form and turned it into a travesty – which is why you will never see the comedian on Strictly</blockquote>",
		"description": "Alexei Sayle’s Marxist demolition of Strictly Come Dancing | Television & radio | The Guardian",
		"time": "2014-11-30T11:23:17Z",
		"href": "http://www.theguardian.com/tv-and-radio/2014/nov/29/alexei-sayle-marxist-demolition-of-strictly-come-dancing"
	},
	{
		"cluster": 10,
		"tags": [
			"youth",
			"politics",
			"culture",
			"hedonism",
			"gettingmashup"
		],
		"y": -0.11324854190348443,
		"x": 10.728422590305208,
		"extended": "",
		"description": "This Sad British Generation Doesn't Know When the Party Stops | VICE | United Kingdom",
		"time": "2014-11-27T20:54:28Z",
		"href": "http://www.vice.com/en_uk/read/when-does-the-party-stop"
	},
	{
		"cluster": 10,
		"tags": [
			"space",
			"stratford",
			"urbanism",
			"righttothecity",
			"politics",
			"geography",
			"gentrification",
			"skating"
		],
		"y": -1.2144204047686955,
		"x": 9.056832754310008,
		"extended": "<blockquote>Westfield can keep its late-night casinos. In its shadow is The Stratford Centre, a modest 90s shopping precinct that, by night, becomes home to not just the homeless, but an army of young skaters.</blockquote>",
		"description": "The Shopping Centre Opposite Westfield Has Become a Weird 24-Hour Haven for London's Skate Subculture | VICE | United Kingdom",
		"time": "2014-11-26T18:47:38Z",
		"href": "http://www.vice.com/en_uk/read/the-stratford-centre-is-thriving-in-westfields-giant-shadow-098"
	},
	{
		"cluster": 2,
		"tags": [
			"ukip",
			"poliitcs",
			"parliament",
			"uk"
		],
		"y": -0.6197436756093174,
		"x": 5.858887275903344,
		"extended": "",
		"description": "Why is Ukip doing so well? Our history offers some interesting clues | Dan Snow | Comment is free | The Guardian",
		"time": "2014-11-26T10:41:29Z",
		"href": "http://www.theguardian.com/commentisfree/2014/nov/26/ukip-history-mps-government"
	},
	{
		"cluster": 17,
		"tags": [
			"typeclass",
			"scala",
			"implicit",
			"functional",
			"programming",
			"computerscience",
			"typesafe"
		],
		"y": 1.3019825972811494,
		"x": -9.127459358120849,
		"extended": "",
		"description": "The Neophyte's Guide to Scala Part 12: Type classes - Daniel Westheide",
		"time": "2014-11-25T12:12:30Z",
		"href": "http://danielwestheide.com/blog/2013/02/06/the-neophytes-guide-to-scala-part-12-type-classes.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"adaptor",
			"SOLID",
			"oop",
			"ood",
			"functional",
			"programming",
			"softwareengineering",
			"designpatterns",
			"adapter",
			"pattern",
			"typeclass",
			"dependencyinversionprinciple",
			"dip"
		],
		"y": 2.423377392341137,
		"x": -8.949714936500643,
		"extended": "",
		"description": "Gang of Four Patterns With Type-Classes and Implicits in Scala (Part 2) | Statically Typed",
		"time": "2014-11-25T11:49:40Z",
		"href": "http://staticallytyped.wordpress.com/2013/03/24/gang-of-four-patterns-with-type-classes-and-implicits-in-scala-part-2/"
	},
	{
		"cluster": 2,
		"tags": [
			"colossus",
			"microservices",
			"SOA",
			"services",
			"scala",
			"distributed",
			"computing",
			"reactor",
			"reactorpattern",
			"akka",
			"actors",
			"distributedsystems"
		],
		"y": 5.000020464418509,
		"x": -0.9558559487917774,
		"extended": "<blockquote>Colossus IO Framework: Built at Tumblr</blockquote>",
		"description": "Colossus",
		"time": "2014-11-25T11:35:40Z",
		"href": "http://tumblr.github.io/colossus/"
	},
	{
		"cluster": 16,
		"tags": [
			"aparapi",
			"data",
			"parallel",
			"gpu",
			"dataparallel",
			"computation",
			"java6",
			"openclasses"
		],
		"y": -0.2360519441000965,
		"x": 2.28967373677364,
		"extended": "",
		"description": "aparapi - API for data parallel Java. Allows suitable code to be executed on GPU via OpenCL. - Google Project Hosting",
		"time": "2014-11-25T11:12:51Z",
		"href": "https://code.google.com/p/aparapi/"
	},
	{
		"cluster": 2,
		"tags": [
			"spark",
			"gpu",
			"development",
			"aparapi",
			"openclasses"
		],
		"y": -0.25227725823648955,
		"x": 2.36023209603845,
		"extended": "<blockquote>Write your site description here. It will be used as your sites meta description as well!</blockquote>",
		"description": "Tutorial: Spark-GPU Cluster Dev in a Notebook - i am trask",
		"time": "2014-11-25T11:11:01Z",
		"href": "http://iamtrask.github.io/2014/11/22/spark-gpu/"
	},
	{
		"cluster": 10,
		"tags": [
			"finance",
			"housing",
			"newera",
			"politics"
		],
		"y": 6.518399959970095,
		"x": 10.750319691442446,
		"extended": "",
		"description": "New Era estate scandal: families at the mercy of international speculators | Society | The Guardian",
		"time": "2014-11-24T21:40:34Z",
		"href": "http://www.theguardian.com/society/2014/nov/19/new-era-estate-scandal-london-families-international-speculators"
	},
	{
		"cluster": 10,
		"tags": [
			"urbanism",
			"geography",
			"capitalism",
			"politics",
			"capital",
			"culture",
			"gentrification"
		],
		"y": -1.3029509366026693,
		"x": 9.192724960087679,
		"extended": "",
		"description": "New Left Project | There is Nothing Natural about Gentrification",
		"time": "2014-11-24T21:37:13Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/there_is_nothing_natural_about_gentrification"
	},
	{
		"cluster": 16,
		"tags": [
			"complexity",
			"complexadaptivesystems",
			"science",
			"data",
			"bigdata",
			"guff",
			"information",
			"statistics",
			"haveyouheardofthomasbayes"
		],
		"y": -3.1656256571102728,
		"x": -1.4871359939869948,
		"extended": "<blockquote>An overarching predictive, mathematical framework for complex systems would, in principle, incorporate the dynamics and organization of any complex system in a quantitative, computable framework.</blockquote>",
		"description": "Big Data Needs a Big Theory to Go with It - Scientific American",
		"time": "2014-11-24T13:23:27Z",
		"href": "http://www.scientificamerican.com/article/big-data-needs-big-theory/"
	},
	{
		"cluster": 2,
		"tags": [
			"news",
			"informationretrieval",
			"phd",
			"serendipity",
			"filterbubble",
			"newspapers",
			"publishing",
			"uncertaintysampling"
		],
		"y": 6.12966224445608,
		"x": 3.5399870894346526,
		"extended": "",
		"description": "In defence of newspapers and serendipity",
		"time": "2014-11-24T13:03:19Z",
		"href": "http://www.mathewingram.com/work/2009/10/18/in-defence-of-newspapers-and-serendipity/"
	},
	{
		"cluster": 2,
		"tags": [
			"serendipity",
			"news",
			"publishing",
			"informationretrieval",
			"uncertaintysampling",
			"phd"
		],
		"y": 6.121108767640404,
		"x": 3.535922396828997,
		"extended": "",
		"description": "What would it take to build a true “serendipity-maker”? » Nieman Journalism Lab",
		"time": "2014-11-24T13:01:58Z",
		"href": "http://www.niemanlab.org/2010/03/what-would-it-take-to-build-a-true-serendipity-maker/"
	},
	{
		"cluster": 2,
		"tags": [
			"serendipity",
			"informationretrieval",
			"search",
			"recommendation",
			"phd",
			"uncertaintysampling"
		],
		"y": 6.085300363171912,
		"x": 3.524144827723779,
		"extended": "<blockquote>Serendipity is not randomness. It is unexpected relevance. I constantly hear the fear that serendipity is among the many things we're supposedly set to los...</blockquote>",
		"description": "Serendipity is unexpected relevance — BuzzMachine",
		"time": "2014-11-24T13:00:46Z",
		"href": "http://buzzmachine.com/2010/03/30/serendipity-is-unexpected-relevance/"
	},
	{
		"cluster": 0,
		"tags": [
			"logstash",
			"elasticsearch",
			"kibana",
			"operations",
			"devops",
			"logs",
			"analysis"
		],
		"y": -2.9235526920234576,
		"x": 4.063068966881464,
		"extended": "",
		"description": "Collect & visualize your logs with Logstash, Elasticsearch & Redis | Michael Bouvy",
		"time": "2014-11-24T11:57:42Z",
		"href": "http://michael.bouvy.net/blog/en/2013/11/19/collect-visualize-your-logs-logstash-elasticsearch-redis-kibana/"
	},
	{
		"cluster": 10,
		"tags": [
			"ukip",
			"politics",
			"culture",
			"socialism",
			"immigration",
			"class"
		],
		"y": 1.8333967943771052,
		"x": 9.814770820436475,
		"extended": "",
		"description": "LENIN'S TOMB: The UKIPisation of English politics II",
		"time": "2014-11-23T23:22:08Z",
		"href": "http://www.leninology.co.uk/2014/11/the-ukipisation-of-english-politics-ii.html?m=1"
	},
	{
		"cluster": 3,
		"tags": [
			"iainsinclair",
			"london",
			"geography",
			"overground",
			"urbanism",
			"psychogeography",
			"culture",
			"film",
			"art",
			"politics",
			"cities"
		],
		"y": -2.1893463104620507,
		"x": 10.097115884496322,
		"extended": "",
		"description": "A Tsunami Of Images: Iain Sinclair Interviewed",
		"time": "2014-11-23T15:47:08Z",
		"href": "http://thequietus.com/articles/16760-iain-sinclair-70-film-book-interview-unlicensed-preaching-london-overground"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"technology",
			"uber",
			"siliconvalley"
		],
		"y": 7.2533964227869845,
		"x": 11.373381805426085,
		"extended": "",
		"description": "Big, bad tech: how America’s digital capitalists are taking us all for a ride",
		"time": "2014-11-23T08:43:34Z",
		"href": "http://feeds.theguardian.com/c/34708/f/663838/s/40bf1b40/sc/15/l/0L0Stheguardian0N0Ccommentisfree0C20A140Cnov0C230Cuber0Edig0Edirt0Ebig0Etech0Edigital0Ecapitalists/story01.htm"
	},
	{
		"cluster": 6,
		"tags": [
			"stevealbini",
			"music",
			"copyright",
			"internet",
			"technology",
			"culture",
			"politics",
			"ohsteveyoumademyday"
		],
		"y": 4.821803647858937,
		"x": 5.644377861092052,
		"extended": "<blockquote>The music producer, Shellac frontman and author of seminal 1993 essay The Problem with Music has turned his frown upside down – read his Face the Music speech in full</blockquote>",
		"description": "Steve Albini on the surprisingly sturdy state of the music industry – in full | Music | The Guardian",
		"time": "2014-11-19T09:14:24Z",
		"href": "http://www.theguardian.com/music/2014/nov/17/steve-albinis-keynote-address-at-face-the-music-in-full"
	},
	{
		"cluster": 2,
		"tags": [
			"survey",
			"coding",
			"qualitative",
			"research",
			"analysis"
		],
		"y": -8.733471144389325,
		"x": -2.2701839361670006,
		"extended": "",
		"description": "6 Survey Coding Tips | Survey Research in Central NY | The Research Bunker",
		"time": "2014-11-18T12:26:49Z",
		"href": "https://rmsbunkerblog.wordpress.com/2010/08/11/6-survey-coding-tips-survey-research-in-central-ny-upstate-market-research-in-syracuse-online-surveys/"
	},
	{
		"cluster": 2,
		"tags": [
			"research",
			"qualitative",
			"analysis",
			"QDAS",
			"survey"
		],
		"y": -8.733473806946014,
		"x": -2.270184680901248,
		"extended": "",
		"description": "Presenting and Evaluating Qualitative Research",
		"time": "2014-11-18T08:58:56Z",
		"href": "http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2987281/"
	},
	{
		"cluster": 10,
		"tags": [
			"technology",
			"design",
			"politics",
			"culture",
			"bullshit",
			"imperialism",
			"colonialism"
		],
		"y": -0.8126347668081397,
		"x": 10.145903320439361,
		"extended": "",
		"description": "Evgeny Morozov: The Naked and the TED | New Republic",
		"time": "2014-11-15T14:50:24Z",
		"href": "http://www.newrepublic.com/article/books-and-arts/magazine/105703/the-naked-and-the-ted-khanna"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"humanitarian",
			"imperialism",
			"colonialism"
		],
		"y": -4.203135353963096,
		"x": 6.4706299149878195,
		"extended": "",
		"description": "Is Humanitarian Design the New Imperialism? | Co.Design | business + design",
		"time": "2014-11-15T12:00:15Z",
		"href": "http://www.fastcodesign.com/1661859/is-humanitarian-design-the-new-imperialism"
	},
	{
		"cluster": 17,
		"tags": [
			"functional",
			"programming",
			"contravariance",
			"contravariantfunctor",
			"functor",
			"variance",
			"subtyping",
			"typesystems"
		],
		"y": -2.9466741390986813,
		"x": -9.312636098885305,
		"extended": "",
		"description": "Tomatoes are a subtype of vegetables : Inside 206-105",
		"time": "2014-11-15T11:44:07Z",
		"href": "http://blog.ezyang.com/2014/11/tomatoes-are-a-subtype-of-vegetables/"
	},
	{
		"cluster": 2,
		"tags": [
			"video"
		],
		"y": -2.7468652975222176,
		"x": 4.7604770989530065,
		"extended": "<blockquote>Owein Reese, Senior Engineer at MediaMath, focuses on techniques and tricks to using dependent types within Scala.</blockquote>",
		"description": "Introduction to Dependent Types in Scala",
		"time": "2014-11-13T23:43:22Z",
		"href": "https://www.hakkalabs.co/articles/introduction-dependent-types-scala"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"war",
			"empire",
			"culture",
			"symbolism",
			"poppies",
			"armistace",
			"day",
			"ww1"
		],
		"y": -0.10371397928986248,
		"x": 10.763321687796926,
		"extended": "<blockquote>An enigmatic figure, common to all great mythologies: the blue demon, the sower and reaper of blood. Conspiracy theory: British imperial history, in its entirety, is the result of a dark and ancient plot on the part of the poppies; a Papaveraceaen pact ranged against humanity. For centuries they schemed in their hedgerows and pastures, dreaming…</blockquote>",
		"description": "The poppy conspiracy | Idiot Joy Showland",
		"time": "2014-11-13T21:49:38Z",
		"href": "http://samkriss.wordpress.com/2014/11/09/the-poppy-conspiracy/"
	},
	{
		"cluster": 12,
		"tags": [
			"virtualbox",
			"vagrant",
			"sendfile",
			"development",
			"nginx",
			"web"
		],
		"y": 9.332052047240152,
		"x": 0.6059509547663895,
		"extended": "<blockquote>I've begun using Vagrant with Virtualbox for Web Development, specifically for Rails development. This allows me to spin up an environment as close to production as possible, and it keeps my host system clean from various projects' clutter. It's quite lovely, and I'll definitely devote a separate post to that topic. However: Recently, I ran…</blockquote>",
		"description": "VirtualBox Hates Sendfile | a bit wiser",
		"time": "2014-11-13T17:26:01Z",
		"href": "https://abitwiser.wordpress.com/2011/02/24/virtualbox-hates-sendfile/"
	},
	{
		"cluster": 0,
		"tags": [
			"ubuntu",
			"upstart",
			"nginx",
			"unicorn",
			"operations",
			"rails",
			"ruby",
			"deployment",
			"sysadmin"
		],
		"y": -7.943323963054332,
		"x": 7.911019841292252,
		"extended": "",
		"description": "Serving Rails Apps with RVM, Nginx, Unicorn and Upstart | Brandon Tilley",
		"time": "2014-11-12T16:27:02Z",
		"href": "http://brandontilley.com/2011/01/29/serving-rails-apps-with-rvm-nginx-unicorn-and-upstart.html"
	},
	{
		"cluster": 0,
		"tags": [
			"puppet",
			"ubuntu",
			"upstart",
			"sysadmin",
			"devops",
			"operations"
		],
		"y": -7.998724539529666,
		"x": 7.943233686154617,
		"extended": "<blockquote>http://projects.puppetlabs.com/issues/14297)\n  file { '/etc/init.d/myapp':\n    ensure => link,\n    target => '/lib/init/upstart-job',\n  }</blockquote>",
		"description": "Puppet 2.7 Upstart services in Ubuntu | nodes for breakfast",
		"time": "2014-11-12T15:45:32Z",
		"href": "http://nodesforbreakfast.com/article/2012/07/25/puppet-27-upstart-services-ubuntu"
	},
	{
		"cluster": 10,
		"tags": [
			"geography",
			"london",
			"underground",
			"history",
			"secret",
			"politics",
			"urban",
			"environment",
			"exploration"
		],
		"y": 4.954020623691329,
		"x": 8.864289854421916,
		"extended": "",
		"description": "Underground London: adventures in the secret city beneath our feet | Cities | The Guardian",
		"time": "2014-11-11T19:43:08Z",
		"href": "http://www.theguardian.com/cities/2014/nov/11/-sp-underground-london-secret-city-ghost-tube-stations"
	},
	{
		"cluster": 2,
		"tags": [
			"housing",
			"history",
			"walthamstow",
			"warner",
			"exwarner",
			"home",
			"photography"
		],
		"y": -1.579206677239734,
		"x": 6.688715483910358,
		"extended": "",
		"description": "Links & Resources | Ex Warner Project",
		"time": "2014-11-11T15:19:03Z",
		"href": "http://www.exwarnerproject.co.uk/links-resources/"
	},
	{
		"cluster": 10,
		"tags": [
			"leadership",
			"diversity",
			"managerialism",
			"milliband",
			"politics",
			"labour"
		],
		"y": 6.336764807373783,
		"x": 13.488183301664524,
		"extended": "<blockquote>The ancient Celts used to sacrifice their kings when their crops failed. Looking at those anonymous MPs who want Ed Miliband to stand down makes me wonder if thinking about leadership has progressed in the last few thousand years. Just...</blockquote>",
		"description": "Stumbling and Mumbling: Leadership in question",
		"time": "2014-11-09T16:40:26Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/11/leadership-in-question.html"
	},
	{
		"cluster": 10,
		"tags": [
			"chav",
			"language",
			"culture",
			"politics"
		],
		"y": 0.21571488818790957,
		"x": 9.468970613740723,
		"extended": "",
		"description": "Chav: The Slur That Won't Let Go | VICE | United Kingdom",
		"time": "2014-11-09T16:30:41Z",
		"href": "http://www.vice.com/en_uk/read/chav-the-word-that-wont-let-go"
	},
	{
		"cluster": 2,
		"tags": [
			"sync",
			"software",
			"storage",
			"backup",
			"tools",
			"dropbox",
			"alternative",
			"floss",
			"foss",
			"oss"
		],
		"y": -2.4184280004458887,
		"x": 4.915585225557174,
		"extended": "",
		"description": "Ind.ie — Pulse",
		"time": "2014-11-09T16:30:23Z",
		"href": "https://ind.ie/pulse/"
	},
	{
		"cluster": 10,
		"tags": [
			"labour",
			"policy",
			"security",
			"politics"
		],
		"y": 6.217122061503585,
		"x": 13.116611599337011,
		"extended": "",
		"description": "All That Is Solid ...: It's the Sense of Security, Stupid",
		"time": "2014-11-06T17:33:53Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/11/its-sense-of-security-stupid.html"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"art",
			"williambasinski"
		],
		"y": -9.986362644735248,
		"x": 3.1133827389114086,
		"extended": "",
		"description": "The Sound of Decay",
		"time": "2014-11-06T15:59:48Z",
		"href": "http://www.newyorker.com/magazine/2014/11/10/looped"
	},
	{
		"cluster": 2,
		"tags": [
			"scrum",
			"kanban",
			"lean",
			"agile",
			"projectmanagement",
			"process",
			"methodology",
			"delivery",
			"continuousdelivery"
		],
		"y": 7.814532835559285,
		"x": -0.5751760562838719,
		"extended": "",
		"description": "Why I’m done with Scrum | Jimmy Bogard's Blog",
		"time": "2014-11-05T15:40:13Z",
		"href": "http://lostechies.com/jimmybogard/2012/09/12/why-im-done-with-scrum/"
	},
	{
		"cluster": 10,
		"tags": [
			"tech",
			"culture",
			"politics",
			"libertarianism",
			"fascism"
		],
		"y": -0.25392977807121986,
		"x": 10.813947975392052,
		"extended": "",
		"description": "graydon2 | The EntitleMen: techno-libertarian right wing sockpuppets of silicon valley",
		"time": "2014-11-03T09:09:39Z",
		"href": "http://graydon2.dreamwidth.org/193575.html#readabilityLink-60"
	},
	{
		"cluster": 13,
		"tags": [
			"history",
			"marxism",
			"feudalism",
			"capitalism",
			"economics",
			"politics"
		],
		"y": 6.999155498572348,
		"x": 9.057891446146035,
		"extended": "<blockquote>Paul Mason: Without knowing the terms, he described the collapse of feudalism and the emergence of early capitalism</blockquote>",
		"description": "What Shakespeare taught me about Marxism | Paul Mason | Comment is free | The Guardian",
		"time": "2014-11-03T08:36:34Z",
		"href": "http://www.theguardian.com/commentisfree/2014/nov/02/sharkespeare-marxism-feudalism-capitalism"
	},
	{
		"cluster": 2,
		"tags": [
			"capitalism",
			"consumption",
			"inequality",
			"spacex",
			"spacetravel",
			"tourism",
			"space"
		],
		"y": -0.23846840297038413,
		"x": 4.955922962447893,
		"extended": "",
		"description": "Richard Branson’s space tourism shows what today’s obscene inequality looks like | Zoe Williams | Comment is free | The Guardian",
		"time": "2014-11-03T08:36:18Z",
		"href": "http://www.theguardian.com/commentisfree/2014/nov/02/richard-branson-space-tourists-obscene-inequality-free-market"
	},
	{
		"cluster": 17,
		"tags": [
			"anaemic",
			"domain",
			"model",
			"domaindrivendesign",
			"softwareengineering",
			"oop",
			"programming"
		],
		"y": 4.121506885731033,
		"x": -6.682354100151187,
		"extended": "",
		"description": "AnemicDomainModel",
		"time": "2014-11-03T08:15:30Z",
		"href": "http://www.martinfowler.com/bliki/AnemicDomainModel.html"
	},
	{
		"cluster": 17,
		"tags": [
			"functional-programming",
			"frp",
			"reactive",
			"programming",
			"computerscience",
			"softwareengineering",
			"domaindrivendesign",
			"domain",
			"modelling"
		],
		"y": -2.5061051871508795,
		"x": -9.286130717563516,
		"extended": "",
		"description": "Ruminations of a Programmer: Functional and Reactive Domain Modeling",
		"time": "2014-11-03T08:13:30Z",
		"href": "http://debasishg.blogspot.co.uk/2014/11/functional-and-reactive-domain-modeling.html"
	},
	{
		"cluster": 10,
		"tags": [
			"california",
			"politics",
			"ideology",
			"internet",
			"imperialism",
			"libertarianism",
			"local",
			"localism",
			"neighbourhood",
			"community"
		],
		"y": 6.263341608340686,
		"x": 12.756207818828935,
		"extended": "<blockquote>In this talk from FutureRuby, Jesse Hirsh explains the history of Imperial California and the means by which its ideology infects everyone. \n</blockquote>",
		"description": "Fighting the Imperial Californian Ideology",
		"time": "2014-11-02T21:35:32Z",
		"href": "http://www.infoq.com/presentations/hirsh-california-ideology"
	},
	{
		"cluster": 10,
		"tags": [
			"policy",
			"politics",
			"evidence"
		],
		"y": 5.894141896448581,
		"x": 11.742789145344119,
		"extended": "<blockquote>What is the case against evidence-based policy? This is one question prompted by David Cameron's refusal to legalize drugs in the face of evidence that criminalization of them doesn't reduce their use. The question, of course, generalizes. Many of us...</blockquote>",
		"description": "Stumbling and Mumbling: Against evidence-based policy",
		"time": "2014-10-31T15:29:10Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/10/against-evidence-based-policy.html"
	},
	{
		"cluster": 10,
		"tags": [
			"managerialism",
			"culture",
			"politics",
			"language"
		],
		"y": 0.320002146509027,
		"x": 9.198472391150444,
		"extended": "",
		"description": "Where Did Soul-Sucking Office-Speak First Come from? | VICE United Kingdom",
		"time": "2014-10-31T15:16:40Z",
		"href": "http://www.vice.com/en_uk/read/evolution-of-office-speak-666"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"sociology",
			"managerialism",
			"language"
		],
		"y": 0.4562412454753549,
		"x": 8.909526554382062,
		"extended": "",
		"description": "All That Is Solid ...: Sociology and Management Speak",
		"time": "2014-10-31T08:32:37Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/10/sociology-and-management-speak.html"
	},
	{
		"cluster": 13,
		"tags": [
			"socialism",
			"capitalism",
			"crisis",
			"economics",
			"politics",
			"politicaleconomy",
			"use",
			"exchange",
			"value",
			"contradition",
			"basicincome",
			"savings"
		],
		"y": 7.024902330521784,
		"x": 8.920269977257846,
		"extended": "",
		"description": "David Harvey interview: The importance of postcapitalist imagination | Red Pepper",
		"time": "2014-10-30T14:09:32Z",
		"href": "http://www.redpepper.org.uk/david-harvey-interview-the-importance-of-postcapitalist-imagination/"
	},
	{
		"cluster": 10,
		"tags": [
			"housing",
			"politics",
			"regeneration",
			"poverty",
			"inequality",
			"planning"
		],
		"y": 6.514809675344992,
		"x": 11.044852317101709,
		"extended": "",
		"description": "Is regeneration bringing slums back to London? | openDemocracy",
		"time": "2014-10-30T14:03:22Z",
		"href": "https://www.opendemocracy.net/ourkingdom/toby-hill/is-regeneration-bringing-slums-back-to-london"
	},
	{
		"cluster": 10,
		"tags": [
			"climate",
			"politics",
			"culture",
			"apocalypse",
			"capitalism",
			"socialism",
			"class",
			"marx"
		],
		"y": 1.9759720004738046,
		"x": 10.097770686518645,
		"extended": "",
		"description": "Fetishisms of Apocalypse | The Occupied Times",
		"time": "2014-10-30T11:43:46Z",
		"href": "http://theoccupiedtimes.org/?p=13488"
	},
	{
		"cluster": 0,
		"tags": [
			"osquery",
			"os",
			"monitoring",
			"systems",
			"operations",
			"devops",
			"ops",
			"sql"
		],
		"y": -7.911877487990356,
		"x": 8.007521660045407,
		"extended": "",
		"description": "Introducing osquery | Engineering Blog | Facebook Code | Facebook",
		"time": "2014-10-30T09:37:07Z",
		"href": "https://code.facebook.com/posts/844436395567983/introducing-osquery/"
	},
	{
		"cluster": 10,
		"tags": [
			"union",
			"politics",
			"freelancing"
		],
		"y": 5.8193098675273,
		"x": 10.726258530940811,
		"extended": "",
		"description": "A Union of One | Jacobin",
		"time": "2014-10-29T09:03:27Z",
		"href": "https://www.jacobinmag.com/2014/10/freelancers-union/"
	},
	{
		"cluster": 10,
		"tags": [
			"kindness",
			"politics"
		],
		"y": 5.847075590041901,
		"x": 10.676809657134584,
		"extended": "",
		"description": "Random acts of kindness can make the world a better place | Alex Andreou | Comment is free | theguardian.com",
		"time": "2014-10-28T14:30:58Z",
		"href": "http://www.theguardian.com/commentisfree/2014/oct/28/random-acts-of-kindness"
	},
	{
		"cluster": 10,
		"tags": [
			"liberalism",
			"profitsharing",
			"politics",
			"socialism",
			"capitalism",
			"business",
			"democracy",
			"citizens",
			"citizensendowment",
			"policymaking"
		],
		"y": 3.5683582965818377,
		"x": 10.058195960582248,
		"extended": "",
		"description": "New Left Project | Alternative Liberal Solutions to Economic Inequality",
		"time": "2014-10-27T11:56:36Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/alternative_liberal_solutions_to_economic_inequality"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"culture",
			"celebrity",
			"politics",
			"news",
			"media",
			"russelbrand"
		],
		"y": 0.9552198215948308,
		"x": 10.571039523831324,
		"extended": "<blockquote>Everyone has been having a pop at Russell Brand. Focusing upon his foibles, however, serves to distract us from some fundamental defects of our political culture. Take these quotes from him: The economy is just a metaphorical device, it’s not...</blockquote>",
		"description": "Stumbling and Mumbling: Russell Brand & our political culture",
		"time": "2014-10-27T09:52:20Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/10/russell-brand-our-political-culture.html"
	},
	{
		"cluster": 13,
		"tags": [
			"finance",
			"economics",
			"interestrates",
			"interest",
			"inflation",
			"savings",
			"china"
		],
		"y": 9.61402863689909,
		"x": 6.9440360133585,
		"extended": "",
		"description": "Interest rates too low, house prices too high? Blame Chinese wedding planners | Business | The Guardian",
		"time": "2014-10-27T09:50:27Z",
		"href": "http://www.theguardian.com/business/economics-blog/2014/oct/26/low-interest-rates-high-house-prices-blame-chinese-wedding-planners"
	},
	{
		"cluster": 10,
		"tags": [
			"data",
			"technology",
			"chile",
			"politics",
			"socialism",
			"capitalism",
			"planning",
			"environment",
			"history"
		],
		"y": 3.7659961593991045,
		"x": 10.22853149773718,
		"extended": "",
		"description": "The Socialist Origins of Big Data",
		"time": "2014-10-25T11:22:03Z",
		"href": "http://www.newyorker.com/magazine/2014/10/13/planning-machine"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"twitter",
			"urban",
			"environment",
			"planning"
		],
		"y": 0.4738035737462268,
		"x": 5.021672704558055,
		"extended": "",
		"description": "Will Twitter Revolutionize How Cities Plan for the Future? – Next City",
		"time": "2014-10-25T10:32:22Z",
		"href": "http://nextcity.org/daily/entry/urban-planning-twitter-social-media-data"
	},
	{
		"cluster": 16,
		"tags": [
			"mapping",
			"data",
			"community",
			"cartography",
			"visualisation",
			"journalism",
			"analysis",
			"storytelling",
			"statistics"
		],
		"y": -2.7235256324864845,
		"x": -0.9134168501596501,
		"extended": "",
		"description": "Mapmaking using Reddit, OKCupid, Twitter, and other social media websites.",
		"time": "2014-10-24T09:07:50Z",
		"href": "http://www.slate.com/articles/technology/technology/2014/10/mapmaking_using_reddit_okcupid_twitter_and_other_social_media_websites.html?wpsrc=fol_tw"
	},
	{
		"cluster": 10,
		"tags": [
			"videogames",
			"gaming",
			"culture",
			"politics",
			"coldwar",
			"MGS",
			"metalgearsolid",
			"mgs3",
			"japan",
			"history"
		],
		"y": 0.01972979953600989,
		"x": 11.264354080204125,
		"extended": "",
		"description": "'Metal Gear Solid 3,' I Love You with All My Heart | VICE United States",
		"time": "2014-10-24T08:12:40Z",
		"href": "http://www.vice.com/read/a-decade-of-snake-eating-a-celebration-of-metal-gear-solid-3-273"
	},
	{
		"cluster": 13,
		"tags": [
			"society",
			"economics",
			"immigration",
			"politics",
			"wages",
			"capitalism"
		],
		"y": 3.8765127989356314,
		"x": 12.310921757801127,
		"extended": "<blockquote>John Harris writes: Perhaps those who reduce people’s worries and fears [about immigration] to mere bigotry should go back to first principles, and consider whether, in such laissez-faire conditions, free movement has been of most benefit to capital or labour....</blockquote>",
		"description": "Stumbling and Mumbling: Immigration & capitalism",
		"time": "2014-10-23T16:03:17Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/10/immigration-capitalism.html"
	},
	{
		"cluster": 1,
		"tags": [
			"stevealbini",
			"shellac",
			"music",
			"surveyors",
			"dudeincredible"
		],
		"y": -9.290402407056687,
		"x": 4.379881795790546,
		"extended": "<blockquote>On September 16, Shellac will release Dude Incredible, on </blockquote>",
		"description": "Steve Albini Breaks Down Shellac's 'Dude Incredible' Track by Track • News • exclaim.ca",
		"time": "2014-10-23T14:26:28Z",
		"href": "http://exclaim.ca/News/steve_albini_breaks_down_shellacs_dude_incredible_track_by_track"
	},
	{
		"cluster": 2,
		"tags": [
			"akka",
			"scala",
			"akka-persistence",
			"persistence",
			"eventsourcing",
			"ddd",
			"actors",
			"architecture",
			"events"
		],
		"y": 5.044296278076921,
		"x": -0.8695768896799623,
		"extended": "<blockquote>Port the EventSourced sample code from http://krasserm.blogspot.ie/2013/01/event-sourcing-and-external-service.html to akka-persistence. - Gist is a simple way to share snippets of text and code with others.</blockquote>",
		"description": "Port the EventSourced sample code from http://krasserm.blogspot.ie/2013/01/event-sourcing-and-external-service.html to akka-persistence.",
		"time": "2014-10-23T13:21:09Z",
		"href": "https://gist.github.com/IainHull/ae38e436941674885014"
	},
	{
		"cluster": 2,
		"tags": [
			"eventsourcing",
			"akka",
			"actor",
			"system",
			"architecture",
			"ddd",
			"events"
		],
		"y": -0.23526284030164657,
		"x": 3.1690742926447366,
		"extended": "",
		"description": "Martin Krasser's Blog: Event sourcing and external service integration",
		"time": "2014-10-23T13:17:22Z",
		"href": "http://krasserm.blogspot.ie/2013/01/event-sourcing-and-external-service.html"
	},
	{
		"cluster": 0,
		"tags": [
			"devops",
			"ops",
			"education",
			"linux",
			"sysadmin",
			"reference",
			"unix",
			"admin",
			"systems",
			"operations",
			"learning"
		],
		"y": -8.26675355740901,
		"x": 7.82180773127986,
		"extended": "",
		"description": "Ops School Curriculum — Ops School Curriculum 0.1 documentation",
		"time": "2014-10-23T12:37:26Z",
		"href": "http://www.opsschool.org/en/latest/index.html"
	},
	{
		"cluster": 18,
		"tags": [
			"scala",
			"cake",
			"dependencyinjection",
			"dependency",
			"injection",
			"programming",
			"software",
			"engineering"
		],
		"y": 5.248975969003963,
		"x": -3.456850589144511,
		"extended": "",
		"description": "My favorite way of injecting dependencies in Scala – Loïc's Blog",
		"time": "2014-10-23T12:33:34Z",
		"href": "http://loicdescotte.github.io/posts/scala-di/"
	},
	{
		"cluster": 13,
		"tags": [
			"co-operatives",
			"cooperatives",
			"coop",
			"politics",
			"socialism",
			"business",
			"mutual",
			"society",
			"capitalism",
			"history",
			"economics",
			"food",
			"supply",
			"retail"
		],
		"y": 3.4923717787198694,
		"x": 11.337474047244125,
		"extended": "",
		"description": "New Left Project | The Strange Death of Co-operative England",
		"time": "2014-10-23T11:32:14Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/the_strange_death_of_co_operative_england"
	},
	{
		"cluster": 13,
		"tags": [
			"tesco",
			"politics",
			"economics",
			"business",
			"accounting"
		],
		"y": 8.684602732256572,
		"x": 7.580382029377524,
		"extended": "",
		"description": "Tesco woes – a case of capitalism gone wrong? | Paul Mason | Paul Mason",
		"time": "2014-10-23T11:16:13Z",
		"href": "http://blogs.channel4.com/paul-mason-blog/tesco-woes-case-capitalism-wrong/2549"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"privilege",
			"douchebags",
			"hipsters",
			"gentrification",
			"language"
		],
		"y": 0.5391840075931248,
		"x": 8.871595538345996,
		"extended": "<blockquote>by Michael Mark Cohen\n\n“The white folks had sure brought their white to work with them that morning.” Chester Himes, If …</blockquote>",
		"description": "Douchebag: The White Racial Slur We’ve All Been Waiting For — Human Parts — Medium",
		"time": "2014-10-22T11:25:20Z",
		"href": "https://medium.com/human-parts/douchebag-the-white-racial-slur-weve-all-been-waiting-for-a2323002f85d"
	},
	{
		"cluster": 14,
		"tags": [
			"divergent",
			"convergent",
			"thinking",
			"bdd",
			"software",
			"design",
			"requirementsgathering"
		],
		"y": 5.38115578034006,
		"x": -5.277035462016271,
		"extended": "<blockquote>Cucumber Pro. Collaborative Specifications.</blockquote>",
		"description": "Divergent and Convergent thinking in BDD · Cucumber Pro",
		"time": "2014-10-22T09:28:12Z",
		"href": "https://cucumber.pro/blog/2014/10/21/the-two-modes-of-thought-you-need-for-bdd.html"
	},
	{
		"cluster": 14,
		"tags": [
			"user",
			"design",
			"research",
			"ux",
			"usercentreddesign",
			"interaction"
		],
		"y": -5.392026927601721,
		"x": 1.189500192502196,
		"extended": "",
		"description": "Complete Beginner’s Guide to Design Research | UX Booth",
		"time": "2014-10-22T08:30:45Z",
		"href": "http://www.uxbooth.com/articles/complete-beginners-guide-to-design-research/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"research",
			"ux",
			"agile",
			"software",
			"development",
			"userstories",
			"requirements",
			"user",
			"stories"
		],
		"y": 6.266520935442825,
		"x": -4.897973391431464,
		"extended": "",
		"description": "Writing user stories — Government Service Design Manual",
		"time": "2014-10-22T08:17:20Z",
		"href": "https://www.gov.uk/service-manual/agile/writing-user-stories.html"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"research",
			"userexperience",
			"gds",
			"userneeds",
			"needs",
			"userstories"
		],
		"y": -8.8520200427896,
		"x": -0.8429075802847615,
		"extended": "",
		"description": "User needs — Government Service Design Manual",
		"time": "2014-10-22T08:11:53Z",
		"href": "https://www.gov.uk/service-manual/user-centred-design/user-needs.html"
	},
	{
		"cluster": 2,
		"tags": [
			"investment",
			"index",
			"ethical",
			"fossilfuels",
			"carbon",
			"finance"
		],
		"y": 3.0598253357594234,
		"x": 5.179681225528884,
		"extended": "",
		"description": "MSCI launches fossil fuel free investment indexes - Blue and Green Tomorrow",
		"time": "2014-10-22T07:24:58Z",
		"href": "http://blueandgreentomorrow.com/2014/10/16/msci-launches-fossil-fuel-free-investment-indexes/"
	},
	{
		"cluster": 10,
		"tags": [
			"language",
			"culture",
			"politics",
			"euphemism"
		],
		"y": 0.216276557373506,
		"x": 9.469346579971251,
		"extended": "",
		"description": "‘Cleansing the stock’ and other ways governments talk about human beings | George Monbiot | Comment is free | The Guardian",
		"time": "2014-10-22T07:13:08Z",
		"href": "http://www.theguardian.com/commentisfree/2014/oct/21/cleansing-stock-doublespeak-people-killing"
	},
	{
		"cluster": 10,
		"tags": [
			"gender",
			"politics",
			"feminism",
			"privilege"
		],
		"y": 1.6587033372269964,
		"x": 8.46120326833443,
		"extended": "",
		"description": "The evolution of the Great White Male",
		"time": "2014-10-20T20:15:34Z",
		"href": "http://freethoughtblogs.com/hetpat/2014/10/20/the-evolution-of-the-great-white-male/"
	},
	{
		"cluster": 7,
		"tags": [
			"programming",
			"ruby",
			"lawofdemeter",
			"demeter",
			"objectoriented",
			"design",
			"actors",
			"concurrency",
			"coupling",
			"temporal",
			"temporalcoupling",
			"marsrover"
		],
		"y": 5.380844561857978,
		"x": -11.169791358854534,
		"extended": "",
		"description": "Temporal coupling and the Law of Demeter - Practicing Ruby, Issue 5.2",
		"time": "2014-10-20T17:32:01Z",
		"href": "https://practicingruby.com/articles/temporal-coupling-and-the-law-of-demeter"
	},
	{
		"cluster": 2,
		"tags": [
			"CRF",
			"NLP",
			"natural",
			"language",
			"processing",
			"conditional",
			"random",
			"fields",
			"POStagging",
			"pos",
			"tagging",
			"Part",
			"of",
			"speech",
			"linguistics",
			"computational",
			"computerscieince"
		],
		"y": -0.13412231191386553,
		"x": 7.8440103083429715,
		"extended": "",
		"description": "Introduction to Conditional Random Fields",
		"time": "2014-10-20T13:19:19Z",
		"href": "http://blog.echen.me/2012/01/03/introduction-to-conditional-random-fields/"
	},
	{
		"cluster": 10,
		"tags": [
			"tv",
			"media",
			"culture",
			"theapprentice",
			"politics",
			"capitalism",
			"capitalistrealism"
		],
		"y": -0.27446812236749785,
		"x": 11.53306119363381,
		"extended": "",
		"description": "The Quietus | Opinion | Black Sky Thinking | We're All Apprentices Now: On Business TV & Contemporary Britain",
		"time": "2014-10-20T12:58:59Z",
		"href": "http://thequietus.com/articles/16481-the-apprentice-politics-business-culture"
	},
	{
		"cluster": 7,
		"tags": [
			"sinatra",
			"programming",
			"ruby",
			"web",
			"development",
			"application",
			"structure"
		],
		"y": 8.702501212744435,
		"x": -7.962681725882451,
		"extended": "<blockquote>Sourcing.io helps you find great software engineers</blockquote>",
		"description": "Structuring Sinatra Applications",
		"time": "2014-10-20T08:22:38Z",
		"href": "http://blog.sourcing.io/structuring-sinatra"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"austerity",
			"politics",
			"Britain"
		],
		"y": 8.704180641369264,
		"x": 9.56031068200565,
		"extended": "",
		"description": "Why did Britains political class buy into the Tories economic fairytale?",
		"time": "2014-10-20T06:19:34Z",
		"href": "http://feeds.theguardian.com/c/34708/f/663828/s/3f9c4aac/sc/7/l/0L0Stheguardian0N0Ccommentisfree0C20A140Coct0C190Cbritain0Epolitical0Eclass0Etories0Eeconomic0Efairytale/story01.htm"
	},
	{
		"cluster": 13,
		"tags": [
			"wisdomofcrowds",
			"diversity",
			"economics",
			"democracy",
			"politics"
		],
		"y": 8.470704953366747,
		"x": 9.09246977605125,
		"extended": "<blockquote>Jon Lansman wants Labour MPs to be \"ordinary people who have held normal jobs\" rather than career politicians. There's a powerful piece of thinking on his side - the diversity trumps ability theorem. This is an extension of James Surowiecki's...</blockquote>",
		"description": "Diversity trumps ability",
		"time": "2014-10-17T15:54:39Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/10/diversity-trumps-ability.html"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"design",
			"craft",
			"culture",
			"politics",
			"williammorris",
			"socialism"
		],
		"y": 0.9736485918136393,
		"x": 9.783252629161998,
		"extended": "<blockquote>By presenting the artist as a hero of the left, the National Portrait Gallery’s new show utterly misses the point about his true revolutionary spirit, writes Jonathan Jones</blockquote>",
		"description": "Was William Morris actually just a pious bore? | Art and design | theguardian.com",
		"time": "2014-10-17T07:43:48Z",
		"href": "http://www.theguardian.com/artanddesign/2014/oct/16/william-morris-review-national-portrait-gallery"
	},
	{
		"cluster": 2,
		"tags": [
			"java",
			"scala",
			"slf4j",
			"logging",
			"configurations"
		],
		"y": 4.888768063644843,
		"x": 0.3601182622879743,
		"extended": "",
		"description": "Zemian Blog: A Programmer's Journal: How to configure SLF4J with different logger implementations",
		"time": "2014-10-16T15:48:41Z",
		"href": "http://saltnlight5.blogspot.co.uk/2013/08/how-to-configure-slf4j-with-different.html"
	},
	{
		"cluster": 12,
		"tags": [
			"scalatra",
			"slick",
			"database",
			"programming",
			"web",
			"scala",
			"development"
		],
		"y": 7.221760221546928,
		"x": -1.9236163222366878,
		"extended": "",
		"description": "Slick | Persistence | Scalatra guides",
		"time": "2014-10-16T13:23:16Z",
		"href": "http://www.scalatra.org/2.3/guides/persistence/slick.html"
	},
	{
		"cluster": 17,
		"tags": [
			"c3po",
			"database",
			"connection",
			"pool",
			"pooling",
			"scala",
			"slick",
			"programming",
			"cache",
			"connectionpool"
		],
		"y": 6.736966162900553,
		"x": -1.8563544665245062,
		"extended": "<blockquote>import com.mchange.v2.c3p0.ComboPooledDataSource</blockquote>",
		"description": "Let's Have a War • Slick Connection Pooling",
		"time": "2014-10-16T13:01:07Z",
		"href": "http://fernandezpablo85.github.io/2013/04/07/slick_connection_pooling.html"
	},
	{
		"cluster": 2,
		"tags": [
			"cycling",
			"infrastructure",
			"copenhagen",
			"town",
			"planning",
			"architecture",
			"city",
			"urban",
			"environment"
		],
		"y": 0.6161098149956445,
		"x": 5.229055551965128,
		"extended": "",
		"description": "Innovation in, lycra out: what Copenhagen can teach us about cycling | Cities | theguardian.com",
		"time": "2014-10-16T12:26:47Z",
		"href": "http://www.theguardian.com/cities/2014/oct/16/copenhagen-cycling-innovation-lycra-louts-green-wave-bike-bridges"
	},
	{
		"cluster": 13,
		"tags": [
			"cycling",
			"safety",
			"policy",
			"economics"
		],
		"y": 10.106723453648494,
		"x": 9.104691794249122,
		"extended": "",
		"description": "Why cycling is great for everyone – not just cyclists | Environment | theguardian.com",
		"time": "2014-10-16T11:28:06Z",
		"href": "http://www.theguardian.com/environment/bike-blog/2014/oct/16/why-cyling-is-great-for-everyone-not-just-cyclists"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"labour",
			"bargaining",
			"wages",
			"disability",
			"politics"
		],
		"y": 9.224348001493613,
		"x": 10.317135851746318,
		"extended": "<blockquote>As Lord Freud's more illustrious ancestor pointed out, our unguarded comments can sometimes reveal our true sentiments. It's for this reason that his claim that some disabled people are \"not worth the full [minimum] wage\" has outraged so many. At...</blockquote>",
		"description": "Stumbling and Mumbling: Why Freud's wrong",
		"time": "2014-10-16T11:04:32Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/10/why-freuds-wrong.html"
	},
	{
		"cluster": 10,
		"tags": [
			"loneliness",
			"society",
			"politics",
			"advertising",
			"aspiration"
		],
		"y": 2.638896751936324,
		"x": 12.400044112738623,
		"extended": "",
		"description": "The age of loneliness is killing us | George Monbiot | Comment is free | The Guardian",
		"time": "2014-10-14T19:43:55Z",
		"href": "http://www.theguardian.com/commentisfree/2014/oct/14/age-of-loneliness-killing-us"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"morales",
			"bolivia",
			"politics"
		],
		"y": 2.822081778953214,
		"x": 9.987762501648366,
		"extended": "<blockquote>Ellie Mae O’Hagan: Bolivia’s re-elected president has dumbfounded critics in Washington, the World Bank and the IMF. There are lessons for Britain’s left here</blockquote>",
		"description": "Evo Morales has proved that socialism doesn’t damage economies | Ellie Mae O’Hagan | Comment is free | theguardian.com",
		"time": "2014-10-14T17:08:45Z",
		"href": "http://www.theguardian.com/commentisfree/2014/oct/14/evo-morales-reelected-socialism-doesnt-damage-economies-bolivia"
	},
	{
		"cluster": 10,
		"tags": [
			"racism",
			"immigration",
			"identity",
			"neoliberalism",
			"capitalism",
			"politics"
		],
		"y": 6.912009498904867,
		"x": 9.211620509160321,
		"extended": "",
		"description": "Why is there so much hostility to immigrants in the UK? | Richard Seymour | Comment is free | theguardian.com",
		"time": "2014-10-14T12:22:33Z",
		"href": "http://www.theguardian.com/commentisfree/2014/oct/14/why-hostility-immigrants-uk-racism"
	},
	{
		"cluster": 18,
		"tags": [
			"management",
			"programming",
			"languages",
			"business",
			"culture",
			"personaldevelopment",
			"engineering"
		],
		"y": 1.960605684392668,
		"x": 4.089223233516401,
		"extended": "<blockquote>Before I risk offending anyone with my provocative title, I'll give away the answer: it's \"no\". However, there's an interesting discussion to be made of this. Not to pick on Haskell or Erlang or Clojure in particular, Piaw Na made this comment in this Quora answer. A fixation on programming languages is the sign of…</blockquote>",
		"description": "Are Haskell engineers second-rate? (Answer: no.) | Michael O. Church",
		"time": "2014-10-13T13:38:39Z",
		"href": "http://michaelochurch.wordpress.com/2014/10/07/are-haskell-engineers-second-rate/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"linearmodels",
			"regression",
			"effecttypes",
			"fixedeffects",
			"randomeffects",
			"fixed",
			"random"
		],
		"y": -1.5735186273810073,
		"x": 0.8760428245695633,
		"extended": "",
		"description": "Random effects",
		"time": "2014-10-13T09:53:05Z",
		"href": "http://faculty.ucr.edu/~hanneman/linear_models/c4.html"
	},
	{
		"cluster": 2,
		"tags": [
			"heroku",
			"deployment",
			"git",
			"subtree"
		],
		"y": -1.6573690137265389,
		"x": 3.8824105918300997,
		"extended": "<blockquote>A protip by djm about python, heroku, and django.</blockquote>",
		"description": "Darian Moody : Heroku deployment without the app being at the repo root (in a subfolder)",
		"time": "2014-10-12T17:15:52Z",
		"href": "https://coderwall.com/p/ssxp5q"
	},
	{
		"cluster": 2,
		"tags": [
			"videos"
		],
		"y": -2.7327735205088963,
		"x": 4.775709428810882,
		"extended": "",
		"description": "Skills Matter",
		"time": "2014-10-10T10:13:20Z",
		"href": "https://skillsmatter.com/skillscasts/5787-categories-for-the-working-haskeller"
	},
	{
		"cluster": 2,
		"tags": [
			"liftedinference",
			"inference",
			"graphicalmodels",
			"logic",
			"machinelearning",
			"statisticalrelationallearning"
		],
		"y": -1.019793178219076,
		"x": 3.4874540132169702,
		"extended": "",
		"description": "Artificial Intelligence Blog · Lifted Inference",
		"time": "2014-10-09T09:31:44Z",
		"href": "http://artent.net/2012/12/24/lifted-inference-seen-from-the-other-side-the-tractable-features/"
	},
	{
		"cluster": 2,
		"tags": [
			"video"
		],
		"y": -2.7469058375510227,
		"x": 4.7604121893666855,
		"extended": "",
		"description": "Building a Production Machine Learning Infrastructure | Machine Learning Mastery",
		"time": "2014-10-08T10:17:01Z",
		"href": "http://machinelearningmastery.com/building-a-production-machine-learning-infrastructure/"
	},
	{
		"cluster": 13,
		"tags": [
			"deficit",
			"economics",
			"politics",
			"media",
			"overtonwindow",
			"cognitivebias"
		],
		"y": 8.685719489514808,
		"x": 8.956743768853489,
		"extended": "",
		"description": "Stumbling and Mumbling: \"The economy\"",
		"time": "2014-10-07T18:21:06Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/10/the-economy.html"
	},
	{
		"cluster": 2,
		"tags": [
			"lacan",
			"theory",
			"philosophy",
			"structuralism",
			"biography",
			"beingadick"
		],
		"y": -1.3733333022235636,
		"x": 4.617744817456692,
		"extended": "",
		"description": "Jacques Lacan Was Sort of a Dick | VICE United Kingdom",
		"time": "2014-10-07T18:20:23Z",
		"href": "http://www.vice.com/en_uk/read/jacques-lacan-was-sort-of-a-dick-323"
	},
	{
		"cluster": 10,
		"tags": [
			"art",
			"design",
			"politics",
			"socialism",
			"williammorris",
			"craft",
			"newsfromnowhere",
			"history"
		],
		"y": 1.0930400361913668,
		"x": 9.749998984723028,
		"extended": "",
		"description": "William Morris – beauty and anarchy in the UK | Books | The Guardian",
		"time": "2014-10-07T17:11:47Z",
		"href": "http://www.theguardian.com/books/2014/oct/03/how-william-morris-beauty-and-anarchy-uk"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"investing",
			"GrossmanStiglitzParadox",
			"efficientmarketshypothesis",
			"paradox",
			"markets"
		],
		"y": 7.988215982216364,
		"x": 8.153463077246244,
		"extended": "",
		"description": "Tim Harford — Article — Pick a fund, any fund…",
		"time": "2014-10-07T16:18:33Z",
		"href": "http://timharford.com/2014/10/pick-a-fund-any-fund/"
	},
	{
		"cluster": 2,
		"tags": [
			"investing",
			"savings",
			"passive",
			"ethical"
		],
		"y": 2.945291281171575,
		"x": 5.1469342756636225,
		"extended": "",
		"description": "Can you be passive and ethical too?",
		"time": "2014-10-07T08:55:16Z",
		"href": "http://www.sensibleinvesting.tv/can-you-be-passive-and-ethical-too"
	},
	{
		"cluster": 10,
		"tags": [
			"videogames",
			"games",
			"culture",
			"feminism",
			"politics",
			"capitalism",
			"gamergate"
		],
		"y": 0.4275745421800576,
		"x": 10.411555491285542,
		"extended": "",
		"description": "In Defense of Gamers | Jacobin",
		"time": "2014-10-04T14:25:49Z",
		"href": "https://www.jacobinmag.com/2014/10/in-defense-of-gamers/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"thatcher",
			"history",
			"minersstrike"
		],
		"y": 6.186786777791774,
		"x": 12.272868357783087,
		"extended": "",
		"description": "During the miners’ strike, Thatcher’s secret state was the real enemy within | Seumas Milne | Comment is free | theguardian.com",
		"time": "2014-10-04T08:36:27Z",
		"href": "http://www.theguardian.com/commentisfree/2014/oct/03/miners-strike-thatcher-real-enemy-within-extremism"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"data",
			"container",
			"persistence",
			"backup",
			"devops",
			"restore",
			"infrastructure"
		],
		"y": 1.6494658374007296,
		"x": 5.395288405290753,
		"extended": "<blockquote>How to manage data inside your Docker containers.</blockquote>",
		"description": "Managing data in containers - Docker Documentation",
		"time": "2014-10-04T08:30:00Z",
		"href": "http://docs.docker.com/userguide/dockervolumes/"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"persistence",
			"volume",
			"container",
			"data",
			"devops",
			"infrastructure",
			"architecture"
		],
		"y": 1.6509106322058342,
		"x": 5.40037805703677,
		"extended": "",
		"description": "Persistent volumes with Docker - Data-only container pattern · Tech'd",
		"time": "2014-10-04T08:28:10Z",
		"href": "http://www.tech-d.net/2013/12/16/persistent-volumes-with-docker-container-as-volume-pattern/"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"containers",
			"volumes",
			"persistence",
			"devops",
			"ops",
			"infrastructure",
			"architecture"
		],
		"y": 1.5790198110352034,
		"x": 5.450608428042643,
		"extended": "",
		"description": "Advanced Docker Volumes",
		"time": "2014-10-04T08:23:09Z",
		"href": "https://crosbymichael.com/advanced-docker-volumes.html"
	},
	{
		"cluster": 16,
		"tags": [
			"docker",
			"devops",
			"architecture",
			"persistence",
			"data",
			"dataonly",
			"container",
			"volume"
		],
		"y": 1.6585250734860861,
		"x": 5.393609581778833,
		"extended": "<blockquote>Tom Offermann's Blog</blockquote>",
		"description": "Tom Offermann: Tiny Docker Pieces, Loosely Joined",
		"time": "2014-10-04T08:19:50Z",
		"href": "http://www.offermann.us/2013/12/tiny-docker-pieces-loosely-joined.html"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"database",
			"infrastructure",
			"devops",
			"container",
			"persistence"
		],
		"y": 1.6363061653508555,
		"x": 5.397076196528287,
		"extended": "",
		"description": "How to deal with persistent storage (e.g. databases) in docker - Stack Overflow",
		"time": "2014-10-04T08:15:57Z",
		"href": "http://stackoverflow.com/questions/18496940/how-to-deal-with-persistent-storage-e-g-databases-in-docker"
	},
	{
		"cluster": 10,
		"tags": [
			"uber",
			"politics",
			"sharingeconomy",
			"exploitation",
			"siliconvalley",
			"douchebags"
		],
		"y": 7.278776961016146,
		"x": 11.493806412463423,
		"extended": "",
		"description": "Against Sharing | Jacobin",
		"time": "2014-10-03T14:38:08Z",
		"href": "https://www.jacobinmag.com/2014/09/against-sharing"
	},
	{
		"cluster": 7,
		"tags": [
			"monads",
			"ruby",
			"refactoring",
			"programming"
		],
		"y": 5.936894766963473,
		"x": -9.898307767816766,
		"extended": "",
		"description": "Refactoring Ruby with Monads",
		"time": "2014-10-03T14:37:55Z",
		"href": "http://codon.com/refactoring-ruby-with-monads"
	},
	{
		"cluster": 7,
		"tags": [
			"monads",
			"ruby",
			"programming"
		],
		"y": 5.923515701919397,
		"x": -9.884678356831358,
		"extended": "",
		"description": "Tom Stuart - Refactoring Ruby with Monads - YouTube",
		"time": "2014-10-03T14:31:00Z",
		"href": "https://www.youtube.com/watch?v=J1jYlPtkrqQ"
	},
	{
		"cluster": 0,
		"tags": [
			"coreos",
			"fleet",
			"etcd",
			"docker",
			"infrastructure",
			"cluster",
			"distributedsystems",
			"devops",
			"operations",
			"sysadmin"
		],
		"y": 1.1479537810426843,
		"x": 5.856340224817371,
		"extended": "<blockquote>Fleet is the cluster-wide service management component of CoreOS. In this guide, we will take an in-depth look at the unit files that define services for CoreOS. We will learn how to create flexible services that take advantage of the power of the Cor</blockquote>",
		"description": "How to Create Flexible Services for a CoreOS Cluster with Fleet Unit Files | DigitalOcean",
		"time": "2014-10-03T10:02:43Z",
		"href": "https://www.digitalocean.com/community/tutorials/how-to-create-flexible-services-for-a-coreos-cluster-with-fleet-unit-files"
	},
	{
		"cluster": 0,
		"tags": [
			"coreos",
			"fleet",
			"systemadministration",
			"containers",
			"docker",
			"devops",
			"ops",
			"deployment",
			"digitalocean",
			"etcd"
		],
		"y": 1.1772706152726151,
		"x": 5.821670404933559,
		"extended": "<blockquote>The fleet daemon and the fleetctl utility program are essential for managing your CoreOS cluster. A cluster-wide interface to individual systemd instances, this system allows you to manage services throughout your clustered environment. In this guide,</blockquote>",
		"description": "How To Use Fleet and Fleetctl to Manage your CoreOS Cluster | DigitalOcean",
		"time": "2014-10-03T09:31:02Z",
		"href": "https://www.digitalocean.com/community/tutorials/how-to-use-fleet-and-fleetctl-to-manage-your-coreos-cluster"
	},
	{
		"cluster": 10,
		"tags": [
			"LGSM",
			"pride",
			"politics",
			"minersstrikes",
			"history",
			"film",
			"LGBT",
			"socialism"
		],
		"y": 2.9659737739414265,
		"x": 9.897968310332468,
		"extended": "",
		"description": "Pride – the true story",
		"time": "2014-10-03T07:44:57Z",
		"href": "http://leftunity.org/pride-the-true-story/"
	},
	{
		"cluster": 13,
		"tags": [
			"housing",
			"politics",
			"architecture",
			"economics",
			"privatisation",
			"history",
			"planning",
			"housingassociations"
		],
		"y": 7.58466574925897,
		"x": 8.994750685132578,
		"extended": "",
		"description": "James Meek · Where will we live?: The Housing Disaster · LRB 9 January 2014",
		"time": "2014-10-02T22:21:42Z",
		"href": "http://www.lrb.co.uk/v36/n01/james-meek/where-will-we-live"
	},
	{
		"cluster": 13,
		"tags": [
			"cuts",
			"politics",
			"economics",
			"behavioraleconomics",
			"cognitivebias",
			"managerialism"
		],
		"y": 9.451188012168219,
		"x": 9.734943040998026,
		"extended": "<blockquote>On the Today programme this morning, Ryan Bourne said (2'38\") that spending cuts need not have \"hugely detrimental effects on the public services\": Other countries spend significantly less as a proportion of GDP than the UK. It's a question of...</blockquote>",
		"description": "Stumbling and Mumbling: Are cuts \"feasible\"?",
		"time": "2014-10-02T18:37:04Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/10/are-cuts-feasible.html"
	},
	{
		"cluster": 13,
		"tags": [
			"capitalism",
			"privatisation",
			"economics",
			"politics",
			"britain",
			"utilities",
			"housing"
		],
		"y": 7.533661690642827,
		"x": 9.349365281948335,
		"extended": "",
		"description": "Britain Doesn't Belong to You | VICE United Kingdom",
		"time": "2014-10-02T15:37:34Z",
		"href": "http://www.vice.com/en_uk/read/how-corporations-carved-up-the-uk-for-private-profit-921"
	},
	{
		"cluster": 15,
		"tags": [
			"buddhism",
			"computation",
			"mathematics",
			"science",
			"algorithms",
			"computerscience",
			"philosophy",
			"recursion"
		],
		"y": -1.3558768290717365,
		"x": -12.901796389171356,
		"extended": "",
		"description": "Rational Buddhism: Buddhism and Mathematics",
		"time": "2014-10-02T13:27:31Z",
		"href": "http://rational-buddhism.blogspot.co.uk/2012/09/buddhism-and-mathematics.html"
	},
	{
		"cluster": 2,
		"tags": [
			"buddhism",
			"science",
			"philosophy"
		],
		"y": -3.044011534158148,
		"x": 2.5957576539140677,
		"extended": "",
		"description": "Transcultural Buddhism: How things exist - according to Buddhism and Science",
		"time": "2014-10-02T13:10:06Z",
		"href": "http://seanrobsville.blogspot.co.uk/2012/02/how-things-exist-according-to-buddhism.html"
	},
	{
		"cluster": 13,
		"tags": [
			"postmodernism",
			"hyperreality",
			"baudrillard",
			"politics",
			"economics",
			"markets"
		],
		"y": 8.220354411244092,
		"x": 8.787227790604156,
		"extended": "<blockquote>A lot has been written about the failures of economics, some of it worth reading. However, as far as I know, nobody has pointed out that pretty much all of us - me, Simon Wren-Lewis, the Adam Smith Institute and...</blockquote>",
		"description": "Stumbling and Mumbling: The economy as hyperreality",
		"time": "2014-10-02T12:37:06Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/10/the-economy-as-hyperreality.html"
	},
	{
		"cluster": 17,
		"tags": [
			"whatsapp",
			"scalability",
			"performance",
			"architecture",
			"programming",
			"systems",
			"optimization"
		],
		"y": 4.688289093662866,
		"x": -4.870731244663582,
		"extended": "",
		"description": "The WhatsApp Architecture Facebook Bought For $19 Billion - High Scalability -",
		"time": "2014-10-02T11:09:03Z",
		"href": "http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html"
	},
	{
		"cluster": 2,
		"tags": [
			"maps",
			"history",
			"mythology",
			"atlas"
		],
		"y": -2.2643760293261774,
		"x": 5.546062323020319,
		"extended": "<blockquote>Ayn Rand almost called her last novel <em>The Strike</em>, but felt that her magnum opus deserved a more symbolic, less descriptive title. She settled on <em>Atlas Shrugged</em>, as explained by this conversation between two of the book's characters: \n \n \"Mr. Rearden,\" said Francisco, his voice solemnly calm, \"if ...</blockquote>",
		"description": "Shrug This! Atlas and the Weight of Heaven | Big Think | Strange Maps",
		"time": "2014-10-02T10:46:16Z",
		"href": "http://bigthink.com/strange-maps/shrug-this-atlas-and-the-weight-of-heaven"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"taxonomy"
		],
		"y": 8.362085182117989,
		"x": 8.989502869545271,
		"extended": "",
		"description": "Cameron’s tax cuts: short-term cheers at expense of longer-term problems | Politics | The Guardian",
		"time": "2014-10-02T06:53:20Z",
		"href": "http://www.theguardian.com/politics/2014/oct/01/cameron-tax-cuts-short-term-popularity"
	},
	{
		"cluster": 13,
		"tags": [
			"socialassistance",
			"benefits",
			"politics",
			"welfarestate",
			"welfare",
			"economics",
			"class",
			"culturee"
		],
		"y": 8.95829511550054,
		"x": 9.553820414635139,
		"extended": "",
		"description": "New Statesman | Pre-paid benefits cards fuel booze-and-fags stereotype",
		"time": "2014-09-30T13:05:06Z",
		"href": "http://www.newstatesman.com/staggers/2014/09/pre-paid-benefits-cards-fuel-booze-and-fags-stereotype"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"wages",
			"business",
			"benefits"
		],
		"y": 8.868137678247578,
		"x": 7.864073537565899,
		"extended": "",
		"description": "George Osborne's Message To UK Business: Pay People More!",
		"time": "2014-09-30T08:16:42Z",
		"href": "http://www.forbes.com/sites/francescoppola/2014/09/29/george-osbornes-message-to-uk-business-pay-people-more/"
	},
	{
		"cluster": 17,
		"tags": [
			"wolfe",
			"machinelearning",
			"factorie",
			"scala",
			"factorgraph",
			"programming",
			"library",
			"computerscience"
		],
		"y": -0.11230131352621875,
		"x": -6.666125486555694,
		"extended": "",
		"description": "Wolfe • expressive, extensible and efficient ML",
		"time": "2014-09-30T07:58:56Z",
		"href": "http://www.wolfe.ml/"
	},
	{
		"cluster": 10,
		"tags": [
			"happyartisan",
			"work",
			"socialism",
			"politics",
			"culture",
			"history",
			"williammorris"
		],
		"y": 1.87543519415951,
		"x": 10.60392943967957,
		"extended": "<blockquote>Ornament - \"the art we add to art,\" as James Trilling defines it - makes people happy; it stands for everything that makes life worth living. But ornament was effectively banned from our world almost a century ago, with modernism's doctrine that ornament was a betrayal of the beauty of function. Devotion to modernism stripped away our historical awareness of ornament and broke the tradition of craft that once kept ornament alive. Now that modernism is itself receding into history, or...",
		"description": "Ornament: A Modern Perspective - James Trilling - Google Books",
		"time": "2014-09-29T16:51:48Z",
		"href": "http://books.google.co.uk/books?id=HzQ_YEkyKL4C&pg=PA195&lpg=PA195&dq=myth+of+the+happy+artisan&source=bl&ots=0Idl6JugeS&sig=pmi4Lvo0u1ErSCZXLILV5Q0_OZg&hl=en&sa=X&ei=HcclVJ_gOoj3OqeVgOgN&ved=0CA4Q6AEwAQ#v=onepage&q=myth%20of%20the%20happy%20artisan&f=false"
	},
	{
		"cluster": 11,
		"tags": [
			"MAC",
			"privacy",
			"apple",
			"location",
			"networking",
			"wireless"
		],
		"y": -3.6750252638360994,
		"x": 4.722911341026524,
		"extended": "",
		"description": "Randomgate | Michal Jarski | LinkedIn",
		"time": "2014-09-29T13:39:20Z",
		"href": "https://www.linkedin.com/today/post/article/20140927133711-5689549-randomgate?_mSplash=1"
	},
	{
		"cluster": 17,
		"tags": [
			"strangeloop",
			"programming",
			"reactive",
			"frp",
			"distributed",
			"systems",
			"computerscience"
		],
		"y": 2.978337913186969,
		"x": -8.156771940870312,
		"extended": "",
		"description": "Rafael rambling: Themes from Strangeloop 2014",
		"time": "2014-09-29T13:35:34Z",
		"href": "http://blog.rafaelferreira.net/2014/09/themes-from-strangeloop-2014.html"
	},
	{
		"cluster": 10,
		"tags": [
			"socialmobility",
			"politics",
			"culture",
			"privilege",
			"class",
			"socialism"
		],
		"y": 1.9443031018325794,
		"x": 9.74954992529604,
		"extended": "",
		"description": "I don’t want to be socially mobile, ta | LabourList",
		"time": "2014-09-29T13:24:54Z",
		"href": "http://labourlist.org/2014/09/i-dont-want-to-be-socially-mobile-ta/"
	},
	{
		"cluster": 13,
		"tags": [
			"tax",
			"prices",
			"politics",
			"houseprices",
			"housing",
			"property",
			"mansiontax",
			"economics"
		],
		"y": 8.266426447211003,
		"x": 8.741882001395991,
		"extended": "",
		"description": "A mansion tax won’t fix the UK’s dysfunctional property market | Jonathan Portes | Comment is free | theguardian.com",
		"time": "2014-09-29T12:52:06Z",
		"href": "http://www.theguardian.com/commentisfree/2014/sep/29/mansion-tax-uk-property-market-council-stamp-duty"
	},
	{
		"cluster": 10,
		"tags": [
			"war",
			"politics",
			"imperialism",
			"hegemony",
			"power",
			"violence",
			"syria",
			"iraq",
			"culture"
		],
		"y": -0.10192508031991047,
		"x": 10.75338636850469,
		"extended": "",
		"description": "New Left Project | Where is the Anti-War Movement?",
		"time": "2014-09-29T12:50:10Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/where_is_the_anti_war_movement"
	},
	{
		"cluster": 10,
		"tags": [
			"ello",
			"venturecapital",
			"politics",
			"startups",
			"technology",
			"privacy",
			"business",
			"capitalism"
		],
		"y": 5.320833996999036,
		"x": 7.24007227148734,
		"extended": "",
		"description": "Aral Balkan — Ello, goodbye.",
		"time": "2014-09-29T09:01:57Z",
		"href": "https://aralbalkan.com/notes/ello-goodbye/"
	},
	{
		"cluster": 10,
		"tags": [
			"economis",
			"politics",
			"capitalism",
			"piketty"
		],
		"y": 6.38668292546282,
		"x": 9.667099288326229,
		"extended": "",
		"description": "New Left Project | Palan on Piketty",
		"time": "2014-09-28T21:19:19Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/palan_on_piketty"
	},
	{
		"cluster": 13,
		"tags": [
			"investment",
			"politics",
			"economics",
			"deficit",
			"labour",
			"austerity"
		],
		"y": 9.131085805501291,
		"x": 10.318658669811873,
		"extended": "",
		"description": "The economics of Ed",
		"time": "2014-09-28T21:09:28Z",
		"href": "http://www.pieria.co.uk/articles/the_economics_of_ed"
	},
	{
		"cluster": 2,
		"tags": [
			"video"
		],
		"y": -2.7468710361847375,
		"x": 4.760452824502588,
		"extended": "<blockquote>As part of the 2012 Leeds Digital Festival, LSx hosted a talk from Ben Hammersley - Editor-at-Large for Wired UK and the Prime Minister's Ambassador to Tech City.  Ben…</blockquote>",
		"description": "The Flower, the Field, and the Stack on Vimeo",
		"time": "2014-09-28T21:03:12Z",
		"href": "http://vimeo.com/51810057"
	},
	{
		"cluster": 2,
		"tags": [
			"video"
		],
		"y": -2.7475606588458183,
		"x": 4.759324313026039,
		"extended": "",
		"description": "HATEOAS, REST, and Hypermedia Primer with Mat Velloso | Azure Friday | Channel 9",
		"time": "2014-09-26T16:11:12Z",
		"href": "http://channel9.msdn.com/Shows/Azure-Friday/HATEOAS-REST-and-Hypermedia-Primer-with-Mat-Velloso"
	},
	{
		"cluster": 1,
		"tags": [
			"sharonzukin",
			"gentrification",
			"capitalism",
			"urbanism",
			"geography",
			"planning",
			"class",
			"race",
			"racism",
			"housing",
			"culture"
		],
		"y": -1.4919640348451593,
		"x": 9.177986714272375,
		"extended": "Tying up your assets, your middle-class future, in home values does something to people. It alters their interests. It sutures a professional class, of liberal and even progressive beliefs, to the rapacious capitalist expansion into the city. The people who move to gentrifying areas tend to have liberal, tolerant, cosmopolitan sympathies. But they are aligned materially with reactionary and oppressive city restructuring, pushing them into antagonism with established residents, who do nothing for property values. Behind every Jane Jacobs comes Rudy Giuliani with his nightstick.",
		"description": "Liberalism and Gentrification | Jacobin",
		"time": "2014-09-26T16:11:01Z",
		"href": "https://www.jacobinmag.com/2014/09/liberalism-and-gentrification/"
	},
	{
		"cluster": 10,
		"tags": [
			"gender",
			"feminism",
			"politics"
		],
		"y": 1.7199485178536258,
		"x": 8.466573283822221,
		"extended": "",
		"description": "When is it acceptable to ask ‘But what about teh menz?’",
		"time": "2014-09-26T13:44:27Z",
		"href": "http://freethoughtblogs.com/hetpat/2014/09/26/when-is-it-acceptable-to-ask-but-what-about-teh-menz/"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"gender",
			"workplace",
			"menstruation",
			"tampons",
			"feminism"
		],
		"y": 1.381281615797008,
		"x": 8.267737508514044,
		"extended": "",
		"description": "Alice Bartlett",
		"time": "2014-09-26T11:02:39Z",
		"href": "http://alicebartlett.co.uk/blog/tampon-club#fnref:4"
	},
	{
		"cluster": 1,
		"tags": [
			"debression",
			"work",
			"teambuilding",
			"culture",
			"management"
		],
		"y": 1.9085156622409487,
		"x": 4.481078890083135,
		"extended": "",
		"description": "Hidden dangers of team building rituals.",
		"time": "2014-09-26T10:59:08Z",
		"href": "http://semantici.st/hidden-dangers-of-team-building-rituals/"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"milk",
			"work",
			"government",
			"management"
		],
		"y": 1.9083540496326574,
		"x": 4.479903230851435,
		"extended": "",
		"description": "Culture Stories: Introduction and Milk.",
		"time": "2014-09-26T10:47:42Z",
		"href": "http://abscond.org/2014/09/25/culture-stories-milk.html"
	},
	{
		"cluster": 13,
		"tags": [
			"conspicuous",
			"consumption",
			"ostentatious",
			"class",
			"politics",
			"conspicuousconsumption",
			"economics",
			"veblen",
			"history"
		],
		"y": 7.586639054776139,
		"x": 8.58457251345285,
		"extended": "<blockquote>Has there been an explosion of elite ostentation? If so, does it reflect moral decline, or a change in circumstances?</blockquote>",
		"description": "The Show-Off Society - NYTimes.com",
		"time": "2014-09-26T09:41:25Z",
		"href": "http://www.nytimes.com/2014/09/26/opinion/paul-krugman-the-show-off-society.html?partner=rssnyt&emc=rss&_r=0"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"mansiontax"
		],
		"y": 8.36207723193948,
		"x": 8.989580196702159,
		"extended": "<blockquote>Some of the opposition to Labour's proposed mansion tax seems to me to be confusing bugs with features. For example, in the Times (£) Janice Turner claims the tax will hit \"shabby family houses\" which have soared in price because...</blockquote>",
		"description": "Stumbling and Mumbling: Mansion Tax: bugs & features",
		"time": "2014-09-25T19:43:35Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/09/mansion-tax-bugs-features.html"
	},
	{
		"cluster": 10,
		"tags": [
			"gentrification",
			"guardians",
			"politics",
			"housing",
			"housingcrisis"
		],
		"y": 5.409353414616541,
		"x": 11.755998516578563,
		"extended": "",
		"description": "Paying to Squat in London's Derelict Buildings | VICE United States",
		"time": "2014-09-25T19:37:45Z",
		"href": "http://www.vice.com/read/guardian-schemes-kleinfeld-gentrification-homelessness-761"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"serendipity",
			"connectedcities",
			"planning",
			"urbanism",
			"environment"
		],
		"y": 0.4676920540615548,
		"x": 4.982190828245487,
		"extended": "",
		"description": "How can data science prepare cities for the serendipity of human beings?",
		"time": "2014-09-25T07:12:38Z",
		"href": "http://theodi.org/blog/how-can-data-science-prepare-cities-for-the-serendipity-of-human-beings"
	},
	{
		"cluster": 13,
		"tags": [
			"deficit",
			"economics",
			"keynes",
			"unemployment",
			"politics",
			"statistics"
		],
		"y": 8.769139251552584,
		"x": 8.524446575866268,
		"extended": "<blockquote>Despite his denials, I suspect that Ed Miliband \"forgot\" to mention the deficit in his speech yesterday for the same reason schoolboys forget their homework - because they don't care about it. If I'm right, he has an excellent antecedent....</blockquote>",
		"description": "Stumbling and Mumbling: Forget the deficit?",
		"time": "2014-09-24T14:15:10Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/09/forget-the-deficit.html"
	},
	{
		"cluster": 10,
		"tags": [
			"nationalism",
			"globalisation",
			"politics"
		],
		"y": 5.95773866921209,
		"x": 10.878821735577105,
		"extended": "",
		"description": "All That Is Solid ...: Does Globalisation Breed Nationalism?",
		"time": "2014-09-24T10:09:10Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/09/does-globalisation-breed-nationalism.html"
	},
	{
		"cluster": 13,
		"tags": [
			"russia",
			"amazon",
			"competition",
			"gametheory",
			"deterrence",
			"economics"
		],
		"y": 7.8715458268325085,
		"x": 7.7251644047251755,
		"extended": "<blockquote>Crushing the competition – at any price</blockquote>",
		"description": "Tim Harford — Article — Crushing the competition – at any price",
		"time": "2014-09-24T09:29:59Z",
		"href": "http://timharford.com/2014/09/crushing-the-competition-at-any-price/"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"akka",
			"topicmodelling",
			"machinelearning",
			"lda",
			"gibbssampling",
			"gibbs",
			"sampling",
			"actors",
			"distributedsystems",
			"distributed",
			"systems"
		],
		"y": 4.82745997212025,
		"x": -1.1839473828991898,
		"extended": "<blockquote>ReactiveLDA is a lightweight implementation of the LDA algorithm. It is written in Scala, and uses Akka actors to perform parallel Gibbs sampling.</blockquote>",
		"description": "Reactive LDA Library | Kifi Engineering Blog",
		"time": "2014-09-22T09:03:42Z",
		"href": "http://eng.kifi.com/reactive-lda-library/"
	},
	{
		"cluster": 13,
		"tags": [
			"redistribution",
			"carbontax",
			"tax",
			"carbon",
			"environment",
			"economics",
			"politics"
		],
		"y": 9.273626348863516,
		"x": 8.598853610360361,
		"extended": "<blockquote>the institutions and political alliances needed to make any progress must to operate at the same level as (or higher than) other global regulatory, diplomatic, and public goods arrangements. Wealth inequality across the global popul</blockquote>",
		"description": "We Need a Global Carbon Tax | Jacobin",
		"time": "2014-09-21T21:35:59Z",
		"href": "https://www.jacobinmag.com/2014/09/we-need-a-global-carbon-tax/"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"feminism",
			"politics"
		],
		"y": 2.7149840121720983,
		"x": 9.801605254878595,
		"extended": "",
		"description": "The Promise of Socialist Feminism | Jacobin",
		"time": "2014-09-21T21:16:49Z",
		"href": "https://www.jacobinmag.com/2014/09/the-promise-of-socialist-feminism/"
	},
	{
		"cluster": 17,
		"tags": [
			"macroid",
			"scala",
			"frp",
			"functional",
			"reactive",
			"programming",
			"UI",
			"Gui",
			"mobile",
			"development",
			"android"
		],
		"y": 7.289348182947586,
		"x": -2.669176292363203,
		"extended": "<blockquote>Macroid documentation</blockquote>",
		"description": "Introduction | Macroid",
		"time": "2014-09-21T19:41:43Z",
		"href": "https://macroid.github.io/"
	},
	{
		"cluster": 13,
		"tags": [
			"uber",
			"politics",
			"capitalism",
			"siliconvalley",
			"technology",
			"economics",
			"sharingeconomy",
			"moralhazard"
		],
		"y": 7.435319069932282,
		"x": 11.51409814262099,
		"extended": "",
		"description": "Against Sharing",
		"time": "2014-09-19T23:24:00Z",
		"href": "https://www.jacobinmag.com/2014/09/against-sharing/"
	},
	{
		"cluster": 0,
		"tags": [
			"confd",
			"docker",
			"etcd",
			"nginx",
			"reverseproxy",
			"devops",
			"sysadmin",
			"operations",
			"coreos"
		],
		"y": 1.1332914031301606,
		"x": 5.8686387303834335,
		"extended": "",
		"description": "Using nginx, confd, and docker for zero-downtime web updates | Brian Ketelsen",
		"time": "2014-09-18T11:47:53Z",
		"href": "http://brianketelsen.com/2014/02/25/using-nginx-confd-and-docker-for-zero-downtime-web-updates/"
	},
	{
		"cluster": 0,
		"tags": [
			"vulcand",
			"docker",
			"coreos",
			"devops",
			"operations",
			"sysadmin",
			"fleet",
			"etcd",
			"loadbalancing"
		],
		"y": 1.1394892682608777,
		"x": 5.8650181634167415,
		"extended": "<blockquote>CoreOS is Linux for massive server deployments. Powered by docker, systemd, and etcd.</blockquote>",
		"description": "Zero Downtime Frontend Deploys with Vulcand on CoreOS",
		"time": "2014-09-18T11:28:54Z",
		"href": "https://coreos.com/blog/zero-downtime-frontend-deploys-vulcand/"
	},
	{
		"cluster": 0,
		"tags": [
			"coreos",
			"digitalocean",
			"systemadministration",
			"sysadmin",
			"devops",
			"distributedsystems",
			"docker",
			"etcd"
		],
		"y": 1.154924219439893,
		"x": 5.846724257887977,
		"extended": "<blockquote>If you are planning on using CoreOS in your infrastructure, the first thing you will want to set up is a CoreOS cluster. In order for CoreOS machines to form a cluster, their etcd instances must be connected. In this tutorial, we will give step-by-ste</blockquote>",
		"description": "How To Set Up a CoreOS Cluster on DigitalOcean | DigitalOcean",
		"time": "2014-09-17T15:58:39Z",
		"href": "https://www.digitalocean.com/community/tutorials/how-to-set-up-a-coreos-cluster-on-digitalocean"
	},
	{
		"cluster": 0,
		"tags": [
			"digitalocean",
			"sysadmin",
			"systems",
			"infrastructure",
			"cluster",
			"computing",
			"distributedsystems",
			"fleet",
			"docker",
			"etcd"
		],
		"y": 1.137598383326508,
		"x": 5.843621008707765,
		"extended": "<blockquote>CoreOS is an exciting Linux distribution focused on getting clustered environments up and running quickly. By leveraging technologies like Docker containers and service discovery, CoreOS clusters can be easily managed as a single unit. In this guide,</blockquote>",
		"description": "An Introduction to CoreOS System Components | DigitalOcean",
		"time": "2014-09-17T15:43:28Z",
		"href": "https://www.digitalocean.com/community/tutorials/an-introduction-to-coreos-system-components"
	},
	{
		"cluster": 3,
		"tags": [
			"music",
			"criticism",
			"psychedelia",
			"drugs",
			"consciousness",
			"politics",
			"art"
		],
		"y": -10.429528489372972,
		"x": 3.2581252114367443,
		"extended": "",
		"description": "The Quietus | Opinion | The Quietus Essay | Optrex For Your Third Eye: What Does Psychedelia Mean In 2014?",
		"time": "2014-09-17T10:29:09Z",
		"href": "http://thequietus.com/articles/16119-what-is-psychedelic-music"
	},
	{
		"cluster": 2,
		"tags": [
			"deeplearning",
			"neuralnetworks",
			"machinelearning",
			"computervision",
			"imageprocessing",
			"vision",
			"neurology",
			"psychology",
			"classification"
		],
		"y": -0.43080061407677145,
		"x": -4.039611677910457,
		"extended": "",
		"description": "Something About Cats, Dogs, Machine and Deep Learning / Image Processing / Kukuruku / Technology Hub",
		"time": "2014-09-17T09:11:22Z",
		"href": "http://kukuruku.co/hub/image-processing/something-about-cats-dogs-machine-and-deep-learning"
	},
	{
		"cluster": 2,
		"tags": [
			"vision",
			"psychology",
			"experiment",
			"neurology",
			"neuralnetwork",
			"machinelearning",
			"deeplearning",
			"featuredetection",
			"edgedetection"
		],
		"y": -0.39945182032336973,
		"x": -4.129203932171526,
		"extended": "",
		"description": "Plato's Cave: Hubel & Wiesel",
		"time": "2014-09-17T08:58:31Z",
		"href": "http://cns-alumni.bu.edu/~slehar/webstuff/pcave/hubel.html"
	},
	{
		"cluster": 13,
		"tags": [
			"market",
			"socialism",
			"economics",
			"allocation",
			"efficiency",
			"society",
			"politics",
			"marketsocialism"
		],
		"y": 3.8386768833789224,
		"x": 11.882107250088676,
		"extended": "<blockquote>The Bactra Review: Occasional and eclectic book reviews by Cosma Shalizi &#xA0; 14 Harvard University Press, 1994 What to do the week after the Revolution has always been a poser for socialists. No&hellip;</blockquote>",
		"description": "A Future for Socialism — vserver1.cscs.lsa.umich.edu",
		"time": "2014-09-16T16:33:11Z",
		"href": "https://www.readability.com/articles/arg9lglv"
	},
	{
		"cluster": 16,
		"tags": [
			"bias",
			"confounding",
			"bigdata",
			"badscience",
			"okcupid",
			"statistics",
			"data",
			"science"
		],
		"y": -3.461251556835957,
		"x": -1.728609486659103,
		"extended": "",
		"description": "Christian Rudder’s Dataclysm | mathbabe",
		"time": "2014-09-16T15:30:58Z",
		"href": "http://mathbabe.org/2014/09/16/christian-rudders-dataclysm/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"transport",
			"air",
			"travel",
			"airlines",
			"ba"
		],
		"y": 5.772667549132489,
		"x": 10.657807611759953,
		"extended": "",
		"description": "Neoliberalism at 30,000 Feet | Jacobin",
		"time": "2014-09-16T15:10:03Z",
		"href": "https://www.jacobinmag.com/2014/09/neoliberalism-at-30000-feet/"
	},
	{
		"cluster": 10,
		"tags": [
			"giuffrida",
			"racism",
			"politics",
			"US",
			"internment",
			"camps",
			"fascism",
			"unbelievable"
		],
		"y": 8.22736898422977,
		"x": 12.05069593916954,
		"extended": "",
		"description": "Contingency Plans | Jacobin",
		"time": "2014-09-16T15:09:21Z",
		"href": "https://www.jacobinmag.com/2014/09/contingency-plans/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"society",
			"economics",
			"climatechange",
			"climate",
			"energy",
			"renewale"
		],
		"y": 3.9950206144532006,
		"x": 12.420636264882145,
		"extended": "<blockquote>A strong and rising emissions price &#x2018;is an essential foundation of a low-carbon economy&#x2019;. Photograph: Jeff J Mitchell/Getty Images The global economy is undergoing a remarkable&hellip;</blockquote>",
		"description": "The time for tough decisions on climate change is now — www.theguardian.com",
		"time": "2014-09-16T10:25:48Z",
		"href": "https://www.readability.com/articles/wkvcovoz"
	},
	{
		"cluster": 5,
		"tags": [
			"timharford",
			"bigdata",
			"statistics",
			"bias",
			"variance",
			"biasvariancetradeoff",
			"correlation"
		],
		"y": -3.2882687769310235,
		"x": -2.6629086250342593,
		"extended": "",
		"description": "Tim Harford, and the perils of big data",
		"time": "2014-09-16T09:00:47Z",
		"href": "http://www.statslife.org.uk/science-technology/1748-tim-harford-and-the-perils-of-big-data"
	},
	{
		"cluster": 10,
		"tags": [
			"ttip",
			"politics",
			"sovreignty",
			"regulation",
			"litigation",
			"treaty"
		],
		"y": 5.794905569257748,
		"x": 10.678856613726849,
		"extended": "",
		"description": "This transatlantic trade deal is a full-frontal assault on democracy | George Monbiot | Comment is free | The Guardian",
		"time": "2014-09-15T15:14:36Z",
		"href": "http://www.theguardian.com/commentisfree/2013/nov/04/us-trade-deal-full-frontal-assault-on-democracy"
	},
	{
		"cluster": 13,
		"tags": [
			"arts",
			"culture",
			"society",
			"politics",
			"capitalism",
			"privateeducation",
			"education",
			"cognitivebias",
			"bias",
			"economics"
		],
		"y": 3.711040433587384,
		"x": 12.845413583444156,
		"extended": "<blockquote>Nick Cohen has brilliantly described how the arts and media are becoming dominated by public school products to the exclusion of people like us. This makes the irrational class-hating part of me - which is the biggest part - want...</blockquote>",
		"description": "Stumbling and Mumbling: The costs of poshos",
		"time": "2014-09-15T14:53:12Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/09/the-costs-of-poshos.html"
	},
	{
		"cluster": 10,
		"tags": [
			"prison",
			"justice",
			"politics",
			"suicide",
			"mentalhealth",
			"society"
		],
		"y": 2.595367930992182,
		"x": 12.130417239873138,
		"extended": "<blockquote>Zoe Williams: Overcrowding, understaffing and lack of care have   implications far beyond the walls of our cruel jails</blockquote>",
		"description": "Prisoner suicides: the dire cost of Tory tough-guy posturing on crime | Zoe Williams | Comment is free | The Guardian",
		"time": "2014-09-15T12:37:30Z",
		"href": "http://www.theguardian.com/commentisfree/2014/sep/15/prison-suicides-tory-crime"
	},
	{
		"cluster": 10,
		"tags": [
			"time",
			"employment",
			"politics",
			"schedules",
			"zerohours"
		],
		"y": 5.839054986766333,
		"x": 10.629323162911215,
		"extended": "",
		"description": "'Flexible' schedules aren't flexible at all. Let's end the always-on-call work day | Naomi Gerstel and Dan Clawson | Comment is free | theguardian.com",
		"time": "2014-09-15T12:21:31Z",
		"href": "http://www.theguardian.com/commentisfree/2014/sep/15/flexible-schedules-always-on-call-work-day"
	},
	{
		"cluster": 13,
		"tags": [
			"scottishindependence",
			"scotland",
			"independence",
			"nationalism",
			"national",
			"identity",
			"politics",
			"economics"
		],
		"y": 8.10673780382102,
		"x": 9.472052108587745,
		"extended": "",
		"description": "Saying no will arrest rise of populist nationalism | CJ Sansom | Comment is free | The Guardian",
		"time": "2014-09-15T09:55:44Z",
		"href": "http://www.theguardian.com/commentisfree/2014/sep/15/scottish-independence-populist-nationalism-cj-sansom"
	},
	{
		"cluster": 10,
		"tags": [
			"scottishindependence",
			"vat",
			"food",
			"tax",
			"EU",
			"politics",
			"europe"
		],
		"y": 5.882270112948914,
		"x": 9.496950620387992,
		"extended": "",
		"description": "Tax Research UK » An independent Scotland will have to charge 5% VAT on food",
		"time": "2014-09-15T09:46:57Z",
		"href": "http://www.taxresearch.org.uk/Blog/2014/09/14/an-independent-scotland-will-have-to-charge-5-vat-on-food/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"scottishindependence",
			"politics"
		],
		"y": 8.362077231834819,
		"x": 8.989580259899732,
		"extended": "",
		"description": "An independent Scotland and economic realities of size on global stage",
		"time": "2014-09-15T06:56:50Z",
		"href": "http://www.theguardian.com/politics/economics-blog/2014/sep/14/independent-scotland-economic-global-ireland-new-zealand-struggles"
	},
	{
		"cluster": 13,
		"tags": [
			"demand",
			"policy",
			"economics",
			"labour",
			"carbon",
			"minimumwage",
			"context"
		],
		"y": 10.319043141941641,
		"x": 9.36492908659717,
		"extended": "<blockquote>Back in the day, a concatenation of circumstances led to me being alone in a room with a well-known economist who was then advising governments around the world. I thought I'd start the conversation with the anodyne remark \"it must...</blockquote>",
		"description": "\"Same policies work everywhere\"",
		"time": "2014-09-15T06:56:49Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/09/same-policies-work-everywhere.html"
	},
	{
		"cluster": 10,
		"tags": [
			"religion",
			"atheism",
			"faith",
			"ethics",
			"politics",
			"culture",
			"respect"
		],
		"y": -0.39533302830608286,
		"x": 10.634763501065054,
		"extended": "<blockquote>Hari Kunzru: In our lazy contemporary conversation about faith, the faithless such as myself are rarely heard. We are assumed to be too spineless to stand up for anything. I couldn't disagree more</blockquote>",
		"description": "Leading a decent, purposeful life isn't the sole province of the religious | Hari Kunzru | Comment is free | The Guardian",
		"time": "2014-09-11T09:12:36Z",
		"href": "http://www.theguardian.com/commentisfree/2014/jul/12/leading-decent-life-not-sole-province-of-religious"
	},
	{
		"cluster": 16,
		"tags": [
			"bigdata",
			"data",
			"architecture",
			"systems",
			"engineering",
			"operations",
			"hadoop",
			"apache"
		],
		"y": 0.051224497333624566,
		"x": -1.330660292011134,
		"extended": "<blockquote>What does a &#x201C;Big Data engineer&#x201D; do, and what does &#x201C;Big Data architecture&#x201D; look like? In this post, you&#x2019;ll get answers to both questions. Apache Hadoop has come a&hellip;</blockquote>",
		"description": "Getting Started with Big Data Architecture — blog.cloudera.com",
		"time": "2014-09-10T16:11:58Z",
		"href": "https://www.readability.com/articles/ocspvr31"
	},
	{
		"cluster": 10,
		"tags": [
			"u2",
			"cunts",
			"politics",
			"tax",
			"socialism",
			"charity",
			"aid",
			"hypocrisy",
			"capitalism",
			"consumption"
		],
		"y": 3.0858023779125956,
		"x": 10.627382773753737,
		"extended": "<blockquote>A new rock music and pop culture website. Editorial independent music website offering news, reviews, features, interviews, videos and pictures</blockquote>",
		"description": "The Quietus | Opinion | Black Sky Thinking | Songs Of Innocence: On U2, Tax & Hypocrisy",
		"time": "2014-09-10T11:42:35Z",
		"href": "http://thequietus.com/articles/16217-bono-u2-songs-of-experience"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"capitalism",
			"society",
			"politics"
		],
		"y": 2.8251457687895445,
		"x": 11.130938672304634,
		"extended": "<blockquote>Labour's different social base allows it, compels it to act differently.</blockquote>",
		"description": "All That Is Solid ...: Inequality and British Capitalism",
		"time": "2014-09-09T16:30:08Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/07/inequality-and-british-capitalism.html"
	},
	{
		"cluster": 10,
		"tags": [
			"disruption",
			"christensen",
			"politics",
			"change",
			"business",
			"innovation"
		],
		"y": 6.191763204995896,
		"x": 7.979565532903863,
		"extended": "",
		"description": "The Disruption Machine - The New Yorker",
		"time": "2014-09-09T16:18:12Z",
		"href": "http://www.newyorker.com/magazine/2014/06/23/the-disruption-machine?currentPage=all"
	},
	{
		"cluster": 10,
		"tags": [
			"hipster",
			"gentrification",
			"politics",
			"society"
		],
		"y": 2.3093496330638605,
		"x": 12.053923790838114,
		"extended": "",
		"description": "The ‘Fucking Hipster’ Show | Jacobin",
		"time": "2014-09-09T13:19:58Z",
		"href": "https://www.jacobinmag.com/2013/05/the-fucking-hipster-show/"
	},
	{
		"cluster": 13,
		"tags": [
			"planning",
			"organization",
			"psychology",
			"economics",
			"hyperbolicdiscounting",
			"cognitivebias"
		],
		"y": 6.734486445247498,
		"x": 6.926946351142066,
		"extended": "<blockquote>project</blockquote>",
		"description": "Tim Harford — Article — Here today, gone tomorrow",
		"time": "2014-09-09T10:14:34Z",
		"href": "http://timharford.com/2014/09/here-today-gone-tomorrow/"
	},
	{
		"cluster": 13,
		"tags": [
			"business",
			"finance",
			"politics",
			"capitalism",
			"economics",
			"inequality",
			"piketty",
			"accounting",
			"leverage",
			"debt",
			"futurity",
			"pocket-unread"
		],
		"y": 9.105166634120538,
		"x": 7.263304871003153,
		"extended": "",
		"description": "New Left Project | Capitalising the Future",
		"time": "2014-09-08T16:29:49Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/capitalising_the_future"
	},
	{
		"cluster": 10,
		"tags": [
			"scottishindependence",
			"independence",
			"politics",
			"localism",
			"nationalism",
			"nationstates"
		],
		"y": 6.730758840849051,
		"x": 10.647450595876723,
		"extended": "",
		"description": "The referendum question - Charlie's Diary",
		"time": "2014-09-08T13:29:42Z",
		"href": "http://www.antipope.org/charlie/blog-static/2014/09/the-referendum-question.html"
	},
	{
		"cluster": 12,
		"tags": [
			"webgl",
			"tutorial",
			"3d",
			"graphics",
			"programming",
			"web",
			"development"
		],
		"y": 9.706357353275818,
		"x": -5.497392073423034,
		"extended": "",
		"description": "tehmou.github.io/WebGL-from-Scratch/explain.html#mouse_ripple",
		"time": "2014-09-08T12:59:52Z",
		"href": "http://tehmou.github.io/WebGL-from-Scratch/explain.html#mouse_ripple"
	},
	{
		"cluster": 13,
		"tags": [
			"forecasting",
			"probability",
			"finance",
			"history",
			"keynes",
			"economics",
			"business",
			"statistics"
		],
		"y": 8.778770852648709,
		"x": 6.5061094405245,
		"extended": "<blockquote>Irving Fisher was once the most famous economist in the world. Some would say he was the greatest economist who ever lived. “Anywhere from a decade to two generations ahead of his time,” opined the first Nobel laureate economist Ragnar Frisch, in</blockquote>",
		"description": "How to see into the future - FT.com",
		"time": "2014-09-08T10:07:25Z",
		"href": "http://www.ft.com/cms/s/2/3950604a-33bc-11e4-ba62-00144feabdc0.html#axzz3CiJU3gXE"
	},
	{
		"cluster": 10,
		"tags": [
			"music",
			"politics",
			"jazz",
			"improvisation",
			"race"
		],
		"y": 1.3448115896148565,
		"x": 7.895946922285515,
		"extended": "",
		"description": "Jazz After Politics | Jacobin",
		"time": "2014-09-08T08:35:38Z",
		"href": "https://www.jacobinmag.com/2014/09/jazz-after-politics/"
	},
	{
		"cluster": 17,
		"tags": [
			"akka",
			"http",
			"stream",
			"scala",
			"actor",
			"programming",
			"reactive"
		],
		"y": 5.847356385878905,
		"x": -1.5588224540731803,
		"extended": "",
		"description": "June 27, 2014 | Akka HTTP Preview | Typesafe",
		"time": "2014-09-07T09:36:14Z",
		"href": "https://typesafe.com/blog/akka-http-preview"
	},
	{
		"cluster": 2,
		"tags": [
			"typesafe",
			"akka",
			"scala",
			"reactive",
			"streams",
			"reactiveprogramming",
			"paralellism",
			"concurrency",
			"distributedsystems"
		],
		"y": 5.395193404818422,
		"x": -0.6515454803127073,
		"extended": "",
		"description": "April 17, 2014 | Typesafe announces Akka Streams, a part of the Reactive Streams Initiative | Typesafe",
		"time": "2014-09-07T09:34:52Z",
		"href": "http://typesafe.com/blog/typesafe-announces-akka-streams"
	},
	{
		"cluster": 13,
		"tags": [
			"property",
			"housing",
			"gentrification",
			"urbanismrightothecity",
			"lefevbre",
			"capitalism",
			"politics",
			"development",
			"planning",
			"socialism",
			"economics",
			"cities",
			"marxism",
			"urbanism",
			"paris",
			"haussman",
			"history"
		],
		"y": 6.624303468837711,
		"x": 8.426687509511376,
		"extended": "HIGHLIGHTED: http://marker.to/Ib6QxS\n\nThe right to the city is far more than the individual liberty to access urban resources: it is a right to change ourselves by changing the city. It is, moreover, a common rather than an individual right since this transformation inevitably depends upon the exercise of a collective power to reshape the processes of urbanization. The freedom to make and remake our cities and ourselves is, I want to argue, one of the most precious yet most neglected of our human rights.\n\n\nAs in all the preceding phases, this most recent radical expansion of the urban process has brought with it incredible transformations of lifestyle. Quality of urban life has become a commodity, as has the city itself, in a world where consumerism, tourism, cultural and knowledge-based industries have become major aspects of the urban political economy. The postmodernist penchant for encouraging the formation of market niches—in both consumer habits and cultural forms—surrounds the contemporary urban experience with an aura of freedom of choice, provided you have the money.",
		"description": "New Left Review - David Harvey: The Right to the City",
		"time": "2014-09-07T09:29:28Z",
		"href": "http://newleftreview.org/II/53/david-harvey-the-right-to-the-city"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"politics",
			"tradeunions",
			"hoffer",
			"usa",
			"history"
		],
		"y": 2.9105200062515406,
		"x": 10.478092609509238,
		"extended": "",
		"description": "The Right’s Working-Class Philosopher | Jacobin",
		"time": "2014-09-07T09:29:00Z",
		"href": "https://www.jacobinmag.com/2014/09/the-rights-working-class-philosopher/"
	},
	{
		"cluster": 10,
		"tags": [
			"football",
			"politics",
			"socialism"
		],
		"y": 2.816673804741927,
		"x": 9.99120655792058,
		"extended": "",
		"description": "We want our football back | Left Unity",
		"time": "2014-09-07T09:21:05Z",
		"href": "http://leftunity.org/we-want-our-football-back/"
	},
	{
		"cluster": 1,
		"tags": [
			"logic",
			"audio",
			"music",
			"sidechain"
		],
		"y": -9.451406669050488,
		"x": 4.261467307487629,
		"extended": "",
		"description": "Logic: Using Sidechains",
		"time": "2014-09-04T20:10:11Z",
		"href": "http://www.soundonsound.com/sos/apr05/articles/logicnotes.htm"
	},
	{
		"cluster": 1,
		"tags": [
			"logic",
			"audio",
			"music",
			"drone",
			"granular",
			"synthesis"
		],
		"y": -10.634405947645021,
		"x": 4.862097634904347,
		"extended": "<blockquote>Create Drones from Samples Using Granular Processing - Part 1</blockquote>",
		"description": "Quick Tip: Create Drones from Samples Using Granular Processing - Part 1 - Tuts+ Music & Audio Tutorial",
		"time": "2014-09-04T18:55:16Z",
		"href": "http://music.tutsplus.com/tutorials/quick-tip-create-drones-from-samples-using-granular-processing-part-1--audio-14858"
	},
	{
		"cluster": 1,
		"tags": [
			"logic",
			"audio",
			"music",
			"drone",
			"granular",
			"synthesis"
		],
		"y": -10.665791389510629,
		"x": 4.878273912779197,
		"extended": "<blockquote>The drone is used throughout music and sound design as sonic bed or background upon which other sounds are laid. In the world of sound design, drones are often used to 'fill out' a scene, or to provide a sense of location. For example, if the scene occurs in a swamp you may have a background ambience that includes frogs, wind through the trees, splashes, etc. In this instance, the 'drone' would likely be the wind, with the rest of the layers as incidental sounds. | Difficulty: Interm...",
		"description": "How to Design a Background Drone Sound - Tuts+ Music & Audio Tutorial",
		"time": "2014-09-04T18:51:16Z",
		"href": "http://music.tutsplus.com/tutorials/how-to-design-a-background-drone-sound--audio-859"
	},
	{
		"cluster": 1,
		"tags": [
			"logic",
			"audio",
			"music",
			"drone",
			"granular",
			"synthesis"
		],
		"y": -10.634414156575543,
		"x": 4.862105013178107,
		"extended": "<blockquote>In this pair of written quick tips I'll show you how to get unusual textures and pad sounds from any type of source with some freeware granular processors. In short, the granular effect takes small slices of the sound, known as grains, and rearrange them differently according to the parameters we set. | Difficulty: Intermediate; Length: Quick; Tags: Sound Design, Logic Pro</blockquote>",
		"description": "Quick Tip: Create Drones from Samples Using Granular Processing – Part 2 - Tuts+ Music & Audio Tutorial",
		"time": "2014-09-04T18:50:20Z",
		"href": "http://music.tutsplus.com/tutorials/quick-tip-create-drones-from-samples-using-granular-processing-part-2--audio-14994"
	},
	{
		"cluster": 17,
		"tags": [
			"sbt",
			"scala",
			"akka",
			"docker",
			"deployment",
			"programming",
			"computerscience",
			"web",
			"distributedsystems",
			"operations",
			"devops"
		],
		"y": 4.868849459282079,
		"x": -1.629700700044875,
		"extended": "",
		"description": "Akka Cluster with Docker containers | mukis.de",
		"time": "2014-09-04T13:09:06Z",
		"href": "http://mukis.de/pages/akka-cluster-with-docker-containers/"
	},
	{
		"cluster": 2,
		"tags": [
			"kernel",
			"svm",
			"machinelearning",
			"neuralnetwork"
		],
		"y": -0.06978659858734008,
		"x": -4.2207002385930235,
		"extended": "<blockquote>TL;DR: Because what a neural network does is essentially \"learning a kernel\"\nA kernel takes your input features, transforms them into some other space and then essentially works with those transformed features (when you apply the kernel trick, you do all this implicitly, but that doesn't change this fact), and then does a linear classification in that new space.\nA neural network, takes your input features, transforms them into some other space and then works with those transformed fe...",
		"description": "Why don't researchers use the kernel method in neural networks? : MachineLearning",
		"time": "2014-09-04T08:36:55Z",
		"href": "http://www.reddit.com/r/MachineLearning/comments/2ffejw/why_dont_researchers_use_the_kernel_method_in/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"activism",
			"creativity"
		],
		"y": 5.786067131168932,
		"x": 11.492550862431075,
		"extended": "",
		"description": "Politics is led by an uncreative class. We need to unite those who deliver change with imagination. : RSA blogs",
		"time": "2014-09-03T16:55:16Z",
		"href": "http://www.rsablogs.org.uk/2014/adam-lent/turn-party-conference-season-time-creative-people-generate-change/"
	},
	{
		"cluster": 10,
		"tags": [
			"education",
			"politics",
			"academia",
			"management",
			"managerialism"
		],
		"y": 6.006554296465803,
		"x": 8.907751225561952,
		"extended": "",
		"description": "Marina Warner · Diary: Why I Quit · LRB 11 September 2014",
		"time": "2014-09-03T16:53:32Z",
		"href": "http://www.lrb.co.uk/v36/n17/marina-warner/diary"
	},
	{
		"cluster": 10,
		"tags": [
			"rotherham",
			"politics",
			"managerialism",
			"abuse",
			"management",
			"society",
			"racism"
		],
		"y": 2.7846876298778778,
		"x": 12.232059275015803,
		"extended": "",
		"description": "All That Is Solid ...: How Not to Write About Rotherham",
		"time": "2014-09-03T16:20:16Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/08/how-not-to-write-about-rotherham.html"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"capitalism",
			"economics",
			"management",
			"managerialism"
		],
		"y": 6.647294643886674,
		"x": 8.962996308492869,
		"extended": "<blockquote>Owen Jones has a brilliant description of how the state doles out welfare to the rich whilst bashing the poor. What should be the political response to this? I fear that social democrats see this merely as a failing of...</blockquote>",
		"description": "Stumbling and Mumbling: Fighting the pro-capitalist state",
		"time": "2014-09-03T16:00:39Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2014/09/fighting-the-pro-capitalist-state.html"
	},
	{
		"cluster": 2,
		"tags": [
			"boilerpipe",
			"contentextraction",
			"boilerplatedetection",
			"boilerplate",
			"html",
			"scraping",
			"nlp",
			"machinelearning",
			"shallowtextfeatures"
		],
		"y": -0.6184091289420726,
		"x": 2.872334127331096,
		"extended": "",
		"description": "Boilerplate Detection using Shallow Text Features",
		"time": "2014-09-03T10:26:16Z",
		"href": "http://www.l3s.de/~kohlschuetter/boilerplate/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"neoliberalism",
			"economics",
			"socialism",
			"capitalism",
			"history",
			"pocket-read"
		],
		"y": 7.031162598174885,
		"x": 8.865286426870806,
		"extended": "",
		"description": "New Left Project | Beyond the Laws of the Market",
		"time": "2014-09-02T08:10:16Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/beyond_the_laws_of_the_market"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"neoliberalism",
			"economics",
			"socialism",
			"capitalism",
			"history",
			"pocket-read"
		],
		"y": 7.1943897565301755,
		"x": 8.913867747437807,
		"extended": "",
		"description": "New Left Project | Neoliberalism and the End of Politics",
		"time": "2014-09-02T08:10:10Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/neoliberalism_and_the_end_of_politics"
	},
	{
		"cluster": 0,
		"tags": [
			"packer",
			"vagrant",
			"devops",
			"vm",
			"aws",
			"deployment",
			"operations"
		],
		"y": -2.9782650576244656,
		"x": 4.44338980865503,
		"extended": "<blockquote>Packer is a free and open source tool for creating golden images for multiple platforms from a single source configuration.</blockquote>",
		"description": "Introduction - Packer",
		"time": "2014-09-01T19:23:18Z",
		"href": "http://www.packer.io/intro"
	},
	{
		"cluster": 2,
		"tags": [
			"content",
			"extraction",
			"contentextraction",
			"web",
			"text",
			"datatypes"
		],
		"y": 0.7639454519327371,
		"x": 1.845336890120802,
		"extended": "",
		"description": "Evaluating Text Extraction Algorithms | My tech blog.",
		"time": "2014-09-01T17:03:17Z",
		"href": "https://web.archive.org/web/20120119045808/http://tomazkovacic.com/blog/122/evaluating-text-extraction-algorithms/"
	},
	{
		"cluster": 2,
		"tags": [
			"contentextraction",
			"content",
			"extraction",
			"web",
			"text",
			"datatypes"
		],
		"y": 0.7560674653250233,
		"x": 1.849327497386222,
		"extended": "",
		"description": "Feature-wise Comparison of HTML Article Text Extractors | My tech blog.",
		"time": "2014-09-01T16:58:28Z",
		"href": "https://web.archive.org/web/20120120204353/http://tomazkovacic.com/blog/98/feature-wise-comparison-of-html-article-text-extractors/"
	},
	{
		"cluster": 2,
		"tags": [
			"web",
			"html",
			"contentextraction",
			"content",
			"extraction"
		],
		"y": 0.7575831617220261,
		"x": 1.8462685439646327,
		"extended": "",
		"description": "List of resources: Article text extraction from HTML documents | My tech blog.",
		"time": "2014-09-01T16:57:18Z",
		"href": "https://web.archive.org/web/20120120215449/http://tomazkovacic.com/blog/56/list-of-resources-article-text-extraction-from-html-documents/"
	},
	{
		"cluster": 16,
		"tags": [
			"contentextraction",
			"data",
			"web",
			"content",
			"extraction"
		],
		"y": 0.7510511863460715,
		"x": 1.8390068072264205,
		"extended": "",
		"description": "Overview: Extracting article text from HTML documents | My tech blog.",
		"time": "2014-09-01T16:55:57Z",
		"href": "https://web.archive.org/web/20120120201056/http://tomazkovacic.com/blog/14/extracting-article-text-from-html-documents/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"option",
			"catching",
			"exception",
			"handling",
			"programming",
			"functional"
		],
		"y": 1.4737108055487478,
		"x": -7.711768424935738,
		"extended": "<blockquote>A protip by mortimerpa about scala, parse, string, implicit, implicit conversion, implicit class, and scala 2.10.</blockquote>",
		"description": "Pierre Andrews : Safely parsing Strings to numbers in Scala",
		"time": "2014-08-29T15:17:08Z",
		"href": "https://coderwall.com/p/lcxjzw"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"functional",
			"haskell",
			"zipper",
			"engineering",
			"simplicity"
		],
		"y": -4.921975010083942,
		"x": -8.335059320718488,
		"extended": "",
		"description": "Paul Chiusano: When the fancy technique that seems relevant is the wrong tool (a note of caution on zippers)",
		"time": "2014-08-29T09:33:06Z",
		"href": "http://pchiusano.github.io/2014-08-12/zippers-not-useful.html"
	},
	{
		"cluster": 17,
		"tags": [
			"akka",
			"monitoring",
			"distributedsystems",
			"programming",
			"scala",
			"actor",
			"kamon",
			"statsd",
			"graphite"
		],
		"y": 5.4640436999560995,
		"x": -1.3568571019074749,
		"extended": "",
		"description": "Advanced Reactive Programming with Akka and Scala | comSysto Blog",
		"time": "2014-08-29T09:26:59Z",
		"href": "http://blog.comsysto.com/2014/07/07/advanced-reactive-programming-with-akka-and-scala/"
	},
	{
		"cluster": 17,
		"tags": [
			"akka",
			"distributed",
			"systems",
			"programming",
			"scala",
			"actors"
		],
		"y": 4.76523755477952,
		"x": -1.523631478848645,
		"extended": "<blockquote>During our lab, we wanted to implement an application with Akka and Scala, because we're going to evaluate highly performing and scalable software architectures on the JVM. In this blog we're describing how to set up an Akka app and show a few simple demo applications. Bootstrapping an Akka/Scala app The basic setup of the…</blockquote>",
		"description": "Reactive Programming with Akka and Scala | comSysto Blog",
		"time": "2014-08-29T09:20:24Z",
		"href": "http://blog.comsysto.com/2014/05/09/reactive-programming-with-akka-and-scala/"
	},
	{
		"cluster": 16,
		"tags": [
			"statistics",
			"data",
			"zipf",
			"paretoprinciple",
			"pareto"
		],
		"y": -3.2101095243925237,
		"x": -1.5327569758975659,
		"extended": "<blockquote>The Zipf's law states that in many settings (that we are going to explore), the volume or size of entities is inversely proportional to a power s (s &gt; 0…</blockquote>",
		"description": "Why Zipf's law explains so many big data and physics phenomenons - Data Science Central",
		"time": "2014-08-29T09:13:37Z",
		"href": "http://www.datasciencecentral.com/profiles/blogs/why-zipf-s-law-explains-so-many-big-data-and-physics-phenomenons"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"sociology",
			"politics",
			"live",
			"art",
			"crticism"
		],
		"y": -10.301864310220171,
		"x": 3.235335071655853,
		"extended": "",
		"description": "The Quietus | Features | Tome On The Range | Practical Utopianism: Simon Frith Interviewed",
		"time": "2014-08-29T09:10:07Z",
		"href": "http://thequietus.com/articles/15748-simon-frith-interview-dance-hall-100-club"
	},
	{
		"cluster": 5,
		"tags": [
			"mcmc",
			"spark",
			"distributed",
			"computing",
			"topicmodelling",
			"statistics",
			"machinelearning",
			"distributedsystems",
			"pocket-read"
		],
		"y": 0.9737011808795979,
		"x": -1.2968665075767776,
		"extended": "",
		"description": "Bayesian Machine Learning on Apache Spark | Cloudera Engineering Blog",
		"time": "2014-08-29T08:58:58Z",
		"href": "http://blog.cloudera.com/blog/2014/08/bayesian-machine-learning-on-apache-spark/"
	},
	{
		"cluster": 14,
		"tags": [
			"refactoring",
			"rails",
			"sti",
			"database",
			"design",
			"softwareengineering",
			"inheritance"
		],
		"y": -0.3213864257731829,
		"x": 1.6994158824223018,
		"extended": "",
		"description": "Refactoring our Rails app out of single-table inheritance",
		"time": "2014-08-29T08:29:34Z",
		"href": "https://about.futurelearn.com/blog/refactoring-rails-sti/"
	},
	{
		"cluster": 10,
		"tags": [
			"meat",
			"ethics",
			"ethnography",
			"sociology",
			"language",
			"politics",
			"vegetarianism",
			"slaughter"
		],
		"y": 0.4936858095825565,
		"x": 8.761129169408601,
		"extended": "<blockquote>Timothy Pachirat, is an Assistant Professor of Political Science at the University of Massachusetts Amherst and the auth…</blockquote>",
		"description": "Working Undercover in a Slaughterhouse: an interview with Timothy Pachirat — Learning for Life — Medium",
		"time": "2014-08-27T15:57:32Z",
		"href": "https://medium.com/learning-for-life/working-undercover-in-a-slaughterhouse-an-interview-with-timothy-pachirat-c6d7f37eef9c"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"conjugate",
			"bayesian",
			"betabinomial",
			"dirichlet",
			"multinomial",
			"dirichletmultinomial"
		],
		"y": -3.4353776094964985,
		"x": -3.7050901209565192,
		"extended": "",
		"description": "The Dirichlet-Multinomial Model",
		"time": "2014-08-26T07:33:37Z",
		"href": "http://blog.henryhhammond.com/the-dirichlet-multinomial-model/"
	},
	{
		"cluster": 7,
		"tags": [
			"nyaplot",
			"ruby",
			"sciruby",
			"plotting",
			"graphics",
			"data",
			"visualisation",
			"datavisualisation",
			"development",
			"programming"
		],
		"y": 7.391855741258225,
		"x": -9.147869776448179,
		"extended": "",
		"description": "Nyaplot: interactive plots generateor with Ruby - SciRuby",
		"time": "2014-08-25T09:25:30Z",
		"href": "http://sciruby.com/blog/2014/08/23/nyaplot-interactive-plots-generateor-with-ruby/"
	},
	{
		"cluster": 10,
		"tags": [
			"charity",
			"psychology",
			"cognitivebias",
			"icebucketchallenge",
			"altruism",
			"politics"
		],
		"y": 6.256033119028658,
		"x": 6.99145722030679,
		"extended": "<blockquote>I look at the camera, hold a bucket of ice water over my head, tip it upside down, post the video on social media and then nominate two others to do the same. Along the way, my nominees and I use the opportunity to donate to the ALS Association, a charity that fights amyotrophic lateral...</blockquote>",
		"description": "The cold, hard truth about the ice bucket challenge - Quartz",
		"time": "2014-08-25T09:00:34Z",
		"href": "http://qz.com/249649/the-cold-hard-truth-about-the-ice-bucket-challenge/"
	},
	{
		"cluster": 17,
		"tags": [
			"request",
			"response",
			"akka",
			"patterns",
			"actor",
			"future",
			"concurrency",
			"distributedsystems",
			"programming",
			"scalability"
		],
		"y": 5.160277803324412,
		"x": -1.1046595661689556,
		"extended": "",
		"description": "Three flavours of request-response pattern in Akka | NoBlogDefFound",
		"time": "2014-08-22T08:24:32Z",
		"href": "http://www.nurkiewicz.com/2014/01/three-flavours-of-request-response.html"
	},
	{
		"cluster": 17,
		"tags": [
			"neuralnetworks",
			"machinelearning",
			"deeplearning",
			"convolutionalneuralnetworks",
			"training",
			"computerscience",
			"programming"
		],
		"y": -0.7517447952870117,
		"x": -5.113360014810514,
		"extended": "",
		"description": "convolutional learnings: things i learned by implementing convolutional neural nets - lacking capital(s)",
		"time": "2014-08-22T07:49:21Z",
		"href": "http://bbabenko.tumblr.com/post/83319141207/convolutional-learnings-things-i-learned-by"
	},
	{
		"cluster": 2,
		"tags": [
			"linguistics",
			"language",
			"linguisticfields",
			"translation",
			"sapirwhorf"
		],
		"y": -0.0938294363620948,
		"x": 7.932165068101287,
		"extended": "",
		"description": "12 untranslatable words (and their translations) | David Shariatmadari | Comment is free | theguardian.com",
		"time": "2014-08-21T11:10:01Z",
		"href": "http://www.theguardian.com/commentisfree/2014/aug/21/12-untranslatable-words-and-their-translations"
	},
	{
		"cluster": 16,
		"tags": [
			"security",
			"engineering",
			"programming",
			"infrastructure",
			"data",
			"analysis",
			"operations",
			"devops",
			"systems"
		],
		"y": -0.2747223338076649,
		"x": -0.7702573150743104,
		"extended": "",
		"description": "Data Driven Security, from Gartner Security Summit 2012",
		"time": "2014-08-20T21:39:01Z",
		"href": "http://www.slideshare.net/nickgsuperstar/data-driven-security"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"security",
			"infrastructure",
			"operations",
			"process",
			"engineering"
		],
		"y": -0.3060865157537029,
		"x": -0.7612228964750473,
		"extended": "",
		"description": "DevOpsSec: Appling DevOps Principles to Security, DevOpsDays Austin 2…",
		"time": "2014-08-20T21:34:21Z",
		"href": "http://www.slideshare.net/nickgsuperstar/devopssec-apply-devops-principles-to-security"
	},
	{
		"cluster": 16,
		"tags": [
			"correspondenceanalysis",
			"correspondence",
			"analysis",
			"statistics",
			"politics",
			"sociology",
			"bourdieu",
			"socialism",
			"bollocks",
			"data",
			"datamining"
		],
		"y": 2.479318262624884,
		"x": 6.1121337574415024,
		"extended": "",
		"description": "Mapping the Social World: From Aggregates to Individuals | Limn",
		"time": "2014-08-20T21:28:33Z",
		"href": "http://limn.it/mapping-the-social-world-from-aggregates-to-individuals/"
	},
	{
		"cluster": 10,
		"tags": [
			"technology",
			"business",
			"politics",
			"privacy",
			"entrepreneurship",
			"smallbusiness"
		],
		"y": 5.296012240902232,
		"x": 7.155272565631565,
		"extended": "",
		"description": "The Internet of Small Businesses",
		"time": "2014-08-20T21:27:42Z",
		"href": "http://chris.beams.io/posts/pinboard/"
	},
	{
		"cluster": 10,
		"tags": [
			"essay",
			"barwork",
			"service",
			"society",
			"politics",
			"work",
			"drink",
			"barbie"
		],
		"y": 2.2069488633795347,
		"x": 11.506062029163278,
		"extended": "<blockquote>We are many.We spend our nights in repetitive motion. We make connections. We relieve loneliness. We serve.We are tired when we finally sleep. We will miss the smell of a new morning, the dew on the park grass and the city bird song. We will miss the school run and the rat race. We will…</blockquote>",
		"description": "One for yourself | Beyond Stalking Elk",
		"time": "2014-08-20T15:27:09Z",
		"href": "http://beyondstalkingelk.wordpress.com/2014/08/20/one-for-yourself/"
	},
	{
		"cluster": 13,
		"tags": [
			"migration",
			"politics",
			"economics",
			"pocket-read"
		],
		"y": 7.577110223763583,
		"x": 8.90039963078201,
		"extended": "",
		"description": "New Statesman | Are migrants good for the UK economy?",
		"time": "2014-08-20T15:26:36Z",
		"href": "http://www.newstatesman.com/politics/2014/08/are-migrants-good-uk-economy"
	},
	{
		"cluster": 2,
		"tags": [
			"jspm",
			"javascript",
			"packagemanagement",
			"npm",
			"github",
			"es6",
			"systemjs",
			"require"
		],
		"y": -1.8424842807583575,
		"x": 4.168861533756823,
		"extended": "",
		"description": "jspm.io - Frictionless Browser Package Management",
		"time": "2014-08-19T18:15:21Z",
		"href": "http://jspm.io/"
	},
	{
		"cluster": 2,
		"tags": [
			"systemjs",
			"javascript",
			"module",
			"loader",
			"system",
			"js",
			"es6"
		],
		"y": -1.7088312612135592,
		"x": 4.077228692630282,
		"extended": "<blockquote>systemjs - AMD, CJS & ES6 spec-compliant module loader</blockquote>",
		"description": "systemjs/systemjs",
		"time": "2014-08-19T18:13:52Z",
		"href": "https://github.com/systemjs/systemjs"
	},
	{
		"cluster": 10,
		"tags": [
			"riot",
			"capitalism",
			"violence",
			"politics",
			"polics",
			"media",
			"race",
			"racism",
			"society"
		],
		"y": 3.2857007938609932,
		"x": 11.367377615017979,
		"extended": "",
		"description": "Black Riot – The New Inquiry",
		"time": "2014-08-19T18:09:09Z",
		"href": "http://thenewinquiry.com/essays/black-riot/"
	},
	{
		"cluster": 16,
		"tags": [
			"housing",
			"houseprices",
			"economics",
			"data",
			"visualisation",
			"opendata",
			"analysis"
		],
		"y": -2.1543869945844243,
		"x": -0.699368561306478,
		"extended": "",
		"description": "IMF Global Housing Watch",
		"time": "2014-08-19T16:41:22Z",
		"href": "http://www.imf.org/external/research/housing/"
	},
	{
		"cluster": 14,
		"tags": [
			"buckmisterfuller",
			"energy",
			"efficiency",
			"geodesic",
			"dome",
			"datacentre",
			"design",
			"architecture"
		],
		"y": -0.8081300637463092,
		"x": 1.2079440938203223,
		"extended": "",
		"description": "In Appreciation of Geodesic Domes | Motherboard",
		"time": "2014-08-19T16:25:16Z",
		"href": "http://motherboard.vice.com/read/in-appreciation-of-geodesic-domes"
	},
	{
		"cluster": 16,
		"tags": [
			"advertising",
			"data",
			"privacy",
			"design",
			"analytics"
		],
		"y": -3.0925346086245664,
		"x": 0.05953200174209757,
		"extended": "",
		"description": "This Tool Shows How Your Email and Search History Gets Turned into Ads | Motherboard",
		"time": "2014-08-19T16:23:09Z",
		"href": "http://motherboard.vice.com/read/this-tool-shows-how-your-email-and-search-history-gets-turned-into-ads"
	},
	{
		"cluster": 10,
		"tags": [
			"walterbenjamin",
			"aesthetics",
			"consumerism",
			"art",
			"politics",
			"society",
			"gentrification",
			"capitalism"
		],
		"y": 1.996114807794806,
		"x": 12.000813209369207,
		"extended": "<blockquote>\nBenjamin argued that artists should be aiming at more than merely ‘transfiguring’ the appearance of the world by ‘treating it stylishly and with technical perfection’. Rather, they should use technical, formal innovations to reveal how both the object and the process of producing a photograph of it ‘stand’ in the wider relations of capitalist production. Art that fails to do this is doomed to merely ‘renew[ing] the world as it actually is from within, in other words, according to th...",
		"description": "Aesthetics of Gentrification | The Occupied Times",
		"time": "2014-08-19T11:12:10Z",
		"href": "http://theoccupiedtimes.org/?p=13143"
	},
	{
		"cluster": 2,
		"tags": [
			"investing",
			"saving",
			"renewable",
			"energy",
			"ecology",
			"environment",
			"finance"
		],
		"y": 3.2522417412678193,
		"x": 5.199950846066442,
		"extended": "",
		"description": "Can I make money from green energy? - Telegraph",
		"time": "2014-08-19T10:41:11Z",
		"href": "http://www.telegraph.co.uk/finance/personalfinance/investing/10558353/Can-I-make-money-from-green-energy.html"
	},
	{
		"cluster": 18,
		"tags": [
			"scala",
			"spark",
			"spray",
			"parquet",
			"analytics",
			"application",
			"architecture",
			"spindle",
			"example",
			"software",
			"engineering",
			"distributed",
			"systems"
		],
		"y": 4.549235994144694,
		"x": -2.158697399101469,
		"extended": "<blockquote>spindle - Next-generation web analytics processing with Scala, Spark, and Parquet.</blockquote>",
		"description": "adobe-research/spindle",
		"time": "2014-08-18T14:52:42Z",
		"href": "https://github.com/adobe-research/spindle"
	},
	{
		"cluster": 16,
		"tags": [
			"datascience",
			"data",
			"science",
			"statistics",
			"society",
			"politics"
		],
		"y": 3.0730069175475805,
		"x": 14.014474073003907,
		"extended": "",
		"description": "What can be achieved by Data Science? | mathbabe",
		"time": "2014-08-18T14:19:04Z",
		"href": "http://mathbabe.org/2014/08/18/what-can-be-achieved-by-data-science/"
	},
	{
		"cluster": 10,
		"tags": [
			"race",
			"racism",
			"ferguson",
			"riots",
			"violence",
			"protest",
			"politics",
			"capitalism"
		],
		"y": 4.4224345973259975,
		"x": 10.772222150879232,
		"extended": "",
		"description": "In Defense of the Ferguson Riots | Jacobin",
		"time": "2014-08-15T17:34:11Z",
		"href": "https://www.jacobinmag.com/2014/08/in-defense-of-the-ferguson-riots/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"engineering",
			"failure",
			"affordance",
			"nudge"
		],
		"y": -4.272337550886338,
		"x": 6.1390756335568915,
		"extended": "",
		"description": "Engineering Infrastructures For Humans | Standalone Sysadmin",
		"time": "2014-08-15T17:32:39Z",
		"href": "http://www.standalone-sysadmin.com/blog/2012/05/engineeringinfrastructures/"
	},
	{
		"cluster": 16,
		"tags": [
			"datamining",
			"text",
			"data",
			"mining",
			"analysis"
		],
		"y": -1.2897206733753925,
		"x": -1.6093806098671415,
		"extended": "<blockquote>This post was written by Jay Ulfelder and originally appeared on Dart-Throwing Chimp. The work it describes is part of the NSF-funded MADCOW project to automate the coding of common political science datasets. Guess what? Text mining isn’t push-button, data-making magic, either. As Phil Schrodt likes to say, there is no Data Fairy. I’m quickly…</blockquote>",
		"description": "Notes From a First Foray into Text Mining | Predictive Heuristics",
		"time": "2014-08-15T17:22:44Z",
		"href": "http://predictiveheuristics.com/2014/08/15/notes-from-a-first-foray-into-text-mining/"
	},
	{
		"cluster": 16,
		"tags": [
			"ipython",
			"spark",
			"python",
			"distributed",
			"computing",
			"datascience",
			"data",
			"analysis"
		],
		"y": -2.0507136109244626,
		"x": -1.5191294347388409,
		"extended": "",
		"description": "How-to: Use IPython Notebook with Apache Spark | Cloudera Engineering Blog",
		"time": "2014-08-15T09:38:21Z",
		"href": "http://blog.cloudera.com/blog/2014/08/how-to-use-ipython-notebook-with-apache-spark/"
	},
	{
		"cluster": 10,
		"tags": [
			"war",
			"politics",
			"history",
			"remembrance"
		],
		"y": 5.3736224573006846,
		"x": 9.727020834488165,
		"extended": "",
		"description": "New Statesman | Laurie Penny: A century of royals looking sad in expensive hats doesn’t take away the horror of WWI",
		"time": "2014-08-14T08:12:07Z",
		"href": "http://www.newstatesman.com/politics/2014/08/laurie-penny-century-royals-looking-sad-expensive-hats-doesn-t-take-away-horror-wwi"
	},
	{
		"cluster": 2,
		"tags": [
			"distributedsystems",
			"architeecture",
			"softwareengineering",
			"api",
			"granularity",
			"microservices"
		],
		"y": -2.1219759431336973,
		"x": 3.8857018149384666,
		"extended": "",
		"description": "Microservices and the First Law of Distributed Objects",
		"time": "2014-08-14T08:06:19Z",
		"href": "http://martinfowler.com/articles/distributed-objects-microservices.html"
	},
	{
		"cluster": 1,
		"tags": [
			"currency",
			"dogecoin",
			"doge",
			"society",
			"history",
			"anthropology",
			"culture",
			"money",
			"cryptocurrency"
		],
		"y": -3.423474471525405,
		"x": 11.846293099755183,
		"extended": "",
		"description": "The Heretic's Guide to Global Finance: Hacking the Future of Money: Much soul, very emotion: Why I buy into the cult of Dogecoin",
		"time": "2014-08-13T07:46:51Z",
		"href": "http://suitpossum.blogspot.co.uk/2014/08/why-i-buy-into-Dogecoin.html"
	},
	{
		"cluster": 15,
		"tags": [
			"deeplearning",
			"machinelearning",
			"neuralnetworks",
			"manifolds",
			"topology",
			"mathematics",
			"computerscience"
		],
		"y": -0.9967315010110559,
		"x": -5.1131882057819915,
		"extended": "",
		"description": "Neural Networks, Manifolds, and Topology -- colah's blog",
		"time": "2014-08-12T13:59:08Z",
		"href": "http://colah.github.io/posts/2014-03-NN-Manifolds-Topology/"
	},
	{
		"cluster": 2,
		"tags": [
			"deeplearning",
			"neuralnetwork",
			"machinelearning",
			"computerscience"
		],
		"y": -0.6947992435250929,
		"x": -4.878109719371083,
		"extended": "",
		"description": "So you wanna try Deep Learning? - Exchangeable random experiments",
		"time": "2014-08-12T13:31:41Z",
		"href": "http://snippyhollow.github.io/blog/2014/08/09/so-you-wanna-try-deep-learning/"
	},
	{
		"cluster": 2,
		"tags": [
			"theano",
			"python",
			"autoencoder",
			"neuralnetwork",
			"deeplearning",
			"gpu",
			"machinelearning"
		],
		"y": 0.06457842738134867,
		"x": -4.6028024785916415,
		"extended": "",
		"description": "Theano, Autoencoders and MNIST « triangleinequality",
		"time": "2014-08-12T13:22:19Z",
		"href": "http://triangleinequality.wordpress.com/2014/08/12/theano-autoencoders-and-mnist/"
	},
	{
		"cluster": 10,
		"tags": [
			"firstthingsfirst",
			"design",
			"culture",
			"politics",
			"poynor"
		],
		"y": -0.40345298318476464,
		"x": 10.26335357684069,
		"extended": "<blockquote>Emigre Essays</blockquote>",
		"description": "Emigre Essays",
		"time": "2014-08-12T12:57:14Z",
		"href": "http://www.emigre.com/Editorial.php?sect=1&id=13"
	},
	{
		"cluster": 10,
		"tags": [
			"data",
			"science",
			"datascience",
			"predictive",
			"analytics",
			"society",
			"politics",
			"sentencing",
			"lawandorder",
			"policing"
		],
		"y": 3.0443360712100698,
		"x": 14.109460656035248,
		"extended": "",
		"description": "Weapon of Math Destruction: “risk-based” sentencing models | mathbabe",
		"time": "2014-08-12T12:41:14Z",
		"href": "http://mathbabe.org/2014/08/12/weapon-of-math-destruction-risk-based-sentencing-models/"
	},
	{
		"cluster": 2,
		"tags": [
			"akka",
			"scala",
			"actors",
			"similarity",
			"recsys",
			"recommendation",
			"systems",
			"architecture"
		],
		"y": 4.9747878603206726,
		"x": -0.944687277614829,
		"extended": "",
		"description": "An Actor-based User Similarity Recommender — Medium",
		"time": "2014-08-12T09:48:54Z",
		"href": "https://medium.com/@nothergeek/an-actor-based-user-similarity-recommender-905a920198ef"
	},
	{
		"cluster": 14,
		"tags": [
			"firstthingsfirst",
			"design",
			"culture",
			"ethics",
			"technology"
		],
		"y": -8.126938959926918,
		"x": 6.077695779498706,
		"extended": "<blockquote>We, the undersigned, are designers, developers, creative technologists and multi-disciplinary communicators. We are troubled by the present state of our industry and its effects on culture and societies across the world.</blockquote>",
		"description": "First Things First 2014",
		"time": "2014-08-12T08:43:12Z",
		"href": "http://firstthingsfirst2014.org/"
	},
	{
		"cluster": 10,
		"tags": [
			"design",
			"culture",
			"politics",
			"technology"
		],
		"y": -0.45997129877044685,
		"x": 10.272804515486195,
		"extended": "",
		"description": "Design culture is a frozen shithole",
		"time": "2014-08-12T08:40:26Z",
		"href": "http://blog.colepeters.com/design-culture-is-frozen-shithole/"
	},
	{
		"cluster": 13,
		"tags": [
			"probability",
			"accounting",
			"economics"
		],
		"y": 8.02971536453813,
		"x": 7.788190830883951,
		"extended": "",
		"description": "John Kay - Why mean outcomes are often meaningless",
		"time": "2014-08-12T08:31:43Z",
		"href": "http://www.johnkay.com/2014/07/30/why-mean-outcomes-are-often-meaningless"
	},
	{
		"cluster": 18,
		"tags": [
			"software",
			"engineering",
			"application",
			"architecture",
			"systems",
			"development",
			"programming",
			"bestpractices"
		],
		"y": 5.680797260650428,
		"x": -4.9178267065603185,
		"extended": "<blockquote>A methodology for building modern, scalable, maintainable software-as-a-service apps.</blockquote>",
		"description": "The Twelve-Factor App",
		"time": "2014-08-12T08:29:27Z",
		"href": "http://12factor.net/"
	},
	{
		"cluster": 10,
		"tags": [
			"race",
			"racism",
			"politics",
			"society",
			"psychology",
			"culture",
			"cognitivebias"
		],
		"y": 1.0658432735125036,
		"x": 12.53981427908276,
		"extended": "",
		"description": "White people don’t talk about racism | mathbabe",
		"time": "2014-08-12T08:12:27Z",
		"href": "http://mathbabe.org/2014/08/11/white-people-dont-talk-about-racism/"
	},
	{
		"cluster": 2,
		"tags": [
			"deeplearning",
			"contentbasedrecommendation",
			"recommendation",
			"machinelearning",
			"convolutionalneuralnetworks",
			"neuralnetworks",
			"music",
			"audio",
			"computerscience",
			"recsys"
		],
		"y": -0.839232938341169,
		"x": -4.942219243630327,
		"extended": "",
		"description": "Recommending music on Spotify with deep learning – Sander Dieleman",
		"time": "2014-08-12T07:47:12Z",
		"href": "http://benanne.github.io/2014/08/05/spotify-cnns.html"
	},
	{
		"cluster": 15,
		"tags": [
			"types",
			"derivative",
			"qderivative",
			"analysis",
			"mathematics",
			"typetheory",
			"computerscience"
		],
		"y": -2.3883525836850117,
		"x": -12.083061699858659,
		"extended": "",
		"description": "Q, Jokers, and Clowns | reperiendi",
		"time": "2014-08-12T07:30:42Z",
		"href": "http://reperiendi.wordpress.com/2014/08/05/q-jokers-and-clowns/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"state",
			"lens",
			"functional",
			"programming",
			"finance",
			"quant",
			"dsl"
		],
		"y": -5.5526331082347555,
		"x": -8.568026783144015,
		"extended": "",
		"description": "OTAS Quant 1: Position Keeping - School of Haskell | FP Complete",
		"time": "2014-08-11T20:05:16Z",
		"href": "https://www.fpcomplete.com/user/tdoris/otas-quant-1-position-keeping"
	},
	{
		"cluster": 10,
		"tags": [
			"gentrification",
			"politics",
			"society",
			"london"
		],
		"y": 2.545582441034723,
		"x": 12.044032842466622,
		"extended": "",
		"description": "The Great London Gentrification Pub Crawl | VICE United Kingdom",
		"time": "2014-08-11T19:59:38Z",
		"href": "http://www.vice.com/en_uk/read/the-great-british-gentrified-pub-crawl"
	},
	{
		"cluster": 16,
		"tags": [
			"featureengineering",
			"feature",
			"engineering",
			"machine",
			"learning",
			"computerscience",
			"machinelearning",
			"datascience",
			"data",
			"science"
		],
		"y": -0.6797766309253789,
		"x": -2.1898044945139974,
		"extended": "<blockquote>Intelligence Features</blockquote>",
		"description": "Detecting Counterfeit Webshops. Part 1: Feature engineering | MLWave",
		"time": "2014-08-11T18:40:19Z",
		"href": "http://mlwave.com/detecting-counterfeit-webshops-part-1-feature-engineering/#more-466"
	},
	{
		"cluster": 10,
		"tags": [
			"beer",
			"politics",
			"society",
			"tastingnotes",
			"socialrealism",
			"pocket-read"
		],
		"y": 2.6806849326537376,
		"x": 12.834358505472258,
		"extended": "<blockquote>Tasting notes can sound pretentious because the language is borrowed from the world of wine, and refers to a lifestyle with which few of us can connect.</blockquote>",
		"description": "Social Realist Tasting Notes",
		"time": "2014-08-11T11:38:41Z",
		"href": "http://boakandbailey.com/2014/08/social-realist-tasting-notes/"
	},
	{
		"cluster": 16,
		"tags": [
			"datajournalism",
			"journalism",
			"culture",
			"learning",
			"teaching",
			"data",
			"computerscience"
		],
		"y": -9.001803397358612,
		"x": -2.9717199020770275,
		"extended": "",
		"description": "Navigating the mindset for data journalism | mathbabe",
		"time": "2014-08-11T08:47:33Z",
		"href": "http://mathbabe.org/2014/08/08/navigating-the-mindset-for-data-journalism/"
	},
	{
		"cluster": 13,
		"tags": [
			"work",
			"jobs",
			"economics",
			"politics",
			"servicesector",
			"soiciety"
		],
		"y": 8.451657029543256,
		"x": 8.959294232982083,
		"extended": "<blockquote>STRIKE! is a bi-monthly newspaper – we deal in politics, philosophy, art, subversion and sedition.</blockquote>",
		"description": "On the Phenomenon of Bullshit Jobs - STRIKE!",
		"time": "2014-08-11T07:32:35Z",
		"href": "http://strikemag.org/bullshit-jobs/"
	},
	{
		"cluster": 17,
		"tags": [
			"bdd",
			"programming",
			"softwareengineering"
		],
		"y": 4.041015250559188,
		"x": -6.331004269140537,
		"extended": "<blockquote>a blog by Chris Parsons</blockquote>",
		"description": "Why BDD works solo, and why that matters for everyone",
		"time": "2014-08-11T07:11:14Z",
		"href": "http://chrismdp.com/2014/08/why-bdd-works-solo/"
	},
	{
		"cluster": 10,
		"tags": [
			"capitalism",
			"science",
			"monsanto",
			"academia",
			"policy",
			"scientism",
			"politics",
			"gmo",
			"business"
		],
		"y": 5.959414109330378,
		"x": 8.972202421552362,
		"extended": "",
		"description": "https://www.jacobinmag.com/2014/08/the-new-scientism/",
		"time": "2014-08-06T10:46:28Z",
		"href": "https://www.jacobinmag.com/2014/08/the-new-scientism/"
	},
	{
		"cluster": 4,
		"tags": [
			"types",
			"programming",
			"typesafety",
			"polymorphism",
			"functionall",
			"haskell",
			"freetheorems"
		],
		"y": -6.53875686970748,
		"x": -10.186395569270578,
		"extended": "<blockquote>Reasoning about type inhabitants in Haskell - Gist is a simple way to share snippets of text and code with others.</blockquote>",
		"description": "Reasoning about type inhabitants in Haskell",
		"time": "2014-07-30T15:16:00Z",
		"href": "https://gist.github.com/pchiusano/444de1f222f1ceb09596"
	},
	{
		"cluster": 2,
		"tags": [
			"adamcurtis",
			"surveillance",
			"maths",
			"algorithms"
		],
		"y": -2.8499435358677228,
		"x": 2.3596173705872068,
		"extended": "<blockquote>The rise of the hidden systems in modern society that are stopping us changing the world. Systems that keep us trapped in the past and where everything repeats. How we have become haunted by the ghosts of our own past desires and cannot imagine anything that has not existed before.</blockquote>",
		"description": "BBC - Blogs - Adam Curtis - NOW THEN",
		"time": "2014-07-30T15:08:15Z",
		"href": "http://www.bbc.co.uk/blogs/adamcurtis/posts/NO-FUTURE"
	},
	{
		"cluster": 1,
		"tags": [
			"jerktech",
			"society",
			"economics",
			"startups",
			"culture",
			"technology"
		],
		"y": -5.806005814873614,
		"x": 10.440489483008458,
		"extended": "",
		"description": "Tim Harford — Article — What tech jerks can teach us",
		"time": "2014-07-29T09:07:34Z",
		"href": "http://timharford.com/2014/07/what-tech-jerks-can-teach-us/"
	},
	{
		"cluster": 14,
		"tags": [
			"fingerprint",
			"affordance",
			"touch",
			"hci",
			"ui",
			"ux",
			"design",
			"interface"
		],
		"y": -4.683891358717053,
		"x": 1.3229277101677703,
		"extended": "",
		"description": "Fingerprint affordances on unfamiliar touch screen - UX",
		"time": "2014-07-29T08:29:15Z",
		"href": "http://vincent.io/fingerprint-affordances-on-unfamiliar-touch-screens/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"ui",
			"affordances",
			"hci",
			"ux",
			"interface"
		],
		"y": -4.675822994980695,
		"x": 1.3514778288701277,
		"extended": "",
		"description": "Affordances and Design - jnd.org",
		"time": "2014-07-29T08:28:17Z",
		"href": "http://www.jnd.org/dn.mss/affordances_and_design.html"
	},
	{
		"cluster": 14,
		"tags": [
			"affordance",
			"design",
			"ui",
			"ux",
			"hci",
			"interface",
			"donnorman"
		],
		"y": -4.682594159915465,
		"x": 1.3316082256264543,
		"extended": "",
		"description": "Perceived Affordance and Four Principles of Screen Interface Design | Sean Van Tyne",
		"time": "2014-07-29T07:54:05Z",
		"href": "http://seanvantyne.com/wordpress/2013/09/15/perceived-affordance-and-four-principles-of-screen-interface-design/"
	},
	{
		"cluster": 14,
		"tags": [
			"affordance",
			"design",
			"ui",
			"ux",
			"hci",
			"ios"
		],
		"y": -4.711968208931797,
		"x": 1.3303292460565959,
		"extended": "",
		"description": "Touch Me - Affordance in iOS 7 - Enigmatic Ape",
		"time": "2014-07-29T07:50:45Z",
		"href": "http://www.enigmaticape.com/blog/touch-me-affordance-in-ios-7"
	},
	{
		"cluster": 10,
		"tags": [
			"palestine",
			"lgbt",
			"politics",
			"intersectionality"
		],
		"y": 3.0679592363134516,
		"x": 8.308510367620263,
		"extended": "",
		"description": "All That Is Solid ...: Palestinians and Intersectionality",
		"time": "2014-07-29T07:09:01Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/07/palestinians-and-intersectionality.html"
	},
	{
		"cluster": 1,
		"tags": [
			"business",
			"management",
			"culture"
		],
		"y": 1.8091149527663841,
		"x": 4.208136346008676,
		"extended": "",
		"description": "How the Other Half Works: an Adventure in the Low Status of Software Engineers | Michael O. Church",
		"time": "2014-07-29T06:56:05Z",
		"href": "https://michaelochurch.wordpress.com/2014/07/13/how-the-other-half-works-an-adventure-in-the-low-status-of-software-engineers/?src=longreads&mc_cid=0aed9c844c&mc_eid=1cf588e961"
	},
	{
		"cluster": 2,
		"tags": [
			"management",
			"holocracy",
			"business"
		],
		"y": 1.7815092625139162,
		"x": 4.140919707120442,
		"extended": "",
		"description": "How Medium Is Building a New Kind of Company with No Managers",
		"time": "2014-07-29T06:44:15Z",
		"href": "http://firstround.com/article/how-medium-is-building-a-new-kind-of-company-with-no-managers"
	},
	{
		"cluster": 18,
		"tags": [
			"cucumber",
			"bdd",
			"programming",
			"collaboration",
			"testing",
			"software",
			"development"
		],
		"y": 7.644923534365067,
		"x": -4.574117712549951,
		"extended": "",
		"description": "The world's most misunderstood collaboration tool · Cucumber Pro",
		"time": "2014-07-26T12:01:13Z",
		"href": "https://cucumber.pro/blog/2014/03/03/the-worlds-most-misunderstood-collaboration-tool.html"
	},
	{
		"cluster": 2,
		"tags": [
			"learning",
			"experiential",
			"experience",
			"kolb",
			"learningstyles",
			"experientiallearning",
			"critique",
			"pedagogy"
		],
		"y": -3.0232958831834895,
		"x": 3.2874093388702477,
		"extended": "",
		"description": "infed.org | David A. Kolb on experiential learning.",
		"time": "2014-07-26T11:36:54Z",
		"href": "http://infed.org/mobi/david-a-kolb-on-experiential-learning/"
	},
	{
		"cluster": 10,
		"tags": [
			"technology",
			"politics",
			"aesthetics",
			"culture",
			"materialism",
			"stuff",
			"posessions",
			"consumerism"
		],
		"y": -0.5329336030094179,
		"x": 10.283120625476439,
		"extended": "",
		"description": "https://www.jacobinmag.com/2014/07/all-power-to-the-pack-rats/",
		"time": "2014-07-25T21:58:05Z",
		"href": "https://www.jacobinmag.com/2014/07/all-power-to-the-pack-rats/"
	},
	{
		"cluster": 10,
		"tags": [
			"gangoffour",
			"music",
			"politics"
		],
		"y": 1.4290891294391337,
		"x": 7.9376785974531465,
		"extended": "",
		"description": "Gang Of Four Track By Track | Features | Clash Magazine",
		"time": "2014-07-25T16:46:40Z",
		"href": "http://www.clashmusic.com/feature/gang-of-four-track-by-track"
	},
	{
		"cluster": 2,
		"tags": [
			"rspec",
			"bdd",
			"cucumber",
			"feature",
			"acceptance",
			"testing",
			"ruby",
			"acceptancetesting"
		],
		"y": 7.408356592428555,
		"x": 1.8462738084353076,
		"extended": "",
		"description": "How we write readable feature tests with RSpec - FutureLearn",
		"time": "2014-07-25T09:42:48Z",
		"href": "https://about.futurelearn.com/blog/how-we-write-readable-feature-tests-with-rspec/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"flying",
			"transport",
			"rareevents",
			"probability",
			"risk"
		],
		"y": -4.890459620572206,
		"x": -4.453371474677925,
		"extended": "",
		"description": "Another tragic cluster - but how surprised should we be? | Understanding Uncertainty",
		"time": "2014-07-25T07:11:27Z",
		"href": "http://understandinguncertainty.org/another-tragic-cluster-how-surprised-should-we-be"
	},
	{
		"cluster": 2,
		"tags": [
			"spark",
			"scala",
			"akka"
		],
		"y": 5.226021340043513,
		"x": -0.7275899725704562,
		"extended": "<blockquote>Apache Spark and the Typesafe Reactive Platform: A Match Made in Heaven</blockquote>",
		"description": "July 21, 2014 | Apache Spark and the Typesafe Reactive Platform: A Match Made in Heaven | Typesafe",
		"time": "2014-07-24T07:51:42Z",
		"href": "http://typesafe.com/blog/apache-spark-and-the-typesafe-reactive-platform-a-match-made-in-heaven"
	},
	{
		"cluster": 17,
		"tags": [
			"deep_learning",
			"deeplearning",
			"machine_learning",
			"programming",
			"pylearn",
			"ec2",
			"gpu",
			"paas",
			"cloud",
			"machinelearning",
			"python"
		],
		"y": 0.7700612049719666,
		"x": -5.009638156489081,
		"extended": "",
		"description": "Deep Learning in Python with Pylearn2 and Amazon EC2",
		"time": "2014-07-24T06:55:42Z",
		"href": "http://www.kurtsp.com/deep-learning-in-python-with-pylearn2-and-amazon-ec2.html"
	},
	{
		"cluster": 10,
		"tags": [
			"sharingeconomy",
			"taskrabbit",
			"piecework",
			"politics"
		],
		"y": 6.016794376913592,
		"x": 10.820494301870262,
		"extended": "",
		"description": "Silicon Valley's gig economy is not the future of work – it's driving down wages | Sarah Jaffe | Comment is free | theguardian.com",
		"time": "2014-07-23T16:30:32Z",
		"href": "http://www.theguardian.com/commentisfree/2014/jul/23/gig-economy-silicon-valley-taskrabbit-workers"
	},
	{
		"cluster": 16,
		"tags": [
			"microeconomics",
			"data",
			"analysis",
			"statistics",
			"bigdata"
		],
		"y": -2.709368672294955,
		"x": -1.6350947253147698,
		"extended": "",
		"description": "How to think like a microeconomist | mathbabe",
		"time": "2014-07-23T16:18:50Z",
		"href": "http://mathbabe.org/2014/07/23/how-to-think-like-a-microeconomist/"
	},
	{
		"cluster": 15,
		"tags": [
			"arpack",
			"spark",
			"linearalgebra",
			"mathematics",
			"svd",
			"machinelearning",
			"numerical",
			"computing",
			"distributed",
			"systems"
		],
		"y": -0.767532966557031,
		"x": -3.5886941035844324,
		"extended": "",
		"description": "Distributing the Singular Value Decomposition with Spark – Databricks",
		"time": "2014-07-22T08:19:35Z",
		"href": "http://databricks.com/blog/2014/07/21/distributing-the-singular-value-decomposition-with-spark.html"
	},
	{
		"cluster": 7,
		"tags": [
			"python",
			"project",
			"structure",
			"bestpractice",
			"pytest",
			"tox",
			"sphinx",
			"readthedocs",
			"github",
			"opensource",
			"packaging",
			"programming",
			"development"
		],
		"y": 8.055117174431018,
		"x": -2.5536146768115033,
		"extended": "",
		"description": "Open Sourcing a Python Project the Right Way",
		"time": "2014-07-20T19:59:36Z",
		"href": "http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/"
	},
	{
		"cluster": 7,
		"tags": [
			"git",
			"history",
			"rewrite",
			"split",
			"reorganization",
			"programming",
			"development"
		],
		"y": 8.043824759313008,
		"x": -2.501105126522761,
		"extended": "",
		"description": "Jimmy Schementi > Splitting up a Git repo",
		"time": "2014-07-19T09:17:45Z",
		"href": "http://jimmy.schementi.com/splitting-up-a-git-repo/"
	},
	{
		"cluster": 13,
		"tags": [
			"polyani",
			"markets",
			"economics",
			"politics"
		],
		"y": 8.190864417349612,
		"x": 8.880388657444069,
		"extended": "",
		"description": "The free market is an impossible utopia",
		"time": "2014-07-19T08:25:08Z",
		"href": "http://feeds.washingtonpost.com/c/34656/f/666713/s/3ca37a95/sc/38/l/0L0Swashingtonpost0N0Cblogs0Cmonkey0Ecage0Cwp0C20A140C0A70C180Cthe0Efree0Emarket0Eis0Ean0Eimpossible0Eutopia0C/story01.htm"
	},
	{
		"cluster": 15,
		"tags": [
			"matrix",
			"reference",
			"mathematics",
			"linearalgebra",
			"programming",
			"numeric",
			"matlab",
			"python",
			"r",
			"julia",
			"octave",
			"cheatsheet"
		],
		"y": 2.8047549182504694,
		"x": -5.078514057454865,
		"extended": "<blockquote>A cheat sheet for basic operations on numeric matrices, which can be very useful if you working and experimenting with some of the most popular languages that are used for scientific computing, statistics, and data analysis.</blockquote>",
		"description": "Matrix Cheat Sheet",
		"time": "2014-07-18T11:41:29Z",
		"href": "http://sebastianraschka.com/Articles/2014_matrix_cheatsheet.html#cheatsheet"
	},
	{
		"cluster": 10,
		"tags": [
			"furniture",
			"design",
			"politics",
			"art",
			"italian",
			"radical"
		],
		"y": -1.0441640696724603,
		"x": 10.168503208896988,
		"extended": "",
		"description": "It’s impractical, it’s ugly & rich people love it: Behold the furniture of Italian Radical design! | Dangerous Minds",
		"time": "2014-07-18T11:40:03Z",
		"href": "http://dangerousminds.net/comments/impractical_and_ugly_the_furniture_of_italian_radical_design"
	},
	{
		"cluster": 5,
		"tags": [
			"python",
			"statistics",
			"moments",
			"estimation",
			"gaussian",
			"mixture",
			"sympy",
			"symbolic",
			"computation"
		],
		"y": -3.8100270397625704,
		"x": -4.136007826111646,
		"extended": "",
		"description": "nbviewer.ipython.org/github/justinvf/algorithmshop/blob/master/20140715-mixture-models/pearson_gaussian_mixtures.ipynb",
		"time": "2014-07-18T11:22:12Z",
		"href": "http://nbviewer.ipython.org/github/justinvf/algorithmshop/blob/master/20140715-mixture-models/pearson_gaussian_mixtures.ipynb"
	},
	{
		"cluster": 4,
		"tags": [
			"exceptions",
			"monad",
			"transformer",
			"haskell",
			"functional",
			"programming"
		],
		"y": -5.040428695679531,
		"x": -9.094153363799204,
		"extended": "<blockquote>gists - With way too messy gist.github pages this is an attempt to organise my snippets</blockquote>",
		"description": "gists/articles/gentle-introduction-monad-transformers.md at master · kqr/gists",
		"time": "2014-07-17T14:22:32Z",
		"href": "https://github.com/kqr/gists/blob/master/articles/gentle-introduction-monad-transformers.md"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"functional",
			"programming",
			"computerscience",
			"catamorphism",
			"trees"
		],
		"y": 4.248374900393189,
		"x": -11.366652383276545,
		"extended": "",
		"description": "Notes on “Counting Tree Nodes”",
		"time": "2014-07-16T16:35:30Z",
		"href": "http://codon.com/notes-on-counting-tree-nodes"
	},
	{
		"cluster": 5,
		"tags": [
			"regression",
			"timeseries",
			"statistics",
			"lying",
			"science"
		],
		"y": -1.6504020335891363,
		"x": 0.7631701424831544,
		"extended": "",
		"description": "How To Cheat, Or Fool Yourself, With Time Series: Climate Example | William M. Briggs",
		"time": "2014-07-15T07:52:16Z",
		"href": "http://wmbriggs.com/blog/?p=5107"
	},
	{
		"cluster": 4,
		"tags": [
			"arrow",
			"applicative",
			"monad",
			"haskell",
			"functional",
			"programming",
			"io",
			"effects"
		],
		"y": -4.533834733844125,
		"x": -9.510537912612378,
		"extended": "",
		"description": "Arrow's place in the Applicative/Monad hierarchy (12 July 2014)",
		"time": "2014-07-14T06:47:33Z",
		"href": "http://gergo.erdi.hu/blog/2014-07-12-arrow's_place_in_the_applicative_monad_hierarchy/"
	},
	{
		"cluster": 15,
		"tags": [
			"Mathematics",
			"abstractalgebra",
			"algebra",
			"rings",
			"fields",
			"pocket-read"
		],
		"y": -7.225570798073268,
		"x": -3.713263998648244,
		"extended": "",
		"description": "Rings — A Primer",
		"time": "2014-07-13T11:54:19Z",
		"href": "http://jeremykun.com/2013/04/30/rings-a-primer/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"linearalgebra",
			"rowreduction",
			"pocket-read"
		],
		"y": -7.415615494027584,
		"x": -3.5032314637109803,
		"extended": "",
		"description": "Row Reduction Over A Field",
		"time": "2014-07-13T11:28:58Z",
		"href": "http://jeremykun.com/2011/12/30/row-reduction-over-a-field/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"identity",
			"intersectionality",
			"class",
			"socialism"
		],
		"y": 2.259757461744495,
		"x": 9.317374665469279,
		"extended": "",
		"description": "https://www.jacobinmag.com/2014/07/class-brought-to-life/",
		"time": "2014-07-12T08:13:21Z",
		"href": "https://www.jacobinmag.com/2014/07/class-brought-to-life/"
	},
	{
		"cluster": 2,
		"tags": [
			"disruption",
			"politice",
			"technology"
		],
		"y": -3.684065483863741,
		"x": 5.547618251376222,
		"extended": "",
		"description": "http://www.vice.com/read/the-real-trouble-with-disruption-711",
		"time": "2014-07-12T08:03:32Z",
		"href": "http://www.vice.com/read/the-real-trouble-with-disruption-711"
	},
	{
		"cluster": 15,
		"tags": [
			"probability",
			"measuretheory",
			"measure",
			"probabilitytheory",
			"mathematics",
			"learning",
			"education"
		],
		"y": -8.62275675414006,
		"x": -5.4915267159874555,
		"extended": "",
		"description": "Probability Primer - YouTube",
		"time": "2014-07-11T12:51:54Z",
		"href": "https://www.youtube.com/playlist?list=PL17567A1A3F5DB5E4"
	},
	{
		"cluster": 2,
		"tags": [
			"indieweb",
			"known",
			"publishing",
			"webservice"
		],
		"y": -3.2738660257834176,
		"x": 4.369076678175775,
		"extended": "<blockquote>Here's how I post from my Known site.\n\nWhen I log in, Known gives me the option to post lots of different kinds of things: status</blockquote>",
		"description": "My #indieweb life: how my site gives me an awesome social media archive of everything I've ever written",
		"time": "2014-07-10T21:58:07Z",
		"href": "http://werd.io/2014/my-indieweb-life-how-my-site-gives-me-an-awesome"
	},
	{
		"cluster": 17,
		"tags": [
			"database",
			"query",
			"optimization",
			"queryplanner",
			"programming",
			"computerscience"
		],
		"y": -13.674155177212054,
		"x": 0.15939287128479332,
		"extended": "",
		"description": "Finding All the Red M&Ms: A Story of Indexes and Full‑Table Scans",
		"time": "2014-07-10T00:05:53Z",
		"href": "http://use-the-index-luke.com/blog/2014-07/finding-all-the-red-mms"
	},
	{
		"cluster": 5,
		"tags": [
			"nlp",
			"machinelearning",
			"computerscience",
			"mathematics",
			"statistics",
			"similarity",
			"tversky",
			"jaccard",
			"dicesorenson",
			"tanimoto",
			"cosine"
		],
		"y": -2.4980566751454067,
		"x": -5.423008934910529,
		"extended": "",
		"description": "Semantic Similarity Metrics | Data Science Association",
		"time": "2014-07-09T15:28:46Z",
		"href": "http://datascienceassn.org/content/semantic-similarity-metrics"
	},
	{
		"cluster": 16,
		"tags": [
			"d3",
			"dvl",
			"reactive",
			"datavisualisation",
			"data",
			"visualisation",
			"javascript",
			"programming",
			"frp"
		],
		"y": 8.98445468828013,
		"x": -4.11064479752621,
		"extended": "<blockquote>DVL - Dynamic Visualization LEGO</blockquote>",
		"description": "vogievetsky/DVL",
		"time": "2014-07-09T14:39:29Z",
		"href": "https://github.com/vogievetsky/DVL"
	},
	{
		"cluster": 12,
		"tags": [
			"d3",
			"javascript",
			"visualisation",
			"reactive",
			"frp",
			"programming",
			"web",
			"datavisualisation"
		],
		"y": 9.048535074106201,
		"x": -4.082475707092963,
		"extended": "",
		"description": "Wealthfront Engineering: Reactive Charts with D3 and Reactive.js",
		"time": "2014-07-09T14:32:19Z",
		"href": "http://eng.wealthfront.com/2013/04/reactive-charts-with-d3-and-reactivejs.html"
	},
	{
		"cluster": 17,
		"tags": [
			"frp",
			"programming",
			"reactive",
			"javascript"
		],
		"y": 9.010710332679139,
		"x": -4.0058474963646304,
		"extended": "",
		"description": "Wealthfront Engineering: Reactive.js: Functional Reactive Programming in Javascript",
		"time": "2014-07-09T14:27:39Z",
		"href": "http://eng.wealthfront.com/2013/04/reactivejs-functional-reactive.html"
	},
	{
		"cluster": 5,
		"tags": [
			"multicolinearity",
			"statistics",
			"regression",
			"colinearity",
			"dummyvariable",
			"onehot",
			"encoding",
			"categorical",
			"categoricalvariable",
			"machinelearning"
		],
		"y": -2.767949180390289,
		"x": -3.5764320846279722,
		"extended": "",
		"description": "r - Qualitative variable coding in regression leads to \"singularities\" - Cross Validated",
		"time": "2014-07-09T12:01:54Z",
		"href": "http://stats.stackexchange.com/questions/70699/qualitative-variable-coding-in-regression-leads-to-singularities#70700"
	},
	{
		"cluster": 5,
		"tags": [
			"regresssion",
			"correlation",
			"statistics",
			"mathematics",
			"singularity",
			"detrminant",
			"linearalgebra"
		],
		"y": -4.176070794874939,
		"x": -4.3880171686395375,
		"extended": "",
		"description": "regression - What correlation makes a matrix singular and what are implications of singularity or near-singularity? - Cross Validated",
		"time": "2014-07-09T11:51:33Z",
		"href": "http://stats.stackexchange.com/questions/70899/what-correlation-makes-a-matrix-singular-and-what-are-implications-of-singularit"
	},
	{
		"cluster": 5,
		"tags": [
			"anaomalydetection",
			"timeseries",
			"machinelearning",
			"windowing",
			"sparsecoding",
			"deeplearning",
			"statistics"
		],
		"y": -2.3679872638134793,
		"x": -3.963078452367117,
		"extended": "",
		"description": "New approaches to anomaly detection - O'Reilly Radar",
		"time": "2014-07-09T11:46:00Z",
		"href": "http://radar.oreilly.com/2014/07/new-approaches-to-anomaly-detection.html"
	},
	{
		"cluster": 14,
		"tags": [
			"impostorsyndrome",
			"dunningkruger",
			"evolution",
			"tdd",
			"refactoring",
			"materialexploration",
			"creativity",
			"design"
		],
		"y": -4.190806223519105,
		"x": 6.436266237250614,
		"extended": "",
		"description": "I Have No Idea What I’m Doing",
		"time": "2014-07-09T09:32:54Z",
		"href": "http://codon.com/i-have-no-idea-what-im-doing"
	},
	{
		"cluster": 5,
		"tags": [
			"jeffreysprior",
			"jeffreys",
			"prior",
			"bayesian",
			"statistics",
			"inference",
			"analysis",
			"pocket-unread"
		],
		"y": -3.702371963683783,
		"x": -2.9850124841853694,
		"extended": "",
		"description": "Bayesian Inference and the Jeffreys Prior | Eventually Almost Everywhere",
		"time": "2014-07-08T20:24:33Z",
		"href": "http://eventuallyalmosteverywhere.wordpress.com/2013/05/10/bayesian-inference-and-the-jeffreys-prior/"
	},
	{
		"cluster": 5,
		"tags": [
			"jeffreysprior",
			"jeffreys",
			"prior",
			"statistics",
			"bayesian",
			"analysis"
		],
		"y": -3.6804147151647215,
		"x": -3.0171498521049793,
		"extended": "",
		"description": "bayesian - Why is the Jeffreys prior useful? - Cross Validated",
		"time": "2014-07-08T20:07:33Z",
		"href": "http://stats.stackexchange.com/questions/38962/why-is-the-jeffreys-prior-useful"
	},
	{
		"cluster": 2,
		"tags": [
			"bike",
			"tour",
			"provence",
			"avignon",
			"france",
			"holiday",
			"cycling"
		],
		"y": -0.778312228345713,
		"x": 4.744185855556575,
		"extended": "<blockquote>Provence self guided cycling tours, Avignon to Camargue. Experience a rich history of heritage in Provence., from €850 (8 days)  ex flights. Call +44 (0)1273 823 700 for help & advice</blockquote>",
		"description": "Provence self guided cycling tours, Avignon to Camargue. Travel like a local",
		"time": "2014-07-05T09:40:31Z",
		"href": "http://www.responsibletravel.com/holiday/5897/provence-self-guided-cycling-tours-avignon-to-camargue"
	},
	{
		"cluster": 2,
		"tags": [
			"cycling",
			"travel",
			"train",
			"eurostar"
		],
		"y": -0.8815809055245177,
		"x": 4.9744955082789275,
		"extended": "",
		"description": "Eurostar clarifies its bike carriage system | road.cc",
		"time": "2014-07-05T09:39:37Z",
		"href": "http://road.cc/content/news/87197-eurostar-clarifies-its-bike-carriage-system"
	},
	{
		"cluster": 18,
		"tags": [
			"distributedsystems",
			"lambdaarchitecture",
			"lambda",
			"architecture",
			"distributed",
			"systems",
			"mapreduce",
			"kafka",
			"stream",
			"processing",
			"storm",
			"realtime",
			"infrastructure",
			"engineering"
		],
		"y": 0.662804168869334,
		"x": -0.8713785049891944,
		"extended": "",
		"description": "Questioning the Lambda Architecture - O'Reilly Radar",
		"time": "2014-07-03T07:24:18Z",
		"href": "http://radar.oreilly.com/2014/07/questioning-the-lambda-architecture.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"socialism",
			"marxism",
			"capitalism",
			"piketty",
			"society",
			"inequality",
			"culture"
		],
		"y": 2.667373469899068,
		"x": 11.341230881129917,
		"extended": "<blockquote>The moral power of Marx’s work doesn’t just derive from its systematic demystification of capitalism; it also flows from his insistence that capitalism cannot generate the conditions for human flourishing. He never equated material well-being with happiness, but he knew that there can be no happiness without material well-being.\n\nThe crime of capitalism is that it forces the vast majority of the population to remain preoccupied with basic concerns of nutrition, housing, health, and s...",
		"description": "https://www.jacobinmag.com/2014/07/why-were-marxists/",
		"time": "2014-07-03T06:07:49Z",
		"href": "https://www.jacobinmag.com/2014/07/why-were-marxists/"
	},
	{
		"cluster": 14,
		"tags": [
			"video",
			"juice",
			"game",
			"design",
			"UX",
			"UI",
			"HCI",
			"interaction"
		],
		"y": -4.791445226480028,
		"x": 1.3623946296542015,
		"extended": "",
		"description": "Juice it or lose it - a talk by Martin Jonasson & Petri Purho - YouTube",
		"time": "2014-07-02T13:54:31Z",
		"href": "https://www.youtube.com/watch?v=Fy0aCDmgnxg"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"capitalism",
			"taxation"
		],
		"y": 7.637700672078541,
		"x": 8.447407037754814,
		"extended": "",
		"description": "https://www.jacobinmag.com/2014/07/saving-private-capital/",
		"time": "2014-07-02T05:46:41Z",
		"href": "https://www.jacobinmag.com/2014/07/saving-private-capital/"
	},
	{
		"cluster": 10,
		"tags": [
			"detroit",
			"government",
			"local",
			"politics",
			"finance",
			"swaps",
			"debt",
			"austerity"
		],
		"y": 6.658740221207592,
		"x": 8.606107775994701,
		"extended": "",
		"description": "https://www.jacobinmag.com/2014/06/detroit-s-grand-bargain/",
		"time": "2014-07-01T06:05:17Z",
		"href": "https://www.jacobinmag.com/2014/06/detroit-s-grand-bargain/"
	},
	{
		"cluster": 5,
		"tags": [
			"abtesting",
			"testing",
			"statistics",
			"analytics",
			"binary",
			"continuous",
			"conversion"
		],
		"y": -3.976820532446488,
		"x": -2.5895613781844493,
		"extended": "<blockquote>learn data analysis and data science through educational screencasts</blockquote>",
		"description": "The Binary Problem and The Continuous Problem in A/B testing | Data Origami — bite-sized data screencasts",
		"time": "2014-06-30T06:46:21Z",
		"href": "https://www.dataorigami.net/blogs/ab-test-200-percent"
	},
	{
		"cluster": 2,
		"tags": [
			"online",
			"text",
			"outofcore",
			"classification",
			"nlp",
			"machinelearning",
			"scikitslearn",
			"scikits",
			"learn",
			"python",
			"reuters"
		],
		"y": -0.8161289010339166,
		"x": -3.2980032235009142,
		"extended": "",
		"description": "Out-of-core classification of text documents — scikit-learn 0.14 documentation",
		"time": "2014-06-29T14:48:18Z",
		"href": "http://scikit-learn.org/stable/auto_examples/applications/plot_out_of_core_classification.html#example-applications-plot-out-of-core-classification-py"
	},
	{
		"cluster": 10,
		"tags": [
			"housing",
			"politics",
			"city",
			"environment",
			"lefevbre",
			"mixedincome",
			"culture",
			"socialism",
			"pocket-read"
		],
		"y": 3.2139385554866413,
		"x": 8.832753799884173,
		"extended": "",
		"description": "The Problem with Mixed-Income Housing",
		"time": "2014-06-29T09:57:55Z",
		"href": "https://www.jacobinmag.com/2014/05/the-problem-with-mixed-income-housing/"
	},
	{
		"cluster": 2,
		"tags": [
			"investment",
			"ftse",
			"tracker",
			"isa",
			"business"
		],
		"y": 1.0993828893109105,
		"x": 4.095494555965944,
		"extended": "",
		"description": "Cuddly Richard Branson: the fattest cat of all | Money | The Guardian",
		"time": "2014-06-28T10:47:07Z",
		"href": "http://www.theguardian.com/money/blog/2014/jun/21/richard-branson-virgin-tracker-isa"
	},
	{
		"cluster": 10,
		"tags": [
			"pocket-unread",
			"robots",
			"neoliberalism",
			"artificial_intelligence",
			"income_inequality",
			"technology",
			"business",
			"politics",
			"socialism",
			"marxism",
			"welfarestate",
			"society"
		],
		"y": 3.612240317546899,
		"x": 11.4480197399998,
		"extended": "",
		"description": "https://www.jacobinmag.com/2014/06/atlas-smug/",
		"time": "2014-06-26T04:19:38Z",
		"href": "https://www.jacobinmag.com/2014/06/atlas-smug/"
	},
	{
		"cluster": 16,
		"tags": [
			"bigdata",
			"analytics",
			"privacy",
			"politics",
			"data"
		],
		"y": 4.076068996762779,
		"x": 6.513344330395902,
		"extended": "",
		"description": "The dark matter of big data | mathbabe",
		"time": "2014-06-25T16:17:54Z",
		"href": "http://mathbabe.org/2014/06/25/the-dark-matter-of-big-data/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"identitypoliitics",
			"identity",
			"intersectiionality",
			"class",
			"feminism",
			"socialism",
			"capitalism"
		],
		"y": 2.3403431153808136,
		"x": 9.322925336786547,
		"extended": "",
		"description": "All That Is Solid ...: Intersectionality, Class, and Capitalism",
		"time": "2014-06-25T05:54:47Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/06/intersectionality-class-and-capitalism.html"
	},
	{
		"cluster": 16,
		"tags": [
			"streaming",
			"data",
			"processing",
			"spark",
			"scala",
			"programming",
			"distributed",
			"systems"
		],
		"y": 4.156422515789807,
		"x": -1.6496757003061249,
		"extended": "",
		"description": "Spark Streaming Programming Guide - Spark 1.0.0 Documentation",
		"time": "2014-06-23T08:41:17Z",
		"href": "http://spark.apache.org/docs/latest/streaming-programming-guide.html"
	},
	{
		"cluster": 17,
		"tags": [
			"graphx",
			"graph",
			"computation",
			"spark",
			"pregel",
			"distributed",
			"systems",
			"programming"
		],
		"y": 2.3555810315141574,
		"x": -3.1287622653336737,
		"extended": "",
		"description": "GraphX Programming Guide - Spark 1.0.0 Documentation",
		"time": "2014-06-23T08:35:56Z",
		"href": "http://spark.apache.org/docs/latest/graphx-programming-guide.html"
	},
	{
		"cluster": 17,
		"tags": [
			"mllib",
			"spark",
			"machinelearning",
			"distributed",
			"systems",
			"programming",
			"computerscience"
		],
		"y": 2.8388974112640506,
		"x": -8.010431203893082,
		"extended": "",
		"description": "Machine Learning Library (MLlib) - Spark 0.9.0 Documentation",
		"time": "2014-06-23T08:18:04Z",
		"href": "http://spark.apache.org/docs/0.9.0/mllib-guide.html#gradient-descent-primitive"
	},
	{
		"cluster": 16,
		"tags": [
			"spark",
			"scala",
			"programming",
			"data",
			"processing",
			"rdd",
			"distributed",
			"systems"
		],
		"y": 4.157097432367379,
		"x": -1.6500913588711184,
		"extended": "",
		"description": "Spark Programming Guide - Spark 1.0.0 Documentation",
		"time": "2014-06-23T07:52:28Z",
		"href": "http://spark.apache.org/docs/latest/programming-guide.html"
	},
	{
		"cluster": 17,
		"tags": [
			"word2vec",
			"gensim",
			"nlp",
			"python",
			"programming",
			"pocket-unread"
		],
		"y": 0.6387119430716127,
		"x": -4.933237629132514,
		"extended": "<blockquote>Neural networks have been a bit of a punching bag historically: neither particularly fast, nor robust or accurate, nor open to introspection by humans curious to gain insights from them. But things have been changing lately, with <a href=http://en.wikipedia.</blockquote>",
		"description": "Radim Řehůřek : Deep learning with word2vec and gensim",
		"time": "2014-06-22T21:06:35Z",
		"href": "http://radimrehurek.com/2013/09/deep-learning-with-word2vec-and-gensim/"
	},
	{
		"cluster": 17,
		"tags": [
			"word2vec",
			"python",
			"german",
			"nlp",
			"machinelearning",
			"programming",
			"computerscience"
		],
		"y": 0.4498959834234412,
		"x": -5.3836861734584796,
		"extended": "",
		"description": "Playing with word2vec and German",
		"time": "2014-06-22T21:04:09Z",
		"href": "http://mfcabrera.com/research/2013/11/14/word2vec-german.blog.org/"
	},
	{
		"cluster": 2,
		"tags": [
			"python",
			"word2vec",
			"topic",
			"model",
			"nlp",
			"gensim",
			"neural",
			"deeplearning",
			"machinelearning",
			"pocket-unread"
		],
		"y": 0.611196433668475,
		"x": -4.809280649575218,
		"extended": "<blockquote>I never got round to writing a tutorial on how to use word2vec in gensim. It s simple enough and the API docs are straightforward, but I know some people prefer more verbose formats. Let this post be a tutorial and a reference example.</blockquote>",
		"description": "Radim Řehůřek : Word2vec Tutorial",
		"time": "2014-06-22T20:55:54Z",
		"href": "http://radimrehurek.com/2014/02/word2vec-tutorial/"
	},
	{
		"cluster": 5,
		"tags": [
			"logisticregression",
			"logistic",
			"regression",
			"statistics",
			"classification",
			"machinelearning",
			"python",
			"pandas",
			"statsmodels"
		],
		"y": -1.8793774738537834,
		"x": -3.5303415682494643,
		"extended": "",
		"description": "ŷhat | Logistic Regression in Python",
		"time": "2014-06-22T20:49:50Z",
		"href": "http://blog.yhathq.com/posts/logistic-regression-and-python.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"regression",
			"dummy",
			"variable",
			"trap",
			"dummyvariabletrap",
			"dummyvariable",
			"machinelearning",
			"programming"
		],
		"y": -1.4864394604181304,
		"x": -6.688367721305673,
		"extended": "<blockquote>Algosome Software Design.</blockquote>",
		"description": "Dummy Variable Trap in Regression Models",
		"time": "2014-06-22T20:47:29Z",
		"href": "http://www.algosome.com/articles/dummy-variable-trap-regression.html"
	},
	{
		"cluster": 5,
		"tags": [
			"MCMC",
			"bayesian",
			"statistics",
			"programming",
			"python",
			"emcee",
			"pymc",
			"pystan",
			"pocket-unread"
		],
		"y": 0.5115982563033562,
		"x": -4.8109145856216164,
		"extended": "",
		"description": "Frequentism and Bayesianism IV: How to be a Bayesian in Python",
		"time": "2014-06-22T20:38:44Z",
		"href": "http://jakevdp.github.io/blog/2014/06/14/frequentism-and-bayesianism-4-bayesian-in-python/"
	},
	{
		"cluster": 5,
		"tags": [
			"frequentistm",
			"bayesianism",
			"bayesian",
			"frequentist",
			"statistics",
			"science",
			"interpretation",
			"crediblerange",
			"confidenceinterval",
			"jaynes",
			"truncatedexponential"
		],
		"y": -4.611070673007622,
		"x": -3.4637578693661606,
		"extended": "",
		"description": "Frequentism and Bayesianism III: Confidence, Credibility, and why Frequentism and Science do not Mix",
		"time": "2014-06-22T20:26:22Z",
		"href": "http://jakevdp.github.io/blog/2014/06/12/frequentism-and-bayesianism-3-confidence-credibility/"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"frequentist",
			"statistics",
			"python",
			"emcee",
			"mcmc",
			"estimation",
			"modelling"
		],
		"y": -4.234145437057629,
		"x": -4.431724490705688,
		"extended": "",
		"description": "Frequentism and Bayesianism: A Practical Introduction",
		"time": "2014-06-22T17:26:05Z",
		"href": "http://jakevdp.github.io/blog/2014/03/11/frequentism-and-bayesianism-a-practical-intro/"
	},
	{
		"cluster": 2,
		"tags": [
			"football",
			"pybrain",
			"prediction",
			"computerscience",
			"machinelearning",
			"neuralnetwork",
			"sports",
			"analytics",
			"python"
		],
		"y": -0.07070097585516509,
		"x": -4.363518645174778,
		"extended": "",
		"description": "nbviewer.ipython.org/github/fisadev/world_cup_learning/blob/master/learn.ipynb",
		"time": "2014-06-22T17:10:52Z",
		"href": "http://nbviewer.ipython.org/github/fisadev/world_cup_learning/blob/master/learn.ipynb"
	},
	{
		"cluster": 16,
		"tags": [
			"spark",
			"docker",
			"machinelearning",
			"data",
			"analysis",
			"cluster",
			"containers"
		],
		"y": -1.847628838806759,
		"x": -1.3101412266516772,
		"extended": "",
		"description": "Got a Minute? Spin up a Spark cluster on your laptop with Docker. | AMPLab – UC Berkeley",
		"time": "2014-06-22T12:29:15Z",
		"href": "https://amplab.cs.berkeley.edu/2013/10/23/got-a-minute-spin-up-a-spark-cluster-on-your-laptop-with-docker/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"gentrification",
			"racism",
			"whitesupremacy",
			"arbitrage"
		],
		"y": 8.471179863499902,
		"x": 8.911940924220731,
		"extended": "",
		"description": "https://www.jacobinmag.com/2014/06/gentrification-and-racial-arbitrage/",
		"time": "2014-06-21T06:40:20Z",
		"href": "https://www.jacobinmag.com/2014/06/gentrification-and-racial-arbitrage/"
	},
	{
		"cluster": 15,
		"tags": [
			"tensors",
			"mathematics",
			"introduction"
		],
		"y": -7.102758519851372,
		"x": -3.5158899681109284,
		"extended": "",
		"description": "Feeling tense about tensors? | plus.maths.org",
		"time": "2014-06-20T12:47:31Z",
		"href": "http://plus.maths.org/content/dont-feel-tense-about-tensors"
	},
	{
		"cluster": 17,
		"tags": [
			"swift",
			"livecode",
			"programming",
			"audio",
			"livecoding",
			"apple",
			"audiounits"
		],
		"y": 3.7368074010467467,
		"x": -5.950220717663755,
		"extended": "",
		"description": "Jamie Bullock : Live coding audio with Swift Playgrounds",
		"time": "2014-06-20T08:47:28Z",
		"href": "http://jamiebullock.com/post/89243252529/live-coding-audio-with-swift-playgrounds"
	},
	{
		"cluster": 2,
		"tags": [
			"desk",
			"space",
			"london",
			"work",
			"coworking",
			"freelance",
			"rent"
		],
		"y": -0.7248727295915202,
		"x": 5.691725373182721,
		"extended": "<blockquote>A new way for freelancers and startups to rent desk space.</blockquote>",
		"description": "Deskcamping - A new way for freelancers and startups to rent desk space.",
		"time": "2014-06-19T08:34:22Z",
		"href": "http://www.deskcamping.com/"
	},
	{
		"cluster": 16,
		"tags": [
			"perception",
			"psychology",
			"infographics",
			"visualisation",
			"data",
			"information",
			"design",
			"usability",
			"data-analysis"
		],
		"y": -2.39865224925813,
		"x": -0.3354806604488917,
		"extended": "",
		"description": "Graphical perception – learn the fundamentals first",
		"time": "2014-06-16T20:19:39Z",
		"href": "http://flowingdata.com/2010/03/20/graphical-perception-learn-the-fundamentals-first/"
	},
	{
		"cluster": 10,
		"tags": [
			"managerialism",
			"politics",
			"capitalism",
			"strategy",
			"business",
			"habermas",
			"legitimation",
			"rationalism",
			"society",
			"technology"
		],
		"y": 5.660182213908878,
		"x": 8.865369028937776,
		"extended": "<blockquote>David Seth Preston University of East London ---------- The rationality that issued from the Enlightenment was the product of the continuum of European thought and practice interactions spanning centuries (Preston, 2001). The Scholastic Age had produced an appreciation of the value in organisation itself. The Renaissance brought forth individuality. Religion and later the (organised) state were effective restrictive agents on the boundaries of this individuality. The rise of science ...",
		"description": "The Rise of Managerialism - The Encyclopaedia of Educational Philosophy and Theory - EEPAT",
		"time": "2014-06-14T16:37:41Z",
		"href": "http://eepat.net/doku.php?id=the_rise_of_managerialism"
	},
	{
		"cluster": 18,
		"tags": [
			"DI",
			"dependencyinjection",
			"software",
			"design",
			"patterns",
			"designpatterns",
			"testing",
			"programming",
			"engineering",
			"softwareengineering"
		],
		"y": 5.332043605929326,
		"x": -4.059973311914452,
		"extended": "",
		"description": "Do I need DI? – The If Works",
		"time": "2014-06-12T11:56:03Z",
		"href": "https://blog.jcoglan.com/2014/05/01/do-i-need-di/"
	},
	{
		"cluster": 17,
		"tags": [
			"javascript",
			"concurrency",
			"async",
			"queue",
			"programming",
			"racecondition",
			"race",
			"events"
		],
		"y": 9.009771355484792,
		"x": -4.163199410732844,
		"extended": "",
		"description": "Form an orderly queue! – The If Works",
		"time": "2014-06-12T11:46:23Z",
		"href": "https://blog.jcoglan.com/2014/04/04/form-an-orderly-queue/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"science",
			"identity",
			"feminism",
			"socialism",
			"data",
			"quantitative",
			"research",
			"argument",
			"sexism"
		],
		"y": 2.3945597195616104,
		"x": 9.310241615680395,
		"extended": "",
		"description": "Bro Bash | Jacobin",
		"time": "2014-06-12T06:49:55Z",
		"href": "https://www.jacobinmag.com/2014/06/bro-bash/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"bayesian",
			"frequentist",
			"estimation",
			"regression",
			"robust",
			"inference",
			"marginalisation"
		],
		"y": -4.642141074602332,
		"x": -3.3585182554648583,
		"extended": "",
		"description": "Frequentism and Bayesianism II: When Results Differ",
		"time": "2014-06-10T07:00:33Z",
		"href": "http://jakevdp.github.io/blog/2014/06/06/frequentism-and-bayesianism-2-when-results-differ/"
	},
	{
		"cluster": 5,
		"tags": [
			"scikit-learn",
			"Johnson-Lindenstrauss",
			"dimensionality",
			"reduction",
			"feature",
			"selection",
			"computerscience",
			"machinelearning",
			"statistics",
			"mathematics",
			"sparserandomprojections",
			"sparse",
			"random",
			"projections"
		],
		"y": -2.4173427034338593,
		"x": -5.396316663160824,
		"extended": "",
		"description": "ŷhat | Python Sparse Random Projections",
		"time": "2014-06-07T09:08:12Z",
		"href": "http://blog.yhathq.com/posts/sparse-random-projections.html"
	},
	{
		"cluster": 5,
		"tags": [
			"lasso",
			"prediction",
			"multivariate",
			"statistics"
		],
		"y": -2.4025070991659425,
		"x": 1.2562948459057208,
		"extended": "",
		"description": "Prediction: the Lasso vs. just using the top 10 predictors | (R news & tutorials)",
		"time": "2014-06-07T08:30:47Z",
		"href": "http://www.r-bloggers.com/prediction-the-lasso-vs-just-using-the-top-10-predictors/"
	},
	{
		"cluster": 18,
		"tags": [
			"apache",
			"kafka",
			"messaging",
			"programming",
			"distributedsystems",
			"broker",
			"distributed",
			"systems",
			"infrastructure",
			"architecture",
			"pocket-read"
		],
		"y": 1.2733315334290103,
		"x": -0.6924630640429558,
		"extended": "<blockquote>Apache Kafka is a distributed publish-subscribe messaging system. This article covers the architecture model, features and characteristics of Kafka framework and how it compares with traditional messaging systems.\n</blockquote>",
		"description": "Apache Kafka: Next Generation Distributed Messaging System",
		"time": "2014-06-06T17:31:41Z",
		"href": "http://www.infoq.com/articles/apache-kafka"
	},
	{
		"cluster": 2,
		"tags": [
			"cassandra",
			"facebook",
			"nosql",
			"persistence",
			"database",
			"architecture",
			"infrastructure"
		],
		"y": 3.057225018593511,
		"x": 0.2175999688810831,
		"extended": "",
		"description": "Facebook’s Cassandra paper, annotated and compared to Apache Cassandra 2.0",
		"time": "2014-06-04T09:05:30Z",
		"href": "http://www.datastax.com/documentation/articles/cassandra/cassandrathenandnow.html"
	},
	{
		"cluster": 17,
		"tags": [
			"mustache",
			"scala",
			"programming",
			"template",
			"javascript",
			"scalatest"
		],
		"y": 6.435849678074087,
		"x": -3.070397458442109,
		"extended": "<blockquote>scala template engine implementing HAML, JSP, Erb style templates</blockquote>",
		"description": "Mustache Reference",
		"time": "2014-06-04T08:55:49Z",
		"href": "http://scalate.fusesource.org/documentation/mustache.html"
	},
	{
		"cluster": 2,
		"tags": [
			"java",
			"scala",
			"threading",
			"concurrency",
			"parallelism",
			"futures",
			"synchronized",
			"volatile"
		],
		"y": 4.842993357388488,
		"x": 0.5159323175045885,
		"extended": "",
		"description": "Scala School - Concurrency in Scala",
		"time": "2014-06-04T08:46:38Z",
		"href": "http://twitter.github.io/scala_school/concurrency.html"
	},
	{
		"cluster": 17,
		"tags": [
			"typescript",
			"types",
			"javascript",
			"programming",
			"languages"
		],
		"y": 8.87207761313671,
		"x": -4.055892166904413,
		"extended": "",
		"description": "TypeScript: Microsoft's New Typed JavaScript Dialect Answers Google Dart | Badass JavaScript",
		"time": "2014-06-04T08:31:15Z",
		"href": "http://badassjs.com/post/32674515997/typescript-microsofts-new-typed-javascript-dialect"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"concurrency",
			"futures",
			"patterns",
			"anti-patterns"
		],
		"y": 4.915961457380812,
		"x": 0.41230063935052097,
		"extended": "",
		"description": "Programming with futures: patterns and anti-patterns",
		"time": "2014-06-04T08:30:01Z",
		"href": "http://jliszka.github.io/2014/06/03/programming-with-futures.html"
	},
	{
		"cluster": 17,
		"tags": [
			"node.js",
			"evented",
			"reactor",
			"async",
			"io",
			"concurrency",
			"programming"
		],
		"y": 5.478172473134806,
		"x": -11.255893861647007,
		"extended": "",
		"description": "Understanding the node.js event loop « Mixu's tech blog",
		"time": "2014-06-03T17:41:00Z",
		"href": "http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/"
	},
	{
		"cluster": 17,
		"tags": [
			"dtrace",
			"java",
			"programming",
			"debugging",
			"jvm",
			"gc",
			"garbagecollection",
			"systems"
		],
		"y": 4.052600736852091,
		"x": -5.3573213274181155,
		"extended": "",
		"description": "Java profiling with DTrace",
		"time": "2014-06-03T17:34:32Z",
		"href": "http://wayne-adams.blogspot.co.uk/2010/01/java-profiling-with-dtrace.html"
	},
	{
		"cluster": 17,
		"tags": [
			"dtrace",
			"programming",
			"debugging",
			"d",
			"computer",
			"systems"
		],
		"y": 4.132832926150396,
		"x": -5.4366484337796175,
		"extended": "",
		"description": "Introduction - DTrace - Oracle Wiki",
		"time": "2014-06-03T17:19:18Z",
		"href": "https://wikis.oracle.com/display/DTrace/Introduction"
	},
	{
		"cluster": 17,
		"tags": [
			"dtrace",
			"syscall",
			"examples",
			"programming",
			"debugging"
		],
		"y": 4.04925003763613,
		"x": -5.399719304530355,
		"extended": "<blockquote>This book serves as an introduction to the dynamic tracing capabilities introduced in Solaris 10. The basic features of the DTrace framework are introduced. The book contains extensive examples of basic DTrace functions.</blockquote>",
		"description": "Tracing User Processes - DTrace User Guide",
		"time": "2014-06-03T16:58:54Z",
		"href": "http://docs.oracle.com/cd/E18752_01/html/819-5488/gcgkk.html"
	},
	{
		"cluster": 17,
		"tags": [
			"nop",
			"assembly",
			"machinecode",
			"programming",
			"computer",
			"architecture",
			"systems"
		],
		"y": 4.32894318857949,
		"x": -5.50675077872212,
		"extended": "",
		"description": "Purpose of NOP instruction and align statement in x86 assembly - Programmers Stack Exchange",
		"time": "2014-06-03T16:58:29Z",
		"href": "http://programmers.stackexchange.com/questions/165002/purpose-of-nop-instruction-and-align-statement-in-x86-assembly"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"mistakes",
			"overfitting",
			"models",
			"statistics",
			"computerscience"
		],
		"y": -1.9848858973810353,
		"x": -5.6000633310475445,
		"extended": "",
		"description": "Machine Learning Done Wrong - ML in the Valley",
		"time": "2014-06-02T21:18:50Z",
		"href": "http://ml.posthaven.com/machine-learning-done-wrong"
	},
	{
		"cluster": 2,
		"tags": [
			"poundcostaveraging",
			"investment",
			"saving",
			"finance"
		],
		"y": 3.143164305269374,
		"x": 5.217220696539636,
		"extended": "",
		"description": "The Benefits of Pound Cost Averaging | Morningstar",
		"time": "2014-06-02T17:39:57Z",
		"href": "http://www.morningstar.co.uk/uk/news/62457/the-benefits-of-pound-cost-averaging.aspx"
	},
	{
		"cluster": 5,
		"tags": [
			"dirichletprocess",
			"dirichlet",
			"process",
			"statistics",
			"machinelearning",
			"chineserestaurantprocess",
			"stickbreakingprocess"
		],
		"y": -2.372280495560451,
		"x": -4.673871937239508,
		"extended": "",
		"description": "The Dirichlet Process the Chinese Restaurant Process and other representations | Datumbox",
		"time": "2014-05-21T09:34:00Z",
		"href": "http://blog.datumbox.com/the-dirichlet-process-the-chinese-restaurant-process-and-other-representations/"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"clustering",
			"dirichletprocess",
			"mixturemodels",
			"dpmm",
			"dirichlet",
			"bayesian",
			"statistics"
		],
		"y": -2.523307248525029,
		"x": -4.4378017068582105,
		"extended": "",
		"description": "Overview of Cluster Analysis and Dirichlet Process Mixture Models | Datumbox",
		"time": "2014-05-21T08:49:24Z",
		"href": "http://blog.datumbox.com/overview-of-cluster-analysis-and-dirichlet-process-mixture-models/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"scalaz",
			"functional",
			"programming",
			"streams",
			"pocket-unread"
		],
		"y": 0.12036962932523712,
		"x": -8.334888395355028,
		"extended": "",
		"description": "A++ [Eric Torreborre's Blog]: Streaming with previous and next",
		"time": "2014-05-21T08:48:56Z",
		"href": "http://etorreborre.blogspot.co.uk/2014/03/streaming-with-previous-and-next.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scaldi",
			"scala",
			"di",
			"programming",
			"softwareengineering",
			"akka",
			"pocket-read"
		],
		"y": 5.550344717784954,
		"x": -2.5158910167440482,
		"extended": "",
		"description": "Hacking Scala - Dependency Injection in Akka with Scaldi",
		"time": "2014-05-21T08:48:37Z",
		"href": "http://hacking-scala.org/post/79931102837/dependency-injection-in-akka-with-scaldi"
	},
	{
		"cluster": 17,
		"tags": [
			"cep",
			"akka",
			"scala",
			"streams",
			"reactive",
			"functional",
			"programming",
			"softwareengineering"
		],
		"y": 5.904331973083987,
		"x": -1.4958582987111166,
		"extended": "",
		"description": "CEP using Akka Streams | Frankly Sauer",
		"time": "2014-05-21T08:48:24Z",
		"href": "http://www.franklysauer.com/2014/05/cep-using-akka-streams/"
	},
	{
		"cluster": 17,
		"tags": [
			"reactive",
			"akka",
			"ddd",
			"eventsourcing",
			"cep",
			"scala",
			"programming",
			"architecture",
			"softwareengineering",
			"pocket-read"
		],
		"y": 5.71887254790226,
		"x": -1.8579754837226288,
		"extended": "<blockquote>Complex Event Processing, CEP, can be very useful for problems that have to do with time e.g. querying over historical data when you want to correlate things that have happened at different times, Greg Young explained in a recent presentation.</blockquote>",
		"description": "Greg Young on Using Complex Event Processing",
		"time": "2014-05-21T08:48:01Z",
		"href": "http://www.infoq.com/news/2014/01/complex-event-processing"
	},
	{
		"cluster": 17,
		"tags": [
			"reactive",
			"akka",
			"domain",
			"model",
			"ddd",
			"scala",
			"programming",
			"architecture",
			"softwareengineering"
		],
		"y": 5.810328619055685,
		"x": -1.6868205857201453,
		"extended": "",
		"description": "Reactive DDD with Akka | Write less, do more!",
		"time": "2014-05-21T08:47:43Z",
		"href": "http://pkaczor.blogspot.co.uk/2014/04/reactive-ddd-with-akka.html"
	},
	{
		"cluster": 17,
		"tags": [
			"reactive",
			"akka",
			"domain",
			"model",
			"ddd",
			"scala",
			"programming",
			"architecture",
			"softwareengineering"
		],
		"y": 5.797287099169735,
		"x": -1.7228051563944558,
		"extended": "",
		"description": "Reactive DDD with Akka - lesson 2 | Write less, do more!",
		"time": "2014-05-21T08:47:37Z",
		"href": "http://pkaczor.blogspot.co.uk/2014/04/reactive-ddd-with-akka-lesson-2.html"
	},
	{
		"cluster": 17,
		"tags": [
			"eventsourcing",
			"akka",
			"fsms",
			"domain",
			"model",
			"ddd",
			"scala",
			"programming",
			"architecture",
			"softwareengineering",
			"pocket-unread"
		],
		"y": 5.7733371461250576,
		"x": -1.7377749663712956,
		"extended": "",
		"description": "Ruminations of a Programmer: Event Sourcing, Akka FSMs and functional domain models",
		"time": "2014-05-21T08:46:59Z",
		"href": "http://debasishg.blogspot.co.uk/2012/01/event-sourcing-akka-fsms-and-functional.html"
	},
	{
		"cluster": 17,
		"tags": [
			"endo",
			"dsl",
			"endofunctor",
			"typed",
			"functional",
			"programming",
			"scala",
			"functor"
		],
		"y": -0.039137464426018884,
		"x": -8.449564729523606,
		"extended": "",
		"description": "Ruminations of a Programmer: Endo is the new fluent API",
		"time": "2014-05-21T08:46:42Z",
		"href": "http://debasishg.blogspot.co.uk/2013/06/endo-is-new-fluent-api.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"ne4j",
			"graph",
			"database",
			"programming"
		],
		"y": 3.760301398533502,
		"x": -0.8916391388860492,
		"extended": "<blockquote>The blog of Stefan Bleibinhaus, Scala and Graph Databases with Gremlin-Scala</blockquote>",
		"description": "Scala and Graph Databases with Gremlin-Scala | bleibinha.us/blog",
		"time": "2014-05-21T08:45:55Z",
		"href": "http://bleibinha.us/blog/2013/10/scala-and-graph-databases-with-gremlin-scala"
	},
	{
		"cluster": 17,
		"tags": [
			"scalaz",
			"monad",
			"transformer",
			"functional",
			"programming",
			"scala"
		],
		"y": -0.3032792059471081,
		"x": -8.502347655637418,
		"extended": "",
		"description": "Scalaz Monad Transformers",
		"time": "2014-05-21T08:45:23Z",
		"href": "http://noelwelsh.com/programming/2013/12/20/scalaz-monad-transformers/"
	},
	{
		"cluster": 17,
		"tags": [
			"countminsketch",
			"countmin",
			"sketch",
			"query",
			"eventsourcing",
			"ddd",
			"functional",
			"programming",
			"scala"
		],
		"y": 2.902130056164766,
		"x": -6.342527370079738,
		"extended": "",
		"description": "Ruminations of a Programmer: Count-Min Sketch - A Data Structure for Stream Mining Applications",
		"time": "2014-05-21T08:45:11Z",
		"href": "http://debasishg.blogspot.co.uk/2014/01/count-min-sketch-data-structure-for.html"
	},
	{
		"cluster": 17,
		"tags": [
			"countminsketch",
			"countmin",
			"sketch",
			"query",
			"eventsourcing",
			"ddd",
			"functional",
			"programming",
			"scala"
		],
		"y": 2.906720383155832,
		"x": -6.308141095934936,
		"extended": "",
		"description": "Ruminations of a Programmer: A Sketch as the Query Model of an EventSourced System",
		"time": "2014-05-21T08:45:03Z",
		"href": "http://debasishg.blogspot.co.uk/2014/01/a-sketch-as-query-model-of-eventsourced.html"
	},
	{
		"cluster": 5,
		"tags": [
			"bayesian",
			"statistics",
			"clustering",
			"machinelearning",
			"dirichlet",
			"process",
			"pocket-read"
		],
		"y": -2.4842965883426977,
		"x": -4.537699356457733,
		"extended": "",
		"description": "Finite Mixture Model based on Dirichlet Distribution | Datumbox",
		"time": "2014-05-21T08:37:37Z",
		"href": "http://blog.datumbox.com/finite-mixture-model-based-on-dirichlet-distribution/"
	},
	{
		"cluster": 5,
		"tags": [
			"pca",
			"ipython",
			"matplotlib",
			"python",
			"numpy",
			"statistics",
			"mathematics"
		],
		"y": -5.023873816274689,
		"x": -3.583517951977026,
		"extended": "",
		"description": "nbviewer.ipython.org/github/rasbt/pattern_classification/blob/master/dimensionality_reduction/projection/principal_component_analysis.ipynb?create=1",
		"time": "2014-04-09T14:16:32Z",
		"href": "http://nbviewer.ipython.org/github/rasbt/pattern_classification/blob/master/dimensionality_reduction/projection/principal_component_analysis.ipynb?create=1"
	},
	{
		"cluster": 2,
		"tags": [
			"hyperloglog",
			"estimation",
			"cardinality",
			"algorithms",
			"stream",
			"computerscience"
		],
		"y": -1.6320845664150496,
		"x": -8.92707574746058,
		"extended": "",
		"description": "Sketch of the Day: HyperLogLog — Cornerstone of a Big Data Infrastructure – AK Tech Blog",
		"time": "2014-04-07T09:15:48Z",
		"href": "http://blog.aggregateknowledge.com/2012/10/25/sketch-of-the-day-hyperloglog-cornerstone-of-a-big-data-infrastructure/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"anova",
			"linear",
			"regression"
		],
		"y": -1.5427669076861192,
		"x": 0.8100342526675742,
		"extended": "<blockquote>If your graduate statistical training was anything like mine, you learned ANOVA in one class and Linear Regression in another.  My professors would often say things like “ANOVA is just a special case of Regression,” but give vague answers when […]</blockquote>",
		"description": "Why ANOVA and Linear Regression are the Same Analysis",
		"time": "2014-04-04T07:48:39Z",
		"href": "http://www.theanalysisfactor.com/why-anova-and-linear-regression-are-the-same-analysis/"
	},
	{
		"cluster": 2,
		"tags": [
			"hyperloglog",
			"counting",
			"redis",
			"algorithm",
			"cardinality",
			"persistence",
			"datastructures",
			"distributedsystems"
		],
		"y": -2.6228197727700038,
		"x": 4.179175640325374,
		"extended": "",
		"description": "Redis new data structure: the HyperLogLog - Antirez weblog",
		"time": "2014-04-03T21:48:45Z",
		"href": "http://antirez.com/news/75"
	},
	{
		"cluster": 5,
		"tags": [
			"fft",
			"outlier",
			"statistics",
			"timeseries",
			"numpy",
			"python",
			"spectral",
			"signalprocessing",
			"analysis",
			"fourieranalysis"
		],
		"y": -3.5284523174341764,
		"x": -1.9375300628609178,
		"extended": "",
		"description": "Outlier Detection in Time-Series Signals using FFT and Median Filtering | Bugra Akyildiz",
		"time": "2014-04-03T21:06:28Z",
		"href": "http://bugra.github.io/work/notes/2014-03-31/outlier-detection-in-time-series-signals-fft-median-filtering/"
	},
	{
		"cluster": 2,
		"tags": [
			"windowing",
			"fft",
			"signal",
			"fastfourier",
			"transform",
			"analysis",
			"fourier",
			"leakage",
			"spectralanalysis"
		],
		"y": -6.500814194514072,
		"x": -0.9847327153300607,
		"extended": "",
		"description": "Spectral Leakage | Bugra Akyildiz",
		"time": "2014-04-03T14:25:00Z",
		"href": "http://bugra.github.io/work/notes/2012-09-15/Spectral-Leakage/"
	},
	{
		"cluster": 5,
		"tags": [
			"bias",
			"sampling",
			"statistics",
			"bigdata"
		],
		"y": -3.587365594481575,
		"x": -1.9393909184427254,
		"extended": "<blockquote>Five years ago, a team of researchers from Google announced a remarkable achievement in one of the world’s top scientific journals, Nature. Without needing the results of a single medical check-up, they were nevertheless able to track the spread of</blockquote>",
		"description": "Big data: are we making a big mistake? - FT.com",
		"time": "2014-04-02T18:04:37Z",
		"href": "http://www.ft.com/cms/s/2/21a6e7d8-b479-11e3-a09a-00144feabdc0.html#axzz2xcbnDMzk"
	},
	{
		"cluster": 5,
		"tags": [
			"testing",
			"machinelearning",
			"statistics",
			"probabilistic",
			"softwareengineering",
			"computational",
			"computerscience"
		],
		"y": -2.01343990345448,
		"x": -5.786658124733308,
		"extended": "",
		"description": "Testing MCMC code, part 1: unit tests – Building Intelligent Probabilistic Systems",
		"time": "2014-04-02T17:42:30Z",
		"href": "https://hips.seas.harvard.edu/blog/2013/05/20/testing-mcmc-code-part-1-unit-tests/"
	},
	{
		"cluster": 10,
		"tags": [
			"regeneration",
			"compulsory",
			"purchase",
			"property",
			"politics",
			"london",
			"housing"
		],
		"y": 5.512321242858415,
		"x": 11.790889527263703,
		"extended": "",
		"description": "New Left Project | Articles | A Compulsory Purchase for London",
		"time": "2014-03-31T09:06:47Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/a_compulsory_purchase_for_london"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"akka",
			"cluster",
			"sbt",
			"scala",
			"deployment",
			"operations",
			"programming",
			"distributed",
			"systems"
		],
		"y": 4.825958912012281,
		"x": -1.609382018617927,
		"extended": "",
		"description": "Running an Akka Cluster with Docker Containers | Adventures in HttpContext",
		"time": "2014-03-28T11:36:45Z",
		"href": "http://blog.michaelhamrah.com/2014/03/running-an-akka-cluster-with-docker-containers/"
	},
	{
		"cluster": 2,
		"tags": [
			"deeplearning",
			"machinelearning",
			"autoencoder",
			"rbm",
			"deepbeliefnetwork",
			"stackedautoencoders",
			"perceptron",
			"backpropagation",
			"neuralnetwork",
			"computerscience",
			"pocket-unread"
		],
		"y": -0.5830274596154098,
		"x": -4.778461449043647,
		"extended": "",
		"description": "An Introduction to Deep Learning (in Java): From Perceptrons to Deep Networks | Toptal",
		"time": "2014-03-28T09:28:27Z",
		"href": "http://www.toptal.com/machine-learning/an-introduction-to-deep-learning-from-perceptrons-to-deep-networks"
	},
	{
		"cluster": 15,
		"tags": [
			"kerneltrick",
			"kernel",
			"svm",
			"machinelearning",
			"dotproduct",
			"linear",
			"methods",
			"supportvectormachine",
			"computerscience",
			"mathematics"
		],
		"y": -1.0627006075897643,
		"x": -4.901993987463557,
		"extended": "<blockquote>An approachable explanation of the kernel trick, framed alongside Support Vector Machines (SVMs). Machine Learning.</blockquote>",
		"description": "The Kernel Trick",
		"time": "2014-03-28T08:14:00Z",
		"href": "http://www.eric-kim.net/eric-kim-net/posts/1/kernel_trick.html"
	},
	{
		"cluster": 16,
		"tags": [
			"design",
			"machinelearning",
			"product",
			"software",
			"interface",
			"data-analysis"
		],
		"y": -2.032118831237836,
		"x": -1.2353721581209225,
		"extended": "<blockquote>This is a guest post by Kevin Dalias. I recently had the chance to attend Strata 2014 in Santa Clara, and since it was my first time at the conference, I</blockquote>",
		"description": "5 Steps to Thinking Like a Designer in Machine Learning | Machine Learning Mastery",
		"time": "2014-03-26T13:13:53Z",
		"href": "http://machinelearningmastery.com/5-steps-to-thinking-like-a-designer-in-machine-learning/"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"play",
			"cucumber",
			"testing",
			"development"
		],
		"y": 7.1687506017472264,
		"x": -2.9336617148762305,
		"extended": "",
		"description": "Cucumber and the Scala Play Framework",
		"time": "2014-03-25T10:17:20Z",
		"href": "http://www.samstarling.co.uk/2013/08/cucumber-and-scala-play/"
	},
	{
		"cluster": 16,
		"tags": [
			"sparql",
			"rdf",
			"semanticweb",
			"semantic",
			"web",
			"data"
		],
		"y": 1.9529739704847522,
		"x": 2.3544781432700654,
		"extended": "",
		"description": "Introduction to: SPARQL - Semanticweb.com",
		"time": "2014-03-24T15:51:30Z",
		"href": "http://semanticweb.com/introduction-to-sparql_b22498"
	},
	{
		"cluster": 2,
		"tags": [
			"sparql",
			"rdf",
			"database",
			"triple",
			"persistence",
			"indexing",
			"semanticweb",
			"semantic",
			"webservice"
		],
		"y": 1.9884345540458763,
		"x": 2.3553076271136737,
		"extended": "<blockquote>\n</blockquote>",
		"description": "How does indexing work on triple stores? - ANSWERS",
		"time": "2014-03-24T14:36:24Z",
		"href": "http://answers.semanticweb.com/questions/2017/how-does-indexing-work-on-triple-stores"
	},
	{
		"cluster": 2,
		"tags": [
			"nlp",
			"machinelearning",
			"word2vec",
			"cbow",
			"skipgrams",
			"language",
			"processing",
			"computerscience",
			"pocket-read"
		],
		"y": -0.6543438731662804,
		"x": 1.3199771696921418,
		"extended": "",
		"description": "word2vec - Tool for computing continuous distributed representations of words. - Google Project Hosting",
		"time": "2014-03-24T13:20:24Z",
		"href": "https://code.google.com/p/word2vec/"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"history",
			"politics",
			"policy",
			"equality",
			"nationalisation"
		],
		"y": 3.2734795564223513,
		"x": 10.1291101461674,
		"extended": "",
		"description": "Fabian Society » Is socialism back?",
		"time": "2014-03-20T16:47:33Z",
		"href": "http://www.fabians.org.uk/is-socialism-back/"
	},
	{
		"cluster": 0,
		"tags": [
			"fig",
			"coreos",
			"scaling",
			"deployment",
			"operations",
			"infrascructure",
			"serf",
			"docker"
		],
		"y": -8.128588964115863,
		"x": 9.050449372859362,
		"extended": "",
		"description": "Building Complex Apps for Docker on CoreOS and Fig | CenturyLink Labs",
		"time": "2014-03-20T14:18:01Z",
		"href": "http://www.centurylinklabs.com/building-complex-apps-for-docker-on-coreos-and-fig/"
	},
	{
		"cluster": 0,
		"tags": [
			"fig",
			"docker",
			"haproxy",
			"scale",
			"infrastructure",
			"serf",
			"loadbalancing",
			"operations"
		],
		"y": -8.141121854140284,
		"x": 9.041541789044143,
		"extended": "",
		"description": "Auto-Loadbalancing Docker with Fig, HAProxy and Serf | CenturyLink Labs",
		"time": "2014-03-20T14:15:39Z",
		"href": "http://www.centurylinklabs.com/auto-loadbalancing-with-fig-haproxy-and-serf/"
	},
	{
		"cluster": 0,
		"tags": [
			"serf",
			"docker",
			"infrastructure",
			"operations"
		],
		"y": -8.135650529314441,
		"x": 8.983661596732663,
		"extended": "",
		"description": "Decentralizing Docker: How to Use Serf with Docker | CenturyLink Labs",
		"time": "2014-03-20T14:11:48Z",
		"href": "http://www.centurylinklabs.com/decentralizing-docker-how-to-use-serf-with-docker/"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"infrastructure",
			"operations",
			"wordpress",
			"mysql"
		],
		"y": -8.150402431122016,
		"x": 8.982193144888258,
		"extended": "",
		"description": "How To Build A 2-Container App with Docker | CenturyLink Labs",
		"time": "2014-03-20T14:06:33Z",
		"href": "http://www.centurylinklabs.com/build-a-2-container-app-with-docker/"
	},
	{
		"cluster": 12,
		"tags": [
			"orchard",
			"fig",
			"deploy",
			"docker",
			"web",
			"development"
		],
		"y": 9.264230421470593,
		"x": 0.2517487393743406,
		"extended": "",
		"description": "Develop and deploy an app with Fig and Orchard | Orchard",
		"time": "2014-03-19T20:42:38Z",
		"href": "https://orchardup.com/blog/develop-and-deploy-an-app-with-fig-and-orchard"
	},
	{
		"cluster": 7,
		"tags": [
			"fig",
			"rails",
			"create",
			"project",
			"web",
			"development",
			"ruby",
			"docker"
		],
		"y": 9.582907324621198,
		"x": -7.318899274382828,
		"extended": "<blockquote>development: &default\n  adapter: postgresql\n  encoding: unicode\n  database: myapp_development\n  pool: 5\n  username: docker\n  password: docker\n  host: <%= ENV.fetch('MYAPP_DB_1_PORT_5432_TCP_ADDR', 'localhost') %>\n  port: <%= ENV.fetch('MYAPP_DB_1_PORT_5432_TCP_PORT', '5432') %>\n\ntest:\n  <<: *default\n  database: myapp_test</blockquote>",
		"description": "Use Fig and Docker to run a Rails app... without installing Rails | Orchard",
		"time": "2014-03-19T16:20:02Z",
		"href": "https://orchardup.com/blog/use-fig-to-run-a-rails-app"
	},
	{
		"cluster": 10,
		"tags": [
			"social",
			"business",
			"politics",
			"company",
			"structure",
			"johnlewis"
		],
		"y": 5.918409390901741,
		"x": 5.964982083039542,
		"extended": "",
		"description": "The John Lewis model and what others could learn from it | Business | theguardian.com",
		"time": "2014-03-19T14:42:48Z",
		"href": "http://www.theguardian.com/business/2012/jan/16/john-lewis-model-lessons"
	},
	{
		"cluster": 2,
		"tags": [
			"curl",
			"openssl",
			"pkcs12",
			"pfx",
			"pem",
			"certificate"
		],
		"y": -2.888501285963884,
		"x": 4.955168261879509,
		"extended": "",
		"description": "Using Certificates with cURL | Rajat Swarup's Blog",
		"time": "2014-03-17T16:23:00Z",
		"href": "http://www.rajatswarup.com/blog/2007/03/10/using-certificates-with-curl/"
	},
	{
		"cluster": 13,
		"tags": [
			"keynes",
			"hayek",
			"economics"
		],
		"y": 7.943689229261574,
		"x": 7.601353182388816,
		"extended": "<blockquote>ON MARCH 10th 1944, seventy years ago earlier this week, a relatively-obscure Austrian émigré published a book that would become one of the great classics of...</blockquote>",
		"description": "Keynes and Hayek: Prophets for today | The Economist",
		"time": "2014-03-17T11:21:54Z",
		"href": "http://www.economist.com/blogs/freeexchange/2014/03/keynes-and-hayek"
	},
	{
		"cluster": 12,
		"tags": [
			"load",
			"testing",
			"guardian",
			"javascript",
			"web",
			"development"
		],
		"y": 10.44723673024727,
		"x": -3.000971248629567,
		"extended": "",
		"description": "matt.chadburn.co.uk/notes/how-to-load-test.html",
		"time": "2014-03-14T11:26:52Z",
		"href": "http://matt.chadburn.co.uk/notes/how-to-load-test.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"bayesian",
			"information",
			"robust",
			"bayes",
			"brittleness"
		],
		"y": -4.352643606679722,
		"x": -3.9755033944798708,
		"extended": "",
		"description": "“When Bayesian Inference Shatters” Owhadi, Scovel, and Sullivan (guest post) | Error Statistics Philosophy",
		"time": "2014-03-13T09:25:50Z",
		"href": "http://errorstatistics.com/2013/09/14/when-bayesian-inference-shatters-owhadi-scovel-and-sullivan-guest-post/"
	},
	{
		"cluster": 2,
		"tags": [
			"pybrain",
			"python",
			"machinelearning",
			"neuralnetwork",
			"tutorial"
		],
		"y": 0.048550275423122534,
		"x": -4.349869029887745,
		"extended": "",
		"description": "PyBrain - a simple neural networks library in Python - FastML",
		"time": "2014-03-13T07:53:20Z",
		"href": "http://fastml.com/pybrain-a-simple-neural-networks-library-in-python/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"papers",
			"tibshirani",
			"learning",
			"education",
			"pocket-read"
		],
		"y": -5.323058484455348,
		"x": -2.0896209488359974,
		"extended": "",
		"description": "Guest Post: ROB TIBSHIRANI « Normal Deviate",
		"time": "2014-03-12T14:47:09Z",
		"href": "http://normaldeviate.wordpress.com/2012/12/21/guest-post-rob-tibshirani/"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"analysis",
			"machinelearning",
			"statistics"
		],
		"y": -3.931934621861784,
		"x": -2.462704058502098,
		"extended": "",
		"description": "Marginally Interesting: Data Analysis: The Hard Parts",
		"time": "2014-03-12T14:31:53Z",
		"href": "http://blog.mikiobraun.de/2014/02/data-analysis-hard-parts.html"
	},
	{
		"cluster": 10,
		"tags": [
			"feminism",
			"class",
			"intersectionality",
			"socialism",
			"politics",
			"austerity"
		],
		"y": 2.279499604904113,
		"x": 9.302375425904005,
		"extended": "",
		"description": "Intersectional Feminism, Class, and Austerity | Velvet Coalmine",
		"time": "2014-03-12T14:19:19Z",
		"href": "http://rhianejones.com/2014/03/11/rhian-e-jones-manchester-conference-intersectional-feminism-class-and-austerity/"
	},
	{
		"cluster": 5,
		"tags": [
			"bayesball",
			"pgm",
			"inference",
			"independence",
			"bayes",
			"network",
			"statistics",
			"machinelearning",
			"grapical",
			"models"
		],
		"y": -3.2644733144549405,
		"x": -4.493527116381367,
		"extended": "",
		"description": "Bayes-Ball Algorithm",
		"time": "2014-03-11T14:26:00Z",
		"href": "http://jmvidal.cse.sc.edu/netlogomas/bayesball/"
	},
	{
		"cluster": 4,
		"tags": [
			"accelarate",
			"haskell",
			"cuda",
			"gpu",
			"programming",
			"hyprid",
			"cpu",
			"parallel",
			"functional"
		],
		"y": -5.1857830465397345,
		"x": -8.196909413625162,
		"extended": "",
		"description": "ParFunk: How to write hybrid CPU/GPU programs with Haskell",
		"time": "2014-03-11T09:46:26Z",
		"href": "http://parfunk.blogspot.co.uk/2012/05/how-to-write-hybrid-cpugpu-programs.html"
	},
	{
		"cluster": 17,
		"tags": [
			"gpu",
			"machinelearning",
			"programming",
			"parallel",
			"cuda",
			"python"
		],
		"y": 0.8829923847922878,
		"x": -5.157354123011428,
		"extended": "",
		"description": "Running things on a GPU - FastML",
		"time": "2014-03-11T09:28:57Z",
		"href": "http://fastml.com/running-things-on-a-gpu/"
	},
	{
		"cluster": 17,
		"tags": [
			"cuda",
			"nvidia",
			"gpu",
			"macosx",
			"installation",
			"programming"
		],
		"y": 1.103604906058846,
		"x": -5.15409175919767,
		"extended": "<blockquote>The installation instructions for the CUDA Toolkit on Mac OS X.</blockquote>",
		"description": "Getting Started Mac OS X :: CUDA Toolkit Documentation",
		"time": "2014-03-10T20:09:43Z",
		"href": "http://docs.nvidia.com/cuda/cuda-getting-started-guide-for-mac-os-x/"
	},
	{
		"cluster": 16,
		"tags": [
			"forecasting",
			"statistics",
			"calibration",
			"bayes",
			"prediction",
			"data",
			"analytics"
		],
		"y": -3.2211615811570393,
		"x": -2.49271251250891,
		"extended": "",
		"description": "“The Well-Calibrated Bayesian,” A.P. Dawid (1982) | A Fine Theorem",
		"time": "2014-03-10T15:45:05Z",
		"href": "http://afinetheorem.wordpress.com/2011/01/23/the-well-calibrated-bayesian-a-p-dawid-1982/"
	},
	{
		"cluster": 16,
		"tags": [
			"elasticsearch",
			"data",
			"analysis",
			"visualisation",
			"programming",
			"web"
		],
		"y": -2.103816684096185,
		"x": -0.767274782919182,
		"extended": "",
		"description": "Elasticsearch.org Data Visualization With ElasticSearch And Protovis | Blog | Elasticsearch",
		"time": "2014-03-10T13:31:20Z",
		"href": "http://www.elasticsearch.org/blog/data-visualization-with-elasticsearch-and-protovis/"
	},
	{
		"cluster": 2,
		"tags": [
			"elasticsearch",
			"machinelearning",
			"classification",
			"prediction",
			"timeseries",
			"vowpalwabbit",
			"vowpal",
			"wabbit"
		],
		"y": -1.3222318637255668,
		"x": 1.6334070082849321,
		"extended": "",
		"description": "Not just for search: Using ElasticSearch with Machine Learning Algorithms « Euphonious Intuition",
		"time": "2014-03-10T13:12:09Z",
		"href": "http://euphonious-intuition.com/2013/04/not-just-for-search-using-elasticsearch-with-machine-learning-algorithms/"
	},
	{
		"cluster": 17,
		"tags": [
			"scalaz",
			"scala",
			"monad",
			"state",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -0.3680781078355012,
		"x": -8.591967358427919,
		"extended": "",
		"description": "Scalaz State Monad | Clint's Software Development Corner",
		"time": "2014-03-05T19:05:19Z",
		"href": "http://softwarecorner.wordpress.com/2013/08/29/scalaz-state-monad/"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"polymorphism",
			"fbounded",
			"fboundedpolymorphism",
			"abstraction",
			"traits",
			"types"
		],
		"y": 5.885162045832735,
		"x": -0.5354237297114574,
		"extended": "",
		"description": "Abstractivate: Scala: talking about yourself",
		"time": "2014-03-05T16:09:06Z",
		"href": "http://blog.jessitron.com/2013/02/scala-talking-about-yourself.html"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"scala",
			"kestrel",
			"combinator",
			"softwareengineering",
			"functional"
		],
		"y": 2.0413829263453898,
		"x": -8.263058296787417,
		"extended": "",
		"description": "Ruminations of a Programmer: Side-effects with Kestrel in Scala",
		"time": "2014-03-05T15:55:56Z",
		"href": "http://debasishg.blogspot.ru/2009/09/side-effects-with-kestrel-in-scala.html"
	},
	{
		"cluster": 15,
		"tags": [
			"groups",
			"grouptheory",
			"mathematics",
			"quotients",
			"cosets",
			"lagrangestheorem"
		],
		"y": -6.8722899254452425,
		"x": -3.31986511566092,
		"extended": "",
		"description": "Groups — A Primer | Math ∩ Programming",
		"time": "2014-03-05T13:28:08Z",
		"href": "http://jeremykun.com/2012/12/08/groups-a-primer/"
	},
	{
		"cluster": 18,
		"tags": [
			"python",
			"ruby",
			"oop",
			"objects",
			"design",
			"programming",
			"software",
			"engineering",
			"ood"
		],
		"y": 5.914911913280652,
		"x": -6.610588281039574,
		"extended": "",
		"description": "The controller pattern is awful (and other OO heresy) - fuzzy notepad",
		"time": "2014-03-05T10:25:17Z",
		"href": "http://me.veekun.com/blog/2013/03/03/the-controller-pattern-is-awful-and-other-oo-heresy/"
	},
	{
		"cluster": 5,
		"tags": [
			"math",
			"machinelearning",
			"diagrams",
			"mathematics",
			"statistics"
		],
		"y": -3.2560329685026477,
		"x": -4.537655521998499,
		"extended": "",
		"description": "Deniz Yuret's Homepage: Machine learning in 10 pictures",
		"time": "2014-03-04T12:56:58Z",
		"href": "http://www.denizyuret.com/2014/02/machine-learning-in-5-pictures.html"
	},
	{
		"cluster": 16,
		"tags": [
			"spark",
			"cloudera",
			"bigdata",
			"apache",
			"hadoop",
			"mapreduce",
			"datascience",
			"analytics",
			"data-analysis"
		],
		"y": -0.25567207687491494,
		"x": -1.7621197938138826,
		"extended": "",
		"description": "Why Apache Spark is a Crossover Hit for Data Scientists | Cloudera Developer Blog",
		"time": "2014-03-04T11:36:12Z",
		"href": "http://blog.cloudera.com/blog/2014/03/why-apache-spark-is-a-crossover-hit-for-data-scientists/"
	},
	{
		"cluster": 2,
		"tags": [
			"netflix",
			"recommendations",
			"licencing",
			"strategy",
			"business",
			"recsys"
		],
		"y": 1.1362657253489552,
		"x": 4.022271522888789,
		"extended": "",
		"description": "Netflix’s dumbed-down algorithms | Felix Salmon",
		"time": "2014-03-03T18:13:23Z",
		"href": "http://blogs.reuters.com/felix-salmon/2014/01/03/netflixs-dumbed-down-algorithms/"
	},
	{
		"cluster": 2,
		"tags": [
			"netflix",
			"prediction",
			"analytics",
			"recsys",
			"collaborativefiltering",
			"computerscience",
			"machinelearning",
			"recommender",
			"systems"
		],
		"y": -1.0520598350403967,
		"x": -4.700288647781969,
		"extended": "",
		"description": "Netflix's stoked-up algorithms - Big Data, Plainly Spoken (aka Numbers Rule Your World)",
		"time": "2014-03-03T18:09:12Z",
		"href": "http://junkcharts.typepad.com/numbersruleyourworld/2014/03/netflixs-stoked-up-algorithms.html"
	},
	{
		"cluster": 2,
		"tags": [
			"vowpalwabbit",
			"machinelearning",
			"learning",
			"utility",
			"classification",
			"tutorial"
		],
		"y": -1.3197814327729314,
		"x": 1.510924343721044,
		"extended": "",
		"description": "The Yaksis",
		"time": "2014-03-03T12:36:53Z",
		"href": "http://www.yaksis.com/posts/vowpal_wabbit-the-redis-of-the-data-science-community.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"union",
			"type",
			"unboxed",
			"programming",
			"functional",
			"computerscience"
		],
		"y": 0.8976076430158638,
		"x": -8.806768346567882,
		"extended": "",
		"description": "Does Scala have \"type disjunction\" (union types)? - Stack Overflow",
		"time": "2014-03-02T17:25:22Z",
		"href": "http://stackoverflow.com/questions/3508077/does-scala-have-type-disjunction-union-types"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"types",
			"logic",
			"curryhoward",
			"mathematics",
			"computerscience",
			"unions",
			"programming",
			"functional",
			"union"
		],
		"y": -3.29130044146044,
		"x": -12.02280010086895,
		"extended": "",
		"description": "Unboxed union types in Scala via the Curry-Howard isomorphism | Chuusai",
		"time": "2014-03-02T17:20:37Z",
		"href": "http://www.chuusai.com/2011/06/09/scala-union-types-curry-howard/"
	},
	{
		"cluster": 17,
		"tags": [
			"scalaz",
			"state",
			"monad",
			"example",
			"functional",
			"programming",
			"scala"
		],
		"y": -0.3644762917083095,
		"x": -8.531027401669604,
		"extended": "",
		"description": "scala - Scalaz state monad examples - Stack Overflow",
		"time": "2014-03-02T15:37:59Z",
		"href": "http://stackoverflow.com/questions/7734756/scalaz-state-monad-examples"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"typelevel",
			"test",
			"compilation",
			"type",
			"checking",
			"types",
			"programminf",
			"shapeless",
			"testing",
			"functional"
		],
		"y": 0.9785030750616057,
		"x": -8.465636740255519,
		"extended": "",
		"description": "scala - Testing an assertion that something must not compile - Stack Overflow",
		"time": "2014-03-02T15:36:39Z",
		"href": "http://stackoverflow.com/questions/15125457/testing-an-assertion-that-something-must-not-compile"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"dependent",
			"type",
			"typesafe",
			"programming",
			"functional",
			"safety",
			"path"
		],
		"y": 1.3195652186024671,
		"x": -8.231260614813813,
		"extended": "",
		"description": "The Neophyte's Guide to Scala Part 13: Path-dependent types - Daniel Westheide",
		"time": "2014-03-01T13:49:31Z",
		"href": "http://danielwestheide.com/blog/2013/02/13/the-neophytes-guide-to-scala-part-13-path-dependent-types.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"private",
			"protected",
			"constructor",
			"programming",
			"functional"
		],
		"y": 1.7839029347089295,
		"x": -7.568754155423565,
		"extended": "",
		"description": "Private and protected constructor in Scala - Stack Overflow",
		"time": "2014-03-01T13:49:08Z",
		"href": "http://stackoverflow.com/questions/1730536/private-and-protected-constructor-in-scala"
	},
	{
		"cluster": 17,
		"tags": [
			"software",
			"programming",
			"computerscience",
			"types",
			"mutability",
			"scalatra"
		],
		"y": 1.267946356416269,
		"x": -10.069699212751129,
		"extended": "",
		"description": "Abstractivate: When OO and FP meet: returning the same type",
		"time": "2014-02-28T18:13:28Z",
		"href": "http://blog.jessitron.com/2014/02/when-oo-and-fp-meet-mytype-problem.html"
	},
	{
		"cluster": 17,
		"tags": [
			"functional",
			"programming",
			"computerscience",
			"history",
			"cognition",
			"abstraction",
			"computation"
		],
		"y": -3.591684967544389,
		"x": -10.897489898111745,
		"extended": "",
		"description": "Abstractivate: Two Models of Computation: or, Why I'm Switching Trains",
		"time": "2014-02-28T08:16:00Z",
		"href": "http://blog.jessitron.com/2013/05/two-models-of-computation-or-why-im.html?m=1"
	},
	{
		"cluster": 10,
		"tags": [
			"feminism",
			"socialism",
			"politics",
			"identity",
			"intersectionality"
		],
		"y": 2.203810487469185,
		"x": 9.272701903498575,
		"extended": "",
		"description": "A Very Public Sociologist: Intersectionality and Postmodern Feminism",
		"time": "2014-02-27T10:49:20Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/02/intersectionality-and-postmodern.html"
	},
	{
		"cluster": 15,
		"tags": [
			"book",
			"learning",
			"machine",
			"machinelearning",
			"computerscience"
		],
		"y": -0.8211086312060493,
		"x": -5.726956312093438,
		"extended": "<blockquote>Discover the self-study methodology you can use to learn and practice applied machine learning</blockquote>",
		"description": "Learn and Practice Applied Machine Learning | Machine Learning Mastery",
		"time": "2014-02-26T15:53:11Z",
		"href": "http://machinelearningmastery.com/small-projects/"
	},
	{
		"cluster": 15,
		"tags": [
			"MCL",
			"graph",
			"cluster",
			"algorithm",
			"network",
			"analysis",
			"data",
			"markov",
			"unsupervised",
			"machine",
			"learning",
			"computerscience",
			"mathematics"
		],
		"y": -1.3893854803221883,
		"x": -10.177237109655293,
		"extended": "",
		"description": "MCL - a cluster algorithm for graphs",
		"time": "2014-02-26T14:45:11Z",
		"href": "http://www.micans.org/mcl/"
	},
	{
		"cluster": 16,
		"tags": [
			"chart",
			"data",
			"software",
			"visualization",
			"infographic",
			"tools",
			"circos",
			"circle",
			"circular"
		],
		"y": -2.624151894127934,
		"x": 0.514993937434743,
		"extended": "",
		"description": "Introduction to Circos, Features and Uses // CIRCOS Circular Genome Data Visualization",
		"time": "2014-02-26T14:43:49Z",
		"href": "http://circos.ca/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"akka",
			"actor",
			"partial",
			"function",
			"partialfunction",
			"composition",
			"programming",
			"functional"
		],
		"y": 5.844245016888284,
		"x": -1.2951536553210916,
		"extended": "",
		"description": "Partial Functions and Modularizing Actor Receive blocks | Knoldus",
		"time": "2014-02-26T14:21:53Z",
		"href": "http://blog.knoldus.com/2014/02/26/partial-functions-and-modularizing-actor-receive-blocks/"
	},
	{
		"cluster": 4,
		"tags": [
			"types",
			"haskell",
			"programming",
			"design",
			"functional",
			"pocket-read"
		],
		"y": -6.551723101854383,
		"x": -10.38167592324003,
		"extended": "<blockquote>of</blockquote>",
		"description": "Programming With Types, Not Tutorials - School of Haskell | FP Complete",
		"time": "2014-02-26T13:42:43Z",
		"href": "https://www.fpcomplete.com/user/chowells79/types-not-tutorials"
	},
	{
		"cluster": 16,
		"tags": [
			"graph",
			"analysis",
			"igraph",
			"python",
			"data",
			"mathematics"
		],
		"y": -2.360576482424805,
		"x": -1.6043712719997487,
		"extended": "",
		"description": "Pragmatic Programming Techniques: Basic graph analytics using igraph",
		"time": "2014-02-25T09:48:11Z",
		"href": "http://horicky.blogspot.co.uk/2012/04/basic-graph-analytics-using-igraph.html"
	},
	{
		"cluster": 2,
		"tags": [
			"silviafederici",
			"feminism",
			"socialism",
			"marxism",
			"production",
			"reproduction",
			"politicvs",
			"pocket-read"
		],
		"y": 2.5321660968098967,
		"x": 8.880518051290125,
		"extended": "",
		"description": "The Making of Capitalist Patriarchy: Interview with Silvia Federici",
		"time": "2014-02-24T13:22:26Z",
		"href": "http://www.thenorthstar.info/?p=11947"
	},
	{
		"cluster": 10,
		"tags": [
			"identity",
			"politics",
			"intersectionality",
			"class",
			"socialism"
		],
		"y": 2.2596941469962593,
		"x": 9.317163553152952,
		"extended": "",
		"description": "A Very Public Sociologist: Identity Politics and Intersectionality",
		"time": "2014-02-24T13:12:58Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/02/identity-politics-and-intersectionality.html"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"ubuntu",
			"sysyrms",
			"administration",
			"operations"
		],
		"y": -7.920503284195643,
		"x": 8.860907531667797,
		"extended": "",
		"description": "Baseimage-docker: A minimal Ubuntu base image modified for Docker-friendliness",
		"time": "2014-02-19T08:00:07Z",
		"href": "http://phusion.github.io/baseimage-docker/"
	},
	{
		"cluster": 18,
		"tags": [
			"abstraction",
			"monad",
			"future",
			"softwareengineering",
			"software",
			"engineering",
			"types",
			"computerscience",
			"architecture",
			"concurrency"
		],
		"y": 4.3050443294167255,
		"x": -6.500064753097114,
		"extended": "<blockquote>the aspect of monadic composition that we’re most concerned with here by providing a flexible way to order the steps of a computation.\n\nI’d like to step back a moment here and state that this post isn’t intended to function as a monad tutorial; there are numerous (perhaps too many!) articles about monads, and their relevance to programming in Scala exist elsewhere. If you’re new to the concept it will be useful for you to take advantage of one or more of these resources before continuing here. It is, however, important to point out at first that the use of monads in Scala, while pervasive (as evidenced by the presence of ‘for’ a</blockquote>",
		"description": "logji: The Abstract Future",
		"time": "2014-02-18T10:24:22Z",
		"href": "http://logji.blogspot.co.uk/2014/02/the-abstract-future.html"
	},
	{
		"cluster": 5,
		"tags": [
			"evolution",
			"synthetic",
			"computational",
			"biology",
			"PAClearning",
			"PAC",
			"laerning",
			"machinelearning",
			"statistics"
		],
		"y": -2.868649931333025,
		"x": -3.862118659410928,
		"extended": "",
		"description": "Evolution is a special kind of (machine) learning | Theory, Evolution, and Games Group",
		"time": "2014-02-18T10:10:00Z",
		"href": "http://egtheory.wordpress.com/2014/02/14/evolution-is-machine-learning/"
	},
	{
		"cluster": 10,
		"tags": [
			"luhman",
			"functionalism",
			"systemstheory",
			"systems",
			"complex",
			"adaptive",
			"sociology",
			"politics"
		],
		"y": 5.69138469943683,
		"x": 7.537242087206415,
		"extended": "",
		"description": "A Very Public Sociologist: Systems Theory and Conservative Sociology",
		"time": "2014-02-18T09:37:49Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/02/systems-theory-and-conservative.html"
	},
	{
		"cluster": 10,
		"tags": [
			"fashion",
			"capitalism",
			"business",
			"politics"
		],
		"y": 6.0968547906518955,
		"x": 9.055682220162199,
		"extended": "",
		"description": "Fashion likes to dress itself up as something more, but it is one of the most hyper-capitalist businesses | Aditya Chakrabortty | Comment is free | The Guardian",
		"time": "2014-02-17T20:44:53Z",
		"href": "http://www.theguardian.com/commentisfree/2014/feb/17/fashion-most-hypercapitalist-businesses"
	},
	{
		"cluster": 2,
		"tags": [
			"socialism",
			"death",
			"healthcare",
			"humanity",
			"pocket-read"
		],
		"y": 1.5183318454238683,
		"x": 7.256412365500252,
		"extended": "",
		"description": "Death and Taxes | Jacobin",
		"time": "2014-02-17T12:06:29Z",
		"href": "https://www.jacobinmag.com/2014/02/death-and-taxes/"
	},
	{
		"cluster": 10,
		"tags": [
			"work",
			"society",
			"politics",
			"socialism"
		],
		"y": 2.5194311651860275,
		"x": 10.997388657674044,
		"extended": "",
		"description": "Work It | Jacobin",
		"time": "2014-02-17T10:55:18Z",
		"href": "https://www.jacobinmag.com/2014/02/work-it/"
	},
	{
		"cluster": 10,
		"tags": [
			"marxism",
			"intersectiionality",
			"politics",
			"identity",
			"socialism"
		],
		"y": 2.54995770108696,
		"x": 9.559278257916255,
		"extended": "",
		"description": "Against liberalism, for intersectional class politics | Cautiously pessimistic",
		"time": "2014-02-17T10:47:25Z",
		"href": "http://nothingiseverlost.wordpress.com/2014/02/15/against-liberalism-for-intersectional-class-politics/"
	},
	{
		"cluster": 2,
		"tags": [
			"reinforcementlearning",
			"machinelearning",
			"flappybird",
			"qlearning",
			"reinforcement",
			"learning",
			"AI"
		],
		"y": -0.10424953803780883,
		"x": -6.152386595923966,
		"extended": "",
		"description": "Flappy Bird RL by SarvagyaVaish",
		"time": "2014-02-16T11:47:39Z",
		"href": "http://sarvagyavaish.github.io/FlappyBirdRL/"
	},
	{
		"cluster": 1,
		"tags": [
			"puredata",
			"pd",
			"sound",
			"design",
			"sounddesign",
			"programming",
			"generative",
			"audio",
			"music",
			"fire",
			"effects",
			"fx",
			"synthesis",
			"signal",
			"processing",
			"digital"
		],
		"y": 1.7542797422341134,
		"x": -3.7368615372791325,
		"extended": "<blockquote>Page contains introductory sound design tutorials in PureData.</blockquote>",
		"description": "Fire synthesis",
		"time": "2014-02-13T20:19:57Z",
		"href": "http://www.obiwannabe.co.uk/tutorials/html/tutorial_fire.html"
	},
	{
		"cluster": 5,
		"tags": [
			"pvalue",
			"statistics",
			"confidence",
			"significance",
			"science"
		],
		"y": -4.583718601876534,
		"x": -3.4475143424190695,
		"extended": "<blockquote>P values, the 'gold standard' of statistical validity, are not as reliable as many scientists assume.</blockquote>",
		"description": "Scientific method: Statistical errors : Nature News & Comment",
		"time": "2014-02-13T08:15:24Z",
		"href": "http://www.nature.com/news/scientific-method-statistical-errors-1.14700"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"scalaz",
			"fucntional",
			"programming",
			"free",
			"monad",
			"freemonad",
			"functor",
			"typed",
			"algebra",
			"domain",
			"ddd",
			"softwareengineering",
			"dependencyinjection"
		],
		"y": 5.724895840959264,
		"x": -2.6785329109278915,
		"extended": "",
		"description": "Timothy Perrett · Free Monads, Part One",
		"time": "2014-02-12T17:38:39Z",
		"href": "http://timperrett.com/2013/11/21/free-monads-part-1/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"java",
			"statistics",
			"mcmc",
			"statistical",
			"computing",
			"computerscience",
			"gibbs",
			"sampling",
			"gibbssampling",
			"markovchain",
			"montecarlo",
			"scala",
			"recursion",
			"functional"
		],
		"y": 3.4070755694652104,
		"x": -13.506903026855676,
		"extended": "",
		"description": "A functional Gibbs sampler in Scala | Darren Wilkinson's research blog",
		"time": "2014-02-12T17:05:09Z",
		"href": "http://darrenjw.wordpress.com/2013/10/04/a-functional-gibbs-sampler-in-scala/"
	},
	{
		"cluster": 5,
		"tags": [
			"programming",
			"java",
			"statistics",
			"mcmc",
			"statistical",
			"computing",
			"computerscience",
			"gibbs",
			"sampling",
			"gibbssampling",
			"markovchain",
			"montecarlo",
			"python",
			"raspberrypi"
		],
		"y": 3.4023461333441847,
		"x": -13.503767228823875,
		"extended": "",
		"description": "MCMC programming in R, Python, Java and C | Darren Wilkinson's research blog",
		"time": "2014-02-12T16:55:37Z",
		"href": "http://darrenjw.wordpress.com/2010/04/28/mcmc-programming-in-r-python-java-and-c/"
	},
	{
		"cluster": 5,
		"tags": [
			"scala",
			"breeze",
			"numeric",
			"statistical",
			"computing",
			"statistics",
			"linearalgebra",
			"linear",
			"algebra",
			"regression",
			"programming",
			"pocket-read"
		],
		"y": -1.1615027384676124,
		"x": 0.4955304767444664,
		"extended": "<blockquote>Introduction In the previous post I outlined why I think Scala is a good language for statistical computing and data science. In this post I want to give a quick taste of Scala and the Breeze numerical library to whet the appetite of the uninitiated. This post certainly won't provide enough material to get started…</blockquote>",
		"description": "Brief introduction to Scala and Breeze for statistical computing | Darren Wilkinson's research blog",
		"time": "2014-02-12T16:15:22Z",
		"href": "http://darrenjw.wordpress.com/2013/12/30/brief-introduction-to-scala-and-breeze-for-statistical-computing/"
	},
	{
		"cluster": 2,
		"tags": [
			"python",
			"scikit-learn",
			"randomforests",
			"ensemble",
			"methods",
			"machinelearning",
			"computerscience"
		],
		"y": -0.7449878251328809,
		"x": -4.113629190098557,
		"extended": "",
		"description": "ŷhat | Random Forests in Python",
		"time": "2014-02-12T16:01:09Z",
		"href": "http://blog.yhathq.com/posts/random-forests-in-python.html"
	},
	{
		"cluster": 2,
		"tags": [
			"python",
			"r",
			"scikit-learn",
			"randomforest",
			"learning",
			"machinelearning",
			"classification",
			"regression"
		],
		"y": -0.8099229780343301,
		"x": -3.7570528857412198,
		"extended": "",
		"description": "ŷhat | Random Forest Regression and Classification in R and Python",
		"time": "2014-02-12T15:54:43Z",
		"href": "http://blog.yhathq.com/posts/comparing-random-forests-in-python-and-r.html"
	},
	{
		"cluster": 10,
		"tags": [
			"lego",
			"politics",
			"creativity",
			"toys"
		],
		"y": 5.856010631739244,
		"x": 11.542123781599994,
		"extended": "",
		"description": "Legoland Lost | Jacobin",
		"time": "2014-02-12T14:42:28Z",
		"href": "https://www.jacobinmag.com/2014/02/lego-movie/"
	},
	{
		"cluster": 15,
		"tags": [
			"logic",
			"relations",
			"modeltheory",
			"model",
			"lattices",
			"graphs",
			"predicate",
			"propositional",
			"mathematics",
			"computerscience",
			"games",
			"pocket-read"
		],
		"y": -1.9035124771474405,
		"x": -11.74464434918362,
		"extended": "",
		"description": "Mathematical Background",
		"time": "2014-02-11T20:40:37Z",
		"href": "http://www.jfsowa.com/logic/math.htm"
	},
	{
		"cluster": 4,
		"tags": [
			"datakinds",
			"haskell",
			"typetheory",
			"types",
			"kinds",
			"functional",
			"programming",
			"computersceince"
		],
		"y": -6.478799018064142,
		"x": -10.447027709729987,
		"extended": "",
		"description": "C&C - Types and Kinds and Sorts, Oh My!",
		"time": "2014-02-11T19:15:14Z",
		"href": "http://jozefg.bitbucket.org/posts/2014-02-10-types-kinds-and-sorts.html"
	},
	{
		"cluster": 2,
		"tags": [
			"brewing",
			"efficiency",
			"homebrew",
			"calculations"
		],
		"y": -4.502965590190437,
		"x": 0.12228806945850505,
		"extended": "",
		"description": "StringersBeer: Mash efficiency, etc, according to the Professor.",
		"time": "2014-02-11T18:33:56Z",
		"href": "http://stringersbeer.blogspot.co.uk/2014/02/mash-efficiency-etc-according-to.html"
	},
	{
		"cluster": 5,
		"tags": [
			"pca",
			"regression",
			"statistics",
			"science",
			"datascience",
			"rigour",
			"data",
			"machinelearning",
			"stepwise",
			"stepwiseregression"
		],
		"y": -1.4945137409917835,
		"x": -2.1547087544243024,
		"extended": "",
		"description": "Win-Vector Blog » Unprincipled Component Analysis",
		"time": "2014-02-11T18:30:50Z",
		"href": "http://www.win-vector.com/blog/2014/02/unprincipled-component-analysis/"
	},
	{
		"cluster": 17,
		"tags": [
			"sclala",
			"mapreduce",
			"scalding",
			"classification",
			"naivebayes",
			"computerscience",
			"datascience",
			"programming",
			"machinelearning"
		],
		"y": 0.29272682444823833,
		"x": -6.298366381701785,
		"extended": "",
		"description": "Adam Laiacano — Naive Bayes classification for large data sets",
		"time": "2014-02-11T18:16:25Z",
		"href": "http://www.adamlaiacano.com/post/76171733969/naive-bayes-classification-for-large-data-sets"
	},
	{
		"cluster": 17,
		"tags": [
			"java",
			"docker",
			"deployment",
			"programming"
		],
		"y": 3.9782004434291283,
		"x": -4.269599576153084,
		"extended": "",
		"description": "Deploy Java Apps With Docker = Awesome - Atlassian Blogs",
		"time": "2014-02-11T18:11:24Z",
		"href": "http://blogs.atlassian.com/2013/06/deploy-java-apps-with-docker-awesome/"
	},
	{
		"cluster": 4,
		"tags": [
			"kmeans",
			"concurrency",
			"haskell",
			"cloudhaskell",
			"functional",
			"programming",
			"distributed",
			"systems",
			"pocket-read"
		],
		"y": -7.511801240128815,
		"x": -7.488203575209694,
		"extended": "",
		"description": "Well-Typed - The Haskell Consultants",
		"time": "2014-02-10T17:48:34Z",
		"href": "http://www.well-typed.com/blog/74"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"cloudhaskell",
			"mapreduce",
			"computerscience",
			"distributed",
			"systems",
			"programming",
			"concurrency",
			"distributedsystems",
			"computing",
			"pocket-read"
		],
		"y": -7.54170428007707,
		"x": -7.4761792638945055,
		"extended": "<blockquote>mapper</blockquote>",
		"description": "Well-Typed - The Haskell Consultants",
		"time": "2014-02-10T17:22:17Z",
		"href": "http://www.well-typed.com/blog/73"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"expectationmaximization",
			"semisupervised",
			"classification",
			"programming",
			"computerscience",
			"statistics"
		],
		"y": -1.1781249165668073,
		"x": -6.682647050197726,
		"extended": "",
		"description": "Machine Learning (Part 4 of 5): Semi-supervised Learning (Expectation Maximization) - YouTube",
		"time": "2014-02-10T16:54:10Z",
		"href": "http://www.youtube.com/watch?v=mW9CHXNhwng&list=PLL4MAGpY4oGL3BC-PGENnrFW1KgVAdQ01"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"collections",
			"functional",
			"programming",
			"types",
			"ducktyping",
			"implicits",
			"pimpmylibrary"
		],
		"y": 1.5018200923250657,
		"x": -8.353130928967119,
		"extended": "",
		"description": "A study in Scala « LShift Ltd.",
		"time": "2014-02-10T16:40:54Z",
		"href": "http://www.lshift.net/blog/2014/02/10/a-study-in-scala/comment-page-1#comment-339093"
	},
	{
		"cluster": 2,
		"tags": [
			"haskell",
			"cloudhaskell",
			"distributed",
			"systems",
			"concurrency",
			"profiling",
			"ram",
			"memory",
			"space",
			"master",
			"slave",
			"work",
			"queue",
			"workstealing",
			"stealing",
			"pocket-read"
		],
		"y": -7.636506016525046,
		"x": -7.3133337502601306,
		"extended": "",
		"description": "Well-Typed - The Haskell Consultants",
		"time": "2014-02-10T15:27:39Z",
		"href": "http://www.well-typed.com/blog/72"
	},
	{
		"cluster": 4,
		"tags": [
			"work",
			"queue",
			"workstealing",
			"stealing",
			"distributed",
			"systems",
			"concurrency",
			"functional",
			"programming",
			"haskell",
			"cloudhaskell",
			"pocket-read"
		],
		"y": -7.544408240474198,
		"x": -7.441056218988068,
		"extended": "",
		"description": "Well-Typed - The Haskell Consultants",
		"time": "2014-02-10T15:20:42Z",
		"href": "http://www.well-typed.com/blog/71"
	},
	{
		"cluster": 4,
		"tags": [
			"lens",
			"haskell",
			"programming",
			"tutorial",
			"functional",
			"computerscience"
		],
		"y": -6.000173146376317,
		"x": -9.07433798043985,
		"extended": "<blockquote>Contribute to LensTutorial development by creating an account on GitHub.</blockquote>",
		"description": "LensTutorial/LensTutorial-Draft1.hs at master · psygnisfive/LensTutorial",
		"time": "2014-02-10T14:48:35Z",
		"href": "https://github.com/psygnisfive/LensTutorial/blob/master/LensTutorial-Draft1.hs"
	},
	{
		"cluster": 16,
		"tags": [
			"care.data",
			"nhs",
			"health",
			"data",
			"privacy",
			"politics",
			"medicine"
		],
		"y": 4.01765409667556,
		"x": 6.406749129123254,
		"extended": "",
		"description": "Opting out of care.data is not the answer | openDemocracy",
		"time": "2014-02-10T11:23:41Z",
		"href": "http://www.opendemocracy.net/ournhs/allyson-pollock-alison-macfarlane/opting-out-of-caredata-is-not-answer"
	},
	{
		"cluster": 10,
		"tags": [
			"Marxism",
			"Feminism",
			"politics",
			"identity",
			"intersectionality",
			"society"
		],
		"y": 2.0546228627265912,
		"x": 9.231247206160548,
		"extended": "",
		"description": "A Marxist-feminist critique of intersectionality theory | The Charnel-House",
		"time": "2014-02-09T17:21:07Z",
		"href": "http://thecharnelhouse.org/2014/02/07/a-marxist-feminist-critique-of-intersectionality-theory/"
	},
	{
		"cluster": 15,
		"tags": [
			"scala",
			"numeric",
			"cooley-turkey",
			"cooleyturkey",
			"fft",
			"fast",
			"fourier",
			"transform",
			"fastfouriertransform",
			"mathematics",
			"computerscience",
			"signalprocessing"
		],
		"y": -1.613883011372727,
		"x": -11.838401906585537,
		"extended": "",
		"description": "Numerical Computing with Scala - ~/dev/on",
		"time": "2014-02-09T13:16:49Z",
		"href": "http://devonbryant.github.io/blog/2013/03/03/numerical-computing-with-scala/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"signalprocessing",
			"fourieranalysis",
			"fourier",
			"transform",
			"analysis",
			"spectralanalysis",
			"spectral",
			"signal",
			"processing"
		],
		"y": -6.523521146414475,
		"x": -1.0659331494026876,
		"extended": "<blockquote>The Fourier Transform is one of the most important algorithms in signal processing. While there is a wealth of information out there on the topic, …</blockquote>",
		"description": "Fourier Transforms - ~/dev/on",
		"time": "2014-02-09T13:10:11Z",
		"href": "http://devonbryant.github.io/blog/2013/03/02/fourier-transforms/"
	},
	{
		"cluster": 12,
		"tags": [
			"functional",
			"programming",
			"design",
			"engineering",
			"web",
			"development",
			"haskell",
			"frameworks",
			"rails",
			"pocket-unread"
		],
		"y": -4.3440224456937635,
		"x": -6.758165185338306,
		"extended": "",
		"description": "The Pragmatic Bookshelf | PragPub January 2013 | Web Programming in Haskell, Part II",
		"time": "2014-02-09T10:46:41Z",
		"href": "http://pragprog.com/magazines/2013-01/web-programming-in-haskell-part-ii"
	},
	{
		"cluster": 12,
		"tags": [
			"haskell",
			"web",
			"faye",
			"javascript",
			"functional",
			"programming",
			"development",
			"pocket-unread"
		],
		"y": -4.378204045446714,
		"x": -6.724293632767233,
		"extended": "",
		"description": "The Pragmatic Bookshelf | PragPub December 2012 | Web Programming in Haskell",
		"time": "2014-02-09T10:46:23Z",
		"href": "http://pragprog.com/magazines/2012-12/web-programming-in-haskell"
	},
	{
		"cluster": 4,
		"tags": [
			"functor",
			"applicative",
			"haskell",
			"categorytheory",
			"typetheory",
			"types",
			"naturaltransformations",
			"effects",
			"abstraction",
			"functional",
			"programming",
			"design",
			"computerscience",
			"pocket-read"
		],
		"y": -5.942413519658973,
		"x": -10.877753245501323,
		"extended": "",
		"description": "The Comonad.Reader » Abstracting with Applicatives",
		"time": "2014-02-08T15:39:14Z",
		"href": "http://comonad.com/reader/2012/abstracting-with-applicatives/"
	},
	{
		"cluster": 17,
		"tags": [
			"Scala",
			"functional",
			"programming",
			"computerscience",
			"lists",
			"immutable",
			"data",
			"structures"
		],
		"y": 1.094798372545734,
		"x": -7.6763418574119475,
		"extended": "",
		"description": "Defining Functional Data Structures | Java.net",
		"time": "2014-02-08T14:15:11Z",
		"href": "https://weblogs.java.net/blog/manningpubs/archive/2012/11/19/defining-functional-data-structures"
	},
	{
		"cluster": 17,
		"tags": [
			"combinatorial",
			"species",
			"combinatorialspecies",
			"functional",
			"programming",
			"computerscience",
			"data",
			"types",
			"datatypes",
			"pocket-read"
		],
		"y": -6.85282575950214,
		"x": -10.773257286291429,
		"extended": "",
		"description": "Decomposing data structures | blog :: Brent -> [String]",
		"time": "2014-02-08T14:09:10Z",
		"href": "http://byorgey.wordpress.com/2012/10/27/decomposing-data-structures/"
	},
	{
		"cluster": 15,
		"tags": [
			"satisfiability",
			"validity",
			"entailment",
			"math",
			"settheory",
			"logic",
			"mathematics",
			"visualisation",
			"pocket-read"
		],
		"y": -7.6885671271051415,
		"x": -3.5291837763994702,
		"extended": "",
		"description": "Visualizing satisfiability, validity & entailment : Inside 206-105",
		"time": "2014-02-08T14:03:11Z",
		"href": "http://blog.ezyang.com/2012/10/visualizing-satisfiability-validity-and-entailment/"
	},
	{
		"cluster": 4,
		"tags": [
			"yesod",
			"Haskell",
			"programming",
			"Web",
			"development",
			"functional"
		],
		"y": -4.5411146617796945,
		"x": -6.904887263810447,
		"extended": "",
		"description": "Yesod Tutorial 2. Playing with Routes and Links | FP Complete",
		"time": "2014-02-08T13:48:01Z",
		"href": "https://www.fpcomplete.com/blog/2012/10/yesod-tutorial-2-playing-with-routes-and-links"
	},
	{
		"cluster": 16,
		"tags": [
			"datascience",
			"data",
			"processing",
			"csv",
			"json",
			"shell",
			"commandline",
			"unix",
			"tools"
		],
		"y": -0.6542534987866969,
		"x": -0.9114286843454766,
		"extended": "<blockquote>Dutch Data Scientist in Old New Amsterdam</blockquote>",
		"description": "7 command-line tools for data science",
		"time": "2014-02-08T13:20:21Z",
		"href": "http://jeroenjanssens.com/2013/09/19/seven-command-line-tools-for-data-science.html"
	},
	{
		"cluster": 10,
		"tags": [
			"socialmedia",
			"politics",
			"feminism",
			"socialism",
			"labour",
			"explotation"
		],
		"y": 2.9105079950347896,
		"x": 9.715109883414089,
		"extended": "",
		"description": "The Labor of Social Media | Jacobin",
		"time": "2014-02-07T14:15:30Z",
		"href": "https://www.jacobinmag.com/2014/02/the-labor-of-social-media/"
	},
	{
		"cluster": 2,
		"tags": [
			"history",
			"marx",
			"society",
			"capitalism"
		],
		"y": 2.510667394381186,
		"x": 10.924939554032616,
		"extended": "",
		"description": "Le mort saisit le vif! | The Charnel-House",
		"time": "2014-02-07T12:40:19Z",
		"href": "http://thecharnelhouse.org/2014/02/05/le-mort-saisit-le-vif/"
	},
	{
		"cluster": 4,
		"tags": [
			"yesod",
			"web",
			"framework",
			"programming",
			"functional",
			"haskell",
			"development"
		],
		"y": -4.489081961653953,
		"x": -6.821399594675775,
		"extended": "",
		"description": "Yesod Tutorial 1. My First Web Site | FP Complete",
		"time": "2014-02-07T08:45:11Z",
		"href": "https://www.fpcomplete.com/blog/2012/10/yesod-tutorial-1-my-first-web-site"
	},
	{
		"cluster": 5,
		"tags": [
			"graphdispersion",
			"similarity",
			"graph",
			"recsys",
			"machinelearning",
			"powermethods",
			"labelprop",
			"statistics",
			"computerscience",
			"pocket-read"
		],
		"y": -2.098289964875011,
		"x": -5.566966837589539,
		"extended": "",
		"description": "brain of mat kelcey - item similarity by bipartite graph dispersion",
		"time": "2014-02-07T08:18:22Z",
		"href": "http://matpalm.com/blog/2012/08/item_similarity_by_bipartite_graph_dispersion/"
	},
	{
		"cluster": 18,
		"tags": [
			"ddd",
			"aggregate",
			"domain",
			"software",
			"engineering",
			"programming",
			"introduction",
			"driven",
			"design"
		],
		"y": 5.240266887770658,
		"x": -5.797581921746027,
		"extended": "",
		"description": "Data Points - Coding for Domain-Driven Design: Tips for Data-Focused Devs",
		"time": "2014-02-06T13:27:05Z",
		"href": "http://msdn.microsoft.com/en-us/magazine/dn342868.aspx"
	},
	{
		"cluster": 17,
		"tags": [
			"music",
			"electronic",
			"newaesthetic",
			"programming",
			"algorithmic",
			"computerscience",
			"aesthetics",
			"culture"
		],
		"y": -10.385592307866267,
		"x": -2.1697718948522375,
		"extended": "",
		"description": "The Quietus | Opinion | The Quietus Essay | I For One Welcome Our New Robot Vocal Cords: Algorave & Black Midi",
		"time": "2014-02-06T11:14:24Z",
		"href": "http://thequietus.com/articles/14405-black-midi-algorave"
	},
	{
		"cluster": 13,
		"tags": [
			"housing",
			"economics",
			"politics",
			"germany"
		],
		"y": 7.9343640484925775,
		"x": 9.292754489208715,
		"extended": "<blockquote>Confronting Managerialism: How the Business Elite and Their Schools Threw Our Lives Out of Balanc</blockquote>",
		"description": "In World's Best-Run Economy, House Prices Keep Falling -- Because That's What House Prices Are Supposed To Do - Forbes",
		"time": "2014-02-04T20:51:21Z",
		"href": "http://www.forbes.com/sites/eamonnfingleton/2014/02/02/in-worlds-best-run-economy-home-prices-just-keep-falling-because-thats-what-home-prices-are-supposed-to-do/"
	},
	{
		"cluster": 17,
		"tags": [
			"sicp",
			"programming",
			"computerscience",
			"scheme",
			"lecturenotes",
			"computatation"
		],
		"y": -7.8002582303376276,
		"x": -12.244546393452762,
		"extended": "<blockquote>CS61A Computer Science 61A: Structure and Interpretation of Computer Programs</blockquote>",
		"description": "CS 61A Summer 2010: Structure and Interpretation of Computer Programs",
		"time": "2014-02-04T18:37:05Z",
		"href": "http://www-inst.eecs.berkeley.edu/~cs61a/su10/"
	},
	{
		"cluster": 15,
		"tags": [
			"beauty",
			"mathematics",
			"proof",
			"education"
		],
		"y": -8.529967543717353,
		"x": -4.271341745656704,
		"extended": "",
		"description": "Guest Post: Beauty, even in the teaching of mathematics | mathbabe",
		"time": "2014-02-04T13:52:28Z",
		"href": "http://mathbabe.org/2014/02/04/guest-post-beauty-even-in-the-teaching-of-mathematics/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"culture",
			"politics",
			"cupcakes",
			"choice",
			"possibility",
			"freedom"
		],
		"y": -0.7733755289283387,
		"x": 11.390569577215405,
		"extended": "",
		"description": "Cupcake Fascism and the Death of Possibility | Infinitely Full Of Hope",
		"time": "2014-02-03T15:58:13Z",
		"href": "http://infinitelyfullofhope.wordpress.com/2013/06/22/cupcakefascism/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"gems",
			"gemfile",
			"programming",
			"dependencies",
			"versioning",
			"bundler"
		],
		"y": 5.75390124721861,
		"x": -10.063139363977777,
		"extended": "",
		"description": "Clarifying the Roles of the .gemspec and Gemfile « Katz Got Your Tongue?",
		"time": "2014-02-03T13:54:29Z",
		"href": "http://yehudakatz.com/2010/12/16/clarifying-the-roles-of-the-gemspec-and-gemfile/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"socialism",
			"marxism",
			"postmodernism",
			"intersectionality",
			"identity",
			"pocket-read"
		],
		"y": 2.3370216799957557,
		"x": 8.990310517044948,
		"extended": "",
		"description": "The oppression ouroboros: Intersectionality eats itself | The Charnel-House",
		"time": "2014-02-03T13:37:59Z",
		"href": "http://thecharnelhouse.org/2014/02/02/the-oppression-ouroboros-intersectionality-eats-itself/"
	},
	{
		"cluster": 10,
		"tags": [
			"intersectionality",
			"politics",
			"culture",
			"postmodernism",
			"socialism",
			"marxism",
			"pocket-read"
		],
		"y": 2.35590073001461,
		"x": 8.950656688510128,
		"extended": "",
		"description": "Postmodern origins of intersectionality | The Charnel-House",
		"time": "2014-02-03T13:30:47Z",
		"href": "http://thecharnelhouse.org/2014/02/02/postmodern-origins-of-intersectionality/"
	},
	{
		"cluster": 17,
		"tags": [
			"language",
			"humanities",
			"education",
			"STEM",
			"programming"
		],
		"y": -5.674011272192701,
		"x": -1.242870001785379,
		"extended": "",
		"description": "How my “impractical” humanities degree prepared me for a career in programming | Tales from a language junkie.",
		"time": "2014-02-03T08:45:24Z",
		"href": "http://shelbyswitzer.com/humanities_degrees_help_programmers/"
	},
	{
		"cluster": 12,
		"tags": [
			"angular",
			"javascript",
			"rails",
			"web",
			"development",
			"js"
		],
		"y": 10.115163940534336,
		"x": -3.432090897089298,
		"extended": "",
		"description": "Getting started with AngularJS in Rails",
		"time": "2014-02-02T12:01:23Z",
		"href": "http://www.jasimabasheer.com/posts/angular-rails.html"
	},
	{
		"cluster": 17,
		"tags": [
			"angular",
			"dependencyinjection",
			"javascript",
			"programming",
			"js"
		],
		"y": 9.222428050594393,
		"x": -3.8072710648502914,
		"extended": "",
		"description": "DailyJS: AngularJS: More on Dependency Injection",
		"time": "2014-02-02T12:01:00Z",
		"href": "http://dailyjs.com/2013/05/23/angularjs-injection/"
	},
	{
		"cluster": 10,
		"tags": [
			"class",
			"gender",
			"identity",
			"politics",
			"privilege",
			"socialism",
			"intersectionality"
		],
		"y": 2.183271220712035,
		"x": 9.230441409837105,
		"extended": "",
		"description": "All hail the vampire-archy: what Mark Fisher gets wrong in 'Exiting the vampire castle' | openDemocracy",
		"time": "2014-01-31T08:59:05Z",
		"href": "http://www.opendemocracy.net/ourkingdom/ray-filar/all-hail-vampire-archy-what-mark-fisher-gets-wrong-in-exiting-vampire-castle"
	},
	{
		"cluster": 10,
		"tags": [
			"intersectionality",
			"feminism",
			"socialism",
			"politics",
			"identity",
			"culture"
		],
		"y": 2.0408590232058574,
		"x": 9.257023386638771,
		"extended": "",
		"description": "INTERSECTIONAL? OR SECTARIAN? | Mute",
		"time": "2014-01-31T08:55:41Z",
		"href": "http://www.metamute.org/community/your-posts/intersectional-or-sectarian"
	},
	{
		"cluster": 10,
		"tags": [
			"class",
			"identity",
			"politics",
			"intersectionality",
			"socialism"
		],
		"y": 2.2588037029371106,
		"x": 9.315025608428178,
		"extended": "",
		"description": "Mistaken Identity | deadcells",
		"time": "2014-01-31T08:48:13Z",
		"href": "http://deadcells.org/mistaken-identity/"
	},
	{
		"cluster": 10,
		"tags": [
			"anarchism",
			"class",
			"socialism",
			"identity",
			"intersectionality",
			"marxism",
			"politics",
			"culture",
			"society"
		],
		"y": 2.1108026843058534,
		"x": 9.303330623260033,
		"extended": "",
		"description": "Vampires aren’t actually real, though. Class is: a reply to Mark Fisher’s castle of bollocks | Cautiously pessimistic",
		"time": "2014-01-31T08:39:03Z",
		"href": "http://nothingiseverlost.wordpress.com/2013/11/23/vampires-arent-actually-real-though-class-is-a-reply-to-mark-fishers-castle-of-bollocks/"
	},
	{
		"cluster": 10,
		"tags": [
			"identity",
			"identitypolitics",
			"culture",
			"politics",
			"intersectionality"
		],
		"y": 1.6808181167897922,
		"x": 9.345985452928714,
		"extended": "",
		"description": "“Identity” — the bane of the contemporary Left | The Charnel-House",
		"time": "2014-01-31T08:26:32Z",
		"href": "http://thecharnelhouse.org/2013/10/31/identity-the-bane-of-the-contemporary-left/"
	},
	{
		"cluster": 3,
		"tags": [
			"politics",
			"culture",
			"identity",
			"intersectionality",
			"left",
			"liberal",
			"socialism",
			"postmodernism",
			"theory",
			"critique"
		],
		"y": 1.7580862933246146,
		"x": 9.214177575707815,
		"extended": "",
		"description": "Exiting the Vampire Castle",
		"time": "2014-01-31T08:25:22Z",
		"href": "http://www.thenorthstar.info/?p=11299"
	},
	{
		"cluster": 3,
		"tags": [
			"politics",
			"theory",
			"culture",
			"identity",
			"intersectionality",
			"postmodernism"
		],
		"y": 1.6967645755606218,
		"x": 9.240325171590431,
		"extended": "",
		"description": "Postscript on identity, intersectionality | The Charnel-House",
		"time": "2014-01-31T08:14:13Z",
		"href": "http://thecharnelhouse.org/2013/11/27/postscript-on-identity-intersectionality/"
	},
	{
		"cluster": 17,
		"tags": [
			"subtyping",
			"cotravariance",
			"scala",
			"types",
			"programming",
			"computerscience",
			"unboxed",
			"tagged",
			"unboxedtaggedtypes",
			"taggedtypes"
		],
		"y": 1.1637477892688306,
		"x": -9.489618426265954,
		"extended": "",
		"description": "Unboxed Tagged Angst",
		"time": "2014-01-30T15:45:16Z",
		"href": "http://noelwelsh.com/programming/2014/01/29/unboxed-tagged-angst/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"tax",
			"pay",
			"politics",
			"inequality"
		],
		"y": 8.784605416669908,
		"x": 9.090232981419332,
		"extended": "",
		"description": "mainly macro: Understanding ever increasing executive pay",
		"time": "2014-01-30T08:55:12Z",
		"href": "http://mainlymacro.blogspot.co.uk/2014/01/understanding-ever-increasing-executive.html"
	},
	{
		"cluster": 16,
		"tags": [
			"topologicaldataanalysis",
			"topological",
			"data",
			"analysis",
			"visualisation",
			"clustering",
			"graphs",
			"structure",
			"machinelearning",
			"statistics"
		],
		"y": -2.1801761389234757,
		"x": -2.1140242243769807,
		"extended": "",
		"description": "Topological Data Analysis: A Framework for Machine Learning | Ayasdi Blog",
		"time": "2014-01-30T08:43:58Z",
		"href": "http://www.ayasdi.com/blog/topology/topological-data-analysis-a-framework-for-machine-learning"
	},
	{
		"cluster": 5,
		"tags": [
			"sciruby",
			"ruby",
			"programming",
			"timeseries",
			"generallinearmodels",
			"glms",
			"machinelearning",
			"statistics",
			"computerscience"
		],
		"y": -0.9902144611502447,
		"x": -7.037726655838079,
		"extended": "",
		"description": "Statistics with Ruby: Time Series and General Linear Models - SciRuby",
		"time": "2014-01-30T08:19:16Z",
		"href": "http://sciruby.com/blog/2013/11/07/statistics-with-ruby-time-series-and-general-linear-models/"
	},
	{
		"cluster": 2,
		"tags": [
			"kanban",
			"software",
			"project",
			"management",
			"continuous",
			"improvement",
			"imporovement",
			"projectmanagement"
		],
		"y": 6.647688836237105,
		"x": 1.4788876063203729,
		"extended": "<blockquote>This second article in the series on the Kanban “nine values, three agendas” model explores the service orientation agenda. Building on the sustainability agenda, this agenda adds the values of customer focus, flow, and leadership. Individually, each of these brings some challenge; collectively, they can represent to a significant sense of direction, a much more outward-looking approach to change.</blockquote>",
		"description": "Kanban’s service orientation agenda",
		"time": "2014-01-30T08:06:17Z",
		"href": "http://www.infoq.com/articles/kanban-agenda-part2-service-orientation"
	},
	{
		"cluster": 2,
		"tags": [
			"kanban",
			"software",
			"project",
			"management",
			"continuous",
			"improvement",
			"imporovement",
			"projectmanagement"
		],
		"y": 6.688878456032493,
		"x": 1.3893460128849533,
		"extended": "<blockquote>This first article in the series on the Kanban “nine values, three agendas” model, explores the sustainability agenda: a common approach to Kanban adoption at the level of individuals and teams, often motivated by the need for relief from unsustainable practices and workloads. This sustainability agenda draws on the Kanban values transparency, balance, and collaboration.</blockquote>",
		"description": "The Sustainability Agenda in Kanban",
		"time": "2014-01-30T07:58:06Z",
		"href": "http://www.infoq.com/articles/kanban-agenda-part1-sustainability"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"structuredlearning",
			"pystruct",
			"python",
			"library",
			"structured",
			"learning",
			"CRFs",
			"conditional",
			"random",
			"fields",
			"computerscience",
			"statistics",
			"artificialintelligence"
		],
		"y": -1.0051440239692417,
		"x": -6.146761113692908,
		"extended": "<blockquote>Models</blockquote>",
		"description": "What is structured learning? — pystruct 0.1 documentation",
		"time": "2014-01-28T19:05:57Z",
		"href": "http://pystruct.github.io/intro.html#intro"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"hcd",
			"human",
			"centred",
			"society",
			"sustainability"
		],
		"y": -2.795834147217261,
		"x": 8.973562897360159,
		"extended": "<blockquote>A free innovation guide for social enterprises and NGOs worldwide |</blockquote>",
		"description": "Human-Centered Design Toolkit | IDEO",
		"time": "2014-01-28T12:26:09Z",
		"href": "http://www.ideo.com/work/human-centered-design-toolkit/"
	},
	{
		"cluster": 2,
		"tags": [
			"postgis",
			"gis",
			"geodata",
			"database",
			"sqlalchemy",
			"python"
		],
		"y": 0.8271617879680782,
		"x": 2.087674239329819,
		"extended": "",
		"description": "GeoAlchemy 2 Documentation — GeoAlchemy2 0.2.3 documentation",
		"time": "2014-01-27T08:31:09Z",
		"href": "https://geoalchemy-2.readthedocs.org/en/latest/index.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"javascript",
			"reactive",
			"frp",
			"scala.js",
			"chat",
			"programming",
			"web"
		],
		"y": 7.435956588047068,
		"x": -3.1274150971605703,
		"extended": "",
		"description": "Scala.js and ReactJS - Matthias Nehlsen",
		"time": "2014-01-27T08:02:52Z",
		"href": "http://matthiasnehlsen.com/blog/2014/01/24/scala-dot-js-and-reactjs/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"debugging",
			"tools",
			"future",
			"lighttable",
			"tooling",
			"culture"
		],
		"y": -9.825686670999081,
		"x": 6.110968418683057,
		"extended": "<blockquote>Light Table has a feature called watches, where you select an expression to watch and behind the scenes the editor wraps that expression in some code …</blockquote>",
		"description": "We're not even trying - Scattered Thoughts",
		"time": "2014-01-27T07:58:20Z",
		"href": "http://scattered-thoughts.net/blog/2014/01/27/were-not-even-trying/"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"linux",
			"containers",
			"development",
			"virtualisation",
			"operations",
			"deployment",
			"infrastructure"
		],
		"y": -8.63338141728078,
		"x": 8.74983289117409,
		"extended": "<blockquote>Documentation website</blockquote>",
		"description": "Vagrant, Docker and Ansible. WTF? | devo.ps",
		"time": "2014-01-24T16:56:17Z",
		"href": "http://devo.ps/blog/2013/09/25/vagrant-docker-and-ansible-wtf.html"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"linux",
			"containers",
			"development",
			"virtualisation",
			"operations",
			"deployment",
			"infrastructure"
		],
		"y": -8.633387694258037,
		"x": 8.749838609984506,
		"extended": "<blockquote>The buzzword that is taking the DevOps world by storm.</blockquote>",
		"description": "What is Docker? — DevOps & Programming — Medium",
		"time": "2014-01-24T16:49:55Z",
		"href": "https://medium.com/devops-programming/7f5fd023158f"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"linux",
			"containers",
			"development",
			"virtualisation",
			"operations",
			"deployment",
			"infrastructure"
		],
		"y": -8.643743634002965,
		"x": 8.754586514840103,
		"extended": "<blockquote>Better Relationships. Smarter Decisions.</blockquote>",
		"description": "A Docker Dev Environment in 24 Hours! (Part 2 of 2) : RelateIQ Blog",
		"time": "2014-01-24T16:44:39Z",
		"href": "http://blog.relateiq.com/a-docker-dev-environment-in-24-hours-part-2-of-2/"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"linux",
			"containers",
			"development",
			"virtualisation",
			"operations",
			"deployment",
			"infrastructure"
		],
		"y": -8.633387668933404,
		"x": 8.749838605438146,
		"extended": "<blockquote>Better Relationships. Smarter Decisions.</blockquote>",
		"description": "A Docker Dev Environment in 24 Hours! (Part 1 of 2) : RelateIQ Blog",
		"time": "2014-01-24T16:44:28Z",
		"href": "http://blog.relateiq.com/a-docker-dev-environment-in-24-hours-part-1-of-2/"
	},
	{
		"cluster": 16,
		"tags": [
			"plotting",
			"data",
			"visualisation",
			"plotly",
			"programming",
			"statistics",
			"graphics",
			"design",
			"anallysis",
			"pocket-read"
		],
		"y": -3.022309764559658,
		"x": -0.32018151926409016,
		"extended": "<blockquote>Jackp's interactive graph and data of \"click-drag to zoom-indouble-click to zoom-out\" is a scatter chart.</blockquote>",
		"description": "nbviewer.ipython.org/gist/jackparmer/7729584",
		"time": "2014-01-24T16:36:25Z",
		"href": "http://nbviewer.ipython.org/gist/jackparmer/7729584"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"processing",
			"generative",
			"graphics",
			"art",
			"programming",
			"sp5repl",
			"repl",
			"pocket-read"
		],
		"y": 1.7740545234598646,
		"x": -4.725480101684791,
		"extended": "",
		"description": "sp5repl - A Scala Read-Eval-Processing-Loop",
		"time": "2014-01-24T16:07:41Z",
		"href": "http://drablab.org/sp5repl/"
	},
	{
		"cluster": 17,
		"tags": [
			"gibber",
			"javascript",
			"livecode",
			"music",
			"graphics",
			"code",
			"programming",
			"pocket-read"
		],
		"y": 3.735200861546972,
		"x": -7.406476663863323,
		"extended": "",
		"description": "gibber.mat.ucsb.edu",
		"time": "2014-01-24T15:52:09Z",
		"href": "http://gibber.mat.ucsb.edu/"
	},
	{
		"cluster": 3,
		"tags": [
			"literature",
			"art",
			"aesthethics",
			"criticism",
			"theory",
			"politics",
			"propaganda",
			"pocket-read"
		],
		"y": -6.340077389779044,
		"x": 12.090844355737808,
		"extended": "",
		"description": "California English | Jacobin",
		"time": "2014-01-24T08:20:27Z",
		"href": "https://www.jacobinmag.com/2014/01/california-english/"
	},
	{
		"cluster": 2,
		"tags": [
			"comedy",
			"grantmorrison",
			"theinvisibles",
			"comics",
			"graphicnovel"
		],
		"y": -2.882612627209768,
		"x": 4.981901267152803,
		"extended": "<blockquote>  The chain continues with Frankie Boyle talking to comic book legend Grant Morrison.  </blockquote>",
		"description": "▶ BBC Radio 4 - Chain Reaction, Series 9, Frankie Boyle talks to Grant Morrison",
		"time": "2014-01-21T10:20:28Z",
		"href": "http://www.bbc.co.uk/programmes/b03nt8bk"
	},
	{
		"cluster": 18,
		"tags": [
			"Scala",
			"actor",
			"design",
			"software",
			"engineering",
			"distributed",
			"systems",
			"actors",
			"telldontask",
			"pocket-read"
		],
		"y": 4.261396875529498,
		"x": -1.4488335419361698,
		"extended": "",
		"description": "Ask, Tell and Per-request Actors",
		"time": "2014-01-21T08:53:41Z",
		"href": "http://techblog.net-a-porter.com/2013/12/ask-tell-and-per-request-actors/"
	},
	{
		"cluster": 2,
		"tags": [
			"osx",
			"homebrew",
			"python",
			"pylab",
			"matplotlib",
			"numpy",
			"scipy",
			"scientific",
			"ipython",
			"install"
		],
		"y": -5.2420155942624405,
		"x": -3.2170337055583422,
		"extended": "",
		"description": "Installing scientific Python on Mac OS X | Lowin Data Company",
		"time": "2014-01-20T16:44:59Z",
		"href": "http://www.lowindata.com/2013/installing-scientific-python-on-mac-os-x/"
	},
	{
		"cluster": 11,
		"tags": [
			"mac",
			"keyboard",
			"layout",
			"uk",
			"windows"
		],
		"y": -1.2556858121963854,
		"x": 5.778417622747254,
		"extended": "",
		"description": "Using a British/UK Windows keyboard with an Apple Mac in OS X (3) (Phil Gyford’s website)",
		"time": "2014-01-20T12:23:08Z",
		"href": "http://www.gyford.com/phil/writing/2005/11/20/using_a_british.php"
	},
	{
		"cluster": 3,
		"tags": [
			"work",
			"labour",
			"culture",
			"politics",
			"love",
			"privilege",
			"socialism",
			"capitalism",
			"criticism",
			"society",
			"pocket-read"
		],
		"y": 2.2759193772001947,
		"x": 11.10043942845914,
		"extended": "",
		"description": "In the Name of Love",
		"time": "2014-01-19T22:32:05Z",
		"href": "https://www.jacobinmag.com/2014/01/in-the-name-of-love/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"ecology",
			"environment",
			"socialism",
			"pocket-read"
		],
		"y": 7.118196126387523,
		"x": 8.846666397275275,
		"extended": "",
		"description": "Toward Cyborg Socialism",
		"time": "2014-01-19T22:25:10Z",
		"href": "https://www.jacobinmag.com/2014/01/toward-cyborg-socialism/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"environment",
			"ecology",
			"employment",
			"fullemployment",
			"green",
			"full",
			"greenfullemployment"
		],
		"y": 6.167775326059432,
		"x": 10.374870928433202,
		"extended": "",
		"description": "Steve Dawe: Full Employment in a Green Society",
		"time": "2014-01-19T17:07:03Z",
		"href": "http://www.socresonline.org.uk/17/4/8.html"
	},
	{
		"cluster": 1,
		"tags": [
			"bytebeat",
			"music",
			"generative",
			"art",
			"programming",
			"chiptune"
		],
		"y": -11.466978827464983,
		"x": -1.9941939016323902,
		"extended": "",
		"description": "countercomplex: Some deep analysis of one-line music programs.",
		"time": "2014-01-19T16:36:28Z",
		"href": "http://countercomplex.blogspot.co.uk/2011/10/some-deep-analysis-of-one-line-music.html?m=1"
	},
	{
		"cluster": 1,
		"tags": [
			"bytebeat",
			"music",
			"generative",
			"art",
			"programming",
			"chiptune"
		],
		"y": -11.47456108833926,
		"x": -2.0075123994377226,
		"extended": "<blockquote>main(t){for(t=0;;t++)putchar(t*(((t>>12)|(t>>8))&(63&(t>>4))));}</blockquote>",
		"description": "countercomplex: Algorithmic symphonies from one line of code -- how and why?",
		"time": "2014-01-19T16:18:34Z",
		"href": "http://countercomplex.blogspot.se/2011/10/algorithmic-symphonies-from-one-line-of.html?m=1"
	},
	{
		"cluster": 1,
		"tags": [
			"bytebeat",
			"music",
			"generative",
			"art",
			"programming",
			"chiptune"
		],
		"y": -11.4668225394256,
		"x": -1.9942272236492027,
		"extended": "",
		"description": "Bytebeat — Kragen",
		"time": "2014-01-19T16:18:24Z",
		"href": "http://canonical.org/~kragen/bytebeat/"
	},
	{
		"cluster": 17,
		"tags": [
			"nixos",
			"configuration",
			"management",
			"operatingsystem",
			"packagemanagement",
			"package",
			"functional",
			"programming"
		],
		"y": 2.393191513787946,
		"x": -7.025285102940234,
		"extended": "<blockquote>NixOS, a purely\n                                      functional GNU/Linux distribution</blockquote>",
		"description": "About NixOS",
		"time": "2014-01-18T21:32:47Z",
		"href": "http://nixos.org/nixos/"
	},
	{
		"cluster": 13,
		"tags": [
			"banking",
			"politics",
			"economics"
		],
		"y": 8.438621183681455,
		"x": 8.88233104472282,
		"extended": "",
		"description": "Labour promised fireworks but delivered another damp squib | alittleecon",
		"time": "2014-01-18T21:16:15Z",
		"href": "http://alittleecon.wordpress.com/2014/01/17/labour-promised-fireworks-but-delivered-another-damp-squib/"
	},
	{
		"cluster": 15,
		"tags": [
			"deeplearning",
			"deep",
			"learning",
			"neural",
			"networks",
			"machinelearning",
			"machine",
			"computerscience",
			"computer",
			"science"
		],
		"y": -0.8223152243381583,
		"x": -5.476000661290431,
		"extended": "",
		"description": "Expect Labs",
		"time": "2014-01-18T21:13:23Z",
		"href": "http://blog.expectlabs.com/post/60758296455/a-deep-dive-into-deep-learning"
	},
	{
		"cluster": 15,
		"tags": [
			"deeplearning",
			"deep",
			"learning",
			"neural",
			"networks",
			"machinelearning",
			"machine",
			"computerscience",
			"computer",
			"science"
		],
		"y": -0.8328739788696402,
		"x": -5.4649075023562785,
		"extended": "",
		"description": "Expect Labs",
		"time": "2014-01-18T21:11:37Z",
		"href": "http://blog.expectlabs.com/post/73522199580/how-does-deep-learning-work"
	},
	{
		"cluster": 16,
		"tags": [
			"earth",
			"maps",
			"javascript",
			"data",
			"visualisation",
			"mapping"
		],
		"y": -2.2045314069950046,
		"x": -0.10941703613569058,
		"extended": "<blockquote>Free and open source 3D digital globe for web and mobile devices. Displays Open Street Map tiles (OSM), Bing Maps tiles and also custom map tiles generated by MapTiler or similar software.</blockquote>",
		"description": "JavaScript API - WebGL Earth - open source 3D digital globe written in JavaScript",
		"time": "2014-01-16T16:58:10Z",
		"href": "http://www.webglearth.org/api"
	},
	{
		"cluster": 10,
		"tags": [
			"environment",
			"society",
			"technology",
			"cleantech",
			"politics",
			"pocket-read"
		],
		"y": 2.7006089719496242,
		"x": 12.990706968847956,
		"extended": "",
		"description": "Our technical reality: how cleantech and the internet will bring us the third industrial revolution | limpidusdotorg",
		"time": "2014-01-13T12:39:10Z",
		"href": "http://limpidus.org/2014/01/04/our-technical-reality-how-cleantech-and-the-internet-will-bring-us-the-third-industrial-revolution/"
	},
	{
		"cluster": 10,
		"tags": [
			"greens",
			"politics",
			"socialism",
			"environmentalism",
			"marx"
		],
		"y": 2.862979556157229,
		"x": 10.097681866693799,
		"extended": "",
		"description": "A Very Public Sociologist: Are the Greens Progressive?",
		"time": "2014-01-13T00:30:20Z",
		"href": "http://averypublicsociologist.blogspot.co.uk/2014/01/are-greens-progressive.html?m=1"
	},
	{
		"cluster": 2,
		"tags": [
			"postcode",
			"postcodes",
			"geo",
			"gis",
			"vector",
			"polygon",
			"voronoi",
			"thiessen",
			"area"
		],
		"y": -2.733303225781175,
		"x": 5.496495353812319,
		"extended": "<blockquote>ShareGeo Open is a site for sharing and re-using geospatial datasets.</blockquote>",
		"description": "GB Postcode Areas",
		"time": "2014-01-10T12:21:44Z",
		"href": "http://www.sharegeo.ac.uk/handle/10672/51?show=full"
	},
	{
		"cluster": 15,
		"tags": [
			"vector",
			"calculus",
			"lecturenotes",
			"mit",
			"mathematics"
		],
		"y": -8.787322780685964,
		"x": -4.398504859123823,
		"extended": "",
		"description": "Lecture Notes | Calculus of Several Variables | Mathematics | MIT OpenCourseWare",
		"time": "2014-01-09T10:29:13Z",
		"href": "http://ocw.mit.edu/courses/mathematics/18-022-calculus-of-several-variables-fall-2010/lecture-notes/"
	},
	{
		"cluster": 15,
		"tags": [
			"vector",
			"calculus",
			"book",
			"education",
			"mathematics"
		],
		"y": -8.746556056352922,
		"x": -4.501582298966435,
		"extended": "<blockquote>Michael Corral</blockquote>",
		"description": "mecmath",
		"time": "2014-01-09T10:08:23Z",
		"href": "http://www.mecmath.net/"
	},
	{
		"cluster": 10,
		"tags": [
			"science",
			"politics",
			"drama",
			"criticism",
			"Brecht",
			"Galileo",
			"marxism",
			"society"
		],
		"y": 3.048843324683745,
		"x": 12.151439368800874,
		"extended": "",
		"description": "New Left Project | Articles | A Life of Galileo: What Brecht can teach us about the public ownership of science",
		"time": "2014-01-08T10:51:19Z",
		"href": "http://www.newleftproject.org/index.php/site/article_comments/a_life_of_galileo"
	},
	{
		"cluster": 2,
		"tags": [
			"valve",
			"business",
			"development",
			"company",
			"values",
			"employment",
			"ethics",
			"flat",
			"heirarchy"
		],
		"y": 8.787275013461313,
		"x": -0.7491909023797119,
		"extended": "",
		"description": "Gabe Newell on what makes Valve tick",
		"time": "2014-01-08T10:06:52Z",
		"href": "http://www.washingtonpost.com/blogs/the-switch/wp/2014/01/03/gabe-newell-on-what-makes-valve-tick/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"marxism",
			"crisis",
			"socialism",
			"criticism",
			"capital",
			"capitalism",
			"co-operatives",
			"economics",
			"revolution"
		],
		"y": 4.2503878744138195,
		"x": 11.35293137923552,
		"extended": "",
		"description": "Clarifying the Crisis | Jacobin",
		"time": "2014-01-04T21:08:03Z",
		"href": "https://www.jacobinmag.com/2014/01/clarifying-the-crisis/"
	},
	{
		"cluster": 4,
		"tags": [
			"rack",
			"web",
			"dsl",
			"haskell",
			"do",
			"notation",
			"wai",
			"path",
			"matching",
			"functional",
			"programming"
		],
		"y": -4.953742664176168,
		"x": -7.607303070372172,
		"extended": "",
		"description": "(Ab)using do notation for a Wai DSL - harry.garrood",
		"time": "2014-01-04T20:33:50Z",
		"href": "http://harry.garrood.me/blog/abusing-do-notation/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"functional",
			"dependency",
			"types",
			"computerscience",
			"fundep"
		],
		"y": -6.315424647636393,
		"x": -10.582171457755017,
		"extended": "<blockquote>\n</blockquote>",
		"description": "Functional dependencies - HaskellWiki",
		"time": "2014-01-04T20:14:43Z",
		"href": "http://www.haskell.org/haskellwiki/Functional_dependencies"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"power",
			"significance",
			"introduction",
			"testing",
			"hypothesis",
			"visualisation",
			"science",
			"scientific",
			"method",
			"experimentation",
			"experiment",
			"design"
		],
		"y": -3.598081589205025,
		"x": -0.656381145360565,
		"extended": "",
		"description": "Running an Experiment",
		"time": "2014-01-04T14:20:38Z",
		"href": "http://bandits.mynaweb.com/hypothesis-testing/running.html"
	},
	{
		"cluster": 2,
		"tags": [
			"house",
			"sofa",
			"leather",
			"repair",
			"upholstry"
		],
		"y": -2.340759518205017,
		"x": 4.7122347381740015,
		"extended": "<blockquote>Upholstery Express for fast, inexpensive, money saving reupholstery, re-upholstery, office seating repairs, refurbishment, renovation, saving money and extending the life of assets.</blockquote>",
		"description": "Upholstery Express fast high quality reupholstery, re-upholstery, repair and refurbishment services for chairs and seating, Farnborough, London, Woking, Guildford, Slough, Basingstoke - Upholstery Express fast high quality reupholstery, re-upholstery",
		"time": "2014-01-04T13:23:28Z",
		"href": "http://www.upholsteryexpress.co.uk/"
	},
	{
		"cluster": 14,
		"tags": [
			"netflix",
			"genre",
			"taxonomy",
			"ux",
			"ia",
			"information",
			"design",
			"architecture",
			"recsys",
			"machinelearning",
			"feature",
			"engineering",
			"bias",
			"serendipity"
		],
		"y": -0.8928300365782548,
		"x": 0.1542963752090293,
		"extended": "",
		"description": "How Netflix Reverse Engineered Hollywood - Alexis C. Madrigal - The Atlantic",
		"time": "2014-01-03T13:49:40Z",
		"href": "http://www.theatlantic.com/technology/archive/2014/01/how-netflix-reverse-engineered-hollywood/282679/"
	},
	{
		"cluster": 18,
		"tags": [
			"distributed",
			"systems",
			"book",
			"ebook",
			"primer",
			"architecture",
			"engineering",
			"software",
			"CAP",
			"computerscience"
		],
		"y": 1.6050118162287643,
		"x": -1.0075232092834099,
		"extended": "",
		"description": "Distributed systems for fun and profit",
		"time": "2014-01-03T13:18:53Z",
		"href": "http://book.mixu.net/distsys/"
	},
	{
		"cluster": 2,
		"tags": [
			"ethical",
			"investment",
			"savings",
			"pensions",
			"sri"
		],
		"y": 2.9211588097648185,
		"x": 5.134332717320505,
		"extended": "<blockquote>Gaeia bring 20 years expertise as UK independent financial advisers, helping our clients invest ethically yet wisely</blockquote>",
		"description": "Ethical Financial Advice | Socially Responsible Investments | Gaeia",
		"time": "2014-01-03T12:03:32Z",
		"href": "http://gaeia.com/"
	},
	{
		"cluster": 2,
		"tags": [
			"pensions",
			"investment",
			"ethical",
			"sri",
			"SIPP"
		],
		"y": 2.911802369456955,
		"x": 5.132838801658006,
		"extended": "<blockquote>Self-Invested Personal Pensions ethical investment, investors</blockquote>",
		"description": "Self-Invested Personal Pensions - Provided by Ethical Investors",
		"time": "2014-01-03T11:48:21Z",
		"href": "http://www.ethicalinvestors.co.uk/pensionssite.php?p=sipps"
	},
	{
		"cluster": 2,
		"tags": [
			"savings",
			"investment",
			"triodos",
			"ethical",
			"banking",
			"sustainable",
			"SRI",
			"socially",
			"responsible"
		],
		"y": 2.939707244157868,
		"x": 5.13441081710765,
		"extended": "<blockquote>Personal ethical savings accounts from Triodos Bank</blockquote>",
		"description": "Personal ethical savings accounts from ethical and sustainable Triodos Bank - Triodos Bank | Triodos Bank",
		"time": "2014-01-03T09:33:46Z",
		"href": "http://www.triodos.co.uk/en/personal/savings-overview/"
	},
	{
		"cluster": 7,
		"tags": [
			"activerecord",
			"design",
			"rails",
			"refactoring",
			"ruby",
			"oop",
			"programming",
			"patterns",
			"object",
			"oriented"
		],
		"y": 9.719831163574364,
		"x": -9.639418443306676,
		"extended": "",
		"description": "7 Patterns to Refactor Fat ActiveRecord Models - Code Climate Blog",
		"time": "2014-01-02T16:41:51Z",
		"href": "http://blog.codeclimate.com/blog/2012/10/17/7-ways-to-decompose-fat-activerecord-models/"
	},
	{
		"cluster": 18,
		"tags": [
			"programming",
			"scala",
			"finagle",
			"thrift",
			"distributed",
			"systems",
			"soa",
			"architecture",
			"service",
			"oriented",
			"software",
			"engineering"
		],
		"y": 4.683508674029513,
		"x": -2.115345269137154,
		"extended": "<blockquote>j</blockquote>",
		"description": "Scala School - Searchbird",
		"time": "2014-01-02T13:40:08Z",
		"href": "http://twitter.github.io/scala_school/searchbird.html#fn1"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"policy",
			"creativity",
			"happiness"
		],
		"y": 5.88254969665664,
		"x": 11.677422652525387,
		"extended": "",
		"description": "Coppola Comment: The Twelfth Commandment",
		"time": "2014-01-02T11:57:01Z",
		"href": "http://coppolacomment.blogspot.co.uk/2014/01/the-twelfth-commandment.html"
	},
	{
		"cluster": 10,
		"tags": [
			"copyright",
			"politics",
			"liberty",
			"creativity",
			"libertarianism",
			"society",
			"aynrand",
			"critique"
		],
		"y": 2.498616105630252,
		"x": 12.181025783808074,
		"extended": "<blockquote>Ideas are the natural wealth of humans. But they are only valuable when they are  shared, not owned.</blockquote>",
		"description": "The death of John Galt",
		"time": "2014-01-02T11:56:00Z",
		"href": "http://www.pieria.co.uk/articles/the_death_of_john_galt"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"logic",
			"prolog",
			"ruby",
			"unification",
			"nondeterminism",
			"rules",
			"computerscience"
		],
		"y": 3.4209800189467816,
		"x": -11.369394120349925,
		"extended": "",
		"description": "mrb: A Taste of Logic Programming In Ruby",
		"time": "2014-01-02T11:41:15Z",
		"href": "http://michaelrbernste.in/2014/01/01/a-taste-of-logic-programming-in-ruby.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"k-means",
			"computerscience",
			"machinelearning",
			"whisky",
			"scotch",
			"clustering",
			"analysis"
		],
		"y": -2.057815009407842,
		"x": -5.030662009466619,
		"extended": "<blockquote>by Luba Gloukhov The first time I had an Islay single malt, my mind was blown. In my first foray into the world of whiskies, I took the plunge into the smokiest, peatiest beast of them all — Laphroig. That same night, dreams of owning a smoker were replaced by the desire to roam the landscape of smoky single malts. As an Islay fan, I wanted to investigate whether distilleries within a given region do in fact share taste characteristics. For this, I used a dataset profiling 86 distilleries based on 12 flavor categories. The data was obtained from https://www.mathstat.strath.ac.uk/outreach/nessie/nessie_whisky.html....</blockquote>",
		"description": "K-means Clustering 86 Single Malt Scotch Whiskies",
		"time": "2014-01-02T08:48:22Z",
		"href": "http://blog.revolutionanalytics.com/2013/12/k-means-clustering-86-single-malt-scotch-whiskies.html"
	},
	{
		"cluster": 2,
		"tags": [
			"architecture",
			"scaling",
			"capacity",
			"planning",
			"lead",
			"testing",
			"pocket-read"
		],
		"y": 0.052131287920070275,
		"x": -0.1689809663229213,
		"extended": "",
		"description": "How to get started with sizing and capacity planning, assuming you don't know the software behavior?",
		"time": "2014-01-02T00:30:37Z",
		"href": "http://highscalability.com/blog/2013/12/18/how-to-get-started-with-sizing-and-capacity-planning-assumin.html"
	},
	{
		"cluster": 7,
		"tags": [
			"almost",
			"sinatra",
			"ruby",
			"programming",
			"obfuscation",
			"pocket-read"
		],
		"y": 5.26328237512921,
		"x": -10.208951108303072,
		"extended": "",
		"description": "Decoding \"Almost Sinatra\"",
		"time": "2014-01-02T00:26:59Z",
		"href": "http://robm.me.uk/2013/12/13/decoding-almost-sinatra.html"
	},
	{
		"cluster": 13,
		"tags": [
			"prediction",
			"economics",
			"forecasting",
			"statistics",
			"finance"
		],
		"y": 8.851593639601525,
		"x": 6.57813407576653,
		"extended": "",
		"description": "Investors Chronicle - Why we can't predict",
		"time": "2014-01-01T19:13:18Z",
		"href": "http://www.investorschronicle.co.uk/2013/09/03/comment/chris-dillow/why-we-can-t-predict-CBw6Z40EZFbzw09qOKBRyK/article.html"
	},
	{
		"cluster": 16,
		"tags": [
			"finance",
			"market",
			"data",
			"source",
			"api"
		],
		"y": -0.3500788409418349,
		"x": 4.087586411903762,
		"extended": "",
		"description": "finance - What data sources are available online? - Quantitative Finance Stack Exchange",
		"time": "2014-01-01T19:10:53Z",
		"href": "http://quant.stackexchange.com/questions/141/what-data-sources-are-available-online"
	},
	{
		"cluster": 16,
		"tags": [
			"Scipy",
			"Python",
			"pandas",
			"statistics",
			"programming",
			"anova",
			"bootstrap",
			"data",
			"analysis",
			"pocket-read"
		],
		"y": -4.76676110407964,
		"x": -1.952342159346096,
		"extended": "\n",
		"description": "Statistical analysis made easy in Python with SciPy and pandas DataFrames",
		"time": "2014-01-01T15:53:49Z",
		"href": "http://www.randalolson.com/2012/08/06/statistical-analysis-made-easy-in-python/"
	},
	{
		"cluster": 2,
		"tags": [
			"cleanweb",
			"funding",
			"startup",
			"business",
			"social",
			"enterprise",
			"socialenterprise"
		],
		"y": 5.843502863669582,
		"x": 5.813494981162396,
		"extended": "<blockquote>Loco2 co-founder Jamie Andrews gives a lightning talk on running a cleanweb startup, and why traditional funding approaches may not be the best fit.</blockquote>",
		"description": "▶ Cleanweb December 2013 - Jamie Andrews - Is a cleanweb startup a social enterpise? - YouTube",
		"time": "2013-12-31T19:13:15Z",
		"href": "https://www.youtube.com/watch?v=B53Kdg7HIDM"
	},
	{
		"cluster": 16,
		"tags": [
			"ucr-dtw",
			"dtw",
			"dynamic",
			"time",
			"warping",
			"timewarping",
			"timeseries",
			"search",
			"retrieval",
			"similarity",
			"data",
			"sequence",
			"mathematics",
			"computerscience",
			"analysis",
			"pocket-read"
		],
		"y": -1.800804645297031,
		"x": -11.161262065615396,
		"extended": "",
		"description": "Mining Time-series with Trillions of Points: Dynamic Time Warping at scale",
		"time": "2013-12-30T17:25:35Z",
		"href": "http://practicalquant.blogspot.co.uk/2012/10/mining-time-series-with-trillions-of.html"
	},
	{
		"cluster": 17,
		"tags": [
			"ducktyping",
			"structuraltyping",
			"computerscience",
			"programming",
			"types",
			"scala"
		],
		"y": 1.1941744664515763,
		"x": -9.395441038792896,
		"extended": "",
		"description": "Dynamics of Programming: Duck Typing vs. Structural Typing",
		"time": "2013-12-30T08:33:54Z",
		"href": "http://dynamicsofprogramming.blogspot.de/2013/12/duck-typing-vs-structural-typing.html"
	},
	{
		"cluster": 17,
		"tags": [
			"visitor",
			"pattern",
			"programming",
			"functional",
			"objectoriented",
			"computerscience",
			"mutability",
			"scala",
			"java",
			"falgebra",
			"monad",
			"algebraic",
			"datatype",
			"adt"
		],
		"y": -3.980301975758758,
		"x": -10.007709109429413,
		"extended": "",
		"description": "logji: Correcting the Visitor pattern.",
		"time": "2013-12-30T08:28:19Z",
		"href": "http://logji.blogspot.co.uk/2012/02/correcting-visitor-pattern.html"
	},
	{
		"cluster": 9,
		"tags": [
			"raspberrypi",
			"linux",
			"weather",
			"python"
		],
		"y": -5.057213195990546,
		"x": 5.243850617783029,
		"extended": "<blockquote>INSTALLING A USB WEATHER STATION ON A RASPBERRY PI PART 1</blockquote>",
		"description": "Installing a USB Weather Station on a Raspberry PI Part 1 | Peter Mount's Blog",
		"time": "2013-12-30T08:02:01Z",
		"href": "http://blog.retep.org/2012/07/30/installing-a-usb-weather-station-on-a-raspberry-pi-part-1/"
	},
	{
		"cluster": 9,
		"tags": [
			"raspberrypi",
			"linux",
			"python",
			"weather"
		],
		"y": -4.950290457092843,
		"x": 5.246913498669689,
		"extended": "",
		"description": "Installing a USB Weather Station on a Raspberry PI part 2 | Peter Mount's Blog",
		"time": "2013-12-30T08:01:47Z",
		"href": "http://blog.retep.org/2012/09/01/installing-a-usb-weather-station-on-a-raspberry-pi-part-2/"
	},
	{
		"cluster": 10,
		"tags": [
			"empathy",
			"gratitude",
			"politics",
			"society",
			"family"
		],
		"y": 2.6903505442229374,
		"x": 12.26355003443077,
		"extended": "",
		"description": "How do we encourage empathy? | mathbabe",
		"time": "2013-12-28T18:26:26Z",
		"href": "http://mathbabe.org/2013/12/26/how-do-we-encourage-empathy/"
	},
	{
		"cluster": 13,
		"tags": [
			"sociology",
			"economics",
			"networks",
			"graphtheory",
			"research",
			"social",
			"network",
			"analysis"
		],
		"y": 7.358550749517525,
		"x": 6.581472419848099,
		"extended": "",
		"description": "Tim Harford — Article — It’s who you hardly know that counts",
		"time": "2013-12-28T18:24:28Z",
		"href": "http://timharford.com/2013/12/its-who-you-hardly-know-that-counts/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"unemployment",
			"economics",
			"power",
			"employment"
		],
		"y": 8.72777210591965,
		"x": 8.797235428550799,
		"extended": "",
		"description": "The Fear Economy - NYTimes.com",
		"time": "2013-12-28T18:22:30Z",
		"href": "http://www.nytimes.com/2013/12/27/opinion/krugman-the-fear-economy.html?partner=rssnyt&emc=rss&_r=1&"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"gibbs",
			"sampling",
			"computerscience",
			"statatistics",
			"mcmc",
			"markovchain",
			"montecarlo"
		],
		"y": 3.388723471170817,
		"x": -13.456165955514646,
		"extended": "",
		"description": "A functional Gibbs sampler in Scala | Darren Wilkinson's research blog",
		"time": "2013-12-26T11:29:35Z",
		"href": "http://darrenjw.wordpress.com/2013/10/04/a-functional-gibbs-sampler-in-scala/?relatedposts_exclude=1355"
	},
	{
		"cluster": 5,
		"tags": [
			"gibbs",
			"sampling",
			"mcmc",
			"markovchain",
			"montecarlo",
			"computerscience",
			"statistics",
			"simulation",
			"comparison",
			"programming"
		],
		"y": 3.381874355381745,
		"x": -13.463104490768197,
		"extended": "<blockquote> at 16:03 and is filed under Uncategorized. You can follow any responses to this entry through the RSS 2.0 feed. You can leave a </blockquote>",
		"description": "Gibbs sampler in various languages (revisited) | Darren Wilkinson's research blog",
		"time": "2013-12-26T11:27:03Z",
		"href": "http://darrenjw.wordpress.com/2011/07/16/gibbs-sampler-in-various-languages-revisited/"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"play",
			"slick",
			"programming",
			"web",
			"development",
			"database"
		],
		"y": 7.20223688585233,
		"x": -1.8739728701279124,
		"extended": "<blockquote>s</blockquote>",
		"description": "Lunatech Blog: Using Play framework database evolutions with Slick",
		"time": "2013-12-25T10:08:07Z",
		"href": "http://blog.lunatech.com/2013/08/29/play-slick-evolutions"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"play",
			"slick",
			"programming",
			"web",
			"development",
			"database"
		],
		"y": 7.2037666784657555,
		"x": -1.9160348438700012,
		"extended": "",
		"description": "Lunatech Blog: Getting started with Play and Slick",
		"time": "2013-12-25T10:07:50Z",
		"href": "http://blog.lunatech.com/2013/08/08/play-slick-getting-started"
	},
	{
		"cluster": 16,
		"tags": [
			"scala",
			"scientific",
			"statistical",
			"computing",
			"data",
			"analysis"
		],
		"y": -2.307523158261192,
		"x": -1.6149149934857066,
		"extended": "",
		"description": "Scala as a platform for statistical computing and data science | Darren Wilkinson's research blog",
		"time": "2013-12-24T14:37:38Z",
		"href": "http://darrenjw.wordpress.com/2013/12/23/scala-as-a-platform-for-statistical-computing-and-data-science/"
	},
	{
		"cluster": 16,
		"tags": [
			"health",
			"data",
			"reidentification",
			"privacy",
			"analytics",
			"medical",
			"statistics",
			"anonymisation"
		],
		"y": -3.280826671163636,
		"x": -1.207817017560693,
		"extended": "",
		"description": "Do we have to worry about re-identification attacks upon our health data? - Strata",
		"time": "2013-12-19T17:55:42Z",
		"href": "http://strata.oreilly.com/2013/08/do_we_have_to_worry_about_re-identification_attacks.html"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"anonymisation",
			"pseudonymisation",
			"privacy",
			"analysis"
		],
		"y": -2.6860481452983285,
		"x": -1.0614026434522683,
		"extended": "",
		"description": "Big and Small Data Anonymisation | NCC Group",
		"time": "2013-12-19T17:51:34Z",
		"href": "http://www.nccgroup.com/en/blog/2013/07/big-and-small-data-anonymisation/"
	},
	{
		"cluster": 16,
		"tags": [
			"healthcare",
			"data",
			"costs",
			"statistics",
			"medical",
			"predictive",
			"analytics"
		],
		"y": -3.3166292596405262,
		"x": -1.5676827781009637,
		"extended": "",
		"description": "The Next “Top 5%”: Identifying patients for additional care through micro-segmentation - Strata",
		"time": "2013-12-19T17:26:53Z",
		"href": "http://strata.oreilly.com/2013/08/the-next-top-5-identifying-patients-for-additional-care-through-micro-segmentation-2.html"
	},
	{
		"cluster": 16,
		"tags": [
			"blogging",
			"data",
			"writing",
			"analysis",
			"visualisation",
			"research",
			"communication",
			"okcupid"
		],
		"y": -2.5744603851263648,
		"x": -0.5746493232780101,
		"extended": "",
		"description": "OkCupid: How important was blogging to OkCupid's success? - Quora",
		"time": "2013-12-18T14:40:25Z",
		"href": "http://www.quora.com/OkCupid/How-important-was-blogging-to-OkCupids-success"
	},
	{
		"cluster": 2,
		"tags": [
			"hsl",
			"hsv",
			"color",
			"picker",
			"colour",
			"scheme",
			"colourscheme",
			"converter"
		],
		"y": -3.0446987222306614,
		"x": 4.931161066419955,
		"extended": "",
		"description": "yaflaColor RGB - HSL Color Conversion",
		"time": "2013-12-18T12:37:13Z",
		"href": "http://colours.yafla.com/"
	},
	{
		"cluster": 16,
		"tags": [
			"datavis",
			"consulting",
			"data",
			"visualisation",
			"analytics",
			"analysis",
			"science",
			"business",
			"freelance"
		],
		"y": -2.660039334350485,
		"x": -0.8961464916129201,
		"extended": "",
		"description": "Ghostweather R&D Blog: Data Vis Consulting: Advice for Newbies",
		"time": "2013-12-18T12:23:29Z",
		"href": "http://blogger.ghostweather.com/2013/11/data-vis-consulting-advice-for-newbies.html"
	},
	{
		"cluster": 5,
		"tags": [
			"bayesdb",
			"bayesian",
			"database",
			"db",
			"stats",
			"inference",
			"prediction",
			"language",
			"analysis",
			"analytics",
			"machinelearning",
			"computerscience",
			"pocket-read"
		],
		"y": -1.8833253603530655,
		"x": -3.8053000402393073,
		"extended": "",
		"description": "BayesDB",
		"time": "2013-12-17T09:49:27Z",
		"href": "http://probcomp.csail.mit.edu/bayesdb/"
	},
	{
		"cluster": 2,
		"tags": [
			"ethical",
			"investing",
			"isa",
			"finance",
			"savings",
			"green",
			"ecology",
			"environment",
			"buildingsociety"
		],
		"y": 3.102426298826621,
		"x": 5.162436123435049,
		"extended": "",
		"description": "Foundations Cash ISA - Ecology Building Society",
		"time": "2013-12-17T09:02:02Z",
		"href": "http://www.ecology.co.uk/savings/foundations-cash-isa/"
	},
	{
		"cluster": 13,
		"tags": [
			"ecology",
			"finanance",
			"investing",
			"ethics",
			"economics",
			"permaculture",
			"steadystate"
		],
		"y": 7.866013393607215,
		"x": 7.713683427174235,
		"extended": "",
		"description": "The Heretic's Guide to Global Finance: Hacking the Future of Money: Seedbombing: Applying the Principles of Permaculture to Finance",
		"time": "2013-12-17T08:58:50Z",
		"href": "http://suitpossum.blogspot.co.uk/2013/12/seedbombing-applying-principles-of.html"
	},
	{
		"cluster": 2,
		"tags": [
			"investing",
			"debenture",
			"green",
			"energy",
			"solar",
			"power",
			"ecology",
			"finance",
			"investment",
			"renewable",
			"funding"
		],
		"y": 3.2989503061951986,
		"x": 5.196137424166623,
		"extended": "",
		"description": "Crowdfunding renewable energy investments – green, ethical, social",
		"time": "2013-12-17T08:57:03Z",
		"href": "https://www.abundancegeneration.com/"
	},
	{
		"cluster": 17,
		"tags": [
			"static",
			"analysis",
			"code",
			"complexity",
			"programming",
			"cyclomatic",
			"pocket-read"
		],
		"y": 3.7432393170747478,
		"x": -7.394576827497033,
		"extended": "",
		"description": "The Roots of Static Analysis",
		"time": "2013-12-16T08:35:09Z",
		"href": "http://blog.codeclimate.com/blog/2013/12/12/the-roots-of-static-analysis/"
	},
	{
		"cluster": 16,
		"tags": [
			"pca",
			"datascience",
			"data",
			"analysis",
			"linear",
			"methods",
			"twitter",
			"MachineLearning",
			"pocket-read"
		],
		"y": -1.959418785181672,
		"x": -1.3629619075315107,
		"extended": "",
		"description": "PCA Is Not a Panacea",
		"time": "2013-12-16T08:32:18Z",
		"href": "http://danluu.com/linear-hammer/"
	},
	{
		"cluster": 16,
		"tags": [
			"streaming",
			"data",
			"mining",
			"analysis",
			"storm",
			"samza",
			"spark",
			"realtime",
			"pocket-read"
		],
		"y": -1.484268789336012,
		"x": -1.5631513525020453,
		"extended": "",
		"description": "Expanding options for mining streaming data",
		"time": "2013-12-16T08:09:24Z",
		"href": "http://strata.oreilly.com/2013/12/expanding-options-for-mining-streaming-data.html"
	},
	{
		"cluster": 16,
		"tags": [
			"statistics",
			"probability",
			"data",
			"data-analysis",
			"powerlaw",
			"power-law",
			"pocket-read"
		],
		"y": -2.744524330176451,
		"x": -1.6023961714293564,
		"extended": "",
		"description": "So You Think You Have a Power Law — Well Isn't That Special?",
		"time": "2013-12-16T08:06:55Z",
		"href": "http://vserver1.cscs.lsa.umich.edu/~crshalizi/weblog/491.html"
	},
	{
		"cluster": 17,
		"tags": [
			"javascript",
			"programming",
			"testing",
			"oop",
			"pocket-read"
		],
		"y": 3.7608688065884355,
		"x": -7.426691002275399,
		"extended": "",
		"description": "Developing Modular JavaScript Components",
		"time": "2013-12-15T23:53:23Z",
		"href": "http://www.infoq.com/articles/modular-javascript"
	},
	{
		"cluster": 2,
		"tags": [
			"atdd",
			"bdd",
			"tdd",
			"development",
			"project",
			"management",
			"acceptance",
			"testing",
			"requirements",
			"gathering",
			"pocket-read"
		],
		"y": 7.985616659177944,
		"x": -4.651776206401753,
		"extended": "",
		"description": "Articles",
		"time": "2013-12-15T23:41:10Z",
		"href": "http://www.informit.com/articles/article.aspx?p=1905549"
	},
	{
		"cluster": 2,
		"tags": [
			"python",
			"weather",
			"datascience",
			"forecasting",
			"ml",
			"machinelearning",
			"nlp",
			"text",
			"learning",
			"tokenization",
			"yhat",
			"kaggle",
			"scikit-learn",
			"pocket-read"
		],
		"y": -0.7278693225419101,
		"x": -3.570448065070413,
		"extended": "",
		"description": "Weather Forecasting with Twitter & Pandas",
		"time": "2013-12-15T16:05:20Z",
		"href": "http://blog.yhathq.com/posts/predict-weather-with-kaggle-twitter-emoticons-pandas.html"
	},
	{
		"cluster": 16,
		"tags": [
			"r",
			"statistics",
			"online",
			"learning",
			"interactive",
			"data",
			"analysis",
			"course"
		],
		"y": -2.7948653691917715,
		"x": -1.6304819441574707,
		"extended": "",
		"description": "DataMind Beta",
		"time": "2013-12-13T17:29:10Z",
		"href": "http://www.datamind.org/#/"
	},
	{
		"cluster": 10,
		"tags": [
			"austerity",
			"politics",
			"spending",
			"correlation",
			"statistics",
			"welfare",
			"debt",
			"deficit"
		],
		"y": 9.18428149985608,
		"x": 10.528680243918014,
		"extended": "",
		"description": "Tax Research UK » Austerity is a con: the failings of capitalism have been hijacked to attack social security",
		"time": "2013-12-13T17:25:52Z",
		"href": "http://www.taxresearch.org.uk/Blog/2013/12/13/austerity-is-a-con-the-failings-of-capitalism-have-been-hijacked-to-attack-social-security/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"svd",
			"linear",
			"algebra",
			"linearalgebra",
			"matrices",
			"matrix"
		],
		"y": 3.0464394159161436,
		"x": 1.4493380292360736,
		"extended": "<blockquote>This film about the matrix singular value decomposition was made in 1976 at the Los Alamos National Laboratory. Today the SVD is widely used in scientific an...</blockquote>",
		"description": "1976 Matrix Singular Value Decomposition Film - YouTube",
		"time": "2013-12-13T13:44:51Z",
		"href": "http://www.youtube.com/watch?v=R9UoFyqJca8"
	},
	{
		"cluster": 13,
		"tags": [
			"luck",
			"economics",
			"politics",
			"sharing",
			"socialism",
			"anthropology",
			"society"
		],
		"y": 3.82991759246338,
		"x": 11.876090286899977,
		"extended": "",
		"description": "Tim Harford — Article — Fairness is shared by our environment",
		"time": "2013-12-13T11:11:26Z",
		"href": "http://timharford.com/2013/12/fairness-is-shared-by-our-environment/"
	},
	{
		"cluster": 16,
		"tags": [
			"bigdata",
			"systems",
			"realtime",
			"scale",
			"nathanmarz",
			"distributed",
			"hadoop",
			"storm",
			"analysis",
			"querying",
			"persistence",
			"database"
		],
		"y": 0.3275005674389963,
		"x": -1.5613806820851555,
		"extended": "",
		"description": "Runaway complexity in Big Data... and a plan to stop it",
		"time": "2013-12-12T10:02:13Z",
		"href": "http://www.slideshare.net/nathanmarz/runaway-complexity-in-big-data-and-a-plan-to-stop-it"
	},
	{
		"cluster": 18,
		"tags": [
			"refactoring",
			"programming",
			"softwareengineering",
			"architecture",
			"design",
			"engineering",
			"software",
			"design-pattterns"
		],
		"y": 5.77729276897931,
		"x": -5.548857939077337,
		"extended": "",
		"description": "catalog",
		"time": "2013-12-11T15:50:37Z",
		"href": "http://refactoring.com/catalog/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"policy",
			"macro",
			"output",
			"gap",
			"outputgap",
			"debt",
			"deficit",
			"economy"
		],
		"y": 9.978626813339455,
		"x": 9.033667573477306,
		"extended": "",
		"description": "Recovery or Renewal? Cyclical, Structural & Secular Trends | ToUChstone blog: A public policy blog from the TUC",
		"time": "2013-12-11T12:26:23Z",
		"href": "http://touchstoneblog.org.uk/2013/12/recovery-or-renewal-cyclical-structural-secular-trends"
	},
	{
		"cluster": 17,
		"tags": [
			"colour",
			"memory",
			"index",
			"programming",
			"systems",
			"retrieval",
			"information"
		],
		"y": 4.451602960426732,
		"x": -5.767455917512439,
		"extended": "",
		"description": "Introducing Hobo",
		"time": "2013-12-11T11:59:55Z",
		"href": "http://www.chrisstucchio.com/blog/2012/introducing_hobo.html"
	},
	{
		"cluster": 2,
		"tags": [
			"intersectionality",
			"feminism",
			"privilige",
			"racism"
		],
		"y": 0.1387158054978421,
		"x": 6.847305808931331,
		"extended": "",
		"description": "no1curr, If you're white, don't call yourself an \"intersectional feminist\" and don't use \"intersectionality\" for white people",
		"time": "2013-12-10T10:09:35Z",
		"href": "http://theroguefeminist.tumblr.com/post/69108181677/if-youre-white-dont-call-yourself-an-intersectional"
	},
	{
		"cluster": 18,
		"tags": [
			"akka",
			"scraping",
			"scala",
			"distributed",
			"systems",
			"software",
			"engineering",
			"programming"
		],
		"y": 4.705306196684741,
		"x": -1.864649710497776,
		"extended": "",
		"description": "Start with Akka: Let's write a scraper - sap1ens blog",
		"time": "2013-12-08T20:22:59Z",
		"href": "http://sap1ens.com/blog/2013/12/04/start-with-akka-lets-write-a-scraper/"
	},
	{
		"cluster": 18,
		"tags": [
			"architecture",
			"java",
			"scala",
			"twitter",
			"jvm",
			"stack",
			"finagle",
			"thrift",
			"ostrich",
			"zipkin",
			"mesos",
			"zookeeper",
			"scalding",
			"distributed",
			"systems",
			"infrastructure",
			"engineering"
		],
		"y": 4.459694084836718,
		"x": -2.0755919537163243,
		"extended": "",
		"description": "The Twitter stack - Braindump",
		"time": "2013-12-08T19:42:19Z",
		"href": "http://blog.oskarsson.nu/post/40196324612/the-twitter-stack"
	},
	{
		"cluster": 18,
		"tags": [
			"enterprise",
			"integration",
			"patterns",
			"messaging",
			"engineering",
			"architecture",
			"distributed",
			"systems"
		],
		"y": 1.588562469336598,
		"x": -0.9288153245612567,
		"extended": "",
		"description": "Enterprise Integration Patterns - Table of Contents",
		"time": "2013-12-08T19:11:08Z",
		"href": "http://www.enterpriseintegrationpatterns.com/toc.html"
	},
	{
		"cluster": 18,
		"tags": [
			"patterns",
			"enterprise",
			"application",
			"architecture",
			"programming",
			"software",
			"engineering"
		],
		"y": 5.50127311055012,
		"x": -4.751662337691704,
		"extended": "",
		"description": "Catalog of Patterns of Enterprise Application Architecture",
		"time": "2013-12-08T19:10:42Z",
		"href": "http://martinfowler.com/eaaCatalog/"
	},
	{
		"cluster": 2,
		"tags": [
			"benchmark",
			"messaging",
			"activemq",
			"rabbitmq",
			"zeromq",
			"systems",
			"infrastructure",
			"message",
			"broker",
			"distributed"
		],
		"y": 0.16115715998388777,
		"x": 0.8603083303388512,
		"extended": "",
		"description": "A quick message queue benchmark: ActiveMQ, RabbitMQ, HornetQ, QPID, Apollo... - Muriel's Tech Blog",
		"time": "2013-12-08T19:05:34Z",
		"href": "http://x-aeon.com/wp/2013/04/10/a-quick-message-queue-benchmark-activemq-rabbitmq-hornetq-qpid-apollo/"
	},
	{
		"cluster": 18,
		"tags": [
			"systems",
			"programming",
			"architecture",
			"dataflow",
			"twitter",
			"reactive",
			"future",
			"scala",
			"distributed",
			"concurrent",
			"engineering",
			"software"
		],
		"y": 4.689141010555802,
		"x": -2.164005065886599,
		"extended": "",
		"description": "Systems Programming at Twitter",
		"time": "2013-12-08T18:29:44Z",
		"href": "http://monkey.org/~marius/talks/twittersystems/#1"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"promise",
			"future",
			"callback",
			"async",
			"programming",
			"functional",
			"combinators",
			"monad",
			"pocket-read"
		],
		"y": -1.7395661388883317,
		"x": -8.82987099094209,
		"extended": "",
		"description": "Futures and Promises",
		"time": "2013-12-08T16:59:16Z",
		"href": "http://docs.scala-lang.org/overviews/core/futures.html"
	},
	{
		"cluster": 17,
		"tags": [
			"java",
			"concurrency",
			"programming",
			"assembly",
			"hackernews",
			"atomic",
			"volatile",
			"optimization",
			"pocket-read"
		],
		"y": 3.906852140929439,
		"x": -7.608354673078042,
		"extended": "",
		"description": "Java's Atomic and volatile, under the hood on x86",
		"time": "2013-12-08T16:39:53Z",
		"href": "http://brooker.co.za/blog/2012/11/13/increment.html"
	},
	{
		"cluster": 18,
		"tags": [
			"scala",
			"eventsourcing",
			"software",
			"engineering",
			"computerscience",
			"programming",
			"akka",
			"pocket-read"
		],
		"y": 5.083943892779255,
		"x": -2.8140818539089936,
		"extended": "",
		"description": "Building an Event-Sourced Web Application - Part 2: Projections, Persistence, Consumers and Web Interface",
		"time": "2013-12-08T16:32:45Z",
		"href": "http://krasserm.blogspot.ch/2012/01/building-event-sourced-web-application.html"
	},
	{
		"cluster": 2,
		"tags": [
			"neo4j",
			"music",
			"graph",
			"database",
			"pocket-read"
		],
		"y": 2.117944292097295,
		"x": -0.38712351539954876,
		"extended": "",
		"description": "Fun with Music, Neo4j and Talend",
		"time": "2013-12-08T16:14:03Z",
		"href": "http://blog.neo4j.org/2013/07/fun-with-music-neo4j-and-talend.html"
	},
	{
		"cluster": 16,
		"tags": [
			"graph",
			"network",
			"data",
			"analysis",
			"visualisation",
			"distance",
			"extrinsic",
			"intrinsic",
			"geometry",
			"pocket-read"
		],
		"y": -2.29552655616542,
		"x": -0.7972723027733756,
		"extended": "",
		"description": "Graphs and networks",
		"time": "2013-12-08T16:10:30Z",
		"href": "http://shapeofdata.wordpress.com/2013/08/13/graphs-and-networks/"
	},
	{
		"cluster": 16,
		"tags": [
			"pca",
			"principal",
			"components",
			"analysis",
			"data",
			"visualisation",
			"dimensionality",
			"reduction",
			"pocket-read"
		],
		"y": -2.292693699862357,
		"x": -0.848668501176463,
		"extended": "",
		"description": "Visualization and Projection",
		"time": "2013-12-08T16:03:28Z",
		"href": "http://shapeofdata.wordpress.com/2013/04/16/visualization-and-projection/"
	},
	{
		"cluster": 18,
		"tags": [
			"scala",
			"akka",
			"distributed",
			"systems",
			"concurrency",
			"engineering",
			"architecture",
			"actors",
			"programming",
			"pocket-read"
		],
		"y": 4.528871932373509,
		"x": -1.551939964755628,
		"extended": "",
		"description": "Series: Akka at Conspire",
		"time": "2013-12-08T12:33:38Z",
		"href": "http://letitcrash.com/post/64938494682"
	},
	{
		"cluster": 18,
		"tags": [
			"apache",
			"kafka",
			"message",
			"broker",
			"pubsub",
			"distributed",
			"systems",
			"engineering",
			"architecture",
			"pocket-read"
		],
		"y": 1.2993939007998758,
		"x": -0.7044271753495449,
		"extended": "",
		"description": "How We Selected Apache Kafka on our Path to Real-time Data Ingestion",
		"time": "2013-12-08T11:39:54Z",
		"href": "http://engineering.richrelevance.com/how-we-selected-apache-kafka-on-our-path-to-real-time-data-ingestion/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"di",
			"dependency",
			"injection",
			"programming",
			"cake",
			"pattern",
			"pocket-read"
		],
		"y": 5.22860326853852,
		"x": -3.2934732752859497,
		"extended": "",
		"description": "Trait DI vs Constructor DI",
		"time": "2013-12-08T11:36:01Z",
		"href": "http://www.reddit.com/r/scala/comments/1s3l44/trait_di_vs_constructor_di/"
	},
	{
		"cluster": 17,
		"tags": [
			"actors",
			"futures",
			"state",
			"concurrency",
			"messaging",
			"distributed",
			"systems",
			"akka",
			"scala",
			"programming",
			"pocket-read"
		],
		"y": 4.560682784741843,
		"x": -1.522185203425771,
		"extended": "",
		"description": "Don't use Actors for concurrency",
		"time": "2013-12-07T15:35:39Z",
		"href": "http://www.chrisstucchio.com/blog/2013/actors_vs_futures.html"
	},
	{
		"cluster": 5,
		"tags": [
			"angy",
			"R",
			"statistics",
			"programming",
			"cheatsheet",
			"tutorial",
			"reference"
		],
		"y": 2.843349702370987,
		"x": -5.006390873457545,
		"extended": "",
		"description": "tdsmith/aRrgh",
		"time": "2013-12-07T14:36:03Z",
		"href": "https://github.com/tdsmith/aRrgh"
	},
	{
		"cluster": 15,
		"tags": [
			"cryptography",
			"mathematics",
			"security",
			"ellipticcurves",
			"publickey",
			"pocket-read"
		],
		"y": -7.435433013710216,
		"x": -3.4387741391470845,
		"extended": "",
		"description": "A (relatively easy to understand) primer on elliptic curve cryptography",
		"time": "2013-12-07T12:17:01Z",
		"href": "http://arstechnica.com/security/2013/10/a-relatively-easy-to-understand-primer-on-elliptic-curve-cryptography/?repost=yes"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"teaching",
			"education",
			"standards",
			"pedagogy",
			"pocket-read"
		],
		"y": -7.716925765969784,
		"x": -3.6407898881472422,
		"extended": "",
		"description": "Deconstructing the Common Core Mathematical Standard",
		"time": "2013-12-07T11:58:51Z",
		"href": "http://jeremykun.com/2013/11/04/deconstructing-the-common-core-mathematical-standard/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"technology",
			"culture",
			"society",
			"openness",
			"freedom",
			"libertatianism",
			"left",
			"socialism"
		],
		"y": 0.3464926706901401,
		"x": 12.652118017061799,
		"extended": "",
		"description": "Pocket : Cyberlibertarians’ Digital Deletion of the Left",
		"time": "2013-12-06T16:56:41Z",
		"href": "http://getpocket.com/a/read/494524976"
	},
	{
		"cluster": 17,
		"tags": [
			"oop",
			"fp",
			"expressionproblem",
			"expression",
			"programming",
			"objectoriented",
			"functional",
			"pocket-read"
		],
		"y": 3.6342902313962306,
		"x": -7.635032331109551,
		"extended": "",
		"description": "articles/from_oop_to_fp_-_inheritance_and_the_expression_problem.md at master · Dobiasd/articles",
		"time": "2013-12-03T09:30:33Z",
		"href": "https://github.com/Dobiasd/articles/blob/master/from_oop_to_fp_-_inheritance_and_the_expression_problem.md"
	},
	{
		"cluster": 16,
		"tags": [
			"samza",
			"storm",
			"stream",
			"processing",
			"data",
			"analysis",
			"distributed",
			"systems",
			"architecture"
		],
		"y": 0.5686178526386392,
		"x": -0.8152999162109491,
		"extended": "",
		"description": "Samza - Storm",
		"time": "2013-12-02T15:53:31Z",
		"href": "http://samza.incubator.apache.org/learn/documentation/0.7.0/comparisons/storm.html"
	},
	{
		"cluster": 16,
		"tags": [
			"apache",
			"samza",
			"kafka",
			"processing",
			"data",
			"stream",
			"messaging",
			"distributed",
			"systems",
			"persistence",
			"communication"
		],
		"y": 0.6645780218395114,
		"x": -0.6669935046851274,
		"extended": "",
		"description": "Samza",
		"time": "2013-12-02T15:50:07Z",
		"href": "http://samza.incubator.apache.org/"
	},
	{
		"cluster": 16,
		"tags": [
			"apache",
			"hadoop",
			"mapreduce",
			"yarn",
			"v2",
			"distrubuted",
			"systems",
			"data",
			"processing"
		],
		"y": -0.15357898111348162,
		"x": -1.2634855889036902,
		"extended": "",
		"description": "YARN",
		"time": "2013-12-02T15:48:36Z",
		"href": "http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/YARN.html"
	},
	{
		"cluster": 2,
		"tags": [
			"apache",
			"kafka",
			"message",
			"broker",
			"pubsub",
			"infrastructure",
			"persistence",
			"storage",
			"messaging",
			"queue",
			"communication",
			"distributed",
			"systems"
		],
		"y": 0.923547222362787,
		"x": -0.40534456922018713,
		"extended": "",
		"description": "Apache Kafka",
		"time": "2013-12-02T15:47:35Z",
		"href": "https://kafka.apache.org/documentation.html#introduction"
	},
	{
		"cluster": 4,
		"tags": [
			"collatz",
			"haskell",
			"numerical",
			"computation",
			"sequence",
			"mathematics",
			"functional",
			"streams",
			"streamfusion",
			"c",
			"programming",
			"performance",
			"benchmark"
		],
		"y": -5.152399166108349,
		"x": -8.210211725847959,
		"extended": "",
		"description": "Mehul Tikekar - An example of fast numerical computation using Haskell",
		"time": "2013-12-01T15:30:11Z",
		"href": "http://www.mit.edu/~mtikekar/posts/stream-fusion.html"
	},
	{
		"cluster": 10,
		"tags": [
			"jofreeman",
			"feminism",
			"politics",
			"organization",
			"management",
			"organizations",
			"elitism",
			"elites",
			"structure",
			"structurelessness",
			"sociology",
			"activism",
			"community",
			"power",
			"pocket-read"
		],
		"y": 2.582304279940512,
		"x": 5.881004979143432,
		"extended": "",
		"description": "The Tyranny of Stuctureless",
		"time": "2013-11-30T11:55:47Z",
		"href": "http://www.jofreeman.com/joreen/tyranny.htm"
	},
	{
		"cluster": 2,
		"tags": [
			"Distributed",
			"Systems",
			"engineering",
			"computerscience",
			"pocket-read"
		],
		"y": 1.5397959546363302,
		"x": -0.9712093226159723,
		"extended": "",
		"description": "Distributed Systems Archaeology, Part Three",
		"time": "2013-11-22T07:50:47Z",
		"href": "http://michaelrbernste.in/2013/11/21/distributed-systems-archaeology-part-three.html"
	},
	{
		"cluster": 18,
		"tags": [
			"distributed",
			"systems",
			"engineering",
			"computerscience",
			"architecture",
			"pocket-read"
		],
		"y": 1.5395849062441995,
		"x": -0.9522470623137833,
		"extended": "",
		"description": "Distributed Systems Archaeology, Part Two",
		"time": "2013-11-22T07:44:23Z",
		"href": "http://michaelrbernste.in/2013/11/20/distributed-systems-archaeology-part-two.html"
	},
	{
		"cluster": 2,
		"tags": [
			"distributed",
			"systems",
			"mind",
			"history",
			"computerscience",
			"artificialintelligence",
			"pocket-read"
		],
		"y": 1.460052534706753,
		"x": -0.9350062045029948,
		"extended": "",
		"description": "Distributed Systems Archaeology, Part One",
		"time": "2013-11-21T23:43:43Z",
		"href": "http://michaelrbernste.in/2013/11/19/distributed-systems-archaeology-part-one.html"
	},
	{
		"cluster": 16,
		"tags": [
			"spark",
			"bigdata",
			"data",
			"processing",
			"distributed",
			"systems",
			"computing",
			"pocket-read"
		],
		"y": 1.2538406477609323,
		"x": -1.2024091778156043,
		"extended": "",
		"description": "Putting Spark to Use: Fast In-Memory Computing for Your Big Data Applications",
		"time": "2013-11-21T23:37:19Z",
		"href": "http://blog.cloudera.com/blog/2013/11/putting-spark-to-use-fast-in-memory-computing-for-your-big-data-applications/"
	},
	{
		"cluster": 17,
		"tags": [
			"spray",
			"akka",
			"distributedsystems",
			"actors",
			"scala",
			"programming"
		],
		"y": 5.1139028484726134,
		"x": -1.4123410724253207,
		"extended": "",
		"description": "Akka & spray",
		"time": "2013-11-18T11:10:21Z",
		"href": "http://spray.io/wjax/#/"
	},
	{
		"cluster": 5,
		"tags": [
			"politics",
			"basicincome",
			"citizensbasicincome",
			"citizens",
			"basic",
			"income",
			"python",
			"statistics",
			"mathematics",
			"logic",
			"policy",
			"society",
			"montecarlo",
			"simulation",
			"modelling",
			"programming",
			"scipy",
			"numpy"
		],
		"y": 3.075216866558506,
		"x": 14.167690905053538,
		"extended": "",
		"description": "Modelling a Basic Income with Python and Monte Carlo Simulation",
		"time": "2013-11-14T12:55:20Z",
		"href": "http://www.chrisstucchio.com/blog/2013/basic_income_vs_basic_job.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"bootstrap",
			"anova",
			"hypothesis",
			"testing",
			"pocket-read"
		],
		"y": -4.88797369708384,
		"x": -2.0312633526261132,
		"extended": "",
		"description": "Bootstrapping One-way Analysis of Variance",
		"time": "2013-11-09T08:42:12Z",
		"href": "http://www.uvm.edu/~dhowell/StatPages/Resampling/Bootst1way/bootstrapping_oneway.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"anova",
			"analysis",
			"variance",
			"hypothesis",
			"testing",
			"pocket-read"
		],
		"y": -4.815194241720855,
		"x": -2.050685066147596,
		"extended": "",
		"description": "Conceptual Introduction to ANOVA",
		"time": "2013-11-06T15:41:55Z",
		"href": "http://www.vassarstats.net/textbook/ch13pt1.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"bootstrap",
			"estimatikn",
			"correlation",
			"pocket-read"
		],
		"y": -5.02382166290743,
		"x": -1.9978186115589713,
		"extended": "",
		"description": "Bootstrapping Correlations",
		"time": "2013-11-06T07:18:44Z",
		"href": "http://www.uvm.edu/~dhowell/StatPages/Resampling/BootstCorr/bootstrapping_correlations.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"bootstrap",
			"parameter",
			"estimation",
			"hypothesis",
			"testing",
			"median",
			"difference",
			"pocket-read"
		],
		"y": -4.990093383624112,
		"x": -1.9922488873645758,
		"extended": "",
		"description": "Bootstrapping two medians",
		"time": "2013-11-06T07:11:26Z",
		"href": "http://www.uvm.edu/~dhowell/StatPages/Resampling/Boot2Medians/bootstrapping_two_medians.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"bootstrap",
			"parameter",
			"estimation",
			"median",
			"pocket-read"
		],
		"y": -5.016396940145799,
		"x": -1.9820797569802757,
		"extended": "",
		"description": "Bootstrapping medians",
		"time": "2013-11-06T07:06:16Z",
		"href": "http://www.uvm.edu/~dhowell/StatPages/Resampling/BootstMedians/bootstrapping_medians.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"bootstrap",
			"estimation",
			"confidence",
			"mean",
			"pocket-read"
		],
		"y": -5.022285634472599,
		"x": -1.9845906305680021,
		"extended": "",
		"description": "Bootstrapping Means",
		"time": "2013-11-05T17:54:28Z",
		"href": "http://www.uvm.edu/~dhowell/StatPages/Resampling/BootstMeans/bootstrapping_means.html"
	},
	{
		"cluster": 5,
		"tags": [
			"bootstrap",
			"statistics",
			"inference",
			"estimation",
			"pocket-read"
		],
		"y": -5.017467911893782,
		"x": -2.012162538435186,
		"extended": "",
		"description": "Bootstrapping Approaches to Inference",
		"time": "2013-11-04T09:35:55Z",
		"href": "http://www.uvm.edu/~dhowell/StatPages/Resampling/Bootstrapping.html"
	},
	{
		"cluster": 17,
		"tags": [
			"akka",
			"scala",
			"programming",
			"video",
			"media",
			"distributed",
			"systems",
			"stream",
			"processing"
		],
		"y": 4.677428736960163,
		"x": -1.5231920354926247,
		"extended": "",
		"description": "Using Akka for video editing.",
		"time": "2013-11-04T08:53:54Z",
		"href": "http://kafecho.blogspot.se/2013/10/using-akka-for-video-editing.html"
	},
	{
		"cluster": 17,
		"tags": [
			"probability",
			"scala",
			"statistics",
			"distribution",
			"comprehension",
			"monad",
			"programming",
			"functional",
			"computerscience",
			"pocket-read"
		],
		"y": -1.8630463078671926,
		"x": -8.884819525641761,
		"extended": "",
		"description": "A Frequentist Approach to Probability",
		"time": "2013-11-03T13:48:54Z",
		"href": "http://jliszka.github.io/2013/08/12/a-frequentist-approach-to-probability.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"wela",
			"machinelearning",
			"classification",
			"programming",
			"weka"
		],
		"y": 6.358633369202526,
		"x": -2.963274376043161,
		"extended": "",
		"description": "Wela by Mortimerp9",
		"time": "2013-11-03T13:34:40Z",
		"href": "http://pierreandrews.net/wela/"
	},
	{
		"cluster": 17,
		"tags": [
			"phone",
			"android",
			"cellular",
			"mobile",
			"programming",
			"scalability",
			"power",
			"efficiency",
			"pocket-read"
		],
		"y": 3.8121653351488476,
		"x": -7.196082501427632,
		"extended": "",
		"description": "If You're Programming a Cell Phone Like a Server You're Doing it Wrong",
		"time": "2013-11-03T13:02:08Z",
		"href": "http://highscalability.com/blog/2013/9/18/if-youre-programming-a-cell-phone-like-a-server-youre-doing.html"
	},
	{
		"cluster": 17,
		"tags": [
			"datomisca",
			"datomic",
			"scala",
			"clojure",
			"programming",
			"database",
			"persistence",
			"pocket-read"
		],
		"y": 4.915886822802501,
		"x": -2.531418131187009,
		"extended": "",
		"description": "pellucidanalytics/datomisca · GitHub",
		"time": "2013-11-03T12:54:45Z",
		"href": "https://github.com/pellucidanalytics/datomisca"
	},
	{
		"cluster": 17,
		"tags": [
			"mapreduceboggle",
			"graph",
			"traversal",
			"programming",
			"distributed",
			"computing",
			"pocket-read"
		],
		"y": 1.5868943985777237,
		"x": -0.9050481153433264,
		"extended": "",
		"description": "Understanding MapReduce via Boggle",
		"time": "2013-11-03T12:25:19Z",
		"href": "http://blog.cloudera.com/blog/2013/01/understanding-mapreduce-via-boggle/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"eventsourcing",
			"architecture",
			"softwareengineering",
			"transactions",
			"conflictresolution",
			"pocket-read"
		],
		"y": 5.678566905816342,
		"x": -2.032497381709373,
		"extended": "",
		"description": "Simple event sourcing – refactoring and transactions (part 5)",
		"time": "2013-11-03T12:08:42Z",
		"href": "http://blog.zilverline.com/2012/08/26/simple-event-sourcing-refactoring-and-transactions-part-5/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"redis",
			"eventsourcing",
			"conflictresolution",
			"programming",
			"web",
			"softwareengineering",
			"architecture",
			"pocket-read"
		],
		"y": 5.698064798918217,
		"x": -2.018643583004298,
		"extended": "",
		"description": "Simple Event Sourcing – conflict resolution (part 4)",
		"time": "2013-11-03T12:00:32Z",
		"href": "http://blog.zilverline.com/2012/08/08/simple-event-sourcing-conflict-resolution-part-4/"
	},
	{
		"cluster": 2,
		"tags": [
			"eventsourcing",
			"scala",
			"consistency",
			"play",
			"distributedsystems",
			"ddd",
			"arcitecture",
			"softwareengineering",
			"pocket-read"
		],
		"y": 5.718555936755677,
		"x": -2.0181674215829997,
		"extended": "",
		"description": "Simple event sourcing – consistency (part 2)",
		"time": "2013-11-01T07:54:59Z",
		"href": "http://blog.zilverline.com/2012/07/23/simple-event-sourcing-consistency-part-2/"
	},
	{
		"cluster": 18,
		"tags": [
			"eventsourcing",
			"events",
			"scala",
			"ddd",
			"persistence",
			"programming",
			"architecture",
			"software",
			"engineering",
			"pocket-read"
		],
		"y": 5.193635038303073,
		"x": -2.8115812758029692,
		"extended": "",
		"description": "Simple event sourcing – introduction (part 1)",
		"time": "2013-11-01T00:20:46Z",
		"href": "http://blog.zilverline.com/2012/07/04/simple-event-sourcing-introduction-part-1/"
	},
	{
		"cluster": 17,
		"tags": [
			"clojurescript",
			"clojure",
			"javascript",
			"programming",
			"browser"
		],
		"y": 2.446602971788343,
		"x": -6.541870884058928,
		"extended": "",
		"description": "The Essence of ClojureScript",
		"time": "2013-10-31T22:00:23Z",
		"href": "http://swannodette.github.io/2013/10/27/the-essence-of-clojurescript/"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"math",
			"logic",
			"proof",
			"types",
			"curryhoward",
			"diagonalisation",
			"pocket-read"
		],
		"y": -8.331282273270668,
		"x": -3.691945732430766,
		"extended": "",
		"description": "Some impossible functions",
		"time": "2013-10-30T23:36:06Z",
		"href": "http://jliszka.github.io/2013/10/19/impossible-functions.html"
	},
	{
		"cluster": 16,
		"tags": [
			"policy",
			"data",
			"analytics",
			"statistics",
			"analysis",
			"public",
			"social",
			"newyork",
			"mikeflowers"
		],
		"y": -2.839617574038858,
		"x": -1.806172882291264,
		"extended": "",
		"description": "Big Data excerpt: How Mike Flowers revolutionized New York’s building inspections.",
		"time": "2013-10-30T18:42:00Z",
		"href": "http://www.slate.com/articles/technology/future_tense/2013/03/big_data_excerpt_how_mike_flowers_revolutionized_new_york_s_building_inspections.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"cabal",
			"programming",
			"functional"
		],
		"y": -5.132438817213698,
		"x": -8.36756662985109,
		"extended": "",
		"description": "How to start a new Haskell project - Jabberwocky",
		"time": "2013-10-30T10:57:06Z",
		"href": "http://jabberwocky.eu/2013/10/24/how-to-start-a-new-haskell-project/"
	},
	{
		"cluster": 18,
		"tags": [
			"architecture",
			"programming",
			"varnish",
			"memory",
			"design",
			"cache",
			"kernel",
			"performance",
			"software",
			"pocket-read"
		],
		"y": 5.56111031857875,
		"x": -5.503250951022497,
		"extended": "",
		"description": "Notes from the Architect",
		"time": "2013-10-26T22:43:32Z",
		"href": "https://www.varnish-cache.org/trac/wiki/ArchitectNotes"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"sorting",
			"programming",
			"computerscience",
			"stability",
			"pocket-read"
		],
		"y": 4.13468656725083,
		"x": -11.062997751100578,
		"extended": "",
		"description": "Stable Sorting in Ruby",
		"time": "2013-10-26T22:31:41Z",
		"href": "http://blog.8thlight.com/will-warner/2013/03/26/stable-sorting-in-ruby.html"
	},
	{
		"cluster": 16,
		"tags": [
			"pregel",
			"graph",
			"computation",
			"distributed",
			"systems",
			"data",
			"processing",
			"pocket-read"
		],
		"y": 1.3620619226328479,
		"x": -1.2334361179179532,
		"extended": "",
		"description": "Tutorial",
		"time": "2013-10-25T07:39:54Z",
		"href": "http://charlesmunger.github.com/jpregel-aws/tutorial.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"diagrams",
			"mapping",
			"data",
			"visualisation",
			"analysis",
			"functional",
			"programming"
		],
		"y": -5.51367517933733,
		"x": -7.864389580415082,
		"extended": "",
		"description": "Parking in Westminter: An Analysis in Haskell | Idontgetoutmuch’s Weblog",
		"time": "2013-10-24T22:26:01Z",
		"href": "http://idontgetoutmuch.wordpress.com/2013/10/23/parking-in-westminter-an-analysis-in-haskell/"
	},
	{
		"cluster": 2,
		"tags": [
			"tls",
			"web",
			"ssl",
			"latency",
			"networking",
			"optimisation"
		],
		"y": -2.1553987400425623,
		"x": 4.452922353526328,
		"extended": "",
		"description": "Optimizing TLS Record Size & Buffering Latency",
		"time": "2013-10-24T22:07:11Z",
		"href": "http://www.igvita.com/2013/10/24/optimizing-tls-record-size-and-buffering-latency/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"text",
			"encodings",
			"unicode",
			"i18n",
			"pocket-read"
		],
		"y": 3.748995478447249,
		"x": -7.380743047640163,
		"extended": "",
		"description": "The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!) - Joel on Software",
		"time": "2013-10-24T21:29:41Z",
		"href": "http://www.joelonsoftware.com/articles/Unicode.html"
	},
	{
		"cluster": 17,
		"tags": [
			"julia",
			"statistics",
			"programming",
			"computerscience"
		],
		"y": -1.383155035727382,
		"x": -7.1421330381060955,
		"extended": "",
		"description": "Julia’s Role in Data Science",
		"time": "2013-10-24T17:32:38Z",
		"href": "http://strata.oreilly.com/2013/10/julias-role-in-data-science.html"
	},
	{
		"cluster": 10,
		"tags": [
			"data",
			"policy",
			"publicpolicy",
			"society",
			"politics",
			"statistics"
		],
		"y": 3.087643343846329,
		"x": 13.989524505191907,
		"extended": "",
		"description": "A development data revolution needs to go beyond the geeks and bean-counters | Jonathan Glennie | Global development | theguardian.com",
		"time": "2013-10-23T20:18:04Z",
		"href": "http://www.theguardian.com/global-development/poverty-matters/2013/oct/03/data-revolution-development-policy?CMP=twt_gu"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"technology",
			"socialism",
			"strikes",
			"bart",
			"transit",
			"tech",
			"culture",
			"douchebags"
		],
		"y": -0.2988514544142505,
		"x": 10.213923647677726,
		"extended": "",
		"description": "Delusions of the Tech Bro Intelligentsia | Jacobin",
		"time": "2013-10-22T13:39:25Z",
		"href": "http://jacobinmag.com/2013/10/delusions-of-the-tech-bro-intelligentsia/"
	},
	{
		"cluster": 14,
		"tags": [
			"javascript",
			"hsv",
			"rgb",
			"colour",
			"converter",
			"programming",
			"design",
			"visualisation"
		],
		"y": 4.616906636971578,
		"x": -5.745122799589525,
		"extended": "",
		"description": "Handy! RGB to HSL and RGB to HSV color model conversion algorithms in JavaScript - Axon Flux // A Ruby on Rails Blog",
		"time": "2013-10-21T13:51:08Z",
		"href": "http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"color",
			"science",
			"art",
			"theory",
			"colour",
			"vision",
			"psychology"
		],
		"y": -5.131625064406118,
		"x": 6.864586950535999,
		"extended": "",
		"description": "Color Wheels are wrong? How color vision actually works | @ASmartBear",
		"time": "2013-10-17T21:36:00Z",
		"href": "http://blog.asmartbear.com/color-wheels.html"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"colour",
			"theory",
			"vision"
		],
		"y": -5.002581305662635,
		"x": 6.805363729168581,
		"extended": "",
		"description": "Design for Hackers: Why Monet Never Used Black, & Why You Shouldn’t Either",
		"time": "2013-10-17T21:29:15Z",
		"href": "http://kadavy.net/blog/posts/d4h-color-theory/"
	},
	{
		"cluster": 2,
		"tags": [
			"ruby",
			"rack",
			"test",
			"bdd",
			"tdd",
			"rest",
			"http",
			"aspec",
			"spec"
		],
		"y": 7.546574746401659,
		"x": -7.761651209315645,
		"extended": "",
		"description": "Introducing Aspec: A black box API testing DSL | #F80046",
		"time": "2013-10-17T16:36:05Z",
		"href": "http://devblog.songkick.com/2012/12/06/introducing-aspec-a-black-box-api-testing-dsl/#comment-88399"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"adamcuris",
			"curtis",
			"furedi",
			"spiked",
			"trotskyism",
			"journalism",
			"marxism",
			"libertarianism"
		],
		"y": 5.660356141280108,
		"x": 10.678500700801584,
		"extended": "",
		"description": "Pandora's Docs",
		"time": "2013-10-17T12:44:41Z",
		"href": "http://plover.net/~bonds/pandorasdocs.html"
	},
	{
		"cluster": 16,
		"tags": [
			"anonymity",
			"diversity",
			"statistics",
			"privacy",
			"computerscience",
			"data",
			"aggregate",
			"datascience",
			"bigdata"
		],
		"y": 3.8387111684904642,
		"x": 6.116721112901606,
		"extended": "",
		"description": "k-anonymity and l-diversity | History of an Idea: Missing Data",
		"time": "2013-10-15T15:22:02Z",
		"href": "http://missingdata.wordpress.com/2007/08/23/k-anonymity-and-l-diversity/"
	},
	{
		"cluster": 17,
		"tags": [
			"adt",
			"algebraic",
			"data",
			"type",
			"abstractalgebra",
			"computerscience",
			"programming",
			"functional",
			"sum",
			"product"
		],
		"y": -3.820853481598507,
		"x": -11.090697335144705,
		"extended": "",
		"description": "Functional Algebra: Abstract Data Types, Algebraic Data Types and Algebraic [Data] Structures",
		"time": "2013-10-15T11:20:22Z",
		"href": "http://www.functionalalgebra.com/articles/abstract-algebraic-data-types-algebraic-structures/"
	},
	{
		"cluster": 18,
		"tags": [
			"security",
			"programming",
			"linux",
			"backdoor",
			"kernel",
			"engineering",
			"software"
		],
		"y": 5.270606693017546,
		"x": -4.026206016054766,
		"extended": "",
		"description": "A Look Back at the Linux Kernel Backdoor",
		"time": "2013-10-15T11:06:20Z",
		"href": "http://www.infoq.com/news/2013/10/Linux-Backdoor"
	},
	{
		"cluster": 10,
		"tags": [
			"mathematics",
			"ethics",
			"finance",
			"business",
			"politics",
			"risk",
			"computation",
			"complexity",
			"computationalcomplexity"
		],
		"y": 9.710354863263609,
		"x": 6.336530827141131,
		"extended": "",
		"description": "Mathematics in finance and hiding lies in complexity | Theory, Evolution, and Games Group",
		"time": "2013-10-15T11:00:09Z",
		"href": "http://egtheory.wordpress.com/2013/10/13/finance-and-mathematics/"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"stream",
			"mining",
			"analytics",
			"machinelearning",
			"statistics"
		],
		"y": -1.7555207198956475,
		"x": -2.66834407277331,
		"extended": "",
		"description": "Stream Mining essentials - Strata",
		"time": "2013-10-14T22:26:29Z",
		"href": "http://feedly.com/k/GYi6wA"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"java",
			"oop",
			"patterns",
			"designpatterns",
			"softwareenginering"
		],
		"y": 4.943069879561129,
		"x": 0.2637330965932761,
		"extended": "",
		"description": "Design Patterns in Scala",
		"time": "2013-10-11T18:19:27Z",
		"href": "http://pavelfatin.com/design-patterns-in-scala/"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"statistics",
			"science",
			"visualisation",
			"mean",
			"correlation",
			"testing",
			"analysis"
		],
		"y": -2.9473898548622395,
		"x": -1.3445666463405777,
		"extended": "",
		"description": "Cumulative covariance plots | mathbabe",
		"time": "2013-10-11T15:34:05Z",
		"href": "http://mathbabe.org/2013/10/11/cumulative-covariance-plots/"
	},
	{
		"cluster": 18,
		"tags": [
			"acid",
			"captheorem",
			"distributed",
			"systems",
			"programming",
			"engineering",
			"foundationdb",
			"database",
			"persistence",
			"architecture",
			"operations"
		],
		"y": 2.2083684214608046,
		"x": -0.9475278235606694,
		"extended": "",
		"description": "FoundationDB — The CAP Theorem",
		"time": "2013-10-11T15:15:10Z",
		"href": "https://foundationdb.com/white-papers/the-cap-theorem"
	},
	{
		"cluster": 17,
		"tags": [
			"scalatest",
			"scala",
			"traits",
			"programming",
			"design"
		],
		"y": 6.217234939112266,
		"x": -3.1429458261700316,
		"extended": "",
		"description": "Stackable traits for ScalaTest test suites « LShift Ltd.",
		"time": "2013-10-10T22:52:50Z",
		"href": "http://www.lshift.net/blog/2012/11/24/stackable-traits-for-scalatest-test-suites"
	},
	{
		"cluster": 15,
		"tags": [
			"kolmogorov",
			"mathematics",
			"probability",
			"measure",
			"theory"
		],
		"y": -5.9108803923880515,
		"x": -4.631970901798186,
		"extended": "",
		"description": "Kolmogorov’s Axioms of Probability | Good Math, Bad Math",
		"time": "2013-10-10T19:01:51Z",
		"href": "http://scientopia.org/blogs/goodmath/2013/08/24/kolmogorovs-axioms-of-probability/"
	},
	{
		"cluster": 2,
		"tags": [
			"svm",
			"parallel",
			"machinelearning",
			"mapreduce",
			"hadoop"
		],
		"y": 0.8833596291074736,
		"x": -5.715568707369262,
		"extended": "",
		"description": "Support Vector Machines and Hadoop: Theory vs. Practice Distil Networks",
		"time": "2013-10-10T18:52:05Z",
		"href": "http://www.distilnetworks.com/support-vector-machines-hadoop-theory-vs-practice/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"monad",
			"transformer",
			"programming",
			"functional",
			"lift"
		],
		"y": -5.0433548667472134,
		"x": -9.095151372218094,
		"extended": "",
		"description": "haskell - Avoiding lift with Monad Transformers - Stack Overflow",
		"time": "2013-10-10T18:48:00Z",
		"href": "http://stackoverflow.com/questions/9054731/avoiding-lift-with-monad-transformers"
	},
	{
		"cluster": 5,
		"tags": [
			"scala",
			"statistics",
			"probability",
			"centrallimittheorem",
			"abtesting",
			"testing",
			"maths",
			"programming"
		],
		"y": -0.727594410674353,
		"x": -9.643320848734088,
		"extended": "",
		"description": "Understanding A/B Test Analysis",
		"time": "2013-10-10T18:29:53Z",
		"href": "http://feedly.com/k/19D7mAu"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"types",
			"functional",
			"programming",
			"core.typed"
		],
		"y": 2.1792259581799462,
		"x": -6.689767049282243,
		"extended": "",
		"description": "Core.Typed Adds an Optional Type System to Clojure",
		"time": "2013-10-10T12:40:32Z",
		"href": "http://www.infoq.com/news/2013/10/core-typed"
	},
	{
		"cluster": 18,
		"tags": [
			"concurrency",
			"distributedsystems",
			"distributed",
			"system",
			"vector",
			"clock",
			"lamport",
			"timestamp",
			"synchronization",
			"engineering",
			"computerscience",
			"software"
		],
		"y": 1.1978397029553054,
		"x": -2.1263043331619023,
		"extended": "",
		"description": "Synchronization in a Distributed System | 8th Light",
		"time": "2013-10-10T12:32:56Z",
		"href": "http://blog.8thlight.com/rylan-dirksen/2013/10/04/synchronization-in-a-distributed-system.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"applicative",
			"programming",
			"functor",
			"optparse",
			"cli",
			"functional"
		],
		"y": -4.348735595066337,
		"x": -9.401498052162324,
		"extended": "<blockquote>progDesc</blockquote>",
		"description": "The Econify Blog: Fun with Applicative Functors, Pt III",
		"time": "2013-10-10T09:30:20Z",
		"href": "http://blog.econify.com/2013/09/fun-with-applicative-functors-pt-iii.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"io",
			"monad",
			"functor",
			"programming",
			"applicative",
			"functional"
		],
		"y": -4.5210350335483085,
		"x": -9.544744601689798,
		"extended": "",
		"description": "The Econify Blog: Fun with Applicative Functors, Pt II",
		"time": "2013-10-10T09:20:14Z",
		"href": "http://blog.econify.com/2013/08/fun-with-applicative-functors-pt-ii.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"applicative",
			"functor",
			"parsing",
			"functional",
			"programming"
		],
		"y": -4.407570293962293,
		"x": -9.400628393566164,
		"extended": "",
		"description": "The Econify Blog: Fun with Applicative Functors, Pt I",
		"time": "2013-10-10T09:06:02Z",
		"href": "http://blog.econify.com/2013/08/fun-with-applicative-functors-pt-i.html"
	},
	{
		"cluster": 15,
		"tags": [
			"category",
			"theory",
			"categorytheory",
			"mathematics",
			"functor",
			"morphism",
			"naturaltransformation"
		],
		"y": -6.9787402404915015,
		"x": -5.251517257002826,
		"extended": "",
		"description": "Closing the Loop on Category Theory: Polymorphism, Currying, and More : Engineering Rich Relevance Blog",
		"time": "2013-10-10T08:56:29Z",
		"href": "http://engineering.richrelevance.com/closing-the-loop-on-category-theory-polymorphism-currying-and-more/"
	},
	{
		"cluster": 4,
		"tags": [
			"elerea",
			"sodium",
			"haskell",
			"functional",
			"reactive",
			"programming",
			"frp"
		],
		"y": -6.51763620564157,
		"x": -7.612852381548555,
		"extended": "",
		"description": "Nothing Personal: A few reasons why functional reactive programming matters",
		"time": "2013-10-10T08:48:07Z",
		"href": "http://just-bottom.blogspot.co.uk/2013/09/a-few-reasons-why-functional-reactive.html"
	},
	{
		"cluster": 10,
		"tags": [
			"algorithms",
			"politics",
			"computerscience",
			"accountability",
			"transparency",
			"ethics"
		],
		"y": 5.076461066839198,
		"x": 9.665173032665605,
		"extended": "",
		"description": "Guest post: Rage against the algorithms | mathbabe",
		"time": "2013-10-09T12:00:23Z",
		"href": "http://mathbabe.org/2013/10/08/guest-post-rage-against-the-algorithms/"
	},
	{
		"cluster": 2,
		"tags": [
			"socialism",
			"marx",
			"complexity",
			"capitalism"
		],
		"y": 2.508431076280968,
		"x": 10.613632372695092,
		"extended": "",
		"description": "Stumbling and Mumbling: Complexity & alienation",
		"time": "2013-10-07T22:17:21Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2013/10/complexity-alienation.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"tools",
			"functional",
			"development"
		],
		"y": -4.946283324160792,
		"x": -7.405600627326795,
		"extended": "",
		"description": "What Haskell tools do you use in every project? : haskell",
		"time": "2013-10-02T12:54:14Z",
		"href": "http://www.reddit.com/r/haskell/comments/1nhntw/what_haskell_tools_do_you_use_in_every_project/"
	},
	{
		"cluster": 16,
		"tags": [
			"statistics",
			"modelling",
			"modelselection",
			"data",
			"analysis",
			"mathematics"
		],
		"y": -2.760561109018728,
		"x": -1.9052854890190616,
		"extended": "",
		"description": "Are your data normal? Hint: no. - Strata",
		"time": "2013-10-02T12:51:32Z",
		"href": "http://strata.oreilly.com/2013/09/are-your-data-normal-hint-no.html"
	},
	{
		"cluster": 16,
		"tags": [
			"approximation",
			"online",
			"data",
			"analytics",
			"analysis",
			"datascience",
			"statistics",
			"approximate",
			"histogram",
			"distribution",
			"quantile",
			"computerscience",
			"distributed",
			"systems",
			"datastructures"
		],
		"y": -2.6321181178575417,
		"x": -1.9711986279313416,
		"extended": "",
		"description": "The Art of Approximating Distributions: Histograms and Quantiles at Scale | Metamarkets",
		"time": "2013-09-29T11:40:51Z",
		"href": "http://metamarkets.com/2013/histograms/"
	},
	{
		"cluster": 4,
		"tags": [
			"polynomial",
			"functional-programming",
			"scala",
			"mathematics",
			"numbertheory",
			"logic",
			"algebra",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -3.4560164327109146,
		"x": -11.981060789838214,
		"extended": "",
		"description": "More backwards functions: Unevaluating polynomials",
		"time": "2013-09-28T10:29:42Z",
		"href": "http://jliszka.github.io/2013/09/24/more-backwards-functions-unevaluating-polynomials.html"
	},
	{
		"cluster": 18,
		"tags": [
			"reactive",
			"programming",
			"computerscience",
			"rx",
			".net",
			"functional",
			"software",
			"engineering",
			"duality",
			"monads",
			"categorytheory"
		],
		"y": -3.3234743269953366,
		"x": -7.801362824904621,
		"extended": "",
		"description": "Introduction to the Reactive Framework Part II | Matthew Podwysocki",
		"time": "2013-09-24T09:02:33Z",
		"href": "http://codebetter.com/matthewpodwysocki/2009/11/03/introduction-to-the-reactive-framework-part-ii/"
	},
	{
		"cluster": 18,
		"tags": [
			"FRP",
			"java",
			"rxjava",
			"functional",
			"reactive",
			"programming",
			"architecture",
			"engineering",
			"netflix",
			"scale",
			"software"
		],
		"y": 5.120993900607922,
		"x": -4.802483047039542,
		"extended": "",
		"description": "Functional Reactive Programming in the Netflix API",
		"time": "2013-09-24T08:50:03Z",
		"href": "http://www.infoq.com/presentations/Netflix-API-rxjava-hystrix"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"maths",
			"fractals",
			"fractal",
			"complex",
			"arithmetic",
			"analysis",
			"complexity",
			"waves",
			"visualization"
		],
		"y": -7.70953697790362,
		"x": -3.6654585779399014,
		"extended": "",
		"description": "How to Fold a Julia Fractal — Acko.net",
		"time": "2013-09-21T15:00:07Z",
		"href": "http://acko.net/blog/how-to-fold-a-julia-fractal/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"pipes",
			"streaming",
			"data",
			"lazy",
			"functional",
			"effects",
			"programming",
			"computerscience",
			"free",
			"monad",
			"freemonad"
		],
		"y": -5.385111445663941,
		"x": -9.889376326676533,
		"extended": "",
		"description": "Haskell for all: Perfect streaming using `pipes-bytestring`",
		"time": "2013-09-21T09:49:26Z",
		"href": "http://feedly.com/k/14qPc13"
	},
	{
		"cluster": 16,
		"tags": [
			"apahe",
			"tez",
			"hadoop",
			"data",
			"processing",
			"engineering"
		],
		"y": -0.3649346761115399,
		"x": -1.228381625370457,
		"extended": "",
		"description": "Apache Tez - a Generalization of the MapReduce Data Processing",
		"time": "2013-09-21T09:40:18Z",
		"href": "http://feedly.com/k/1dwuOOG"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"oop",
			"java",
			"objectoriented",
			"genericfunctions",
			"generics",
			"visitor",
			"dispatch",
			"double"
		],
		"y": 4.295694914609473,
		"x": -8.143250557319298,
		"extended": "",
		"description": "Too much of a good thing: not all functions should be object methods",
		"time": "2013-09-18T21:09:14Z",
		"href": "http://weblog.raganwald.com/2007/10/too-much-of-good-thing-not-all.html"
	},
	{
		"cluster": 4,
		"tags": [
			"fashion",
			"news",
			"visualisation",
			"data",
			"journalism",
			"haskell",
			"programming",
			"functional",
			"computervision"
		],
		"y": -5.425559608555678,
		"x": -8.044845791338986,
		"extended": "",
		"description": "Model Analysis - Learning - Source: An OpenNews project",
		"time": "2013-09-18T11:12:27Z",
		"href": "http://source.mozillaopennews.org/en-US/learning/model-analysis/"
	},
	{
		"cluster": 18,
		"tags": [
			"dci",
			"scala",
			"smalltalk",
			"design",
			"oop",
			"architecture",
			"engineering",
			"software",
			"programmign"
		],
		"y": 5.5065925251259795,
		"x": -5.1771488903806,
		"extended": "",
		"description": "The DCI Architecture: A New Vision of Object-Oriented Programming",
		"time": "2013-09-16T10:12:00Z",
		"href": "http://www.artima.com/articles/dci_vision.html"
	},
	{
		"cluster": 2,
		"tags": [
			"engineering",
			"management",
			"teams",
			"organization",
			"business",
			"project",
			"recruiting"
		],
		"y": 1.8896708433976803,
		"x": 4.100305029608874,
		"extended": "",
		"description": "Leadership Without Management: Scaling Organizations by Scaling Eng...",
		"time": "2013-09-15T17:27:59Z",
		"href": "http://www.slideshare.net/bcantrill/surge2013"
	},
	{
		"cluster": 4,
		"tags": [
			"rankntypes",
			"polymorphism",
			"types",
			"haskell",
			"programming",
			"computerscience",
			"logic",
			"hindleymilner",
			"type",
			"inference"
		],
		"y": -6.486489295019227,
		"x": -10.755220907505759,
		"extended": "",
		"description": "Higher-Ranked Types | 8th Light",
		"time": "2013-09-15T15:59:36Z",
		"href": "http://blog.8thlight.com/mark-grant/2013/09/13/higher-ranked-types-part-1.html"
	},
	{
		"cluster": 3,
		"tags": [
			"literature",
			"criticism",
			"nlp",
			"language",
			"computational",
			"linguistics",
			"machine",
			"learning",
			"statistics",
			"culture"
		],
		"y": -0.23639063234516147,
		"x": 8.107368788317823,
		"extended": "",
		"description": "Language Log » Computational linguistics and literary scholarship",
		"time": "2013-09-13T12:12:35Z",
		"href": "http://languagelog.ldc.upenn.edu/nll/?p=6968"
	},
	{
		"cluster": 2,
		"tags": [
			"cryptol",
			"formalmethods",
			"base64",
			"proof",
			"software",
			"verification",
			"computerscience",
			"theoremproving"
		],
		"y": -0.08565999908303536,
		"x": -9.946710479192227,
		"extended": "",
		"description": "Galois - Blog - High-Assurance Base64",
		"time": "2013-09-12T09:19:10Z",
		"href": "http://corp.galois.com/blog/2013/9/11/high-assurance-base64.html"
	},
	{
		"cluster": 18,
		"tags": [
			"redis",
			"semaphore",
			"concurrency",
			"ruby",
			"programming",
			"parralel",
			"distributed",
			"systems",
			"engineering"
		],
		"y": 5.483467097656013,
		"x": -10.966575649213373,
		"extended": "",
		"description": "A Distributed Mutex and Semaphore using Redis | David Verhasselt",
		"time": "2013-09-12T09:12:53Z",
		"href": "http://www.davidverhasselt.com/2011/08/06/a-distributed-mutex-and-semaphore-using-redis/"
	},
	{
		"cluster": 18,
		"tags": [
			"static",
			"typing",
			"design",
			"functional",
			"programming",
			"ux",
			"software",
			"engineering"
		],
		"y": 5.7886766153048095,
		"x": -5.339569798037308,
		"extended": "",
		"description": "Prettt-tty, pretty, pretty good!: Why type systems matter for UX: an example",
		"time": "2013-09-11T12:17:37Z",
		"href": "http://pchiusano.blogspot.co.uk/2013/09/why-type-systems-matter-for-ux-example.html"
	},
	{
		"cluster": 16,
		"tags": [
			"riak",
			"hadoop",
			"inputformat",
			"mapreduce",
			"data",
			"persistence",
			"storage",
			"analysis",
			"bigdata",
			"architecture"
		],
		"y": -0.025452792685482676,
		"x": -1.93427923854101,
		"extended": "",
		"description": "Riak and Hadoop (Sitting in a tree) | Basho",
		"time": "2013-09-10T16:39:35Z",
		"href": "http://basho.com/riak-and-hadoop-sitting-in-a-tree/"
	},
	{
		"cluster": 16,
		"tags": [
			"hadoop",
			"redis",
			"inputformat",
			"mapreduce",
			"data",
			"analytics",
			"storage",
			"persistence",
			"software",
			"engineering"
		],
		"y": 0.0031823174756462356,
		"x": -1.8357344373342075,
		"extended": "",
		"description": "Making Hadoop MapReduce Work with a Redis Cluster | Pivotal P.O.V.",
		"time": "2013-09-10T15:51:54Z",
		"href": "http://blog.gopivotal.com/products/making-hadoop-mapreduce-work-with-a-redis-cluster"
	},
	{
		"cluster": 16,
		"tags": [
			"lambdaarchitecture",
			"lambda",
			"architecture",
			"bigdata",
			"hadoop",
			"hbase",
			"storm",
			"programming",
			"enginnering",
			"infrastructure",
			"data",
			"analytics",
			"pocket-unread"
		],
		"y": 0.317016667547497,
		"x": -1.4984302981535387,
		"extended": "",
		"description": "The Lambda architecture: principles for architecting realtime Big Data systems",
		"time": "2013-09-10T15:51:19Z",
		"href": "http://jameskinley.tumblr.com/post/37398560534/the-lambda-architecture-principles-for-architecting"
	},
	{
		"cluster": 18,
		"tags": [
			"hadoop",
			"data",
			"analytics",
			"programming",
			"engineering",
			"bigdata",
			"software"
		],
		"y": 0.15915231506045396,
		"x": -1.6647957559015574,
		"extended": "",
		"description": "To Hadoop or Not to Hadoop? | ThoughtWorks",
		"time": "2013-09-10T15:49:16Z",
		"href": "http://www.thoughtworks.com/insights/agile/hadoop-or-not-hadoop"
	},
	{
		"cluster": 16,
		"tags": [
			"trident",
			"storm",
			"bigdata",
			"lambda",
			"architecture",
			"lambdaarchitecture",
			"hadoop",
			"data",
			"processing",
			"systems"
		],
		"y": 0.2673641312978187,
		"x": -1.2767440240116255,
		"extended": "",
		"description": "An example “lambda architecture” for real-time analysis of hashtags using Trident, Hadoop and Splout SQL | Datasalt",
		"time": "2013-09-10T13:44:17Z",
		"href": "http://www.datasalt.com/2013/01/an-example-lambda-architecture-using-trident-hadoop-and-splout-sql/"
	},
	{
		"cluster": 18,
		"tags": [
			"database",
			"io",
			"sharding",
			"replication",
			"persistence",
			"databases",
			"scaling",
			"distributed",
			"systems",
			"distributedsystems",
			"programming",
			"engineering"
		],
		"y": 3.202190030102719,
		"x": -1.4130404232342708,
		"extended": "",
		"description": "High Scalability - High Scalability - Need Help with Database Scalability? Understand I/O",
		"time": "2013-09-09T19:28:15Z",
		"href": "http://highscalability.com/blog/2013/9/9/need-help-with-database-scalability-understand-io.html"
	},
	{
		"cluster": 2,
		"tags": [
			"cassandra",
			"vectorclocks",
			"distributed",
			"systems",
			"distributedsystems",
			"conflictresolution",
			"infrastructure",
			"persistence",
			"nosql",
			"database"
		],
		"y": 3.043867993957849,
		"x": 0.2572286434334729,
		"extended": "",
		"description": "Why Cassandra doesn’t need vector clocks : DataStax",
		"time": "2013-09-09T08:45:07Z",
		"href": "http://www.datastax.com/dev/blog/why-cassandra-doesnt-need-vector-clocks"
	},
	{
		"cluster": 5,
		"tags": [
			"bandit",
			"algorithms",
			"bayes",
			"statistics",
			"machinelearning",
			"computerscience",
			"reinforcementlearning",
			"reinforcement",
			"learning"
		],
		"y": -2.838802797463943,
		"x": -5.7120666823372455,
		"extended": "",
		"description": "A Book About Bandit Algorithms",
		"time": "2013-09-09T07:12:21Z",
		"href": "http://bandits.mynaweb.com/index.html"
	},
	{
		"cluster": 0,
		"tags": [
			"operations",
			"devops",
			"sysadmin",
			"tools",
			"systems",
			"dashboard",
			"monitoring"
		],
		"y": -7.939083874137145,
		"x": 7.984148473035759,
		"extended": "",
		"description": "Homegrown DevOps Tools at Stack Exchange - Server Fault Blog",
		"time": "2013-09-09T07:01:42Z",
		"href": "http://blog.serverfault.com/2013/09/05/homegrown-devops-tools-at-stack-exchange/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"functional",
			"design",
			"oop",
			"modelling",
			"oo",
			"objectoriented",
			"computerscience"
		],
		"y": 4.5192437923949935,
		"x": -7.664302213347133,
		"extended": "",
		"description": "Prettt-tty, pretty, pretty good!: How to model a doorknob, functionally",
		"time": "2013-09-09T06:57:08Z",
		"href": "http://pchiusano.blogspot.co.uk/2013/09/how-to-model-doorknob-functionally.html"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"science",
			"engineering",
			"datascience"
		],
		"y": -0.6071059503878216,
		"x": -1.4880755462752324,
		"extended": "",
		"description": "Data Analysis: Just one component of the Data Science workflow - Strata",
		"time": "2013-09-09T06:54:49Z",
		"href": "http://strata.oreilly.com/2013/09/data-analysis-just-one-component-of-the-data-science-workflow.html"
	},
	{
		"cluster": 3,
		"tags": [
			"invisibles",
			"comics",
			"hauntology",
			"culture",
			"politics",
			"theory",
			"literature",
			"art",
			"criticism"
		],
		"y": -6.333683832099249,
		"x": 12.08570698216389,
		"extended": "",
		"description": "Hauntology and the Invisibles 3: The Mirror We Made to See Ourselves In | The Comics Journal",
		"time": "2013-09-08T16:20:03Z",
		"href": "http://www.tcj.com/hauntology-and-the-invisibles-3-the-mirror-we-made-to-see-ourselves-in/"
	},
	{
		"cluster": 3,
		"tags": [
			"invisibles",
			"comics",
			"hauntology",
			"culture",
			"politics",
			"theory",
			"literature",
			"art",
			"criticism"
		],
		"y": -6.3337722755244,
		"x": 12.08536486981321,
		"extended": "",
		"description": "Hauntology and the Invisibles Part II | The Comics Journal",
		"time": "2013-09-08T16:19:57Z",
		"href": "http://www.tcj.com/hauntology-and-the-invisibles-part-ii/"
	},
	{
		"cluster": 13,
		"tags": [
			"currency",
			"cryptocurrency",
			"technology",
			"computerscience",
			"economics",
			"money",
			"cryptography"
		],
		"y": 10.690742718416255,
		"x": 5.1876158398847005,
		"extended": "",
		"description": "Prettt-tty, pretty, pretty good!: The design of a decentralized currency (part 2)",
		"time": "2013-09-08T16:19:25Z",
		"href": "http://pchiusano.blogspot.co.uk/2013/09/the-design-of-decentralized-currency.html"
	},
	{
		"cluster": 13,
		"tags": [
			"currency",
			"cryptocurrency",
			"technology",
			"computerscience",
			"economics",
			"money",
			"cryptography"
		],
		"y": 10.678697152372292,
		"x": 5.198877686660928,
		"extended": "",
		"description": "Prettt-tty, pretty, pretty good!: The design of a decentralized currency (part 1)",
		"time": "2013-09-08T16:19:19Z",
		"href": "http://pchiusano.blogspot.co.uk/2013/02/the-design-of-decentralized-currency.html"
	},
	{
		"cluster": 13,
		"tags": [
			"bitcoin",
			"cryptocurrency",
			"currency",
			"economics",
			"technology",
			"cryptography",
			"money"
		],
		"y": 10.67544412522385,
		"x": 5.204430736851055,
		"extended": "",
		"description": "The ghost of Bitcoin | Polygon",
		"time": "2013-09-08T16:18:35Z",
		"href": "http://www.polygon.com/features/2013/9/4/4660780/bitcoin-satoshi-nakamoto"
	},
	{
		"cluster": 3,
		"tags": [
			"invisibles",
			"comics",
			"hauntology",
			"culture",
			"politics",
			"theory",
			"literature",
			"art",
			"criticism"
		],
		"y": -6.34283585787888,
		"x": 12.094535206855117,
		"extended": "",
		"description": "Bomb Light in Faraway Windows: The Invisibles and Hauntology | The Comics Journal",
		"time": "2013-09-06T12:45:45Z",
		"href": "http://www.tcj.com/bomb-light-in-faraway-windows-the-invisibles-and-hauntology/"
	},
	{
		"cluster": 4,
		"tags": [
			"stm",
			"haskell",
			"functional",
			"programming",
			"concurrency"
		],
		"y": -5.56106338254378,
		"x": -8.382642166504125,
		"extended": "",
		"description": "An example of software transactional memory",
		"time": "2013-09-04T12:08:41Z",
		"href": "http://blog.begriffs.com/2013/09/an-example-of-software-transactional.html"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"prior",
			"statistics",
			"binomal",
			"scala",
			"bayesian",
			"programming"
		],
		"y": -3.908257360107691,
		"x": -4.537313266892922,
		"extended": "",
		"description": "Fun with Bayesian Priors",
		"time": "2013-09-04T12:02:53Z",
		"href": "http://jliszka.github.io/2013/09/03/fun-with-bayesian-priors.html"
	},
	{
		"cluster": 13,
		"tags": [
			"marxism",
			"politics",
			"economics",
			"labourtheoryofvalue",
			"labour",
			"value"
		],
		"y": 8.828536875218822,
		"x": 11.162222878865812,
		"extended": "",
		"description": "Is the Marxian labour theory of value correct? | Though Cowards Flinch",
		"time": "2013-09-02T18:39:02Z",
		"href": "http://thoughcowardsflinch.com/2010/03/19/is-the-marxian-labour-theory-of-value-correct/"
	},
	{
		"cluster": 13,
		"tags": [
			"ern",
			"banking",
			"finance",
			"politics",
			"economics",
			"business",
			"regulation"
		],
		"y": 9.478214855954542,
		"x": 7.1636254516381594,
		"extended": "",
		"description": "Tim Harford — Article — Time for banking’s petulant toddlers to grow up",
		"time": "2013-09-02T14:30:20Z",
		"href": "http://timharford.com/2013/08/time-for-bankings-petulant-toddlers-to-grow-up/"
	},
	{
		"cluster": 17,
		"tags": [
			"java",
			"function",
			"lambda",
			"functionalprogramming",
			"functional",
			"programming",
			"oop",
			"objectoriented"
		],
		"y": 3.986857607124433,
		"x": -8.201644603901078,
		"extended": "",
		"description": "Functions are Objects: the other point of view",
		"time": "2013-09-02T09:44:07Z",
		"href": "http://monospacedmonologues.com/post/58923319303/functions-are-objects-the-other-point-of-view"
	},
	{
		"cluster": 17,
		"tags": [
			"idempotence",
			"mathematics",
			"computerscience",
			"functional",
			"programming",
			"functionalprogramming",
			"semantics"
		],
		"y": -0.6215072094010125,
		"x": -11.1957899502304,
		"extended": "",
		"description": "Everything in Context: Some classes of effectful programs",
		"time": "2013-09-02T09:40:42Z",
		"href": "http://lambdamaphone.blogspot.co.uk/2013/08/some-classes-of-effectful-programs.html?m=1"
	},
	{
		"cluster": 16,
		"tags": [
			"spark",
			"parquet",
			"avro",
			"mapreduce",
			"analysis",
			"data",
			"programming",
			"computerscience",
			"datascience",
			"engineering",
			"software"
		],
		"y": -0.3233112865934073,
		"x": -1.6909447853102115,
		"extended": "",
		"description": "A powerful Big Data trio: Spark, Parquet and Avro - Zen Fractal",
		"time": "2013-09-02T09:35:35Z",
		"href": "http://zenfractal.com/2013/08/21/a-powerful-big-data-trio/"
	},
	{
		"cluster": 2,
		"tags": [
			"threads",
			"fork",
			"concurrency",
			"unix"
		],
		"y": -2.5710248895512504,
		"x": 3.464352147222994,
		"extended": "",
		"description": "POSIX Threads and fork(2): on not crossing the streams « LShift Ltd.",
		"time": "2013-09-02T09:01:18Z",
		"href": "http://www.lshift.net/blog/2013/08/31/posix-threads-and-fork2-on-not-crossing-the-streams"
	},
	{
		"cluster": 18,
		"tags": [
			"clusters",
			"scheduling",
			"systems",
			"distributed",
			"infrastructure",
			"analytics",
			"software",
			"engineering",
			"devops",
			"clustering"
		],
		"y": 4.026335111365284,
		"x": 0.7223965512702358,
		"extended": "",
		"description": "Running batch and long-running, highly available service jobs on the same cluster - Strata",
		"time": "2013-09-02T08:54:58Z",
		"href": "http://strata.oreilly.com/2013/09/running-batch-and-long-running-highly-available-service-jobs-on-the-same-cluster.html"
	},
	{
		"cluster": 17,
		"tags": [
			"java",
			"scala",
			"final",
			"val",
			"npe",
			"def",
			"programming",
			"computerscience",
			"software"
		],
		"y": 2.085920848586467,
		"x": -9.453652636769977,
		"extended": "",
		"description": "Abstractivate: Def and Val in Scala constructors",
		"time": "2013-09-02T08:53:01Z",
		"href": "http://blog.jessitron.com/2013/08/def-and-val-in-scala-constructors.html"
	},
	{
		"cluster": 5,
		"tags": [
			"abtesting",
			"testing",
			"bayesian",
			"statistics",
			"analysis",
			"analytics",
			"python",
			"lognormal"
		],
		"y": -3.983054832518901,
		"x": -2.656895532867663,
		"extended": "",
		"description": "Bayesian A/B Testing with a Log-Normal Model | {rr} Engineering Blog",
		"time": "2013-09-02T08:36:24Z",
		"href": "http://engineering.richrelevance.com/bayesian-ab-testing-with-a-log-normal-model/"
	},
	{
		"cluster": 5,
		"tags": [
			"abtesting",
			"testing",
			"bayesian",
			"statistics",
			"analysis",
			"analytics",
			"python"
		],
		"y": -3.977325010597912,
		"x": -2.6605987502357564,
		"extended": "",
		"description": "Bayesian Analysis of Normal Distributions with Python | {rr} Engineering Blog",
		"time": "2013-09-02T08:36:12Z",
		"href": "http://engineering.richrelevance.com/bayesian-analysis-of-normal-distributions-with-python/"
	},
	{
		"cluster": 5,
		"tags": [
			"abtesting",
			"testing",
			"bayesian",
			"statistics",
			"analysis",
			"analytics"
		],
		"y": -3.9656469978758895,
		"x": -2.662935776064777,
		"extended": "",
		"description": "Bayesian A/B Tests | {rr} Engineering Blog",
		"time": "2013-09-02T08:35:58Z",
		"href": "http://engineering.richrelevance.com/bayesian-ab-tests/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"python",
			"testing",
			"types",
			"software",
			"engineering",
			"reliability",
			"oop",
			"functional",
			"programming"
		],
		"y": -4.316814418826517,
		"x": -8.09823311354787,
		"extended": "",
		"description": "Chromatic Leaves | Making Code Reasonable",
		"time": "2013-08-31T11:41:34Z",
		"href": "http://chromaticleaves.com/posts/making-code-reasonable.html"
	},
	{
		"cluster": 5,
		"tags": [
			"clt",
			"centrallimittheorem",
			"mathematics",
			"statistics",
			"programming",
			"testing",
			"scala"
		],
		"y": -0.7036358788436688,
		"x": -9.754263990967193,
		"extended": "",
		"description": "A Programmer's Guide to the Central Limit Theorem",
		"time": "2013-08-31T10:59:09Z",
		"href": "http://jliszka.github.io/2013/08/26/a-programmers-guide-to-the-central-limit-theorem.html"
	},
	{
		"cluster": 5,
		"tags": [
			"cart",
			"statistics",
			"machinelearning",
			"crossvalidation",
			"loo",
			"bootstrap",
			"jackknife",
			"leaveoneout",
			"validation",
			"testing"
		],
		"y": -2.9300315566914565,
		"x": -3.8180424290826305,
		"extended": "",
		"description": "Why Leave-One-Out (LOO) Cross-Validation Does Not Work For Trees",
		"time": "2013-08-31T10:51:34Z",
		"href": "http://1.salford-systems.com/blog/bid/312328/Why-Leave-One-Out-LOO-Cross-Validation-Does-Not-Work-For-Trees"
	},
	{
		"cluster": 0,
		"tags": [
			"scaling",
			"infrastructure",
			"reddit",
			"operations",
			"web",
			"software",
			"engineering",
			"devops"
		],
		"y": 4.196832837083125,
		"x": 1.3252799011014966,
		"extended": "",
		"description": "High Scalability - High Scalability - Reddit: Lessons Learned from Mistakes Made Scaling to 1 Billion Pageviews a Month",
		"time": "2013-08-31T10:50:01Z",
		"href": "http://highscalability.com/blog/2013/8/26/reddit-lessons-learned-from-mistakes-made-scaling-to-1-billi.html"
	},
	{
		"cluster": 4,
		"tags": [
			"freemonad",
			"free",
			"monad",
			"categorytheory",
			"haskell",
			"types",
			"functional",
			"programming",
			"typetheory",
			"computerscience"
		],
		"y": -5.792686704798001,
		"x": -10.30626471435495,
		"extended": "",
		"description": "haskell - What are free monads? - Stack Overflow",
		"time": "2013-08-31T10:33:41Z",
		"href": "http://stackoverflow.com/questions/13352205/what-are-free-monads"
	},
	{
		"cluster": 18,
		"tags": [
			"bdd",
			"project",
			"management",
			"features",
			"stories",
			"organization",
			"projectmanagement",
			"agile",
			"software",
			"development"
		],
		"y": 6.733324579128261,
		"x": 1.3298567828259347,
		"extended": "",
		"description": "BDD: How to deal stories into features",
		"time": "2013-08-31T10:16:18Z",
		"href": "http://chrismdp.com/2013/08/dealing-stories-into-features/"
	},
	{
		"cluster": 4,
		"tags": [
			"groundhog",
			"database",
			"haskell",
			"functional",
			"programming",
			"persistence"
		],
		"y": -5.186758951380892,
		"x": -8.307021669842587,
		"extended": "",
		"description": "Creating sqlite tables with Groundhog's default settings",
		"time": "2013-08-31T09:55:54Z",
		"href": "http://blog.begriffs.com/2013/08/creating-sqlite-tables-with-groundhogs.html"
	},
	{
		"cluster": 0,
		"tags": [
			"linux",
			"containers",
			"virtualization",
			"operations",
			"infrastructure",
			"sysadmin",
			"devops"
		],
		"y": -8.558725515230506,
		"x": 8.506391610078573,
		"extended": "",
		"description": "LXC: Linux container tools",
		"time": "2013-08-29T12:25:43Z",
		"href": "http://www.ibm.com/developerworks/linux/library/l-lxc-containers/"
	},
	{
		"cluster": 0,
		"tags": [
			"docker",
			"linux",
			"containers",
			"virtualization",
			"operations",
			"systems",
			"ops",
			"devops",
			"development"
		],
		"y": -8.595128349504664,
		"x": 8.611109941782763,
		"extended": "",
		"description": "About Docker - Docker, The linux container engine",
		"time": "2013-08-29T12:08:37Z",
		"href": "http://www.docker.io/learn_more/"
	},
	{
		"cluster": 17,
		"tags": [
			"python",
			"numpy",
			"bagofwords",
			"nlp",
			"libsvm",
			"neuralnetwork",
			"sparsenn",
			"programming",
			"machinelearning"
		],
		"y": 0.45967361133632706,
		"x": -4.767647727169775,
		"extended": "",
		"description": "A bag of words and a nice little network - FastML",
		"time": "2013-08-28T08:48:38Z",
		"href": "http://fastml.com/a-bag-of-words-and-a-nice-little-network/"
	},
	{
		"cluster": 7,
		"tags": [
			"database",
			"sql",
			"performance",
			"scaling",
			"systems",
			"persistence",
			"programming",
			"development"
		],
		"y": 3.331639308704115,
		"x": -1.9424035841551834,
		"extended": "",
		"description": "Myth: Select * is Bad",
		"time": "2013-08-28T07:33:53Z",
		"href": "http://use-the-index-luke.com/blog/2013-08/its-not-about-the-star-stupid"
	},
	{
		"cluster": 18,
		"tags": [
			"scala",
			"testing",
			"jasmine",
			"programming",
			"software",
			"engineering"
		],
		"y": 5.508763418447245,
		"x": -3.7059826846832418,
		"extended": "",
		"description": "Jasmine-style BDD tests in Scala | Eugene Prystupa's Weblog",
		"time": "2013-08-28T07:27:22Z",
		"href": "http://eprystupa.wordpress.com/2013/08/25/jasmine-style-bdd-tests-in-scala/"
	},
	{
		"cluster": 12,
		"tags": [
			"javasript",
			"web",
			"crypto",
			"cryptography",
			"security",
			"development",
			"programming",
			"applications"
		],
		"y": 11.66732259050092,
		"x": -4.537543413894823,
		"extended": "",
		"description": "Matasano Security - Matasano Web Security Assessments for Enterprises",
		"time": "2013-08-27T15:06:43Z",
		"href": "http://www.matasano.com/articles/javascript-cryptography/"
	},
	{
		"cluster": 18,
		"tags": [
			"ddd",
			"rails",
			"domain",
			"driven",
			"design",
			"domaindrivendesign",
			"oop",
			"infrastructure",
			"engineering",
			"ood",
			"programming",
			"software",
			"aggregates"
		],
		"y": 5.365078888798592,
		"x": -6.29726144759141,
		"extended": "",
		"description": "DDD for Rails Developers. Part 3: Aggregates. - SitePoint",
		"time": "2013-08-27T15:01:32Z",
		"href": "http://www.sitepoint.com/ddd-for-rails-developers-part-3-aggregates/"
	},
	{
		"cluster": 18,
		"tags": [
			"ddd",
			"rails",
			"domain",
			"driven",
			"design",
			"domaindrivendesign",
			"oop",
			"infrastructure",
			"engineering",
			"ood",
			"programming",
			"software"
		],
		"y": 5.364937536630516,
		"x": -6.279352776422334,
		"extended": "",
		"description": "DDD for Rails Developers. Part 2: Entities and Values - SitePoint",
		"time": "2013-08-27T14:58:12Z",
		"href": "http://www.sitepoint.com/ddd-for-rails-developers-part-2-entities-and-values/"
	},
	{
		"cluster": 18,
		"tags": [
			"ddd",
			"rails",
			"domain",
			"driven",
			"design",
			"domaindrivendesign",
			"oop",
			"infrastructure",
			"engineering",
			"ood",
			"programming",
			"software"
		],
		"y": 5.359658544841871,
		"x": -6.286140877170955,
		"extended": "",
		"description": "DDD for Rails Developers. Part 1: Layered Architecture. - SitePoint",
		"time": "2013-08-27T14:56:16Z",
		"href": "http://www.sitepoint.com/ddd-for-rails-developers-part-1-layered-architecture/"
	},
	{
		"cluster": 17,
		"tags": [
			"languages",
			"programming",
			"tutorial",
			"computerscience",
			"references"
		],
		"y": 2.0931371132759518,
		"x": -11.66810552572044,
		"extended": "",
		"description": "Learn X in Y Minutes: Scenic Programming Language Tours",
		"time": "2013-08-23T13:31:46Z",
		"href": "http://learnxinyminutes.com/"
	},
	{
		"cluster": 16,
		"tags": [
			"crdts",
			"datastructures",
			"data",
			"types",
			"commutative",
			"concurrency",
			"systems",
			"persistence",
			"distributed",
			"computing",
			"computerscience"
		],
		"y": 2.202836223883537,
		"x": -10.446333560197004,
		"extended": "",
		"description": "High Scalability - High Scalability - Paper: CRDTs: Consistency without concurrency control",
		"time": "2013-08-23T13:30:35Z",
		"href": "http://highscalability.com/blog/2010/12/23/paper-crdts-consistency-without-concurrency-control.html"
	},
	{
		"cluster": 0,
		"tags": [
			"deployment",
			"delivery",
			"netflix",
			"ops",
			"devops",
			"web",
			"operations",
			"software",
			"product",
			"engineering"
		],
		"y": 4.241384661344195,
		"x": 1.3701388895881248,
		"extended": "",
		"description": "The Netflix Tech Blog: Deploying the Netflix API",
		"time": "2013-08-23T13:28:32Z",
		"href": "http://techblog.netflix.com/2013/08/deploying-netflix-api.html"
	},
	{
		"cluster": 2,
		"tags": [
			"neo4j",
			"ontology",
			"owl",
			"semanticweb",
			"semantic",
			"web",
			"semweb",
			"linkeddata",
			"persistence",
			"graph",
			"database",
			"modelling"
		],
		"y": 2.3044834028873518,
		"x": 1.89590616764361,
		"extended": "",
		"description": "Neo4j Blog: And Now for Something Completely Different: Using OWL with Neo4j",
		"time": "2013-08-23T13:16:09Z",
		"href": "http://blog.neo4j.org/2013/08/and-now-for-something-completely.html"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"demo",
			"visualisation",
			"example",
			"statistical",
			"pattern",
			"recognition"
		],
		"y": -1.1461977111304391,
		"x": 3.2789747759062555,
		"extended": "",
		"description": "Examples: Statistical Pattern Recognition Toolbox for Matlab",
		"time": "2013-08-23T12:51:08Z",
		"href": "http://cmp.felk.cvut.cz/cmp/software/stprtool/examples.html"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"bayesian",
			"statistics",
			"survivalanalysis",
			"survival",
			"analysis",
			"python",
			"mcmc",
			"pymc",
			"computing",
			"programming",
			"statistical"
		],
		"y": -3.9577303930116456,
		"x": -4.054937992560009,
		"extended": "",
		"description": "Estimating User Lifetimes - the right and many wrong ways",
		"time": "2013-08-23T12:48:07Z",
		"href": "http://blog.yhathq.com/posts/estimating-user-lifetimes-with-pymc.html"
	},
	{
		"cluster": 2,
		"tags": [
			"quantm",
			"physics",
			"computing"
		],
		"y": -8.678958342427961,
		"x": -1.5612891832556666,
		"extended": "",
		"description": "▶ Quantum Computers Explained - YouTube",
		"time": "2013-08-23T11:20:42Z",
		"href": "http://www.youtube.com/watch?v=T2DXrs0OpHU"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"talk",
			"typing",
			"static",
			"types",
			"statictyping",
			"programming",
			"computerscience",
			"functional"
		],
		"y": -6.480617723667745,
		"x": -10.78850384247168,
		"extended": "",
		"description": "[ny-haskell] A Pragmatic Case for Static Typing with Brian Hurt on Vimeo",
		"time": "2013-08-23T10:20:32Z",
		"href": "http://vimeo.com/72870631"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"composition",
			"partialapplication",
			"pointfreestyle",
			"pointfree",
			"pointless",
			"computerscience"
		],
		"y": -5.761535156608293,
		"x": -9.452626122293358,
		"extended": "",
		"description": "Joe Nelson: Try GHCi on Acid and watch function arguments melt away",
		"time": "2013-08-22T20:37:13Z",
		"href": "http://blog.begriffs.com/2013/08/try-ghci-on-acid-and-watch-function.html"
	},
	{
		"cluster": 17,
		"tags": [
			"dispatch",
			"plt",
			"programming",
			"languages",
			"computerscience",
			"clojure",
			"multimethods",
			"dynamic",
			"static"
		],
		"y": 1.7463156539273206,
		"x": -11.233100981632704,
		"extended": "",
		"description": "Cleverly Titled Blog: Dynamic Dispatch in Scala",
		"time": "2013-08-21T10:54:11Z",
		"href": "http://cleverlytitled.blogspot.co.uk/2010/01/dynamic-dispatch-in-scala.html"
	},
	{
		"cluster": 10,
		"tags": [
			"marxism",
			"politics",
			"dialectics",
			"philosophy",
			"dialectic",
			"hegel"
		],
		"y": 5.381988219581953,
		"x": 12.543130891555906,
		"extended": "",
		"description": "A Very Public Sociologist: Marx and Dialectics",
		"time": "2013-08-19T21:58:20Z",
		"href": "http://feedly.com/k/14QA3SC"
	},
	{
		"cluster": 18,
		"tags": [
			"vectorclock",
			"vector",
			"clock",
			"consistency",
			"conflict",
			"resolution",
			"conflictresolution",
			"algorithms",
			"concurrency",
			"computerscience",
			"persistence",
			"engineering",
			"architecture"
		],
		"y": 1.2024770258958426,
		"x": -1.962164279149643,
		"extended": "",
		"description": "Why Vector Clocks Are Hard | Basho",
		"time": "2013-08-15T16:40:36Z",
		"href": "http://basho.com/why-vector-clocks-are-hard/"
	},
	{
		"cluster": 18,
		"tags": [
			"vector",
			"clock",
			"vectorclock",
			"distributed",
			"systems",
			"distributedsystems",
			"concurrency",
			"consistency",
			"architecture",
			"persistence",
			"engineering",
			"computerscience",
			"algorithms"
		],
		"y": 1.233588313898416,
		"x": -1.91903420704582,
		"extended": "",
		"description": "Why Vector Clocks are Easy | Basho",
		"time": "2013-08-15T16:36:50Z",
		"href": "http://basho.com/why-vector-clocks-are-easy/"
	},
	{
		"cluster": 2,
		"tags": [
			"consistenthashing",
			"consistent",
			"hasning",
			"algorithms",
			"persistence",
			"computerscience",
			"redundancy",
			"scalability",
			"distributed",
			"systems",
			"distributedsystems"
		],
		"y": 1.4011830539557522,
		"x": -1.0417316505588048,
		"extended": "",
		"description": "Consistent hashing | Michael Nielsen",
		"time": "2013-08-15T16:13:19Z",
		"href": "http://michaelnielsen.org/blog/consistent-hashing/"
	},
	{
		"cluster": 18,
		"tags": [
			"riak",
			"availability",
			"distributed",
			"systems",
			"persistence",
			"keyvalue",
			"architecture",
			"storage",
			"engineering",
			"computerscience"
		],
		"y": 1.633272890393614,
		"x": -0.9628156482105389,
		"extended": "",
		"description": "Riak Overview - includes 1.3 features // Speaker Deck",
		"time": "2013-08-15T15:59:25Z",
		"href": "https://speakerdeck.com/basho/riak-overview-includes-1-dot-3-features"
	},
	{
		"cluster": 4,
		"tags": [
			"computerscience",
			"functional",
			"programming",
			"haskell",
			"concurrency",
			"paralellism"
		],
		"y": -7.089467499570472,
		"x": -9.12537636920609,
		"extended": "",
		"description": "Do Extraterrestrials Use Functional Programming? // Speaker Deck",
		"time": "2013-08-15T15:47:42Z",
		"href": "https://speakerdeck.com/mchakravarty/do-extraterrestrials-use-functional-programming"
	},
	{
		"cluster": 18,
		"tags": [
			"idempotence",
			"distributed",
			"systems",
			"programming",
			"computerscience",
			"engineering",
			"architecture",
			"protocol",
			"design"
		],
		"y": 1.7636975858394,
		"x": -1.1320604679477881,
		"extended": "",
		"description": "Secondary Brain Garbage - Interesting bits from \"Idempotence Is Not a Medical Condition\"",
		"time": "2013-08-15T15:46:35Z",
		"href": "http://mononcqc.tumblr.com/post/55928703621/interesting-bits-from-idempotence-is-not-a-medical"
	},
	{
		"cluster": 18,
		"tags": [
			"persistence",
			"consistency",
			"availability",
			"partitiontolerance",
			"captheorem",
			"cap",
			"theorem",
			"computerscience",
			"distributed",
			"systems",
			"programming",
			"nosql",
			"engineering",
			"architecture"
		],
		"y": 1.749894427144036,
		"x": -1.0345837970115193,
		"extended": "",
		"description": "The CAP FAQ by henryr",
		"time": "2013-08-15T15:37:34Z",
		"href": "http://henryr.github.io/cap-faq/"
	},
	{
		"cluster": 4,
		"tags": [
			"matrix",
			"haskell",
			"multiplication",
			"linearalgebra",
			"functional",
			"programming",
			"computerscience",
			"mortonordering",
			"interleaving",
			"representation",
			"sparse",
			"mathematics",
			"lenses"
		],
		"y": -5.673680675057839,
		"x": -9.624205953019265,
		"extended": "",
		"description": "Revisiting Matrix Multiplication, Part I - School of Haskell | FP Complete",
		"time": "2013-08-15T12:26:03Z",
		"href": "https://www.fpcomplete.com/user/edwardk/revisiting-matrix-multiplication-part-1?show=tutorials"
	},
	{
		"cluster": 13,
		"tags": [
			"policy",
			"economics",
			"macro",
			"politics",
			"macroeconomics",
			"austerity"
		],
		"y": 10.220507202514183,
		"x": 9.170796981811742,
		"extended": "",
		"description": "Bill Black: Rajan Calls Krugman “Paranoid” for Criticizing Reinhart’s and Rogoff’s Research « naked capitalism",
		"time": "2013-08-15T08:47:40Z",
		"href": "http://www.nakedcapitalism.com/2013/08/bill-black-rajan-calls-krugman-paranoid-for-criticizing-reinhart-and-rogoffs-research.html"
	},
	{
		"cluster": 15,
		"tags": [
			"learning",
			"theory",
			"regular",
			"languages",
			"machinelearning",
			"computerscience",
			"learningtheory",
			"pac",
			"dfas",
			"computation",
			"computability",
			"hardness"
		],
		"y": -1.5510452658367668,
		"x": -10.358558220718686,
		"extended": "",
		"description": "On Learning Regular Languages « Stack Exchange Theoretical Computer Science Blog",
		"time": "2013-08-14T12:50:57Z",
		"href": "http://cstheory.blogoverflow.com/2011/08/on-learning-regular-languages/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"macro",
			"macroeconomics",
			"friedman",
			"hayek",
			"monetary",
			"policy"
		],
		"y": 10.334304047124814,
		"x": 9.148720070315564,
		"extended": "",
		"description": "Synthesis Lost - NYTimes.com",
		"time": "2013-08-13T10:28:14Z",
		"href": "http://mobile.nytimes.com/blogs/krugman/2013/08/12/synthesis-lost/?from=krugman"
	},
	{
		"cluster": 2,
		"tags": [
			"business",
			"organization",
			"structure",
			"management"
		],
		"y": 1.855689838590578,
		"x": 4.134496984475065,
		"extended": "",
		"description": "People and Planet: how operating without a director saved us | Voluntary Sector Network | Guardian Professional",
		"time": "2013-08-13T09:58:40Z",
		"href": "http://www.theguardian.com/voluntary-sector-network/2013/aug/12/people-and-planet-staff-restructure-crisis"
	},
	{
		"cluster": 18,
		"tags": [
			"tdd",
			"agile",
			"development",
			"processes",
			"softwareengineering",
			"software",
			"engineering",
			"bdd",
			"programming"
		],
		"y": 7.200591254636263,
		"x": -4.7203772361128395,
		"extended": "",
		"description": "Tea-Driven Development :: Half-arsed agile",
		"time": "2013-08-12T16:07:57Z",
		"href": "http://blog.mattwynne.net/2013/08/12/half-arsed-agile/"
	},
	{
		"cluster": 13,
		"tags": [
			"growth",
			"economics",
			"employment",
			"policvy",
			"politics",
			"marxism",
			"kalecki",
			"pocket-unread"
		],
		"y": 8.322541985330686,
		"x": 8.938436644484774,
		"extended": "",
		"description": "Michal Kalecki, \"Political Aspects of Full Employment\"",
		"time": "2013-08-11T14:26:11Z",
		"href": "http://mrzine.monthlyreview.org/2010/kalecki220510.html"
	},
	{
		"cluster": 2,
		"tags": [
			"play",
			"scala",
			"deployment",
			"web",
			"aws",
			"coursera"
		],
		"y": 6.956944452136669,
		"x": -1.131089028173691,
		"extended": "",
		"description": "Deploying Play! Apps - Brennan & Emin Talk About Computer Science",
		"time": "2013-08-10T11:41:10Z",
		"href": "http://betacs.pro/blog/2013/08/03/deploying-play-apps/"
	},
	{
		"cluster": 5,
		"tags": [
			"herp",
			"derp",
			"herpderp",
			"politics",
			"statistics",
			"bayesian"
		],
		"y": 5.757949283758444,
		"x": 10.638497893961734,
		"extended": "",
		"description": "Noahpinion: What is \"derp\"? The answer is technical.",
		"time": "2013-08-09T16:25:57Z",
		"href": "http://noahpinionblog.blogspot.jp/2013/06/what-is-derp-answer-is-technical.html"
	},
	{
		"cluster": 2,
		"tags": [
			"oauth",
			"standards",
			"security",
			"authorization",
			"authentication",
			"web"
		],
		"y": 8.613334937871699,
		"x": 1.5546438933337134,
		"extended": "",
		"description": "OAuth 2.0 and the Road to Hell « hueniverse",
		"time": "2013-08-09T16:24:25Z",
		"href": "http://hueniverse.com/2012/07/oauth-2-0-and-the-road-to-hell/"
	},
	{
		"cluster": 18,
		"tags": [
			"patterns",
			"responsibility-centric",
			"design",
			"development",
			"dependency",
			"injection",
			"di",
			"oop",
			"objectoriented",
			"programming",
			"architecture"
		],
		"y": 5.188981603165212,
		"x": -7.071985567186517,
		"extended": "",
		"description": "Do I need DI? - James Coglan",
		"time": "2013-08-09T16:12:17Z",
		"href": "http://slides.jcoglan.com/di-eurucamp#1"
	},
	{
		"cluster": 15,
		"tags": [
			"algebra",
			"linear",
			"linear-algebra",
			"mathematics",
			"vectorspace",
			"vector",
			"space"
		],
		"y": 3.0845498521575148,
		"x": 1.446380360089178,
		"extended": "",
		"description": "Linear Algebra – A Primer | Math ∩ Programming",
		"time": "2013-08-05T21:55:51Z",
		"href": "http://jeremykun.com/2011/06/19/linear-algebra-a-primer/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"2",
			"ruby2",
			"2.0",
			"change",
			"programming",
			"development"
		],
		"y": 7.462927434548827,
		"x": -8.792695088763809,
		"extended": "",
		"description": "Ruby 2.0.0 in Detail",
		"time": "2013-08-02T19:24:39Z",
		"href": "http://globaldev.co.uk/2013/03/ruby-2-0-0-in-detail/"
	},
	{
		"cluster": 17,
		"tags": [
			"postgresql",
			"postgres",
			"sql",
			"database",
			"index",
			"pagination",
			"seek",
			"method",
			"infinite",
			"scroll",
			"programming"
		],
		"y": 2.7701643739725212,
		"x": -1.482851476658334,
		"extended": "",
		"description": "Pagination done the PostgreSQL way",
		"time": "2013-08-02T08:53:47Z",
		"href": "http://use-the-index-luke.com/blog/2013-07/pagination-done-the-postgresql-way"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"settheorym",
			"set",
			"theory",
			"logic"
		],
		"y": -8.198022285409982,
		"x": -4.115825510718241,
		"extended": "",
		"description": "Set Theory – A Primer | Math ∩ Programming",
		"time": "2013-07-31T07:33:39Z",
		"href": "http://jeremykun.com/2011/07/09/set-theory-a-primer/"
	},
	{
		"cluster": 17,
		"tags": [
			"propertybasedtesting",
			"testing",
			"quickcheck",
			"propertuies",
			"scala",
			"programming"
		],
		"y": 7.036404215410499,
		"x": -3.777232437168971,
		"extended": "",
		"description": "Abstractivate: Property-based testing: what is it?",
		"time": "2013-07-25T18:29:39Z",
		"href": "http://blog.jessitron.com/2013/04/property-based-testing-what-is-it.html"
	},
	{
		"cluster": 18,
		"tags": [
			"scala",
			"di",
			"dependencyinjection",
			"dependency.injection",
			"programming",
			"software",
			"engineering",
			"pocket-read"
		],
		"y": 5.215630748895519,
		"x": -3.367281368086016,
		"extended": "",
		"description": "Real-World Scala: Dependency Injection (DI) ←",
		"time": "2013-07-25T18:24:04Z",
		"href": "http://jonasboner.com/2008/10/06/real-world-scala-dependency-injection-di/"
	},
	{
		"cluster": 18,
		"tags": [
			"pattern",
			"scala",
			"cake",
			"programming",
			"software",
			"engineering",
			"dependency",
			"di"
		],
		"y": 5.253395144007808,
		"x": -3.4472246393208894,
		"extended": "",
		"description": "Eran Medan : Cake Pattern in Scala / Self type annotations / Explicitly Typed Self References - explained",
		"time": "2013-07-25T18:12:24Z",
		"href": "https://coderwall.com/p/t_rapw"
	},
	{
		"cluster": 16,
		"tags": [
			"statistics",
			"science",
			"experimentaldesign",
			"data",
			"analysis"
		],
		"y": -2.7035369957094795,
		"x": -1.5042431550009767,
		"extended": "",
		"description": "Statistics and psychology: Multiple comparisons give spurious results. - Slate Magazine",
		"time": "2013-07-25T17:59:44Z",
		"href": "http://www.slate.com/articles/health_and_science/science/2013/07/statistics_and_psychology_multiple_comparisons_give_spurious_results.single.html"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"location",
			"perception",
			"learning",
			"machinelearning",
			"geography",
			"geodata"
		],
		"y": -1.5632241605830803,
		"x": -0.569574334235759,
		"extended": "",
		"description": "Place Pulse | Mapping Urban Perception",
		"time": "2013-07-25T17:41:37Z",
		"href": "http://pulse.media.mit.edu/data/"
	},
	{
		"cluster": 14,
		"tags": [
			"songkick",
			"presentation",
			"architecture",
			"services",
			"infrastructure",
			"product",
			"design",
			"ux",
			"web",
			"development"
		],
		"y": 9.498992533905719,
		"x": 0.8342656664998871,
		"extended": "",
		"description": "How We Scaled Songkick for More Traffic and More Productive Development",
		"time": "2013-07-24T11:07:06Z",
		"href": "http://www.infoq.com/presentations/songkick-scale"
	},
	{
		"cluster": 18,
		"tags": [
			"scala",
			"cakepattern",
			"testing",
			"services",
			"architecture",
			"web",
			"engineering",
			"software",
			"reactiveprogramming"
		],
		"y": 5.531849992193294,
		"x": -3.8484524026572187,
		"extended": "",
		"description": "Enabling Microservice Architectures with Scala",
		"time": "2013-07-23T14:51:03Z",
		"href": "http://www.infoq.com/presentations/Microservice-Architectures-Scala"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"computerscience",
			"haskell",
			"powers",
			"algebra",
			"abstract",
			"exponents"
		],
		"y": -1.6607976894394616,
		"x": -11.428578933212084,
		"extended": "",
		"description": "winterkoninkje | Notions of powers",
		"time": "2013-07-21T11:28:22Z",
		"href": "http://winterkoninkje.dreamwidth.org/85045.html"
	},
	{
		"cluster": 18,
		"tags": [
			"softwareengineering",
			"architecture",
			"design",
			"ruby",
			"oop",
			"ebi",
			"programming"
		],
		"y": 5.253989369844591,
		"x": -7.17433426092715,
		"extended": "",
		"description": "Watch \"Keynote: Architecture the Lost Years by Robert Martin\" on YouTube",
		"time": "2013-07-19T14:29:33Z",
		"href": "http://www.youtube.com/watch?v=WpkDN78P884&feature=youtube_gdata_player"
	},
	{
		"cluster": 18,
		"tags": [
			"amqp",
			"ruby",
			"messaging",
			"software",
			"programming",
			"design",
			"patterns"
		],
		"y": 6.2933230252716195,
		"x": -7.825853462610231,
		"extended": "",
		"description": "File: Ruby AMQP gem: Patterns and Use Cases — Documentation for ruby-amqp/amqp (master)",
		"time": "2013-07-14T09:32:43Z",
		"href": "http://rubydoc.info/github/ruby-amqp/amqp/master/file/docs/PatternsAndUseCases.textile#Request_Reply_pattern"
	},
	{
		"cluster": 17,
		"tags": [
			"websockets",
			"javascript",
			"programming",
			"json",
			"events",
			"webdevelopment"
		],
		"y": 9.409644930669874,
		"x": -3.8763181462732437,
		"extended": "",
		"description": "A JSON event-based convention for WebSockets – New Bamboo blog",
		"time": "2013-07-14T06:44:32Z",
		"href": "http://blog.new-bamboo.co.uk/2010/02/10/json-event-based-convention-websockets"
	},
	{
		"cluster": 5,
		"tags": [
			"prior",
			"conjugate",
			"statistics",
			"bayesian",
			"onlinelearning",
			"machinelearning"
		],
		"y": -3.253962055772718,
		"x": -3.7965297090827854,
		"extended": "",
		"description": "The magic of conjugate priors (for online learning)",
		"time": "2013-07-14T06:40:43Z",
		"href": "http://www.chrisstucchio.com/blog/2013/magic_of_conjugate_priors.html"
	},
	{
		"cluster": 2,
		"tags": [
			"nosql",
			"distributed",
			"storage",
			"scalability",
			"architecture",
			"database",
			"persistence"
		],
		"y": 2.9775014608646178,
		"x": 0.18987095165900647,
		"extended": "",
		"description": "Richard Jones | Anti-RDBMS: A list of distributed key-value stores",
		"time": "2013-07-14T06:32:26Z",
		"href": "http://www.metabrew.com/article/anti-rdbms-a-list-of-distributed-key-value-stores"
	},
	{
		"cluster": 18,
		"tags": [
			"crc",
			"oop",
			"objectoriented",
			"design",
			"programming",
			"software",
			"systems",
			"engineering"
		],
		"y": 5.319255186966582,
		"x": -6.158668606338277,
		"extended": "",
		"description": "Responsibility-based Modeling",
		"time": "2013-07-13T12:16:40Z",
		"href": "http://web.archive.org/web/20040404054737/members.aol.com/humansandt/techniques/responsibility.htm"
	},
	{
		"cluster": 5,
		"tags": [
			"data",
			"machinelearning",
			"statistics",
			"time_series",
			"persiststence",
			"database",
			"computerscience",
			"programming"
		],
		"y": -1.3237165970866145,
		"x": -6.590598366788478,
		"extended": "",
		"description": "The re-emergence of time-series - Strata",
		"time": "2013-07-13T11:35:33Z",
		"href": "http://strata.oreilly.com/2013/04/the-re-emergence-of-time-series.html"
	},
	{
		"cluster": 16,
		"tags": [
			"machinelearning",
			"recsys",
			"data",
			"recommendations",
			"research"
		],
		"y": -1.5484957954899274,
		"x": -0.8172738782145054,
		"extended": "",
		"description": "Data Science in Action: Are your recommendations any good?",
		"time": "2013-07-12T14:53:40Z",
		"href": "http://data-science-in-action.blogspot.co.uk/2013/07/are-your-recommendations-any-good.html"
	},
	{
		"cluster": 16,
		"tags": [
			"datascience",
			"mathematics",
			"statistics",
			"data",
			"management",
			"analysis",
			"business",
			"measurement"
		],
		"y": -2.7096263128174347,
		"x": -1.9065580758883058,
		"extended": "",
		"description": "On being a data science skeptic: due out soon | mathbabe",
		"time": "2013-07-11T12:55:27Z",
		"href": "http://mathbabe.org/2013/07/11/on-being-a-data-science-skeptic-due-out-soon/"
	},
	{
		"cluster": 18,
		"tags": [
			"srp",
			"solid",
			"design",
			"oop",
			"ood",
			"objectoriented",
			"programming",
			"softwareengineering"
		],
		"y": 5.044752042011271,
		"x": -7.193150805996447,
		"extended": "",
		"description": "ArticleS.UncleBob.SrpInRuby",
		"time": "2013-07-11T06:45:18Z",
		"href": "http://butunclebob.com/ArticleS.UncleBob.SrpInRuby"
	},
	{
		"cluster": 2,
		"tags": [
			"database",
			"quiz",
			"sql",
			"performance",
			"index"
		],
		"y": -1.8115512563876728,
		"x": 2.5226749824154178,
		"extended": "",
		"description": "Test Your SQL Performance Know-How in 3 Minutes",
		"time": "2013-07-11T06:27:55Z",
		"href": "http://use-the-index-luke.com/3-minute-test/mysql?quizkey=dd939c0ae40ecbbe665b6c8c3cb0273f"
	},
	{
		"cluster": 18,
		"tags": [
			"SRP",
			"single",
			"responsibility",
			"comments",
			"design",
			"objectoriented",
			"software",
			"engineering",
			"oop",
			"ood"
		],
		"y": 5.393412828430287,
		"x": -6.58649203330457,
		"extended": "",
		"description": "Single responsibility principle? Does it mean I can't have more than one method in my class?",
		"time": "2013-07-11T05:56:31Z",
		"href": "http://blog.developers.ba/post/2009/04/16/single-responsibility-principle-does-it-mean-i-cant-have-more-than-one-method-in-my-class.aspx"
	},
	{
		"cluster": 18,
		"tags": [
			"refactoring",
			"ruby",
			"engineering",
			"software",
			"programming",
			"development",
			"oop",
			"srp",
			"design"
		],
		"y": 6.216161714742746,
		"x": -6.599209554879665,
		"extended": "",
		"description": "ArrrrCamp #6 - Katrina Owen - Therapeutic Refactoring on Vimeo",
		"time": "2013-07-10T13:58:45Z",
		"href": "http://vimeo.com/51634446"
	},
	{
		"cluster": 18,
		"tags": [
			"twitter",
			"architecture",
			"performance",
			"scalability",
			"software",
			"systems",
			"engineering"
		],
		"y": 4.850100997922608,
		"x": -4.7204406886362476,
		"extended": "",
		"description": "High Scalability - High Scalability - The Architecture Twitter Uses to Deal with 150M Active Users, 300K QPS, a 22 MB/S Firehose, and Send Tweets in Under 5 Seconds",
		"time": "2013-07-09T05:43:05Z",
		"href": "http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html"
	},
	{
		"cluster": 17,
		"tags": [
			"java",
			"operations",
			"gc",
			"programming",
			"garbage-collection",
			"performance",
			"tuning",
			"memory",
			"jvm",
			"computerscience",
			"software"
		],
		"y": 2.8557996688299916,
		"x": -12.308387430336523,
		"extended": "",
		"description": "Java Garbage Collection Distilled",
		"time": "2013-07-08T12:55:27Z",
		"href": "http://www.infoq.com/articles/Java_Garbage_Collection_Distilled"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"visualisation",
			"kurtosis",
			"fattail",
			"heavytail",
			"distribution"
		],
		"y": -2.817000352296089,
		"x": 0.34896607645335836,
		"extended": "Normal vs. Fat-tailed Distributions\n\nNormal\n\nA normal distribution varies a lot in the neighborhood of its average, but produces few examples beyond three standard deviations from that average.\n\nNormal distributions are common in biology. For example, men average 5' 10,\" and their population has a standard deviation of 4\". That means the chance of a man exceeding eight feet (6.5 standard deviations from the average) is astronomically small. And among the billions of men measured, only about 20 have ever stood over eight feet.\n\nFat-tailed\n\nA fat-tailed distribution looks normal but the parts far away from the average are thicker, meaning a higher chance of huge deviations.\n\nFat-tailed distributions are common in society. Since I love documentaries, here's a list of the highest-grossing documentaries. Look how the top three earned dozens of times what any others did. If earnings were distributed normally, these films would be like fifty-foot men. In fact, a single person, Michael Moore, made four of the top ten!\n\nDon't get confused\n\nFat tails don't mean more variance; just different variance. For a given variance, a higher chance of extreme deviations implies a lower chance of medium ones. To paraphrase Nassim N. Taleb:\n\nThe normal distribution spends 68% of the time within one standard deviation of its mean. If finance has fat tails, how much time do stocks spend within one standard deviation?\n\nEveryone answers: 'Less than 68%! Fat tails mean more deviation.' They're wrong: stock prices spend between 78% and 98% of their time within one standard deviation of the mean.\n\nIllustration\n\nBoth distributions below have standard deviations of 1, but the left is fat-tailed and the right is normal. The slider changes the fat-tailedness of the left (measured here as 'kurtosis') while keeping its standard deviation at 1. As you fatten the tails, the middle bunches up to balance things out.\n\nAs each datum is drawn for the deviation plots, its corresponding bar flickers. Look how the fat-tailed deviations stay near the average, but sometimes go above 5 or below -5. The normal is the opposite. The cumulative plots are called 'walks'.\n\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n0.00\n0.05\n0.02\n0.04\n0.06\n0.08\n0.01\n0.03\n0.07\nprobability\nFat-tailed\nNormal\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n0.00\n0.05\n0.02\n0.04\n0.06\n0.08\n0.01\n0.03\n0.07\n14.8\n14.1\n12.9\n11.5\n9.7\n7.9\n6.1\n4.6\n3.4\n3\nKurtosis (fat-tailedness)\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\nFat-tailed Deviations\n-6\n-5\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\nNormal Deviations\n0\n-6\n-4\n-2\n2\n4\n6\n8\n10\nFat-tailed Walk\n0\n10\n20\n-5\n5\n15\n25\nNormal Walk\n0.6\nWhy this matters\n\nLet's say people deposit their money in your bank, and you use it to place bets. If you think the outcomes of the bets are normal, but they're actually fat-tailed, the bets will still pay off most of the time. But sometimes you'll be very, very wrong. Then the government will have to bail you out to stop a bank run like the one at the end of It's a Wonderful Life .\n\nIt isn't just banks that should take notice, though. We also see fat tails in hurricane damage, crop losses, death from deadly conflicts, and other arenas that public policy addresses.\n\nMore information\n\nWikipedia\nNassim N. Taleb's in-progress textbook (This visualization was inspired by Vol. 1, Section 9.3.)\nResources for the Future\nJun Pan (This is how the distributions are made.)\nMakers\n\nMade in d3.js by Lewis Lehe and Victor Powell. Lewis Lehe is a PhD student in Transportation Engineering at UC Berkeley, and Victor Powell is a freelance developer/teacher.js.",
		"description": "Fat Tails",
		"time": "2013-07-04T07:04:05Z",
		"href": "http://vudlab.com/fat-tails.html"
	},
	{
		"cluster": 0,
		"tags": [
			"ssd",
			"database",
			"operations",
			"hardware",
			"architecture",
			"systems",
			"scaling",
			"optimization",
			"performance"
		],
		"y": -4.419519718512122,
		"x": 2.640696233906402,
		"extended": "",
		"description": "Afraid of SSD?",
		"time": "2013-07-02T16:40:59Z",
		"href": "http://use-the-index-luke.com/blog/2013-07/afraid-of-ssd"
	},
	{
		"cluster": 5,
		"tags": [
			"finitelyadditiveprobability",
			"probability",
			"axioms",
			"mathematics",
			"theory",
			"statistics",
			"fap",
			"finitely",
			"additive"
		],
		"y": -5.0754158106258735,
		"x": -4.617584987765908,
		"extended": "",
		"description": "LOST CAUSES IN STATISTICS I: Finite Additivity « Normal Deviate",
		"time": "2013-07-02T11:50:26Z",
		"href": "http://normaldeviate.wordpress.com/2013/06/30/lost-causes-in-statistics-i-finite-additivity/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"reservoirsampling",
			"functional",
			"tailcall",
			"optimization",
			"spaceleak",
			"lazy",
			"evaluation",
			"computerscience"
		],
		"y": -5.168237725481923,
		"x": -9.963364277317355,
		"extended": "",
		"description": "Tail calls in functional languages aren’t always a good fit. « LShift Ltd.",
		"time": "2013-07-02T10:02:25Z",
		"href": "http://www.lshift.net/blog/2013/06/30/tail-calls-vs-laziness/comment-page-1#comment-293529"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"compiler",
			"presentation",
			"computerscience",
			"tools",
			"introspection",
			"reflection",
			"programming"
		],
		"y": 1.4983265456858545,
		"x": -9.69899252134877,
		"extended": "",
		"description": "Mads Hartmann Jensen",
		"time": "2013-07-02T05:53:18Z",
		"href": "http://mads379.github.io/posts/talking-with-the-scala-compiler"
	},
	{
		"cluster": 4,
		"tags": [
			"markovnetwork",
			"markov",
			"network",
			"haskell",
			"algebra",
			"statistics",
			"machinelearning",
			"mathematics",
			"computerrscience",
			"functional",
			"programming",
			"pocket-unread"
		],
		"y": -5.01214347641162,
		"x": -8.329391894176748,
		"extended": "",
		"description": "Markov Networks, Monoids, and Futurama",
		"time": "2013-07-01T08:49:00Z",
		"href": "http://izbicki.me/blog/markov-networks-monoids-and-futurama"
	},
	{
		"cluster": 5,
		"tags": [
			"naivebayes",
			"bayes",
			"crossvalidation",
			"machinelearning",
			"statistics",
			"hlearn",
			"functional",
			"programming"
		],
		"y": -2.285694114648722,
		"x": -6.919431053992579,
		"extended": "",
		"description": "HLearn/HLearn-classification/src/examples/weka-cv/hlearn-cv.lhs at master · mikeizbicki/HLearn",
		"time": "2013-07-01T08:20:15Z",
		"href": "https://github.com/mikeizbicki/HLearn/blob/master/HLearn-classification/src/examples/weka-cv/hlearn-cv.lhs"
	},
	{
		"cluster": 4,
		"tags": [
			"trading",
			"business",
			"finance",
			"algorithmic",
			"quant",
			"algo",
			"haskell",
			"functional",
			"programming",
			"computerscience",
			"investing"
		],
		"y": -6.0219322906397785,
		"x": -9.430357894585907,
		"extended": "",
		"description": "Trading: a hacker approach?",
		"time": "2013-07-01T07:54:09Z",
		"href": "http://hyperq.github.io/blog/trading-a-hacker-approach.html"
	},
	{
		"cluster": 4,
		"tags": [
			"hlearn",
			"haskell",
			"algebra",
			"machine-learning",
			"algebraic",
			"structure",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -6.6958423386613,
		"x": -8.968098150767196,
		"extended": "",
		"description": "HLearn's code is shorter and clearer than Weka's",
		"time": "2013-07-01T07:35:15Z",
		"href": "http://izbicki.me/blog/hlearns-code-is-shorter-and-clearer-than-wekas"
	},
	{
		"cluster": 17,
		"tags": [
			"hlearn",
			"weka",
			"machinelearning",
			"classfication",
			"efficiency",
			"algebraic",
			"cross",
			"validation",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -3.8627194124069657,
		"x": -10.563692373101812,
		"extended": "",
		"description": "HLearn cross-validates >400x faster than Weka",
		"time": "2013-07-01T07:16:45Z",
		"href": "http://izbicki.me/blog/hlearn-cross-validates-400x-faster-than-weka"
	},
	{
		"cluster": 18,
		"tags": [
			"http",
			"rest",
			"api",
			"design",
			"architecture",
			"idempotence",
			"programming",
			"web",
			"development",
			"software",
			"engineering"
		],
		"y": 6.923753421896119,
		"x": -5.5072358804917965,
		"extended": "",
		"description": "Idempotent HTTP | 8th Light",
		"time": "2013-07-01T06:25:38Z",
		"href": "http://blog.8thlight.com/patrick-gombert/2013/06/02/idempotent-http.html"
	},
	{
		"cluster": 15,
		"tags": [
			"economics",
			"computerscience",
			"complexity",
			"theory",
			"mathematics"
		],
		"y": -1.6240199429228748,
		"x": -12.741719561609932,
		"extended": "",
		"description": "Economists and Complexity | Turing's Invisible Hand",
		"time": "2013-07-01T06:21:56Z",
		"href": "http://agtb.wordpress.com/2009/11/27/economists-and-complexity/"
	},
	{
		"cluster": 5,
		"tags": [
			"reservoir",
			"sampling",
			"algorithm",
			"datascience",
			"statistics",
			"probability",
			"mathematics"
		],
		"y": -4.848936020385045,
		"x": -4.559237919176891,
		"extended": "",
		"description": "Algorithms Every Data Scientist Should Know: Reservoir Sampling | Apache Hadoop for the Enterprise | Cloudera",
		"time": "2013-07-01T05:57:35Z",
		"href": "http://blog.cloudera.com/blog/2013/04/hadoop-stratified-randosampling-algorithm/"
	},
	{
		"cluster": 18,
		"tags": [
			"design",
			"programming",
			"objectoriented",
			"oop",
			"ood",
			"dip",
			"dependencyinversionprinciple",
			"ioc",
			"di",
			"dependencyinjection",
			"inverrsionofcontrol",
			"softwareengineering",
			"software",
			"architecture"
		],
		"y": 5.151505667926476,
		"x": -6.891279690587667,
		"extended": "",
		"description": "DIP in the Wild",
		"time": "2013-07-01T05:44:26Z",
		"href": "http://martinfowler.com/articles/dipInTheWild.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"programming",
			"formulas",
			"reference",
			"computerscience",
			"frequentist",
			"hypothesistesting",
			"hypothesis",
			"testing",
			"reports"
		],
		"y": -1.4055014991881996,
		"x": -8.023272084798723,
		"extended": "",
		"description": "Statistical Formulas For Programmers",
		"time": "2013-06-30T18:18:16Z",
		"href": "http://www.evanmiller.org/statistical-formulas-for-programmers.html"
	},
	{
		"cluster": 2,
		"tags": [
			"testing",
			"capybara",
			"race",
			"condition",
			"sleep",
			"ruby",
			"polling",
			"waiting",
			"events"
		],
		"y": -0.24940768326993068,
		"x": 3.117175556287069,
		"extended": "",
		"description": "Tea-Driven Development :: Death to sleeps!",
		"time": "2013-06-30T12:17:10Z",
		"href": "http://blog.mattwynne.net/2013/06/03/death-to-sleeps/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"testing",
			"api",
			"design",
			"page",
			"object",
			"encapsulation",
			"wrapper",
			"softwareengineering",
			"oop",
			"ood",
			"objectoriented",
			"programming"
		],
		"y": 5.133330482919799,
		"x": -7.415980384931179,
		"extended": "",
		"description": "Page objects in Ruby « LShift Ltd.",
		"time": "2013-06-30T12:14:34Z",
		"href": "http://www.lshift.net/blog/2013/05/31/page-objects-in-ruby"
	},
	{
		"cluster": 15,
		"tags": [
			"squak",
			"pharo",
			"smalltalk",
			"design",
			"traits",
			"programming",
			"computerscience",
			"abstractalgebra",
			"mathematics",
			"objectoriented",
			"oop",
			"ood",
			"softwareengineering",
			"field",
			"group"
		],
		"y": 4.704753734271359,
		"x": -7.489509220251485,
		"extended": "",
		"description": "A Double Fugue in Traits « LShift Ltd.",
		"time": "2013-06-30T12:11:05Z",
		"href": "http://www.lshift.net/blog/2013/05/31/a-double-fugue-in-traits"
	},
	{
		"cluster": 15,
		"tags": [
			"programming",
			"computerscience",
			"computation",
			"halting",
			"rice",
			"goldbach",
			"turing",
			"turingcompleteness",
			"logic",
			"mathematics"
		],
		"y": -0.45492571411795923,
		"x": -11.502319627434467,
		"extended": "",
		"description": "Impossible Programs",
		"time": "2013-06-30T12:06:04Z",
		"href": "http://codon.com/impossible-programs"
	},
	{
		"cluster": 15,
		"tags": [
			"cryptography",
			"privacy",
			"computerscience",
			"fhe",
			"fully",
			"homeomorphic",
			"encryption",
			"differential",
			"fullyhomeomorphicencryption",
			"differentialprivacy",
			"categorytheory",
			"mathematics"
		],
		"y": -1.1574710843125116,
		"x": -11.608954231896407,
		"extended": "",
		"description": "Why Theoretical Computer Scientists Aren’t Worried About Privacy | Math ∩ Programming",
		"time": "2013-06-30T11:58:30Z",
		"href": "http://jeremykun.com/2013/06/10/why-theoretical-computer-scientists-arent-worried-about-privacy/"
	},
	{
		"cluster": 17,
		"tags": [
			"myslq",
			"database",
			"rant",
			"sql",
			"programming",
			"rdbms",
			"relational",
			"dbms",
			"computerscience",
			"persistence",
			"softwareengineering",
			"architecture",
			"systems"
		],
		"y": 2.599644802243493,
		"x": -2.3054472465110356,
		"extended": "",
		"description": "The Codex » Do Not Pass This Way Again",
		"time": "2013-06-30T11:34:04Z",
		"href": "http://grimoire.ca/mysql/choose-something-else"
	},
	{
		"cluster": 7,
		"tags": [
			"sandimetz",
			"poodr",
			"oop",
			"ood",
			"objectoriented",
			"design",
			"programming",
			"softwareengineering",
			"ruby"
		],
		"y": 5.146796148829502,
		"x": -7.347181427172404,
		"extended": "",
		"description": "Interview with Sandi Metz on Practical Object-Oriented Design in Ruby",
		"time": "2013-06-30T11:08:52Z",
		"href": "http://www.infoq.com/articles/practical-oo-design-in-ruby-book"
	},
	{
		"cluster": 5,
		"tags": [
			"pathregression",
			"socialscience",
			"machinelearning",
			"regression",
			"logistiregression",
			"statistics",
			"hci",
			"research",
			"recomendatersystems",
			"recsys"
		],
		"y": -1.47449511947605,
		"x": 0.11655660181011167,
		"extended": "",
		"description": "Machine Learning and Social Science: Taking the Best of Both Worlds (A Case Study) | Slackpropagation",
		"time": "2013-06-29T10:54:22Z",
		"href": "https://slackprop.wordpress.com/2013/02/05/machine-learning-and-social-science/"
	},
	{
		"cluster": 0,
		"tags": [
			"raid",
			"hardware",
			"disk",
			"io",
			"admin",
			"scaling",
			"performance",
			"operations",
			"devops",
			"riak"
		],
		"y": -4.036620673832883,
		"x": 3.004586630328174,
		"extended": "",
		"description": "How RAID Fits in With Horizontal Scalability on Commodity Hardware | Basho",
		"time": "2013-06-27T11:47:47Z",
		"href": "http://basho.com/how-raid-fits-in-with-horizontal-scalability-on-commodity-hardware/"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"classifier",
			"svm",
			"bayes",
			"visualisation",
			"decisionboundary",
			"computerscience"
		],
		"y": -0.42217586922090117,
		"x": -4.632985860225221,
		"extended": "",
		"description": "Machine learning classifier gallery",
		"time": "2013-06-23T13:22:36Z",
		"href": "http://home.comcast.net/~tom.fawcett/public_html/ML-gallery/pages/"
	},
	{
		"cluster": 10,
		"tags": [
			"social",
			"enterprise",
			"socialenterprise",
			"business",
			"politics"
		],
		"y": 5.881594949520483,
		"x": 5.9061696369637176,
		"extended": "",
		"description": "Let's capitalise on the social enterprise boom - Comment - Voices - The Independent",
		"time": "2013-06-17T13:53:57Z",
		"href": "http://www.independent.co.uk/voices/comment/lets-capitalise-on-the-social-enterprise-boom-8660305.html"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"visualisation",
			"statistics",
			"design"
		],
		"y": -2.5809410136410027,
		"x": -0.12484727528916366,
		"extended": "",
		"description": "Against the myth of the heroic visualization « Statistical Modeling, Causal Inference, and Social Science Statistical Modeling, Causal Inference, and Social Science",
		"time": "2013-06-17T13:15:58Z",
		"href": "http://andrewgelman.com/2013/06/13/against-the-myth-of-the-heroic-visualization/"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"recsys",
			"programming",
			"web",
			"development",
			"graph",
			"database",
			"neo4j",
			"ruby"
		],
		"y": 9.371859745506184,
		"x": -7.531429974502041,
		"extended": "",
		"description": "You Might Also Like: Implementing User Recommendations in Rails",
		"time": "2013-06-17T13:14:23Z",
		"href": "http://www.slideshare.net/mdeiters/you-might-also-like-implementing-user-recommendations-in-rails?from=ss_embed"
	},
	{
		"cluster": 7,
		"tags": [
			"database",
			"programming",
			"patterns",
			"ruby",
			"repository",
			"persistence",
			"softwareengineering"
		],
		"y": 5.38207270051128,
		"x": -9.501168361918019,
		"extended": "",
		"description": "The Repository Pattern | 8th Light",
		"time": "2013-05-31T07:29:35Z",
		"href": "http://blog.8thlight.com/mike-ebert/2013/03/23/the-repository-pattern.html"
	},
	{
		"cluster": 4,
		"tags": [
			"monoid",
			"haskell",
			"programming",
			"comouterscience",
			"generic",
			"data",
			"analysis",
			"functional"
		],
		"y": -5.4475187925008255,
		"x": -8.013258969410732,
		"extended": "",
		"description": "Data analysis with Monoids | twdkz",
		"time": "2013-05-31T07:19:56Z",
		"href": "http://feedly.com/k/18Bk95a"
	},
	{
		"cluster": 17,
		"tags": [
			"shapeless",
			"hlist",
			"dependent",
			"type",
			"iso",
			"generic",
			"programming",
			"computerscience",
			"types",
			"genericprogramming",
			"dependenttypes",
			"scala"
		],
		"y": 1.1687962218772123,
		"x": -9.33836729617127,
		"extended": "",
		"description": "flatMap(Oslo) Miles Sabin",
		"time": "2013-05-30T15:39:30Z",
		"href": "http://2013.flatmap.no/sabin.html"
	},
	{
		"cluster": 2,
		"tags": [
			"akka",
			"video",
			"presentation",
			"clustering",
			"scala",
			"distributed",
			"systems",
			"computing",
			"engineering",
			"architecure",
			"remote",
			"actors"
		],
		"y": 4.675048042006028,
		"x": -1.3609733193865774,
		"extended": "",
		"description": "flatMap(Oslo) Viktor Klang",
		"time": "2013-05-30T15:39:19Z",
		"href": "http://2013.flatmap.no/klang.html"
	},
	{
		"cluster": 16,
		"tags": [
			"datavisualisation",
			"guitar",
			"example",
			"data",
			"visualisation",
			"design",
			"music"
		],
		"y": -3.099318212976311,
		"x": 0.023884772538553787,
		"extended": "",
		"description": "Guitar heroes: which artists play what? | News | guardian.co.uk",
		"time": "2013-05-28T15:27:23Z",
		"href": "http://www.guardian.co.uk/news/datablog/interactive/2013/may/28/frets-guitar-artists"
	},
	{
		"cluster": 5,
		"tags": [
			"probability",
			"statistics",
			"philosophy",
			"science",
			"logic",
			"fisher",
			"bayes",
			"popper",
			"psychology"
		],
		"y": -5.036011806351903,
		"x": -4.474378042943593,
		"extended": "",
		"description": "My Bayesian Mind",
		"time": "2013-05-28T07:39:34Z",
		"href": "http://blog.malde.org/posts/bayesian-brain.html"
	},
	{
		"cluster": 5,
		"tags": [
			"bayesian",
			"statistics",
			"analysis",
			"analytics",
			"computerscience",
			"mathematics",
			"abtesting",
			"testing"
		],
		"y": -3.9945292079688395,
		"x": -2.7511759756268273,
		"extended": "",
		"description": "Analyzing conversion rates with Bayes Rule (Bayesian statistics tutorial)",
		"time": "2013-05-28T07:34:57Z",
		"href": "http://www.chrisstucchio.com/blog/2013/bayesian_analysis_conversion_rates.html"
	},
	{
		"cluster": 18,
		"tags": [
			"cryptography",
			"security",
			"software",
			"development",
			"computerscience",
			"programming"
		],
		"y": 3.5712004108598983,
		"x": -9.295190969982926,
		"extended": "",
		"description": "You are dangerously bad at cryptography | Happy Bear Software | Web Application Development",
		"time": "2013-05-27T19:31:27Z",
		"href": "http://happybearsoftware.com/you-are-dangerously-bad-at-cryptography.html"
	},
	{
		"cluster": 17,
		"tags": [
			"hashkernel",
			"cs",
			"machinelearning",
			"classification",
			"python",
			"computerscience",
			"programming",
			"hash",
			"kernel",
			"featureselection"
		],
		"y": -0.13328450344337892,
		"x": -6.219398997581566,
		"extended": "",
		"description": "Abusing hash kernels for wildly unprincipled machine learning",
		"time": "2013-05-24T07:29:36Z",
		"href": "http://jeremydhoon.github.io/2013/03/19/abusing-hash-kernels-for-wildly-unprincipled-machine-learning/"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"bandit",
			"rank",
			"learning",
			"machinelearning",
			"statistics",
			"computerscience",
			"ramnking",
			"learningtorank"
		],
		"y": -2.854015286534357,
		"x": -5.693701192586853,
		"extended": "",
		"description": "Surprise and Coincidence - musings from the long tail: Learning to Rank, in a Very Bayesian Way",
		"time": "2013-05-24T07:23:32Z",
		"href": "http://tdunning.blogspot.co.uk/2013/04/learning-to-rank-in-very-bayesian-way.html"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"strategy",
			"analytics",
			"quantified",
			"business",
			"quantification",
			"statistics",
			"rigour"
		],
		"y": -2.390673112416511,
		"x": -2.342144768906822,
		"extended": "",
		"description": "In Media, Big Data Is Booming but Big Results Are Lacking | Digital Quarters - Ben Elowitz",
		"time": "2013-05-23T14:59:49Z",
		"href": "http://digitalquarters.net/2013/05/in-media-big-data-is-booming-but-big-results-are-lacking/"
	},
	{
		"cluster": 0,
		"tags": [
			"rails",
			"chef",
			"ec2",
			"howto",
			"devops",
			"sysadmin",
			"admin",
			"ops",
			"automation",
			"ruby",
			"programming",
			"web"
		],
		"y": 9.45259689082491,
		"x": -7.550771643365749,
		"extended": "",
		"description": "Build A Rails Stack - Chef - Opscode Open Source Wiki",
		"time": "2013-05-19T12:51:53Z",
		"href": "http://wiki.opscode.com/display/chef/Build+A+Rails+Stack"
	},
	{
		"cluster": 2,
		"tags": [
			"neo4j",
			"graph",
			"database",
			"beer",
			"recommendations",
			"indexing"
		],
		"y": 2.291490314403123,
		"x": -0.3441421344097924,
		"extended": "",
		"description": "Neo4j Blog: Reloading my Beergraph - using an in-graph-alcohol-percentage-index",
		"time": "2013-05-19T10:09:35Z",
		"href": "http://blog.neo4j.org/2013/05/reloading-my-beergraph-using-in-graph.html"
	},
	{
		"cluster": 15,
		"tags": [
			"chebychev",
			"markov",
			"hoeffding",
			"bound",
			"probability",
			"mathematics",
			"computerscience",
			"chernoff"
		],
		"y": -1.5790183086030019,
		"x": -11.381244361937148,
		"extended": "",
		"description": "Probabilistic Bounds — A Primer | Math ∩ Programming",
		"time": "2013-05-18T09:38:04Z",
		"href": "http://jeremykun.com/2013/04/15/probabilistic-bounds-a-primer/"
	},
	{
		"cluster": 5,
		"tags": [
			"clustering",
			"algorithms",
			"machinelearning",
			"datascience",
			"computerscience",
			"statistics",
			"kmeans",
			"em",
			"expectationmaximisation",
			"gaussian",
			"fuzzycmeans"
		],
		"y": -2.268347053643563,
		"x": -4.382928627560597,
		"extended": "",
		"description": "Machine Learning: Algorithms that Produce Clusters | Architects Zone",
		"time": "2013-05-17T12:12:57Z",
		"href": "http://architects.dzone.com/articles/machine-learning-algorithms"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"fisher",
			"twsting",
			"hypothesis",
			"chisquare",
			"statistics",
			"bayesian"
		],
		"y": -4.380202475939807,
		"x": -3.975456526702081,
		"extended": "",
		"description": "What is the Bayesian counterpart to the so-called Fisher exact test? « Statistical Modeling, Causal Inference, and Social Science Statistical Modeling, Causal Inference, and Social Science",
		"time": "2013-05-17T07:42:03Z",
		"href": "http://andrewgelman.com/2009/10/13/what_is_the_bay/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"ux",
			"ui",
			"interaction",
			"NoUI",
			"invisibility"
		],
		"y": -4.926569035198235,
		"x": 1.3752690650362402,
		"extended": "",
		"description": "No to NoUI – Timo Arnall",
		"time": "2013-05-17T07:36:08Z",
		"href": "http://www.elasticspace.com/2013/03/no-to-no-ui"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"intervals",
			"comfidence",
			"prediction",
			"credible",
			"bayesian",
			"frequentist"
		],
		"y": -4.6377579879373885,
		"x": -3.429963081102012,
		"extended": "",
		"description": "Hyndsight - The difference between prediction intervals and confidence intervals",
		"time": "2013-05-17T07:30:37Z",
		"href": "http://robjhyndman.com/hyndsight/intervals/"
	},
	{
		"cluster": 2,
		"tags": [
			"diningphilosophers",
			"concurrency",
			"computerscience"
		],
		"y": 2.1866986013955003,
		"x": -10.641098518343046,
		"extended": "",
		"description": "The Dining Philosophers Problem With Ron Swanson - adit.io",
		"time": "2013-05-17T07:19:36Z",
		"href": "http://adit.io/posts/2013-05-11-The-Dining-Philosophers-Problem-With-Ron-Swanson.html"
	},
	{
		"cluster": 4,
		"tags": [
			"concurrency",
			"actors",
			"stm",
			"programming",
			"locks",
			"ruby",
			"haskell",
			"diningphilosophers",
			"computerscience"
		],
		"y": 4.913287884056861,
		"x": -11.516306902680697,
		"extended": "",
		"description": "Locks, Actors, And STM In Pictures - adit.io",
		"time": "2013-05-17T07:18:36Z",
		"href": "http://adit.io/posts/2013-05-15-Locks,-Actors,-And-STM-In-Pictures.html"
	},
	{
		"cluster": 17,
		"tags": [
			"computerscience",
			"parallelism",
			"concurrency",
			"softwareengineering",
			"programming"
		],
		"y": 2.2692021996484373,
		"x": -10.712696872904953,
		"extended": "",
		"description": "Parallelism and concurrency need different tools",
		"time": "2013-05-16T20:35:08Z",
		"href": "http://feedly.com/k/16eX5ZX"
	},
	{
		"cluster": 7,
		"tags": [
			"hexagonal",
			"rails",
			"ruby",
			"programming",
			"web",
			"development",
			"oop",
			"ood",
			"object",
			"oriented"
		],
		"y": 9.886854128320675,
		"x": -9.317795229460879,
		"extended": "",
		"description": "Query actions in Rails controllers | silk and spinach",
		"time": "2013-05-14T22:04:47Z",
		"href": "http://feedly.com/k/ZZ545p"
	},
	{
		"cluster": 15,
		"tags": [
			"picasso",
			"art",
			"algebra",
			"graphics",
			"computer",
			"science",
			"programming",
			"mathematics",
			"polynomials",
			"curves",
			"bezier"
		],
		"y": -6.275620694117497,
		"x": -4.756077423349886,
		"extended": "",
		"description": "Bezier Curves and Picasso | Math ∩ Programming",
		"time": "2013-05-11T10:13:00Z",
		"href": "http://jeremykun.com/2013/05/11/bezier-curves-and-picasso/"
	},
	{
		"cluster": 17,
		"tags": [
			"play2",
			"play",
			"scala",
			"cucumber",
			"bdd",
			"testing",
			"programming",
			"sbt"
		],
		"y": 7.132988553594812,
		"x": -3.3362864336108182,
		"extended": "",
		"description": "Play2 + scala + cucumber | buster84",
		"time": "2013-05-10T16:44:05Z",
		"href": "http://buster84.wordpress.com/2012/12/23/play2-scala-cucumber/"
	},
	{
		"cluster": 12,
		"tags": [
			"oop",
			"ood",
			"object",
			"oriented",
			"design",
			"development",
			"isolation",
			"encapsulation",
			"ruby",
			"web",
			"hexagonal"
		],
		"y": 9.954509282571957,
		"x": -9.415435341674897,
		"extended": "",
		"description": "Extreme isolation in web apps: part 1",
		"time": "2013-05-09T12:18:58Z",
		"href": "http://chrismdp.com/2013/05/extreme-isolation-in-web-apps-part-1/"
	},
	{
		"cluster": 0,
		"tags": [
			"testing",
			"deployment",
			"culture",
			"development",
			"organizations",
			"ops",
			"devops",
			"continuous",
			"delivery"
		],
		"y": -9.54641871112174,
		"x": 6.221841921258148,
		"extended": "",
		"description": "Tea-Driven Development :: Two ways to react",
		"time": "2013-05-09T12:15:19Z",
		"href": "http://blog.mattwynne.net/2013/05/09/two-ways-to-react/"
	},
	{
		"cluster": 5,
		"tags": [
			"probability",
			"conditional",
			"statistics",
			"mathematics",
			"computerscience"
		],
		"y": -4.633836679413213,
		"x": -4.732549112126178,
		"extended": "",
		"description": "Conditional (Partitioned) Probability — A Primer | Math ∩ Programming",
		"time": "2013-05-09T07:23:59Z",
		"href": "http://jeremykun.com/2013/03/28/conditional-partitioned-probability-a-primer/"
	},
	{
		"cluster": 17,
		"tags": [
			"rumy",
			"methoddispath",
			"dispatch",
			"method",
			"object",
			"oop",
			"architecture",
			"programming"
		],
		"y": 4.628053898701849,
		"x": -6.556829731793944,
		"extended": "",
		"description": "How Ruby method dispatch works – The If Works",
		"time": "2013-05-09T07:01:22Z",
		"href": "http://blog.jcoglan.com/2013/05/08/how-ruby-method-dispatch-works/"
	},
	{
		"cluster": 18,
		"tags": [
			"rest",
			"dci",
			"cqrs",
			"hateoas",
			"architecture",
			"web",
			"development",
			"api",
			"programming",
			"software",
			"engineering",
			"http"
		],
		"y": 7.060889718054974,
		"x": -5.515286772064061,
		"extended": "",
		"description": "Road to REST",
		"time": "2013-05-08T17:09:40Z",
		"href": "http://www.infoq.com/presentations/REST-API-HATEOAS"
	},
	{
		"cluster": 2,
		"tags": [
			"discovery",
			"machinelearning",
			"nlp",
			"legal",
			"classification",
			"law",
			"information",
			"business",
			"technology",
			"computerscience"
		],
		"y": 0.846879969656184,
		"x": 3.621450996217455,
		"extended": "",
		"description": "E-discovery and the public interest | mathbabe",
		"time": "2013-05-08T15:29:08Z",
		"href": "http://mathbabe.org/2013/05/08/e-discovery-and-the-public-interest/"
	},
	{
		"cluster": 16,
		"tags": [
			"neo4j",
			"data",
			"persistence",
			"database",
			"graph",
			"programming"
		],
		"y": 2.892003683209686,
		"x": -0.8115367405159697,
		"extended": "",
		"description": "Tackling Complex Data with Neo4j",
		"time": "2013-05-08T13:56:17Z",
		"href": "http://www.infoq.com/presentations/Complex-Data-graph-Neo4j"
	},
	{
		"cluster": 5,
		"tags": [
			"pca",
			"principal",
			"component",
			"analysis",
			"statistics",
			"probability",
			"programming",
			"computerscience",
			"mathematics",
			"machinelearning",
			"python",
			"numpy"
		],
		"y": -2.354281055610294,
		"x": -6.48983598335084,
		"extended": "",
		"description": "Principal Component Analysis | Math ∩ Programming",
		"time": "2013-05-08T12:49:15Z",
		"href": "http://jeremykun.com/2012/06/28/principal-component-analysis/"
	},
	{
		"cluster": 15,
		"tags": [
			"eigenfaces",
			"computervision",
			"machinelearning",
			"linearalgebra",
			"computerscience",
			"programming",
			"mathematics",
			"face",
			"recognition",
			"facialhair",
			"pocket-unread"
		],
		"y": -0.23395780309994907,
		"x": -11.04003822851357,
		"extended": "",
		"description": "Eigenfaces, for Facial Recognition | Math ∩ Programming",
		"time": "2013-05-08T12:44:30Z",
		"href": "http://jeremykun.com/2011/07/27/eigenfaces/"
	},
	{
		"cluster": 5,
		"tags": [
			"mathematics",
			"programming",
			"probability",
			"statistics",
			"proof",
			"tournaments",
			"cycles",
			"hamiltonian",
			"graph",
			"theory"
		],
		"y": -5.094555097394687,
		"x": -4.827757174569313,
		"extended": "",
		"description": "Probability Theory — A Primer | Math ∩ Programming",
		"time": "2013-05-08T12:28:58Z",
		"href": "http://jeremykun.com/2013/01/04/probability-theory-a-primer/"
	},
	{
		"cluster": 14,
		"tags": [
			"ux",
			"design",
			"interface",
			"language",
			"mine",
			"yours"
		],
		"y": -4.671994486860334,
		"x": 1.4025149740252445,
		"extended": "",
		"description": "Yours vs. Mine | Dustin Curtis",
		"time": "2013-05-08T09:02:04Z",
		"href": "http://dcurt.is/yours-vs-mine"
	},
	{
		"cluster": 16,
		"tags": [
			"houseprice",
			"data",
			"house",
			"govennment",
			"prices",
			"historical",
			"landregistry",
			"opendata",
			"opengov"
		],
		"y": -2.5620263337486113,
		"x": 3.255135718358155,
		"extended": "",
		"description": "Land Registry to release free historical property data - Land Registry for England and Wales",
		"time": "2013-05-07T19:31:42Z",
		"href": "http://www.landregistry.gov.uk/announcements/2013/land-registry-to-release-free-historical-property-data"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"machinelearning",
			"colt",
			"vctheory",
			"computational",
			"learning",
			"theory",
			"frequentist",
			"confidenceinterval"
		],
		"y": -2.7735703799662756,
		"x": -3.877587672508311,
		"extended": "",
		"description": "Aaronson, COLT, Bayesians and Frequentists « Normal Deviate",
		"time": "2013-05-06T07:31:34Z",
		"href": "http://feedly.com/k/YpaysA"
	},
	{
		"cluster": 16,
		"tags": [
			"redis",
			"machinelearning",
			"featureextraction",
			"persistence",
			"onlinelearning",
			"online",
			"datastructures",
			"data"
		],
		"y": -1.4994820327547864,
		"x": -0.9757177851221283,
		"extended": "",
		"description": "Feature Extraction with Redis | Preact.io",
		"time": "2013-05-04T07:46:18Z",
		"href": "http://blog.preact.io/post/48966215604/feature-extraction-with-redis"
	},
	{
		"cluster": 17,
		"tags": [
			"elasticsearch",
			"programming",
			"search",
			"database",
			"nosql",
			"keyvaluestore",
			"persistence"
		],
		"y": 3.3016391542119443,
		"x": -0.5846090349857689,
		"extended": "",
		"description": "Using Elastic Search as a Key Value store | www.jillesvangurp.com",
		"time": "2013-05-04T07:40:24Z",
		"href": "http://www.jillesvangurp.com/2013/01/15/using-elastic-search-as-a-key-value-store/"
	},
	{
		"cluster": 15,
		"tags": [
			"monad",
			"dynamic",
			"types",
			"languages",
			"categorytheory",
			"mathematics",
			"computerscience"
		],
		"y": -1.6051298614949727,
		"x": -11.758597534397499,
		"extended": "",
		"description": "Roman Cheplyaka: Monads in dynamic languages",
		"time": "2013-05-04T07:34:53Z",
		"href": "http://ro-che.info//articles/2012-12-26-monads-in-dynamic-languages.html"
	},
	{
		"cluster": 15,
		"tags": [
			"curryhoward",
			"logic",
			"types",
			"typetheory",
			"mathematics",
			"computerscience"
		],
		"y": -2.533208360658806,
		"x": -12.083811176167153,
		"extended": "",
		"description": "Casual invocations of Curry-Howard » Lab49 Blog",
		"time": "2013-05-04T07:31:31Z",
		"href": "http://blog.lab49.com/archives/6118"
	},
	{
		"cluster": 2,
		"tags": [
			"riak",
			"crdt",
			"nosql",
			"databases",
			"datastructures"
		],
		"y": -0.38168107009142443,
		"x": 3.380002738587514,
		"extended": "",
		"description": "Data Structures in Riak (NoSQL Matters Cologne 2013) // Speaker Deck",
		"time": "2013-05-04T07:21:15Z",
		"href": "https://speakerdeck.com/seancribbs/data-structures-in-riak-nosql-matters-cologne-2013"
	},
	{
		"cluster": 18,
		"tags": [
			"kanban",
			"projectmanagement",
			"planning",
			"development",
			"software"
		],
		"y": 7.860872550022475,
		"x": -0.8337076723545532,
		"extended": "",
		"description": "Implementing Kanban in Practice",
		"time": "2013-05-04T07:11:16Z",
		"href": "http://www.infoq.com/articles/Implementing_Kanban"
	},
	{
		"cluster": 10,
		"tags": [
			"technology",
			"capitalism",
			"resistance",
			"socialism",
			"automation",
			"politics"
		],
		"y": 3.3186930315710255,
		"x": 10.570203741007212,
		"extended": "",
		"description": "The Rise of the Machines | Jacobin",
		"time": "2013-05-03T08:29:43Z",
		"href": "http://jacobinmag.com/2013/04/the-rise-of-the-machines/"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"privacy",
			"politics",
			"mathematics",
			"bigdata"
		],
		"y": 4.074914528674763,
		"x": 6.489176966385303,
		"extended": "",
		"description": "The rise of big data, big brother | mathbabe",
		"time": "2013-05-03T07:53:08Z",
		"href": "http://mathbabe.org/2013/05/02/the-rise-of-big-data-big-brother/"
	},
	{
		"cluster": 2,
		"tags": [
			"eigenfaces",
			"computervision",
			"pca",
			"linearalgebra",
			"machinelearning",
			"computerscience",
			"maths",
			"beauty",
			"surgery"
		],
		"y": -0.5995393189294725,
		"x": -5.331419049441427,
		"extended": "",
		"description": "Redefining Open Minds: Miss Korea 2013 Contestants Face Morphing",
		"time": "2013-05-02T17:32:37Z",
		"href": "http://jbhuang0604.blogspot.se/2013/04/miss-korea-2013-contestants-face.html"
	},
	{
		"cluster": 2,
		"tags": [
			"akka",
			"scala",
			"play",
			"typesafe",
			"activator"
		],
		"y": 5.3701304119537365,
		"x": -0.6408034953408558,
		"extended": "",
		"description": "Get Started – Typesafe Platform - Typesafe",
		"time": "2013-05-01T08:27:08Z",
		"href": "http://www.typesafe.com/platform/getstarted"
	},
	{
		"cluster": 4,
		"tags": [
			"monad",
			"transformer",
			"random",
			"algebra",
			"haskell",
			"commutativity",
			"programming",
			"functional"
		],
		"y": -4.975623885574298,
		"x": -9.091044289421806,
		"extended": "",
		"description": "Monad transformers: a cautionary tale | blog :: Brent -> [String]",
		"time": "2013-04-30T06:49:32Z",
		"href": "http://feedly.com/k/15VqQOD"
	},
	{
		"cluster": 15,
		"tags": [
			"haskell",
			"duality",
			"fold",
			"algebra",
			"category",
			"theory",
			"categorytheory",
			"mathematics",
			"unfold",
			"programming",
			"computerscience",
			"pocket-unread"
		],
		"y": -1.1200788243740567,
		"x": -11.152635809301566,
		"extended": "",
		"description": "Duality for Haskellers : Inside 206-105",
		"time": "2013-04-29T13:46:52Z",
		"href": "http://blog.ezyang.com/2012/10/duality-for-haskellers/"
	},
	{
		"cluster": 2,
		"tags": [
			"computervision",
			"hashing",
			"images",
			"computerscience",
			"vision",
			"cryptography",
			"phash"
		],
		"y": -2.0627655281864623,
		"x": 1.909856380987738,
		"extended": "",
		"description": "Looks Like It - The Hacker Factor Blog",
		"time": "2013-04-29T11:13:35Z",
		"href": "http://www.hackerfactor.com/blog/index.php?/archives/432-Looks-Like-It.html"
	},
	{
		"cluster": 16,
		"tags": [
			"statistics",
			"data",
			"lod",
			"linked",
			"open",
			"bigdata"
		],
		"y": -3.1732400444770352,
		"x": -1.5835303180934432,
		"extended": "",
		"description": "What Do Statisticians Think Of Big Data? | Open Data Institute",
		"time": "2013-04-29T10:29:30Z",
		"href": "http://theodi.org/blog/what-do-statisticians-think-big-data"
	},
	{
		"cluster": 18,
		"tags": [
			"bbc",
			"linkeddata",
			"rdf",
			"semantic",
			"web",
			"linked",
			"data",
			"architecture",
			"api",
			"graph",
			"software",
			"engineering"
		],
		"y": 2.0463034906849207,
		"x": 2.2523100878718187,
		"extended": "",
		"description": "Introducing the BBC's Linked Data Platform and APIs",
		"time": "2013-04-29T09:39:06Z",
		"href": "http://www.infoq.com/presentations/bbc-data-platform-api"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"proof",
			"logic",
			"induction"
		],
		"y": -8.374820849861951,
		"x": -4.074366331624168,
		"extended": "",
		"description": "Methods of Proof — Induction | Math ∩ Programming",
		"time": "2013-04-28T08:29:56Z",
		"href": "http://jeremykun.com/2013/03/21/methods-of-proof-induction/"
	},
	{
		"cluster": 2,
		"tags": [
			"maths",
			"logic",
			"proof",
			"contradiction",
			"settheory",
			"surjection",
			"cantor",
			"diagonalisation"
		],
		"y": -8.513045867294055,
		"x": -3.583081209219768,
		"extended": "",
		"description": "Methods of Proof — Contradiction | Math ∩ Programming",
		"time": "2013-04-28T08:06:34Z",
		"href": "http://jeremykun.com/2013/02/28/methods-of-proof-contradiction/"
	},
	{
		"cluster": 15,
		"tags": [
			"eigenvectors",
			"eigenvalues",
			"matrix",
			"linear",
			"algebra",
			"mathematics"
		],
		"y": 3.08310903793969,
		"x": 1.4623162682652358,
		"extended": "",
		"description": "The Stata Blog » Understanding matrices intuitively, part 2, eigenvalues and eigenvectors",
		"time": "2013-04-27T21:47:22Z",
		"href": "http://blog.stata.com/2011/03/09/understanding-matrices-intuitively-part-2/"
	},
	{
		"cluster": 5,
		"tags": [
			"mathematics",
			"matrices",
			"algebra",
			"linear",
			"regression",
			"statistics",
			"singular"
		],
		"y": 2.8614338891805486,
		"x": 1.384575538405655,
		"extended": "",
		"description": "The Stata Blog » Understanding matrices intuitively, part 1",
		"time": "2013-04-27T21:38:31Z",
		"href": "http://blog.stata.com/2011/03/03/understanding-matrices-intuitively-part-1/"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"functional",
			"computerscience",
			"free",
			"monad",
			"syntax",
			"semantics",
			"interpretation",
			"haskell",
			"language"
		],
		"y": -5.473646937476679,
		"x": -9.817469852522578,
		"extended": "",
		"description": "Ruminations of a Programmer: A language and its interpretation - Learning free monads",
		"time": "2013-04-27T21:15:46Z",
		"href": "http://debasishg.blogspot.co.uk/2013/01/a-language-and-its-interpretation.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"categorytheory",
			"category",
			"haskell",
			"functionalprogramming",
			"monad",
			"free",
			"functor",
			"forgetful"
		],
		"y": -6.844598094899195,
		"x": -5.417937397353999,
		"extended": "",
		"description": "Google+",
		"time": "2013-04-27T21:14:43Z",
		"href": "https://plus.google.com/app/basic/stream/z12oyvx5bobid10ze04cjvfwqq2lvdoo0vg0k"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"continuation",
			"monad",
			"functional",
			"programming",
			"computerscience",
			"types"
		],
		"y": -5.918363282492708,
		"x": -10.233041565546884,
		"extended": "",
		"description": "The Mother of all Monads - School of Haskell | FP Complete",
		"time": "2013-04-26T16:25:24Z",
		"href": "https://www.fpcomplete.com/user/dpiponi/the-mother-of-all-monads"
	},
	{
		"cluster": 17,
		"tags": [
			"scalaz",
			"functional",
			"programming",
			"video",
			"types",
			"typeclasses",
			"scala",
			"computerscience"
		],
		"y": 0.2536245529188698,
		"x": -8.549039664533598,
		"extended": "",
		"description": "Scalaz 7 with Lars Hupel - YouTube",
		"time": "2013-04-26T12:51:51Z",
		"href": "http://www.youtube.com/watch?feature=player_embedded&v=KzoqOVD7mvE"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"lenses",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -5.629679741718993,
		"x": -9.485639471077121,
		"extended": "",
		"description": "Getting Started with Lenses » Lost in Technopolis",
		"time": "2013-04-26T08:02:57Z",
		"href": "http://newartisans.com/2012/11/getting-started-with-lenses/"
	},
	{
		"cluster": 14,
		"tags": [
			"graphs",
			"demograph",
			"statistics",
			"infovis",
			"information",
			"design",
			"visualisation",
			"good",
			"example"
		],
		"y": -3.02071292272609,
		"x": 0.0722104342025368,
		"extended": "",
		"description": "Fascinating graphs from facebook data « Statistical Modeling, Causal Inference, and Social Science",
		"time": "2013-04-25T14:08:56Z",
		"href": "http://andrewgelman.com/2013/04/25/fascinating-graphs-from-facebook/"
	},
	{
		"cluster": 17,
		"tags": [
			"crypto",
			"challenge",
			"programming",
			"cryptography",
			"computerscience",
			"security"
		],
		"y": 3.162136585158895,
		"x": -9.595732764078813,
		"extended": "cryptopals at matasano.com",
		"description": "Matasano Security - Matasano Web Security Assessments for Enterprises",
		"time": "2013-04-22T08:59:09Z",
		"href": "http://www.matasano.com/articles/crypto-challenges/"
	},
	{
		"cluster": 4,
		"tags": [
			"categorytheory",
			"algebra",
			"functional",
			"programming",
			"haskell",
			"mu",
			"mathematics",
			"fixpoint",
			"types",
			"initialalgebra",
			"falgebra",
			"catamorphism",
			"fold"
		],
		"y": -6.777287997936784,
		"x": -10.303373393659285,
		"extended": "",
		"description": "Ruminations of a Programmer: List Algebras and the fixpoint combinator Mu",
		"time": "2013-04-22T08:05:44Z",
		"href": "http://debasishg.blogspot.co.uk/2012/01/list-algebras-and-fixpoint-combinator.html"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"functional",
			"oop",
			"Ruby",
			"functionalprogramming",
			"immutability",
			"OO",
			"ood"
		],
		"y": 5.318766640039612,
		"x": -9.948166845914278,
		"extended": "",
		"description": "Functional programming in object oriented languages - My hovercraft is full of eels",
		"time": "2013-04-22T07:47:20Z",
		"href": "http://www.harukizaemon.com/blog/2010/03/01/functional-programming-in-object-oriented-languages/"
	},
	{
		"cluster": 15,
		"tags": [
			"haskell",
			"algebra",
			"mathematics",
			"CategoryTheory",
			"coalgebra",
			"falgebra",
			"comonad"
		],
		"y": -6.751924340413273,
		"x": -4.541221973874896,
		"extended": "",
		"description": "scala - What does \"coalgebra\" mean in the context of programming? - Stack Overflow",
		"time": "2013-04-22T07:41:51Z",
		"href": "http://stackoverflow.com/questions/16015020/what-does-coalgebra-mean-in-the-context-of-programming"
	},
	{
		"cluster": 5,
		"tags": [
			"datascience",
			"machinelearning",
			"computerscience",
			"statistics",
			"datamining",
			"analytics",
			"predictin",
			"moathematics"
		],
		"y": -2.1499035337969103,
		"x": -5.396031156598474,
		"extended": "",
		"description": "Win-Vector Blog » Data Science, Machine Learning, and Statistics: what is in a name?",
		"time": "2013-04-21T15:23:55Z",
		"href": "http://www.win-vector.com/blog/2013/04/data-science-machine-learning-and-statistics-what-is-in-a-name/"
	},
	{
		"cluster": 18,
		"tags": [
			"rails",
			"soa",
			"refactoring",
			"programming",
			"design",
			"architecture",
			"services",
			"development"
		],
		"y": 6.171053573099334,
		"x": -6.331511386648333,
		"extended": "",
		"description": "The path to SOA | #F80046",
		"time": "2013-04-19T12:54:30Z",
		"href": "http://devblog.songkick.com/2012/09/06/the-path-to-soa/"
	},
	{
		"cluster": 18,
		"tags": [
			"rails",
			"soa",
			"refactoring",
			"programming",
			"design",
			"architecture",
			"services",
			"development"
		],
		"y": 6.171056206415335,
		"x": -6.331514009599983,
		"extended": "",
		"description": "The client side of SOA | #F80046",
		"time": "2013-04-19T12:53:22Z",
		"href": "http://devblog.songkick.com/2012/08/30/the-client-side-of-soa/"
	},
	{
		"cluster": 18,
		"tags": [
			"rails",
			"soa",
			"refactoring",
			"programming",
			"design",
			"architecture",
			"services",
			"development"
		],
		"y": 6.170932778447794,
		"x": -6.342184685923805,
		"extended": "",
		"description": "SOA: what our services look like | #F80046",
		"time": "2013-04-19T12:51:33Z",
		"href": "http://devblog.songkick.com/2012/08/02/soa-what-our-services-look-like/"
	},
	{
		"cluster": 18,
		"tags": [
			"rails",
			"soa",
			"refactoring",
			"programming",
			"design",
			"architecture",
			"services",
			"development"
		],
		"y": 6.171056211144464,
		"x": -6.331514001850425,
		"extended": "",
		"description": "Service-oriented Songkick | #F80046",
		"time": "2013-04-19T12:38:06Z",
		"href": "http://devblog.songkick.com/2012/07/27/service-oriented-songkick/"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"finders",
			"callbacks",
			"hexagonal",
			"architecture",
			"oop",
			"ood",
			"objectoriented",
			"design",
			"programming",
			"ruby"
		],
		"y": 5.898135520383424,
		"x": -7.396333204962966,
		"extended": "",
		"description": "Hexagonal rails: Hiding the finders | silk and spinach",
		"time": "2013-04-19T12:19:07Z",
		"href": "http://silkandspinach.net/2012/07/06/hexagonal-rails-hiding-the-finders/"
	},
	{
		"cluster": 7,
		"tags": [
			"hexagonal",
			"rails",
			"oop",
			"objectoriented",
			"programming",
			"development",
			"ruby",
			"architecture",
			"design",
			"ood"
		],
		"y": 5.9661744220857456,
		"x": -7.378347843530943,
		"extended": "",
		"description": "Adventures In The Hexagonal (Part 1) by Jon Rowe",
		"time": "2013-04-19T12:16:28Z",
		"href": "http://blog.jonrowe.co.uk/2012/10/08/adventures-in-the-hexagonal.html"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"architecture",
			"oop",
			"ood",
			"objectoriented",
			"programming",
			"design",
			"development",
			"ruby"
		],
		"y": 5.9588121132901986,
		"x": -7.322119749957528,
		"extended": "",
		"description": "Designing a Rails App Part 1 - Forty-Two",
		"time": "2013-04-19T12:03:25Z",
		"href": "http://jasonroelofs.com/2012/05/29/designing-a-rails-app-part-1/"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"testing",
			"programming",
			"development",
			"oop",
			"objectsonrails",
			"ood",
			"web",
			"ruby"
		],
		"y": 9.383301564390568,
		"x": -7.319026249355362,
		"extended": "",
		"description": "Fast Rails Tests Corey Haines - YouTube",
		"time": "2013-04-19T11:29:35Z",
		"href": "http://www.youtube.com/watch?v=bNn6M2vqxHE"
	},
	{
		"cluster": 2,
		"tags": [
			"android",
			"application",
			"development",
			"mobile",
			"java",
			"activity",
			"fragment",
			"DI",
			"otto",
			"dagger",
			"square"
		],
		"y": 7.283481087588379,
		"x": -3.499417976628281,
		"extended": "",
		"description": "Android App Anatomy",
		"time": "2013-04-17T11:38:21Z",
		"href": "http://www.infoq.com/presentations/Android-App"
	},
	{
		"cluster": 18,
		"tags": [
			"akka",
			"scala",
			"remote",
			"actors",
			"distributed",
			"systems",
			"programming",
			"software",
			"engineering"
		],
		"y": 4.688394701247839,
		"x": -1.6724970079623365,
		"extended": "",
		"description": "Building a Distributed System with Akka Remote Actors | AddThis Blog",
		"time": "2013-04-17T08:10:18Z",
		"href": "http://www.addthis.com/blog/2013/04/16/building-a-distributed-system-with-akka-remote-actors/#.UW5WbpxwZCq"
	},
	{
		"cluster": 5,
		"tags": [
			"cheatsheet",
			"machine-learning",
			"machinelearning",
			"computerscience",
			"datascience",
			"data",
			"analysis",
			"statistics",
			"classification",
			"clustering",
			"regression"
		],
		"y": -1.6207133407085903,
		"x": -4.088239837014385,
		"extended": "",
		"description": "Peekaboo: Machine Learning Cheat Sheet (for scikit-learn)",
		"time": "2013-04-16T08:17:45Z",
		"href": "http://peekaboo-vision.blogspot.de/2013/01/machine-learning-cheat-sheet-for-scikit.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"lens",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -5.689633947693619,
		"x": -9.32841426980328,
		"extended": "",
		"description": "How to use Data.Lens",
		"time": "2013-04-15T22:39:15Z",
		"href": "http://www.nadineloveshenry.com/haskell/lensExamples.html"
	},
	{
		"cluster": 4,
		"tags": [
			"lens",
			"record",
			"haskell",
			"functional",
			"programming"
		],
		"y": -5.353691964957715,
		"x": -8.553231943193573,
		"extended": "",
		"description": "Overloading functional references",
		"time": "2013-04-15T07:58:59Z",
		"href": "http://twanvl.nl/blog/haskell/overloading-functional-references"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"machinelearning",
			"bias",
			"maths",
			"datascience",
			"error",
			"learning",
			"variance",
			"pocket-unread"
		],
		"y": -3.144981860360787,
		"x": -2.926510025185516,
		"extended": "",
		"description": "Understanding the Bias-Variance Tradeoff",
		"time": "2013-04-10T11:18:22Z",
		"href": "http://scott.fortmann-roe.com/docs/BiasVariance.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"architecture",
			"oop",
			"hexagonal",
			"mvc",
			"framework",
			"obvious",
			"rails"
		],
		"y": 5.781545128913589,
		"x": -8.049500541165749,
		"extended": "",
		"description": "Obvious by RetroMocha",
		"time": "2013-04-09T09:56:23Z",
		"href": "http://obvious.retromocha.com/"
	},
	{
		"cluster": 17,
		"tags": [
			"cakepattern",
			"scala",
			"functional",
			"oop",
			"design",
			"architecture",
			"programming",
			"types",
			"existential",
			"dependencyinjection",
			"modules"
		],
		"y": 2.605857194564675,
		"x": -7.660490246411153,
		"extended": "",
		"description": "Cake Pattern: The Bakery from the Black Lagoon - YouTube",
		"time": "2013-04-08T18:00:44Z",
		"href": "https://www.youtube.com/watch?v=yLbdw06tKPQ"
	},
	{
		"cluster": 17,
		"tags": [
			"learning",
			"online",
			"machinelearning",
			"classification",
			"programming",
			"library",
			"computerscience"
		],
		"y": -0.2725841829821819,
		"x": -6.738888453026709,
		"extended": "",
		"description": "LIBOL - An Open-Source Library for Online Learning Algorithms",
		"time": "2013-04-08T08:18:19Z",
		"href": "http://www.cais.ntu.edu.sg/~chhoi/libol/about.html"
	},
	{
		"cluster": 17,
		"tags": [
			"dataflow",
			"iteratees",
			"reactiveprogramming",
			"ruby",
			"frp",
			"pipeline",
			"programming",
			"functional"
		],
		"y": 5.328088857629115,
		"x": -10.14682515907419,
		"extended": "",
		"description": "Abstractivate: Dataflow in Ruby",
		"time": "2013-04-08T08:02:42Z",
		"href": "http://blog.jessitron.com/2013/04/dataflow-in-ruby.html"
	},
	{
		"cluster": 7,
		"tags": [
			"rgeo",
			"geodata",
			"projections",
			"postgis",
			"geographic",
			"cartography",
			"geospatial",
			"ruby",
			"programming"
		],
		"y": 5.7551901735726005,
		"x": -10.063923328415529,
		"extended": "",
		"description": "Geo-Rails part 7: Geometry vs. Geography, or, How I Learned To Stop Worrying And Love Projections | Daniel Azuma",
		"time": "2013-04-07T22:18:44Z",
		"href": "http://blog.daniel-azuma.com/archives/164"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"algebra",
			"hadoop",
			"mapreduce",
			"scalding",
			"cascading",
			"algebird",
			"monoid"
		],
		"y": 5.587796018860295,
		"x": 1.0419529762384008,
		"extended": "",
		"description": "Twitter Engineering: Scalding 0.8.0 and Algebird",
		"time": "2013-04-07T22:10:36Z",
		"href": "http://engineering.twitter.com/2012/09/scalding-080-and-algebird.html"
	},
	{
		"cluster": 15,
		"tags": [
			"proof",
			"logic",
			"contrapositive",
			"mathematics",
			"computerscience"
		],
		"y": -8.326135567816806,
		"x": -4.136456702928255,
		"extended": "",
		"description": "Methods of Proof — Contrapositive | Math ∩ Programming",
		"time": "2013-04-07T21:48:10Z",
		"href": "http://jeremykun.com/2013/02/22/methods-of-proof-contrapositive/"
	},
	{
		"cluster": 4,
		"tags": [
			"idris",
			"dependenttypes",
			"programming",
			"functional",
			"types",
			"dependent-type",
			"haskell"
		],
		"y": -6.385791832489792,
		"x": -10.20764006844705,
		"extended": "",
		"description": "The Pragmatic Bookshelf | PragPub April 2013 | Dependent Types",
		"time": "2013-04-07T20:45:47Z",
		"href": "http://pragprog.com/magazines/2013-04/dependent-types"
	},
	{
		"cluster": 5,
		"tags": [
			"models",
			"business",
			"finance",
			"mathematics",
			"statistics",
			"politics",
			"risk",
			"assumptions",
			"corruption",
			"complexity",
			"lies"
		],
		"y": 9.786496727550727,
		"x": 6.226045007392083,
		"extended": "",
		"description": "We don’t need more complicated models, we need to stop lying with our models | mathbabe",
		"time": "2013-04-03T16:58:00Z",
		"href": "http://mathbabe.org/2013/04/03/we-dont-need-more-complicated-models-we-need-to-stop-lying-with-our-models/"
	},
	{
		"cluster": 7,
		"tags": [
			"scala",
			"jruby",
			"programming",
			"jvm",
			"development",
			"integration"
		],
		"y": 7.16535401878756,
		"x": -2.5508087555269308,
		"extended": "",
		"description": "Integrating Scala into JRuby - Code Commit",
		"time": "2013-04-03T13:13:41Z",
		"href": "http://www.codecommit.com/blog/ruby/integrating-scala-into-jruby"
	},
	{
		"cluster": 2,
		"tags": [
			"jruby",
			"sqlite3",
			"ruby",
			"database",
			"jvm",
			"sqlite"
		],
		"y": 1.199439701280755,
		"x": -2.9313369613483795,
		"extended": "",
		"description": "Using SQLite3 from JRuby without ActiveRecord « Robot Librarian",
		"time": "2013-04-02T14:01:17Z",
		"href": "http://robotlibrarian.billdueber.com/using-sqlite3-from-jruby-without-activerecord-2/"
	},
	{
		"cluster": 5,
		"tags": [
			"analytics",
			"machinelearning",
			"mathematics",
			"statistics"
		],
		"y": -3.265624282980844,
		"x": -4.507723057384334,
		"extended": "",
		"description": "Do Predictive Modelers Need to Know Math? [feedly]",
		"time": "2013-04-02T07:40:24Z",
		"href": "http://abbottanalytics.blogspot.com/2013/04/do-predictive-modelers-need-to-know-math.html"
	},
	{
		"cluster": 17,
		"tags": [
			"cassandra",
			"data",
			"model",
			"database",
			"programming",
			"persistence",
			"computerscience"
		],
		"y": 2.843906395503417,
		"x": -0.9286646082156182,
		"extended": "",
		"description": "DataModel - Cassandra Wiki",
		"time": "2013-04-01T18:04:18Z",
		"href": "http://wiki.apache.org/cassandra/DataModel"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"redis",
			"bitly",
			"statistics",
			"categoricaldistribution",
			"storage",
			"persistence",
			"analytics",
			"online"
		],
		"y": -1.837445375303398,
		"x": -2.0340196914347572,
		"extended": "",
		"description": "Forget Table",
		"time": "2013-04-01T17:08:16Z",
		"href": "http://word.bitly.com/post/41284219720/forget-table"
	},
	{
		"cluster": 17,
		"tags": [
			"monads",
			"promises",
			"programming",
			"functional",
			"async",
			"callbacks"
		],
		"y": 4.577771926851278,
		"x": -9.22842926315612,
		"extended": "",
		"description": "Callbacks are imperative, promises are functional: Node’s biggest missed opportunity – The If Works",
		"time": "2013-04-01T16:58:39Z",
		"href": "http://blog.jcoglan.com/2013/03/30/callbacks-are-imperative-promises-are-functional-nodes-biggest-missed-opportunity/"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"bandit",
			"statistics",
			"computerscience",
			"mathematics",
			"analytics"
		],
		"y": -3.496160366987462,
		"x": -4.93329509111417,
		"extended": "",
		"description": "Surprise and Coincidence - musings from the long tail: Bayesian Bandits",
		"time": "2013-03-25T08:30:12Z",
		"href": "http://tdunning.blogspot.co.uk/2012/02/bayesian-bandits.html"
	},
	{
		"cluster": 5,
		"tags": [
			"analytics",
			"testing",
			"statistics",
			"mathematicsv",
			"bandit",
			"multiarmed"
		],
		"y": -3.7313366673697517,
		"x": -2.392400108877815,
		"extended": "",
		"description": "Multi-armed Bandit Experiments - Analytics Blog",
		"time": "2013-03-25T08:21:45Z",
		"href": "http://analytics.blogspot.co.uk/2013/01/multi-armed-bandit-experiments.html"
	},
	{
		"cluster": 2,
		"tags": [
			"keg",
			"homebrew",
			"beer",
			"brewing",
			"kegging",
			"corney",
			"cornelius"
		],
		"y": -4.5298234981941965,
		"x": 0.024482361749535633,
		"extended": "",
		"description": "Kegging: An Illustrated Guide",
		"time": "2013-03-22T16:30:44Z",
		"href": "http://www.beoir.org/index.php?option=com_content&view=article&id=177:kegging-an-illustrated-guide&catid=18:conditioning-and-storing&Itemid=49"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"types",
			"gadts",
			"kinds",
			"typesystems",
			"programming",
			"functional",
			"computerscience",
			"simonpeytonjones"
		],
		"y": -6.496627557931396,
		"x": -10.746453142376975,
		"extended": "",
		"description": "Skills Matter : Functional Programming eXchange 2013: Simon",
		"time": "2013-03-22T13:57:21Z",
		"href": "http://skillsmatter.com/podcast/java-jee/keynote-3842"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"functional",
			"programming"
		],
		"y": 5.486011919006889,
		"x": -10.111423022631685,
		"extended": "",
		"description": "The Higher Order Rubyist",
		"time": "2013-03-21T13:17:25Z",
		"href": "http://www.infoq.com/presentations/Functional-Ruby"
	},
	{
		"cluster": 4,
		"tags": [
			"categorytheory",
			"mathematics",
			"algebra",
			"monad",
			"functor",
			"naturaltransformation",
			"katamorphism",
			"haskell",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -4.827518636044307,
		"x": -9.986502051207163,
		"extended": "",
		"description": "Category Theory for Programming",
		"time": "2013-03-20T09:37:31Z",
		"href": "http://yogsototh.github.com/Category-Theory-Presentation/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"quantification",
			"rankntypes",
			"existentialtypes",
			"scopedtypevariables",
			"type",
			"theory",
			"functional",
			"programming",
			"logic"
		],
		"y": -5.441778521044022,
		"x": -8.350544134703973,
		"extended": "",
		"description": "syntax - What does the `forall` keyword in Haskell/GHC do? - Stack Overflow",
		"time": "2013-03-19T14:50:11Z",
		"href": "http://stackoverflow.com/questions/3071136/what-does-the-forall-keyword-in-haskell-ghc-do"
	},
	{
		"cluster": 4,
		"tags": [
			"comonads",
			"haskell",
			"functional",
			"programming",
			"objectoriented",
			"objects",
			"functionalprogramming",
			"categorytheory",
			"computerscience"
		],
		"y": -5.714130870124752,
		"x": -9.565678186646878,
		"extended": "",
		"description": "Haskell for all: Comonads are objects",
		"time": "2013-03-19T14:02:53Z",
		"href": "http://www.haskellforall.com/2013/02/you-could-have-invented-comonads.html"
	},
	{
		"cluster": 15,
		"tags": [
			"modelling",
			"datascience",
			"mathematics",
			"machinelearning",
			"interpretability",
			"userexperience",
			"ux",
			"database"
		],
		"y": -2.9876022971449823,
		"x": -4.475456991017234,
		"extended": "",
		"description": "Modeling in Plain English | mathbabe",
		"time": "2013-03-19T10:03:15Z",
		"href": "http://mathbabe.org/2013/03/17/modeling-in-plain-english/"
	},
	{
		"cluster": 15,
		"tags": [
			"algebra",
			"mathematics",
			"programming",
			"computerscience",
			"typesystems",
			"types",
			"abstractalgebra"
		],
		"y": -0.3302375705629187,
		"x": -11.27507758574418,
		"extended": "",
		"description": "Twitter's Oscar Boykin: Programming Isn't Math - YouTube",
		"time": "2013-03-16T13:02:25Z",
		"href": "http://m.youtube.com/#/watch?v=JF-ttZyNa84&desktop_uri=%2Fwatch%3Fv%3DJF-ttZyNa84"
	},
	{
		"cluster": 5,
		"tags": [
			"pvalue",
			"statistics",
			"mathematics"
		],
		"y": -4.513936144680325,
		"x": -4.097131694696663,
		"extended": "",
		"description": "Double Misunderstandings About p-values « Normal Deviate",
		"time": "2013-03-16T11:02:45Z",
		"href": "http://normaldeviate.wordpress.com/2013/03/14/double-misunderstandings-about-p-values/"
	},
	{
		"cluster": 16,
		"tags": [
			"datascience",
			"data",
			"engineering",
			"software",
			"business",
			"strategy"
		],
		"y": -0.5199055431702351,
		"x": -1.452107990989897,
		"extended": "",
		"description": "Data audits and data strategies [feedly]",
		"time": "2013-03-16T10:59:03Z",
		"href": "http://mathbabe.org/2013/03/15/data-audits-and-data-strategies/"
	},
	{
		"cluster": 5,
		"tags": [
			"sample",
			"size",
			"statistics",
			"hoeffding",
			"inequality",
			"probability",
			"precision",
			"accuracy"
		],
		"y": -4.923805081040897,
		"x": -4.43511519802849,
		"extended": "",
		"description": "Win-Vector Blog » What is a large enough random sample?",
		"time": "2013-03-11T09:12:54Z",
		"href": "http://www.win-vector.com/blog/2011/06/what-is-a-large-enough-random-sample/"
	},
	{
		"cluster": 2,
		"tags": [
			"turingtest",
			"computerscience",
			"games",
			"econonomics",
			"intelligence",
			"gametheory"
		],
		"y": -1.5746475932502313,
		"x": 2.095892726306143,
		"extended": "",
		"description": "Games, culture, and the Turing test (Part I) | Theory, Evolution, and Games Group",
		"time": "2013-03-11T08:56:03Z",
		"href": "http://egtheory.wordpress.com/2013/03/07/economic-turing-test/"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"statistics",
			"probability",
			"evidence"
		],
		"y": -4.721969316791515,
		"x": -4.433513570070181,
		"extended": "",
		"description": "More on the evidence of a single coin toss - Tom Moertel’s Blog",
		"time": "2013-03-11T08:47:14Z",
		"href": "http://blog.moertel.com/posts/2010-12-20-more-on-the-evidence-of-a-single-coin-toss.html"
	},
	{
		"cluster": 18,
		"tags": [
			"bdd",
			"unix",
			"programming",
			"testing",
			"development",
			"software",
			"bash",
			"shell",
			"script",
			"sysadmin"
		],
		"y": 7.739531652198516,
		"x": -4.547164025826944,
		"extended": "",
		"description": "BDD without tools: testing shell script",
		"time": "2013-03-06T12:12:45Z",
		"href": "http://chrismdp.com/2013/03/bdd-with-shell-script/"
	},
	{
		"cluster": 7,
		"tags": [
			"orm",
			"python",
			"sqlalchemy",
			"sql",
			"programming",
			"development",
			"database",
			"persistence"
		],
		"y": 3.3053846581858397,
		"x": -2.080609182604962,
		"extended": "",
		"description": "Object Relational Tutorial — SQLAlchemy 0.8 Documentation",
		"time": "2013-03-05T14:47:45Z",
		"href": "http://docs.sqlalchemy.org/en/rel_0_8/orm/tutorial.html"
	},
	{
		"cluster": 5,
		"tags": [
			"odds",
			"bayes",
			"rule",
			"probability",
			"statistics",
			"mathematics"
		],
		"y": -4.869947142500367,
		"x": -4.527657061575498,
		"extended": "",
		"description": "Odds and the evidence of a single coin toss - Tom Moertel’s Blog",
		"time": "2013-03-05T08:33:58Z",
		"href": "http://blog.moertel.com/posts/2013-03-04-odds-and-the-evidence-of-a-single-coin-toss.html"
	},
	{
		"cluster": 16,
		"tags": [
			"pig",
			"sql",
			"hadoop",
			"data",
			"analysis",
			"programming",
			"database",
			"datascience"
		],
		"y": 1.328334355504786,
		"x": -2.503486667778359,
		"extended": "",
		"description": "Pig Eye for the SQL Guy - Hortonworks | Hortonworks",
		"time": "2013-03-05T08:24:57Z",
		"href": "http://hortonworks.com/blog/pig-eye-for-the-sql-guy/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"film",
			"art",
			"holywood",
			"spectactle"
		],
		"y": -2.5574417631649857,
		"x": 10.068186352646432,
		"extended": "",
		"description": "Let’s Apocalypse! A Discussion with the Anti-Banality Union | VICE United States",
		"time": "2013-03-04T11:58:57Z",
		"href": "http://www.vice.com/read/lets-apocalypse-a-discussion-with-the-anti-banality-union"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"types",
			"reference",
			"computerscience"
		],
		"y": 1.1857937494441473,
		"x": -9.4576714594167,
		"extended": "",
		"description": "A good summary of Scala types from http://bit.ly/XjSVKw",
		"time": "2013-03-03T23:37:57Z",
		"href": "https://gist.github.com/etorreborre/5078824"
	},
	{
		"cluster": 2,
		"tags": [
			"humanism",
			"religion",
			"philosophy"
		],
		"y": 0.24295280513850392,
		"x": 5.628043875970622,
		"extended": "",
		"description": "Humanism's faith in reason represents our best hope | AC Grayling | Comment is free | The Observer",
		"time": "2013-03-03T22:28:43Z",
		"href": "http://www.guardian.co.uk/commentisfree/2013/mar/03/humanism-religion-reason-our-best-hope"
	},
	{
		"cluster": 4,
		"tags": [
			"conduits",
			"haskell",
			"computerscience",
			"functional",
			"programming",
			"streaming",
			"pipeline",
			"database"
		],
		"y": -6.032492681074001,
		"x": -9.504588772745777,
		"extended": "",
		"description": "Conduit Overview",
		"time": "2013-03-02T13:32:29Z",
		"href": "https://haskell.fpcomplete.com/school/advanced-haskell-1/conduit-overview"
	},
	{
		"cluster": 4,
		"tags": [
			"functor",
			"applicative",
			"monad",
			"haskell",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -4.7499909459974905,
		"x": -9.730153857308252,
		"extended": "",
		"description": "Functors, Applicative Functors, and Monads",
		"time": "2013-03-02T13:14:14Z",
		"href": "https://haskell.fpcomplete.com/school/advanced-haskell-1/functors-applicative-functors-and-monads"
	},
	{
		"cluster": 2,
		"tags": [
			"maths",
			"logic",
			"proof",
			"implication"
		],
		"y": -8.470869895546764,
		"x": -3.8182062563332986,
		"extended": "",
		"description": "Methods of Proof — Direct Implication | Math ∩ Programming",
		"time": "2013-03-02T12:09:08Z",
		"href": "http://jeremykun.com/2013/02/16/methods-of-proof-direct-implication/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"music",
			"programming",
			"functional",
			"pattern",
			"mathematics",
			"types",
			"computerscience"
		],
		"y": -6.219764989332894,
		"x": -10.777589243871613,
		"extended": "",
		"description": "Haskell patterns ad nauseam « Alex McLean",
		"time": "2013-03-01T17:25:24Z",
		"href": "http://yaxu.org/haskell-patterns-ad-nauseam/"
	},
	{
		"cluster": 16,
		"tags": [
			"scalding",
			"scala",
			"hadoop",
			"data",
			"processing",
			"programming",
			"datascience",
			"bigdata",
			"hive",
			"pigi"
		],
		"y": 5.955220873865738,
		"x": -2.6834990614820278,
		"extended": "",
		"description": "An Overview of Scalding on Vimeo",
		"time": "2013-02-27T09:14:12Z",
		"href": "http://vimeo.com/59610497"
	},
	{
		"cluster": 17,
		"tags": [
			"functional",
			"programming",
			"python",
			"stream",
			"monad",
			"option",
			"development",
			"computerscience"
		],
		"y": -4.498729829737083,
		"x": -9.91918873539158,
		"extended": "",
		"description": "Fn.py: Enjoy Functional Programming in Python",
		"time": "2013-02-25T23:14:59Z",
		"href": "http://www.infoq.com/articles/fn.py-functional-programming-python"
	},
	{
		"cluster": 5,
		"tags": [
			"uncertainty",
			"probability",
			"statistics",
			"logic",
			"law",
			"bayes"
		],
		"y": -4.868249120850716,
		"x": -4.484876374221672,
		"extended": "",
		"description": "Court of Appeal bans Bayesian probability (and Sherlock Holmes) | Understanding Uncertainty",
		"time": "2013-02-25T20:40:39Z",
		"href": "http://understandinguncertainty.org/court-appeal-bans-bayesian-probability-and-sherlock-holmes"
	},
	{
		"cluster": 18,
		"tags": [
			"functionalprogramming",
			"computer_science",
			"functional",
			"oop",
			"design",
			"development",
			"software",
			"engineering",
			"asynchronous",
			"laziness"
		],
		"y": 6.273550610268404,
		"x": -5.997163202465631,
		"extended": "",
		"description": "Michael Feathers: Tell Above, and Ask Below - Hybridizing OO and Functional Design",
		"time": "2013-02-24T23:47:08Z",
		"href": "http://michaelfeathers.typepad.com/michael_feathers_blog/2012/03/tell-above-and-ask-below-hybridizing-oo-and-functional-design.html"
	},
	{
		"cluster": 5,
		"tags": [
			"regularization",
			"machinelearning",
			"computerscience",
			"statistics",
			"mathematics",
			"prior"
		],
		"y": -2.33555750279475,
		"x": -5.372577757937254,
		"extended": "",
		"description": "The overburdened prior | mathbabe",
		"time": "2013-02-24T23:41:37Z",
		"href": "http://mathbabe.org/2013/02/24/the-overburdened-prior/"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"evaluastion",
			"clustering",
			"dimensionalityreduction"
		],
		"y": -1.0986268337966658,
		"x": 3.3002551066283723,
		"extended": "",
		"description": "How to decide if to do dimensionality reduction before clustering? - Cross Validated",
		"time": "2013-02-23T12:33:41Z",
		"href": "http://stats.stackexchange.com/questions/29084/how-to-decide-if-to-do-dimensionality-reduction-before-clustering"
	},
	{
		"cluster": 5,
		"tags": [
			"computerscience",
			"queueing",
			"statistics",
			"probsbility",
			"randomized",
			"algorithms"
		],
		"y": -1.6584417459848122,
		"x": -7.423074415337156,
		"extended": "",
		"description": "Win-Vector Blog » A randomized algorithm that fails with near certainty",
		"time": "2013-02-23T12:32:00Z",
		"href": "http://www.win-vector.com/blog/2013/02/randomized-algorithms-can-have-bad-deterministic-consequences/"
	},
	{
		"cluster": 5,
		"tags": [
			"correlation",
			"rsquared",
			"machinelearning",
			"statistics",
			"evaluation",
			"mathematics"
		],
		"y": -3.2027644444219576,
		"x": -4.783757890513828,
		"extended": "",
		"description": "Win-Vector Blog » Don’t use correlation to track prediction performance",
		"time": "2013-02-23T12:27:15Z",
		"href": "http://www.win-vector.com/blog/2013/02/dont-use-correlation-to-track-prediction-performance/"
	},
	{
		"cluster": 5,
		"tags": [
			"learning",
			"statistics",
			"mathematics",
			"computerscience",
			"regression",
			"correlation",
			"rsquared",
			"error",
			"machinelearning"
		],
		"y": -2.990634434817882,
		"x": -5.131840981008643,
		"extended": "",
		"description": "Win-Vector Blog » Correlation and R-Squared",
		"time": "2013-02-23T12:25:11Z",
		"href": "http://www.win-vector.com/blog/2011/11/correlation-and-r-squared/"
	},
	{
		"cluster": 17,
		"tags": [
			"machinelearning",
			"nlp",
			"informationretrieval",
			"computerscience",
			"search",
			"tfidf",
			"programming",
			"cosine",
			"similarity",
			"smoothing"
		],
		"y": -0.09724403135332421,
		"x": -7.088036102645085,
		"extended": "",
		"description": "p-value.info: When tf*idf and cosine similarity fail",
		"time": "2013-02-23T12:20:09Z",
		"href": "http://www.p-value.info/2013/02/when-tfidf-and-cosine-similarity-fail.html"
	},
	{
		"cluster": 16,
		"tags": [
			"discriminantanalysis",
			"discriminant",
			"nca",
			"neighbourhood",
			"components",
			"analysis",
			"machinelearning",
			"computerscience",
			"data",
			"statistics",
			"visualisation",
			"clustering",
			"dimensionalityreduction"
		],
		"y": -2.0109269459114314,
		"x": -2.8715759208180027,
		"extended": "",
		"description": "clustering - Dimensionality reduction technique to maximize separation of known clusters? - Cross Validated",
		"time": "2013-02-22T19:18:02Z",
		"href": "http://stats.stackexchange.com/questions/16305/dimensionality-reduction-technique-to-maximize-separation-of-known-clusters"
	},
	{
		"cluster": 5,
		"tags": [
			"clustering",
			"machinelearning",
			"computerscience",
			"statistics",
			"dimensionality",
			"reduction",
			"lsa",
			"data",
			"svd"
		],
		"y": -1.9310166649653966,
		"x": -4.29111016488862,
		"extended": "",
		"description": "multivariate analysis - When do we combine dimensionality reduction with clustering? - Cross Validated",
		"time": "2013-02-22T19:17:11Z",
		"href": "http://stats.stackexchange.com/questions/12853/when-do-we-combine-dimensionality-reduction-with-clustering"
	},
	{
		"cluster": 7,
		"tags": [
			"android",
			"responsive",
			"layout",
			"scala",
			"scaloid",
			"programming",
			"development",
			"mobile",
			"design"
		],
		"y": 7.190566453782156,
		"x": -2.634262464189008,
		"extended": "",
		"description": "Scaloid blog: Android multiple layout directory considered harmful",
		"time": "2013-02-22T10:57:23Z",
		"href": "http://blog.scaloid.org/2013/02/android-multiple-layout-directory.html"
	},
	{
		"cluster": 17,
		"tags": [
			"database",
			"nosql",
			"programming"
		],
		"y": 3.293039597766269,
		"x": -0.6469060054519532,
		"extended": "",
		"description": "Choose Your Database - CRUD",
		"time": "2013-02-12T23:23:23Z",
		"href": "http://feedproxy.google.com/~r/nosql/~3/TNQZ1Y9l_nM/42939195052"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"featureselection",
			"ruleofthumb",
			"statistics",
			"heuristic",
			"computerscience"
		],
		"y": -1.987471203095195,
		"x": -5.594974922344756,
		"extended": "",
		"description": "machine learning - Is there a rule of thumb on the relationship between the number of instances and the number of features? - Cross Validated",
		"time": "2013-02-12T22:12:08Z",
		"href": "http://stats.stackexchange.com/questions/25584/is-there-a-rule-of-thumb-on-the-relationship-between-the-number-of-instances-and"
	},
	{
		"cluster": 17,
		"tags": [
			"grammar",
			"language",
			"languages",
			"parsing",
			"programming",
			"Backus-Naur",
			"compilers",
			"bnf",
			"ebnf",
			"contextfreegrammar",
			"cfg"
		],
		"y": 0.7366794698522523,
		"x": -10.930629813768338,
		"extended": "",
		"description": "Grammar: The language of languages (BNF, EBNF, ABNF and more)",
		"time": "2013-02-11T23:57:11Z",
		"href": "http://matt.might.net/articles/grammars-bnf-ebnf/"
	},
	{
		"cluster": 18,
		"tags": [
			"excel",
			"finance",
			"software",
			"engineering",
			"testing",
			"business",
			"spreadsheet"
		],
		"y": 7.889392005104958,
		"x": 4.619385002458976,
		"extended": "",
		"description": "The Importance of Excel | The Baseline Scenario",
		"time": "2013-02-11T23:47:57Z",
		"href": "http://baselinescenario.com/2013/02/09/the-importance-of-excel/"
	},
	{
		"cluster": 18,
		"tags": [
			"eventsourcing",
			"scala",
			"software",
			"engineering",
			"development",
			"redis",
			"architecture",
			"persistence"
		],
		"y": 5.9618281471493155,
		"x": -4.234814768677254,
		"extended": "",
		"description": "Simple event sourcing – Redis event store (part 3) « Zilverblog",
		"time": "2013-02-11T13:27:29Z",
		"href": "http://blog.zilverline.com/2012/07/30/simple-event-sourcing-redis-event-store-part-3/"
	},
	{
		"cluster": 15,
		"tags": [
			"base64",
			"fixedpoint",
			"map",
			"eventually",
			"contracting",
			"mathematics",
			"information",
			"theory",
			"optimization",
			"computerscience",
			"encoding"
		],
		"y": -1.531387070877092,
		"x": -12.299150880931903,
		"extended": "",
		"description": "fmota",
		"time": "2013-02-07T10:47:52Z",
		"href": "http://fmota.eu/blog/base64-fixed-point.html"
	},
	{
		"cluster": 2,
		"tags": [
			"map",
			"gis",
			"geographic",
			"geodata",
			"eastings",
			"northings",
			"lat",
			"long",
			"utility",
			"helper",
			"os",
			"coordinates",
			"topology",
			"converter",
			"lookup"
		],
		"y": -2.5646251367433996,
		"x": 4.190223710726305,
		"extended": "",
		"description": "Useful Map",
		"time": "2013-02-07T08:52:11Z",
		"href": "http://bbarker.co.uk/mapUtils/"
	},
	{
		"cluster": 2,
		"tags": [
			"buddhism",
			"religion"
		],
		"y": -2.8404459161023556,
		"x": 2.781682186197077,
		"extended": "",
		"description": "A Basic Buddhism Guide: Introduction to Buddhism",
		"time": "2013-02-06T10:53:19Z",
		"href": "http://www.buddhanet.net/e-learning/intro_bud.htm"
	},
	{
		"cluster": 2,
		"tags": [
			"buddhism",
			"meditation"
		],
		"y": -2.8862578393416083,
		"x": 2.834993155483427,
		"extended": "",
		"description": "A Basic Buddhism Guide: Meditation",
		"time": "2013-02-06T10:42:47Z",
		"href": "http://www.buddhanet.net/e-learning/qanda06.htm"
	},
	{
		"cluster": 5,
		"tags": [
			"metrics",
			"statistics",
			"mathematics",
			"testing",
			"analysis",
			"objective",
			"function"
		],
		"y": -3.9675263608582942,
		"x": -2.922442012476617,
		"extended": "",
		"description": "The Metrics Manifesto - Why you need an objective function",
		"time": "2013-02-05T15:47:59Z",
		"href": "http://www.chrisstucchio.com/blog/2013/metrics_manifesto.html"
	},
	{
		"cluster": 18,
		"tags": [
			"architecture",
			"apache",
			"messaging",
			"software",
			"computerscience",
			"engineering",
			"softwareengineering",
			"design",
			"kafka"
		],
		"y": 5.498015457802582,
		"x": -5.572942530387095,
		"extended": "",
		"description": "Apache Kafka",
		"time": "2013-02-04T23:36:41Z",
		"href": "http://kafka.apache.org/design.html"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"security",
			"postel",
			"protocols",
			"computerscience"
		],
		"y": 1.1787427168513873,
		"x": -11.029487324837213,
		"extended": "\n",
		"description": "Postel's Principle is a Bad Idea.—programming is terrible",
		"time": "2013-02-04T19:47:06Z",
		"href": "http://programmingisterrible.com/post/42215715657/postels-principle-is-a-bad-idea"
	},
	{
		"cluster": 5,
		"tags": [
			"video",
			"statistics",
			"computerscience",
			"dirichlet",
			"process",
			"machinelearning"
		],
		"y": -2.252086315070788,
		"x": -4.892596328152034,
		"extended": "",
		"description": "Inferring structure from data - videolectures.net",
		"time": "2013-01-31T19:40:30Z",
		"href": "http://videolectures.net/mlss2010_griffiths_isfd/"
	},
	{
		"cluster": 5,
		"tags": [
			"video",
			"statistics",
			"computerscience",
			"dirichlet",
			"process",
			"machinelearning"
		],
		"y": -2.2396863755580863,
		"x": -4.918657388648722,
		"extended": "",
		"description": "Dirichlet Processes: Tutorial and Practical Course - videolectures.net",
		"time": "2013-01-31T19:40:23Z",
		"href": "http://videolectures.net/mlss07_teh_dp/"
	},
	{
		"cluster": 5,
		"tags": [
			"nonparametric",
			"bayes",
			"statistics",
			"machinelearning",
			"clustering",
			"dirichlet",
			"process",
			"computerscience",
			"mathematics",
			"data",
			"bayesian",
			"pocket-unread"
		],
		"y": -2.498766666113543,
		"x": -4.679565010659376,
		"extended": "",
		"description": "Infinite Mixture Models with Nonparametric Bayes and the Dirichlet Process - Edwin Chen's Blog",
		"time": "2013-01-29T00:07:34Z",
		"href": "http://blog.echen.me/2012/03/20/infinite-mixture-models-with-nonparametric-bayes-and-the-dirichlet-process/"
	},
	{
		"cluster": 2,
		"tags": [
			"collaborativefiltering",
			"recommendation",
			"music",
			"machinelearning",
			"computerscience"
		],
		"y": -0.9955516363079201,
		"x": -4.8643687422225454,
		"extended": "",
		"description": "MIR in action: Collaborative filtering still rules?",
		"time": "2013-01-28T21:33:12Z",
		"href": "http://mir-in-action.blogspot.it/2012/09/collaborative-filtering-still-rules.html"
	},
	{
		"cluster": 5,
		"tags": [
			"probability",
			"algorithms",
			"datamining",
			"datastructures",
			"analytics",
			"programming",
			"statistics",
			"datastructure",
			"probabilistic",
			"computerscience"
		],
		"y": 1.4020229634505137,
		"x": -12.300604095541184,
		"extended": "",
		"description": "Probabilistic Data Structures for Web Analytics and Data Mining « Highly Scalable Blog",
		"time": "2013-01-28T21:22:33Z",
		"href": "http://highlyscalable.wordpress.com/2012/05/01/probabilistic-structures-web-analytics-data-mining/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"mathematics",
			"programming",
			"order-theory",
			"order",
			"theory",
			"functional",
			"computerscience"
		],
		"y": -5.0113102622155665,
		"x": -10.763976217169015,
		"extended": "",
		"description": "Order theory for computer scientists",
		"time": "2013-01-28T19:38:42Z",
		"href": "http://matt.might.net/articles/partial-orders/"
	},
	{
		"cluster": 12,
		"tags": [
			"functional",
			"programming",
			"Reactive",
			"frp",
			"web",
			"development",
			"elm",
			"javascript"
		],
		"y": 9.685583856302058,
		"x": -3.9144384563160575,
		"extended": "",
		"description": "What is FRP?",
		"time": "2013-01-28T19:24:40Z",
		"href": "http://elm-lang.org/learn/What-is-FRP.elm"
	},
	{
		"cluster": 18,
		"tags": [
			"aop",
			"aspect",
			"oriented",
			"programming",
			"software",
			"engineering"
		],
		"y": 5.329220550764302,
		"x": -4.0807455783626665,
		"extended": "",
		"description": "What is Aspect-Oriented Programming?",
		"time": "2013-01-28T19:17:50Z",
		"href": "http://www.programcreek.com/2011/08/what-is-aspect-oriented-programming/"
	},
	{
		"cluster": 5,
		"tags": [
			"p-values",
			"statistics",
			"hypothesistesting",
			"hypothesis",
			"testing"
		],
		"y": -4.804950301586905,
		"x": -2.3050098632063456,
		"extended": "",
		"description": "P-values and hypothesis testing get a bad rap - but we sometimes find them useful.",
		"time": "2013-01-28T19:03:07Z",
		"href": "http://simplystatistics.org/post/15402808730/p-values-and-hypothesis-testing-get-a-bad-rap-but-we"
	},
	{
		"cluster": 17,
		"tags": [
			"eventsourcing",
			"scala",
			"programming",
			"ddd",
			"cqrs",
			"softwareengineering"
		],
		"y": 5.767630308188607,
		"x": -2.3236634866344033,
		"extended": "",
		"description": "Martin Krasser's Blog: Building an Event-Sourced Web Application - Part 1: Domain Model, Events and State",
		"time": "2013-01-28T16:20:06Z",
		"href": "http://krasserm.blogspot.it/2011/11/building-event-sourced-web-application.html"
	},
	{
		"cluster": 17,
		"tags": [
			"parsing",
			"derivatives",
			"computerscience",
			"programming",
			"grammar",
			"compilers"
		],
		"y": 0.49816045660844227,
		"x": -11.132236924714963,
		"extended": "",
		"description": "Parsing with Derivatives « LShift Ltd.",
		"time": "2013-01-28T08:41:01Z",
		"href": "http://www.lshift.net/blog/2012/10/31/parsing-with-derivatives"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"calculus",
			"combinator",
			"ski",
			"typesystems",
			"computerscience",
			"functional",
			"programming"
		],
		"y": 1.005069765208585,
		"x": -8.78406191165644,
		"extended": "",
		"description": "Scala type level encoding of the SKI calculus « Michid’s Weblog",
		"time": "2013-01-28T08:36:09Z",
		"href": "http://michid.wordpress.com/2010/01/29/scala-type-level-encoding-of-the-ski-calculus/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"haltingproblem",
			"computerscience",
			"halt",
			"termination",
			"decidability"
		],
		"y": -4.282696014707545,
		"x": -10.234296789425954,
		"extended": "",
		"description": "Non-trivial language with a decidable halt",
		"time": "2013-01-28T08:29:44Z",
		"href": "http://okmij.org/ftp/Computation/decidable-halt.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"games",
			"roguelike",
			"tutorial",
			"functional",
			"programming"
		],
		"y": -5.811743488440658,
		"x": -8.267301468362474,
		"extended": "",
		"description": "Code Us Some Roguelike in Haskell (Part 2)!",
		"time": "2013-01-28T08:15:09Z",
		"href": "http://jamiltron.com/2012/07/Code_Us_Some_Roguelike2.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"games",
			"roguelike",
			"tutorial",
			"programming",
			"functional"
		],
		"y": -5.940668475963601,
		"x": -8.128256111465625,
		"extended": "",
		"description": "Code Us Some Roguelike in Haskell!",
		"time": "2013-01-28T08:08:03Z",
		"href": "http://jamiltron.com/2012/07/Code_Us_Some_Roguelike_in_Haskell.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"iteratee",
			"Akka",
			"play",
			"functional",
			"programming",
			"data",
			"collection",
			"web"
		],
		"y": 6.597594304489107,
		"x": -1.578662282151573,
		"extended": "",
		"description": "Iteratees in Big Data at Klout « Klout Engineering",
		"time": "2013-01-28T07:53:30Z",
		"href": "http://engineering.klout.com/2013/01/iteratees-in-big-data-at-klout/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"lambdacalculus",
			"typetheoryrecursion",
			"logic",
			"computerscience",
			"functional",
			"programming"
		],
		"y": -6.112387049473656,
		"x": -9.450489804601983,
		"extended": "",
		"description": "The Y Combinator and strict positivity : Inside 206-105",
		"time": "2013-01-27T23:48:52Z",
		"href": "http://blog.ezyang.com/2012/09/y-combinator-and-strict-positivity/"
	},
	{
		"cluster": 17,
		"tags": [
			"neo4j",
			"graph",
			"recommendation",
			"gremlin",
			"recommendations",
			"database",
			"graphdb",
			"programming",
			"tutorial",
			"recsys",
			"machine",
			"learning",
			"computerscience"
		],
		"y": 0.3291254767097803,
		"x": -13.685798110488783,
		"extended": "",
		"description": "A Graph-Based Movie Recommender Engine « Marko A. Rodriguez",
		"time": "2013-01-27T23:44:21Z",
		"href": "http://markorodriguez.com/2011/09/22/a-graph-based-movie-recommender-engine/"
	},
	{
		"cluster": 17,
		"tags": [
			"graph",
			"learning",
			"databases",
			"machine",
			"recommendation",
			"recsys",
			"collaborativefiltering",
			"programming",
			"computerscience"
		],
		"y": 0.2944826811222783,
		"x": -13.496215538122472,
		"extended": "",
		"description": "Everyman Software: Similarity-based Recommendation Engines",
		"time": "2013-01-27T23:39:05Z",
		"href": "http://blog.everymansoftware.com/2012/02/similarity-based-recommendation-engines.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"traversal",
			"tree",
			"programming",
			"functional",
			"computerscience"
		],
		"y": -5.6296121093670175,
		"x": -9.407180777148337,
		"extended": "",
		"description": "The inner beauty of tree traversals (in Haskell)",
		"time": "2013-01-27T23:35:19Z",
		"href": "http://blog.moertel.com/articles/2012/01/26/the-inner-beauty-of-tree-traversals"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"lisp",
			"programming",
			"computerscience"
		],
		"y": 3.937208572855756,
		"x": -11.163128638607013,
		"extended": "",
		"description": "Lisp in 32 lines of Ruby « Send More Paramedics",
		"time": "2013-01-26T11:53:27Z",
		"href": "http://blog.fogus.me/2012/01/25/lisp-in-40-lines-of-ruby/"
	},
	{
		"cluster": 5,
		"tags": [
			"analytics",
			"google",
			"performance",
			"statistics",
			"alerts",
			"monitoring",
			"ops",
			"anomalydetection"
		],
		"y": -3.319821501883554,
		"x": -4.066480911250054,
		"extended": "",
		"description": "Web Performance Anomaly Detection with Google Analytics - igvita.com",
		"time": "2013-01-26T11:42:49Z",
		"href": "http://www.igvita.com/2012/11/30/web-performance-anomaly-detection-with-google-analytics/"
	},
	{
		"cluster": 17,
		"tags": [
			"monad",
			"functor",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -4.62036352209007,
		"x": -9.862971220935226,
		"extended": "",
		"description": "HomeCloud: Monads, shmonads and functional programming",
		"time": "2013-01-26T11:23:35Z",
		"href": "http://blog.homecloud.ca/2012/11/monads-shmonads-and-functional.html"
	},
	{
		"cluster": 7,
		"tags": [
			"quickcheck",
			"tdd",
			"propertybasedtesting",
			"properties",
			"testing",
			"programming",
			"development"
		],
		"y": 7.710581545535722,
		"x": -4.503617010808247,
		"extended": "",
		"description": "Mistaeks I Hav Made: Property-Based TDD at XP Day London 2012",
		"time": "2013-01-26T11:17:39Z",
		"href": "http://www.natpryce.com/articles/000796.html"
	},
	{
		"cluster": 18,
		"tags": [
			"oop",
			"rails",
			"ruby",
			"software",
			"design",
			"engineering",
			"web",
			"development"
		],
		"y": 6.5959643374773105,
		"x": -6.701792112024431,
		"extended": "",
		"description": "Thunderbolt Labs: 5 simple rules to good OO in Rails",
		"time": "2013-01-26T11:14:51Z",
		"href": "http://thunderboltlabs.com/posts/5-simple-rules-to-good-oo-in-rails"
	},
	{
		"cluster": 12,
		"tags": [
			"haskell",
			"web",
			"development",
			"framework",
			"cms",
			"programming"
		],
		"y": -4.374584936751356,
		"x": -6.659271499002229,
		"extended": "",
		"description": "clckwrks.com",
		"time": "2013-01-26T11:09:35Z",
		"href": "http://clckwrks.com/clck/view-page-slug/1/clckwrks-com"
	},
	{
		"cluster": 17,
		"tags": [
			"neuralnetworks",
			"network",
			"ruby",
			"neural",
			"ai",
			"programming",
			"computerscience",
			"machinelearning"
		],
		"y": 3.298872988180599,
		"x": -10.701438028416382,
		"extended": "",
		"description": "Recurrent neural networks in Ruby | Joseph Wilk",
		"time": "2013-01-26T11:05:47Z",
		"href": "http://blog.josephwilk.net/ruby/recurrent-neural-networks-in-ruby.html"
	},
	{
		"cluster": 18,
		"tags": [
			"tdd",
			"bdd",
			"development",
			"programming",
			"testing",
			"software",
			"engineering",
			"softwareengineering"
		],
		"y": 7.337065328601688,
		"x": -4.711226311027762,
		"extended": "",
		"description": "Tea-Driven Development :: TDD vs BDD",
		"time": "2013-01-26T11:00:31Z",
		"href": "http://blog.mattwynne.net/2012/11/20/tdd-vs-bdd/"
	},
	{
		"cluster": 7,
		"tags": [
			"programming",
			"learning",
			"education",
			"development",
			"functional",
			"languages"
		],
		"y": -2.114664611899712,
		"x": -9.982350052141873,
		"extended": "",
		"description": "Extremist Programming : Inside 206-105",
		"time": "2013-01-26T10:57:48Z",
		"href": "http://blog.ezyang.com/2012/11/extremist-programming/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"finance",
			"politics",
			"keynes",
			"krugman"
		],
		"y": 9.207289765580075,
		"x": 7.812502328663384,
		"extended": "",
		"description": "How Did Economists Get It So Wrong? - NYTimes.com",
		"time": "2013-01-24T21:46:29Z",
		"href": "http://www.nytimes.com/2009/09/06/magazine/06Economic-t.html?pagewanted=all&_r=0"
	},
	{
		"cluster": 15,
		"tags": [
			"cryptography",
			"security",
			"passwords",
			"vault",
			"mathematics",
			"computerscience",
			"programming"
		],
		"y": 0.24951199483010392,
		"x": -11.177060691908158,
		"extended": "",
		"description": "Designing Vault’s generator algorithm - The If Works",
		"time": "2013-01-24T21:19:05Z",
		"href": "http://blog.jcoglan.com/2012/07/16/designing-vaults-generator-algorithm/"
	},
	{
		"cluster": 5,
		"tags": [
			"f#",
			"bayes",
			"statistics",
			"computerscience",
			"probabilistic",
			"functional",
			"programming",
			"inference",
			"machinelearning"
		],
		"y": -2.0585968561628034,
		"x": -6.864303278520322,
		"extended": "",
		"description": "Reverend Bayes, Meet Countess Lovelace: Machine Learning and Programming",
		"time": "2013-01-23T12:10:55Z",
		"href": "http://www.infoq.com/presentations/Machine-Learning-Functional"
	},
	{
		"cluster": 2,
		"tags": [
			"informationretrieval",
			"modelling",
			"topic",
			"machine",
			"learning",
			"computer",
			"science",
			"information",
			"retrieval"
		],
		"y": -2.832748507264192,
		"x": 2.006252386162043,
		"extended": "",
		"description": "David M. Blei",
		"time": "2013-01-22T08:10:47Z",
		"href": "http://www.cs.princeton.edu/~blei/topicmodeling.html"
	},
	{
		"cluster": 17,
		"tags": [
			"functor",
			"monad",
			"Scala",
			"functional",
			"programming",
			"flatten",
			"pocket-read"
		],
		"y": -1.773135694907242,
		"x": -8.853065533130634,
		"extended": "",
		"description": "Functors, Monads, Applicatives – taking Monad apart « de.velopmind | The Det about Programming",
		"time": "2013-01-21T08:48:23Z",
		"href": "http://thedet.wordpress.com/2013/01/21/functors-monads-applicatives-taking-monad-apart-draft/"
	},
	{
		"cluster": 16,
		"tags": [
			"software",
			"data",
			"science",
			"mining",
			"engineering",
			"predictive",
			"analytics",
			"machinelearning"
		],
		"y": -0.8576964314713492,
		"x": -2.0067428987296556,
		"extended": "",
		"description": "Data Mining and Predictive Analytics: Three Ways to Get Your Predictive Models Deployed",
		"time": "2013-01-21T07:54:38Z",
		"href": "http://abbottanalytics.blogspot.co.uk/2013/01/three-ways-to-get-your-predictive.html"
	},
	{
		"cluster": 5,
		"tags": [
			"data",
			"datasets",
			"statistics",
			"machinelearning",
			"resources"
		],
		"y": -2.320500808077574,
		"x": -3.0591495455326223,
		"extended": "",
		"description": "research-quality data sets",
		"time": "2013-01-17T18:51:53Z",
		"href": "http://bitly.com/bundles/hmason/1"
	},
	{
		"cluster": 18,
		"tags": [
			"bdd",
			"software",
			"development",
			"process",
			"engineering"
		],
		"y": 6.726557665200084,
		"x": -4.513224286932215,
		"extended": "",
		"description": "That's not BDD, that's just Cucumber",
		"time": "2013-01-17T08:05:05Z",
		"href": "http://chrismdp.com/2013/01/bdd-is-not-cucumber/"
	},
	{
		"cluster": 0,
		"tags": [
			"java",
			"garbagecollection",
			"monitoring",
			"jvm",
			"js",
			"ops",
			"computerscience",
			"system",
			"administration",
			"performance",
			"tuning",
			"operations"
		],
		"y": 2.8576282369933947,
		"x": -12.48667767100669,
		"extended": "",
		"description": "How to Monitor Java Garbage Collection | CUBRID Blog",
		"time": "2013-01-17T06:17:50Z",
		"href": "http://www.cubrid.org/blog/dev-platform/how-to-monitor-java-garbage-collection/"
	},
	{
		"cluster": 9,
		"tags": [
			"iowait",
			"iops",
			"disk",
			"linux",
			"performance",
			"tuning",
			"systems",
			"administration",
			"unix",
			"operations"
		],
		"y": -4.998930961833007,
		"x": 3.533858307722116,
		"extended": "",
		"description": "thattommyhall.com » Measuring Disk Usage In Linux (%iowait vs IOPS)",
		"time": "2013-01-16T20:34:19Z",
		"href": "http://www.thattommyhall.com/2011/02/18/iops-linux-iostat/"
	},
	{
		"cluster": 16,
		"tags": [
			"flavour",
			"food",
			"data",
			"computational",
			"gastronomy",
			"maths",
			"networks",
			"graphs",
			"analysis",
			"mining",
			"cooking",
			"computerscience"
		],
		"y": -1.524204953548455,
		"x": -1.597339518172761,
		"extended": "",
		"description": "Flavour | Full text | Network analysis and data mining in food science: the emergence of computational gastronomy",
		"time": "2013-01-16T20:10:32Z",
		"href": "http://www.flavourjournal.com/content/2/1/4"
	},
	{
		"cluster": 10,
		"tags": [
			"investing",
			"finance",
			"business",
			"ethics",
			"money",
			"politics"
		],
		"y": 9.463592053903456,
		"x": 6.625349375138171,
		"extended": "",
		"description": "Investors Chronicle - Headwinds and tailwinds for ethical investors",
		"time": "2013-01-09T17:32:44Z",
		"href": "http://www.investorschronicle.co.uk/2012/10/23/comment/chris-dillow/headwinds-and-tailwinds-for-ethical-investors-seqZX6pWsYwOFUA63m5ePI/article.html"
	},
	{
		"cluster": 4,
		"tags": [
			"categorytheory",
			"haskell",
			"statistics",
			"stats",
			"categoricaldistribution",
			"hlearn",
			"programming",
			"functional",
			"algebra"
		],
		"y": -5.2122053574151614,
		"x": -8.277480675728032,
		"extended": "",
		"description": "The categorical distribution's algebraic structure",
		"time": "2013-01-09T07:52:12Z",
		"href": "http://izbicki.me/blog/the-categorical-distributions-algebraic-structure"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"history",
			"mathematics",
			"pvalue",
			"significace",
			"hypothesis",
			"testing"
		],
		"y": -4.672731085117922,
		"x": -3.6522307126925795,
		"extended": "",
		"description": "p-value.info: What's the significance of 0.05 significance?",
		"time": "2013-01-07T14:33:55Z",
		"href": "http://www.p-value.info/2013/01/whats-significance-of-005-significance_6.html"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"functional",
			"reactive",
			"programming",
			"frp",
			"bacon",
			"web",
			"development",
			"computerscience",
			"ui",
			"events"
		],
		"y": 9.668673694827964,
		"x": -3.980860341670111,
		"extended": "",
		"description": "raimohanska/bacon.js · GitHub",
		"time": "2013-01-05T10:22:58Z",
		"href": "https://github.com/raimohanska/bacon.js"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"mathematics",
			"machinelearning",
			"kerneldensityfunctions",
			"algebra",
			"groups",
			"modules",
			"monoids",
			"functional",
			"programming",
			"statistics",
			"computerscience"
		],
		"y": -4.962705339741562,
		"x": -9.944985817015805,
		"extended": "",
		"description": "Nuclear weapon statistics using monoids, groups, and modules in Haskell",
		"time": "2013-01-05T09:35:33Z",
		"href": "http://izbicki.me/blog/nuclear-weapon-statistics-using-monoids-groups-and-modules-in-haskell"
	},
	{
		"cluster": 2,
		"tags": [
			"rails",
			"security",
			"cryptography",
			"web",
			"applications",
			"sessionsecret",
			"sessions"
		],
		"y": 11.886281677361763,
		"x": -4.577689080167572,
		"extended": "",
		"description": "Securing the Rails session secret – Phusion Corporate BlogPhusion Corporate Blog",
		"time": "2013-01-04T12:43:52Z",
		"href": "http://blog.phusion.nl/2013/01/04/securing-the-rails-session-secret/#.UObMYyGTW00"
	},
	{
		"cluster": 17,
		"tags": [
			"finance",
			"limitorderbook",
			"orderbook",
			"scala",
			"tdd",
			"programming",
			"functional",
			"cucumber"
		],
		"y": 1.918416656583604,
		"x": -7.537809906457807,
		"extended": "",
		"description": "Prototyping a Matching Engine with Scala and Cucumber « Eugene Prystupa’s Weblog",
		"time": "2013-01-04T09:01:51Z",
		"href": "http://eprystupa.wordpress.com/2012/12/23/prototyping-a-matching-engine-with-scala-and-cucumber/"
	},
	{
		"cluster": 4,
		"tags": [
			"categorytheory",
			"recursion",
			"corecursion",
			"induction",
			"coinduction",
			"mathematics",
			"algebra",
			"strictness",
			"haskell",
			"functional",
			"typetheory"
		],
		"y": -6.6503547568788655,
		"x": -6.283564343677258,
		"extended": "",
		"description": "Ruminations of a Programmer: strict : recursion :: non-strict : co-recursion",
		"time": "2013-01-04T07:46:15Z",
		"href": "http://debasishg.blogspot.co.uk/2013/01/strict-recursion-non-strict-co-recursion.html"
	},
	{
		"cluster": 17,
		"tags": [
			"nlp",
			"python",
			"clustering",
			"tfidf",
			"heirarchical",
			"agglomerative",
			"news",
			"aggregation",
			"computerscience",
			"machinelearning",
			"programming"
		],
		"y": 0.4430239510447321,
		"x": -5.606477322703383,
		"extended": "",
		"description": "p-value.info: Howto: build a news aggregator (in 100 LOC)",
		"time": "2013-01-04T07:45:43Z",
		"href": "http://www.p-value.info/2012/12/howto-build-news-aggregator-in-100-loc.html"
	},
	{
		"cluster": 12,
		"tags": [
			"nlp",
			"programming",
			"web",
			"frameworks",
			"computationallinguistics",
			"development"
		],
		"y": 10.170667610151492,
		"x": -5.036488907207121,
		"extended": "",
		"description": "NLP: the missing framework : Inside 206-105",
		"time": "2013-01-04T07:45:09Z",
		"href": "http://blog.ezyang.com/2013/01/nlp-the-missing-framework/"
	},
	{
		"cluster": 17,
		"tags": [
			"bloomfilter",
			"datastructures",
			"computerscience",
			"programming",
			"ruby"
		],
		"y": 3.855671832998872,
		"x": -11.26053258430068,
		"extended": "",
		"description": "Probabilistic Data Structures, Part I – Bloom Filters | Bill Laboon",
		"time": "2013-01-04T07:44:37Z",
		"href": "http://billlaboon.com/probabilistic-data-structures-part-i-bloom-filters/"
	},
	{
		"cluster": 8,
		"tags": [
			"maxmind",
			"geoip",
			"database",
			"geodata",
			"internet",
			"ip",
			"free",
			"open",
			"targetting",
			"openx",
			"advertising"
		],
		"y": 1.090477311024077,
		"x": 2.8593162720160703,
		"extended": "",
		"description": "MaxMind APIs: GeoLite Free Downloadable Databases",
		"time": "2013-01-03T21:17:33Z",
		"href": "http://dev.maxmind.com/geoip/geolite"
	},
	{
		"cluster": 2,
		"tags": [
			"geotargetting",
			"web",
			"advertising",
			"openx"
		],
		"y": 1.1204545295590163,
		"x": 2.8940881627522175,
		"extended": "",
		"description": "prgnsh: How to enable openx for geotargeting",
		"time": "2013-01-03T21:15:17Z",
		"href": "http://prgnsh.blogspot.co.uk/2011/05/how-to-enable-openx-for-geotargeting.html"
	},
	{
		"cluster": 2,
		"tags": [
			"openx",
			"web",
			"advertising",
			"troubleshooting"
		],
		"y": 1.1203459109185794,
		"x": 2.894115253748364,
		"extended": "",
		"description": "Tip #14: Troubleshooting banner delivery « OpenX Tips",
		"time": "2013-01-03T20:55:08Z",
		"href": "http://www.openxtips.com/2009/06/tip-14-troubleshooting-banner-delivery/"
	},
	{
		"cluster": 16,
		"tags": [
			"scala",
			"statistics",
			"maths",
			"data",
			"analysis",
			"libraries"
		],
		"y": -2.3832154570303645,
		"x": -1.6893855646559592,
		"extended": "",
		"description": "Is there a good math/stats library for Scala? - Stack Overflow",
		"time": "2012-12-30T07:53:07Z",
		"href": "http://stackoverflow.com/questions/8760925/is-there-a-good-math-stats-library-for-scala"
	},
	{
		"cluster": 5,
		"tags": [
			"pymc",
			"bayesian",
			"stats",
			"python",
			"machinelearning",
			"mcmc",
			"markovchainmontecarlo",
			"montecarlo",
			"simulation",
			"data",
			"analysis",
			"statistics"
		],
		"y": -2.3991736647079107,
		"x": -2.39132427345917,
		"extended": "",
		"description": "brain of mat kelcey",
		"time": "2012-12-30T07:51:01Z",
		"href": "http://matpalm.com/blog/2012/12/27/dead_simple_pymc/"
	},
	{
		"cluster": 2,
		"tags": [
			"python",
			"nltk",
			"sentimentanalysis",
			"naivebayes",
			"classification",
			"machinelearning",
			"computerscience"
		],
		"y": -0.46410006133316895,
		"x": -5.2395774874982735,
		"extended": "",
		"description": "p-value.info: Introduction to Sentiment Analysis",
		"time": "2012-12-28T09:01:53Z",
		"href": "http://www.p-value.info/2012/11/introduction-to-sentiment-analysis.html"
	},
	{
		"cluster": 15,
		"tags": [
			"nlp",
			"machine",
			"learning",
			"statistics",
			"bool",
			"computerscience",
			"mathematics"
		],
		"y": -1.4360406982143392,
		"x": -10.14757872524809,
		"extended": "",
		"description": "Foundations of Statistical Natural Language Processing",
		"time": "2012-12-27T16:48:05Z",
		"href": "http://www-nlp.stanford.edu/fsnlp/"
	},
	{
		"cluster": 2,
		"tags": [
			"palestine",
			"volunteering",
			"teaching"
		],
		"y": -2.5642442904484906,
		"x": 5.0213495669267845,
		"extended": "",
		"description": "Volunteering « Project Hope – Peace and Education In Palestine",
		"time": "2012-12-27T16:08:13Z",
		"href": "http://projecthope.ps/teach-in-palestine/"
	},
	{
		"cluster": 16,
		"tags": [
			"machinelearning",
			"data",
			"cluster",
			"operations",
			"complexity"
		],
		"y": -1.5380395807195502,
		"x": -0.8792778214925483,
		"extended": "",
		"description": "Machined Learnings: Do you really have big data?",
		"time": "2012-12-24T17:49:00Z",
		"href": "http://www.machinedlearnings.com/2012/12/do-you-really-have-big-data.html"
	},
	{
		"cluster": 5,
		"tags": [
			"maths",
			"statistics",
			"benfordslaw",
			"benford"
		],
		"y": -2.8201877682769037,
		"x": 1.942320548266422,
		"extended": "",
		"description": "Benford's Law",
		"time": "2012-12-24T17:41:43Z",
		"href": "http://www.datagenetics.com/blog/march52012/index.html"
	},
	{
		"cluster": 2,
		"tags": [
			"catsitting",
			"cat",
			"pet",
			"sitting",
			"service"
		],
		"y": -2.8329537845950004,
		"x": 5.013163544756592,
		"extended": "",
		"description": "Cat Sitters in North London // Cat's Whiskers",
		"time": "2012-12-24T16:37:13Z",
		"href": "http://www.cats-whiskers.info/north-london-catsitting-services.php"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"graph",
			"theory",
			"graphtheory",
			"functional",
			"programming",
			"topologicalsort",
			"sorting",
			"computerscience",
			"mathematics"
		],
		"y": -5.111086567257891,
		"x": -10.553258965968086,
		"extended": "",
		"description": "Abstract Nonsense: Graphs and Topological Sorting in the Functional Paradigm",
		"time": "2012-12-18T11:06:09Z",
		"href": "http://5outh.blogspot.co.uk/2012/12/graphs-and-topological-sorting-in.html"
	},
	{
		"cluster": 8,
		"tags": [
			"web",
			"social",
			"internet",
			"software"
		],
		"y": 4.343340445467145,
		"x": 2.785942529971514,
		"extended": "",
		"description": "The Web We Lost - Anil Dash",
		"time": "2012-12-18T11:01:05Z",
		"href": "http://dashes.com/anil/2012/12/the-web-we-lost.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"coverage",
			"bayesian",
			"frequentist",
			"mathematics"
		],
		"y": -4.629721858596659,
		"x": -3.8257286087163282,
		"extended": "",
		"description": "WHAT IS BAYESIAN/FREQUENTIST INFERENCE? « Normal Deviate",
		"time": "2012-12-16T10:54:17Z",
		"href": "http://normaldeviate.wordpress.com/2012/11/17/what-is-bayesianfrequentist-inference/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"programming",
			"computerscience",
			"mathematics",
			"correctness",
			"testing"
		],
		"y": -0.5955104221657637,
		"x": -10.264327424061129,
		"extended": "",
		"description": "What is Correctness for Statistical Software?",
		"time": "2012-12-16T10:48:13Z",
		"href": "http://www.johnmyleswhite.com/notebook/2012/12/14/what-is-correctness-for-statistical-software/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"pattern",
			"overloading",
			"programming",
			"magnet",
			"implicit",
			"softwareengineering"
		],
		"y": 5.962604675180809,
		"x": -2.883924470351507,
		"extended": "",
		"description": "spray | HTTP and more for your Akka/Scala Actors",
		"time": "2012-12-16T10:39:14Z",
		"href": "http://spray.io/blog/2012-12-13-the-magnet-pattern/"
	},
	{
		"cluster": 2,
		"tags": [
			"ai",
			"machinelearning",
			"computerscience",
			"deeplearning",
			"neuralnetworks"
		],
		"y": -0.8033323469415978,
		"x": -5.099339085495456,
		"extended": "",
		"description": "Is “Deep Learning” a Revolution in Artificial Intelligence? : The New Yorker",
		"time": "2012-12-16T10:24:45Z",
		"href": "http://www.newyorker.com/online/blogs/newsdesk/2012/11/is-deep-learning-a-revolution-in-artificial-intelligence.html"
	},
	{
		"cluster": 15,
		"tags": [
			"deeplearning",
			"machinelearning",
			"mathematics",
			"computerscience"
		],
		"y": -1.1268919178138326,
		"x": -5.188046167381268,
		"extended": "",
		"description": "The Geomblog: NIPS II: Deep Learning and the evolution of data models",
		"time": "2012-12-15T14:04:50Z",
		"href": "http://geomblog.blogspot.in/2012/12/nips-ii-deep-learning-and-evolution-of.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"functional",
			"programming",
			"cakepattern",
			"existential",
			"types",
			"existentialtypes",
			"computerscience",
			"pocket-unread"
		],
		"y": 0.7433312328997769,
		"x": -8.919053388683185,
		"extended": "",
		"description": "Existential Types FTW -",
		"time": "2012-12-15T12:14:00Z",
		"href": "http://precog.com/blog-precog-2/entry/existential-types-ftw"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"programming",
			"computerscience"
		],
		"y": -0.20845788112726957,
		"x": -11.380635116435188,
		"extended": "",
		"description": "The Mathematical Hacker",
		"time": "2012-12-12T10:46:13Z",
		"href": "http://www.evanmiller.org/mathematical-hacker.html"
	},
	{
		"cluster": 5,
		"tags": [
			"smoothing",
			"statistics",
			"machinelearning",
			"confidenceinterval"
		],
		"y": -2.753047285766887,
		"x": -3.892506276293503,
		"extended": "",
		"description": "brain of mat kelcey",
		"time": "2012-12-09T10:18:07Z",
		"href": "http://matpalm.com/blog/2012/12/confidence_interval_smoothing/"
	},
	{
		"cluster": 9,
		"tags": [
			"apache",
			"caching",
			"web",
			"server",
			"mod_cache",
			"linux",
			"sysadmin"
		],
		"y": 0.3450204918643583,
		"x": 3.1160065388315497,
		"extended": "",
		"description": "Apache mod_cache in the Real World | SoftSlate Blog",
		"time": "2012-12-06T15:33:34Z",
		"href": "http://www.softslate.com/blog/2011/07/apache-modcache-in-real-world.html"
	},
	{
		"cluster": 4,
		"tags": [
			"statistics",
			"haskell",
			"maths",
			"data",
			"fingertree",
			"datastructure",
			"monoid",
			"algebra",
			"computerscience",
			"functional",
			"programming"
		],
		"y": -5.606336832119631,
		"x": -9.554768052916616,
		"extended": "",
		"description": "A Neighborhood of Infinity: Statistical Fingertrees",
		"time": "2012-11-26T19:41:17Z",
		"href": "http://blog.sigfpe.com/2010/11/statistical-fingertrees.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"algebra",
			"machinelearning",
			"statistics",
			"gaussian",
			"distribution",
			"estimation",
			"monoid",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -5.523429284764425,
		"x": -9.570872279009167,
		"extended": "",
		"description": "Gaussian distributions form monoids",
		"time": "2012-11-26T19:38:35Z",
		"href": "http://izbicki.me/blog/gausian-distributions-are-monoids"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"upgrade",
			"development",
			"web",
			"programming"
		],
		"y": 9.37135903901616,
		"x": -7.557024236442159,
		"extended": "",
		"description": "Alex Rothenberg - Upgrading An Old Rails Rails 2.1.1 to 3.1 on Heroku",
		"time": "2012-11-26T18:51:49Z",
		"href": "http://www.alexrothenberg.com/2011/10/03/upgrading-an-old-rails-2-app-to-3.1-on-heroku.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"jruby",
			"programming",
			"refinements",
			"2.0",
			"impementation"
		],
		"y": 5.846087130670783,
		"x": -9.508944411576271,
		"extended": "",
		"description": "Headius: Refining Ruby",
		"time": "2012-11-26T18:50:11Z",
		"href": "http://blog.headius.com/2012/11/refining-ruby.html"
	},
	{
		"cluster": 2,
		"tags": [
			"microsoft",
			"softwarengineering",
			"ddd",
			"journey",
			"cqrs",
			"eventsourcing",
			".net"
		],
		"y": 0.24397613842051205,
		"x": 2.660674407421932,
		"extended": "",
		"description": "CQRS Journey",
		"time": "2012-11-21T16:59:01Z",
		"href": "http://msdn.microsoft.com/en-us/library/jj554200.aspx"
	},
	{
		"cluster": 9,
		"tags": [
			"postgres",
			"linux",
			"debian",
			"ubuntu",
			"encoding",
			"utf8"
		],
		"y": -5.922213354589173,
		"x": 5.5496443990578035,
		"extended": "",
		"description": "Fixing PostgreSQL's default encoding on Ubuntu 9.10",
		"time": "2012-11-21T14:53:50Z",
		"href": "http://jacobian.org/writing/pg-encoding-ubuntu/"
	},
	{
		"cluster": 7,
		"tags": [
			"timeseries",
			"metrics",
			"redis",
			"database",
			"data",
			"persistence",
			"programming",
			"development"
		],
		"y": 3.076460960302446,
		"x": -0.9422613195818851,
		"extended": "",
		"description": "Time-series data in Redis | Talk Unafraid | The Blog of James Harrison",
		"time": "2012-11-19T23:13:03Z",
		"href": "http://www.talkunafraid.co.uk/2010/12/time-series-data-in-redis/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"esper",
			"timeseries",
			"data",
			"programming"
		],
		"y": 6.237402557715835,
		"x": -2.8712279523023896,
		"extended": "",
		"description": "Betting Exchange Research Blog: Analysing Betting Exchange markets with Complex Event Processing, Esper and Scala",
		"time": "2012-11-19T23:12:43Z",
		"href": "http://blog.danmachine.com/2010/11/analysing-betting-exchange-markets-with.html"
	},
	{
		"cluster": 9,
		"tags": [
			"debian",
			"linux",
			"flash",
			"howto",
			"chromium"
		],
		"y": -5.306099589522499,
		"x": 4.614577620425646,
		"extended": "",
		"description": "FlashPlayer - Debian Wiki",
		"time": "2012-11-18T20:58:21Z",
		"href": "http://wiki.debian.org/FlashPlayer"
	},
	{
		"cluster": 18,
		"tags": [
			"abstraction",
			"soa",
			"architecture",
			"development",
			"programming",
			"softwareengineering",
			"design",
			"functional",
			"oop"
		],
		"y": 5.174633520721589,
		"x": -7.055415698781681,
		"extended": "",
		"description": "Abstractivate: Many weapons against one Big Ball of Mud",
		"time": "2012-11-16T15:53:41Z",
		"href": "http://blog.jessitron.com/2012/11/many-weapons-against-one-big-ball-of-mud.html"
	},
	{
		"cluster": 17,
		"tags": [
			"authentication",
			"cryptography",
			"hash",
			"security",
			"computerscience",
			"programming",
			"HMAC",
			"hashing",
			"merkledamgard"
		],
		"y": 3.12965797407792,
		"x": -9.628204424361023,
		"extended": "",
		"description": "Why you should never use hash functions for message authentication - The If Works",
		"time": "2012-11-13T15:06:16Z",
		"href": "http://blog.jcoglan.com/2012/06/09/why-you-should-never-use-hash-functions-for-message-authentication/"
	},
	{
		"cluster": 7,
		"tags": [
			"database",
			"architecture",
			"comparison",
			"nosql",
			"programming",
			"development"
		],
		"y": 3.3764739504674677,
		"x": -0.5774491880687972,
		"extended": "",
		"description": "NoSQL Comparison | www.thoughtworks.com",
		"time": "2012-11-13T08:46:45Z",
		"href": "http://www.thoughtworks.com/articles/nosql-comparison"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"journalism",
			"science",
			"higgs",
			"conditional",
			"probability",
			"mathematics",
			"bayes",
			"rule"
		],
		"y": -4.985973085011597,
		"x": -4.586272304432461,
		"extended": "",
		"description": "Innumeracy and the Evidence for Higgs Boson | Carlisle Rainey",
		"time": "2012-11-12T12:34:46Z",
		"href": "http://www.carlislerainey.com/2012/07/07/innumeracy-and-higgs-boson/"
	},
	{
		"cluster": 4,
		"tags": [
			"functional",
			"programming",
			"haskell",
			"fold",
			"computerscience",
			"foldr",
			"map",
			"compose"
		],
		"y": -5.702311041954178,
		"x": -9.256414464090852,
		"extended": "",
		"description": "Jaguarpaw Blog - What is foldr made of?",
		"time": "2012-11-12T12:13:09Z",
		"href": "http://web.jaguarpaw.co.uk/~tom/blog/posts/2012-11-04-what-is-foldr-made-of.html"
	},
	{
		"cluster": 7,
		"tags": [
			"postgis",
			"geodata",
			"opengeo",
			"tutorial",
			"database",
			"gis",
			"computing",
			"programming",
			"development",
			"data"
		],
		"y": 3.7786778731701283,
		"x": 0.06841693747934877,
		"extended": "",
		"description": "OpenGeo : Introduction to PostGIS",
		"time": "2012-11-08T18:44:01Z",
		"href": "http://workshops.opengeo.org/postgis-intro/"
	},
	{
		"cluster": 18,
		"tags": [
			"databases",
			"software",
			"dbms",
			"mysql",
			"postgres",
			"postgresql",
			"sql",
			"comparison",
			"development",
			"programming"
		],
		"y": 7.776484862122029,
		"x": -2.9247912123044415,
		"extended": "",
		"description": "MySQL vs PostgreSQL - WikiVS",
		"time": "2012-11-07T22:25:25Z",
		"href": "http://www.wikivs.com/wiki/MySQL_vs_PostgreSQL"
	},
	{
		"cluster": 0,
		"tags": [
			"reverse",
			"ssh",
			"tunnel",
			"networking",
			"portforwarding",
			"ops",
			"sysadmin"
		],
		"y": -2.266878405271617,
		"x": 3.4724347006282916,
		"extended": "",
		"description": "- [ t o i c . o r g ] - | Bypassing corporate firewall with reverse ssh port forwarding",
		"time": "2012-11-02T11:44:21Z",
		"href": "http://toic.org/blog/2009/01/18/reverse-ssh-port-forwarding/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"threading",
			"concurrency",
			"gil",
			"global",
			"interpreter",
			"lock",
			"programming"
		],
		"y": 5.947644760259774,
		"x": -11.292859250786144,
		"extended": "",
		"description": "The Ruby Global Interpreter Lock",
		"time": "2012-11-02T10:51:04Z",
		"href": "http://ablogaboutcode.com/2012/02/06/the-ruby-global-interpreter-lock/"
	},
	{
		"cluster": 18,
		"tags": [
			"programming",
			"agile",
			"aop",
			"expressionproblem",
			"software",
			"engineering",
			"developement"
		],
		"y": 5.344789412867542,
		"x": -4.118968414250779,
		"extended": "",
		"description": "homoiconic/2011/11/COMEFROM.md at master · raganwald/homoiconic",
		"time": "2012-10-31T17:28:54Z",
		"href": "https://github.com/raganwald/homoiconic/blob/master/2011/11/COMEFROM.md"
	},
	{
		"cluster": 18,
		"tags": [
			"ruby",
			"ddd",
			"programming",
			"design",
			"rails",
			"aggregates",
			"softwareengineering",
			"oop",
			"software",
			"engineering",
			"development"
		],
		"y": 6.660401363062919,
		"x": -6.75871755840032,
		"extended": "",
		"description": "RubySource | DDD for Rails Developers. Part 3: Aggregates.RubySource",
		"time": "2012-10-29T20:04:07Z",
		"href": "http://rubysource.com/ddd-for-rails-developers-part-3-aggregates/"
	},
	{
		"cluster": 18,
		"tags": [
			"ddd",
			"programming",
			"domain",
			"driven",
			"design",
			"web",
			"development",
			"architecture",
			"values",
			"entities",
			"rails",
			"ruby",
			"software",
			"engineering",
			"softwareengineering",
			"oop"
		],
		"y": 6.751215911612711,
		"x": -6.764213775549364,
		"extended": "",
		"description": "RubySource | DDD for Rails Developers. Part 2: Entities and ValuesRubySource",
		"time": "2012-10-29T12:32:04Z",
		"href": "http://rubysource.com/ddd-for-rails-developers-part-2-entities-and-values/"
	},
	{
		"cluster": 18,
		"tags": [
			"ddd",
			"ruby",
			"rails",
			"programming",
			"architecture",
			"software",
			"engineering",
			"layered",
			"services",
			"softwareengineering",
			"web",
			"development"
		],
		"y": 7.175285569327109,
		"x": -6.87554291364013,
		"extended": "",
		"description": "RubySource | DDD for Rails Developers. Part 1: Layered Architecture.RubySource",
		"time": "2012-10-29T12:24:05Z",
		"href": "http://rubysource.com/ddd-for-rails-developers-part-1-layered-architecture/"
	},
	{
		"cluster": 18,
		"tags": [
			"services",
			"ddd",
			"ruby",
			"rails",
			"programming",
			"development",
			"web",
			"software",
			"engineering",
			"softwareengineering"
		],
		"y": 7.17235432018475,
		"x": -6.887213379189529,
		"extended": "",
		"description": "Building Blocks of DDD: Services - Adventures with Ruby",
		"time": "2012-10-29T12:18:58Z",
		"href": "http://iain.nl/building-blocks-of-ddd-services"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"electoral",
			"mathematics",
			"analysis",
			"politics",
			"election",
			"polling",
			"us",
			"2012"
		],
		"y": 7.043837325756353,
		"x": 12.833843555832146,
		"extended": "",
		"description": "Presidential Election 2012 | Agent-Based Models",
		"time": "2012-10-29T09:38:35Z",
		"href": "http://www.agent-based-models.com/blog/2012/10/29/election-2012/"
	},
	{
		"cluster": 2,
		"tags": [
			"gds",
			"agile",
			"software",
			"delivery",
			"project",
			"management",
			"projectmanagement"
		],
		"y": 6.678975714808463,
		"x": 1.41369625185896,
		"extended": "",
		"description": "What we’ve learnt about scaling agile | Government Digital Service",
		"time": "2012-10-28T11:18:17Z",
		"href": "http://digital.cabinetoffice.gov.uk/2012/10/26/what-weve-learnt-about-scaling-agile/"
	},
	{
		"cluster": 18,
		"tags": [
			"ruby",
			"testing",
			"factories",
			"tdd",
			"oop",
			"programming",
			"software",
			"engineering",
			"softwareengineering"
		],
		"y": 7.159837018037667,
		"x": -4.927337897213273,
		"extended": "",
		"description": "Be Genius",
		"time": "2012-10-27T19:46:48Z",
		"href": "http://bjeanes.com/2012/02/factories-breed-complexity"
	},
	{
		"cluster": 7,
		"tags": [
			"mocks",
			"spies",
			"matahari",
			"ruby",
			"tdd",
			"mocking",
			"testing",
			"programming",
			"development"
		],
		"y": 8.07151121494814,
		"x": -4.997316402970508,
		"extended": "",
		"description": "Mocks suck. Matahari sucks less",
		"time": "2012-10-26T12:54:34Z",
		"href": "http://tomstuart.co.uk/2011/06/05/mocks-suck-matahari-sucks-less.html"
	},
	{
		"cluster": 7,
		"tags": [
			"vim",
			"ctags",
			"programming",
			"development"
		],
		"y": 8.654504377916375,
		"x": -2.4608451992795652,
		"extended": "",
		"description": "Tag navigation with Vim",
		"time": "2012-10-26T10:59:29Z",
		"href": "http://tomstuart.co.uk/2011/10/31/tag-navigation-with-vim.html"
	},
	{
		"cluster": 7,
		"tags": [
			"types",
			"static",
			"programming",
			"efficiency",
			"evidence",
			"science",
			"development",
			"processes"
		],
		"y": 7.995455201133035,
		"x": -2.5717828446706776,
		"extended": "",
		"description": "An experiment about static and dynamic type systems - It will never work in theory",
		"time": "2012-10-25T21:39:24Z",
		"href": "http://www.neverworkintheory.org/?p=432"
	},
	{
		"cluster": 18,
		"tags": [
			"soa",
			"software",
			"architecture",
			"design",
			"development",
			"cqrs",
			"event",
			"sourcing",
			"eventsourcing",
			"softwareengineering",
			"engineering"
		],
		"y": 6.008663269198417,
		"x": -5.2990016417467,
		"extended": "",
		"description": "CQRS why, what, how",
		"time": "2012-10-25T07:44:06Z",
		"href": "http://www.slideshare.net/jeppec/cqrs-why-what-how"
	},
	{
		"cluster": 12,
		"tags": [
			"rails",
			"marshalling",
			"objects",
			"session",
			"http",
			"web",
			"development",
			"programming"
		],
		"y": 9.624156686227227,
		"x": -6.782642157561901,
		"extended": "",
		"description": "Get your objects out of my session | #F80046",
		"time": "2012-10-24T15:20:02Z",
		"href": "http://www.songkick.com/devblog/2012/10/24/get-your-objects-out-of-my-session/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"amqp",
			"programming",
			"messagequeue",
			"messaging",
			"development"
		],
		"y": 7.171308322806045,
		"x": -8.560810657077774,
		"extended": "",
		"description": "File: Ruby amqp gem: Getting Started with AMQP and Ruby — Documentation for ruby-amqp/amqp (master)",
		"time": "2012-10-23T16:51:14Z",
		"href": "http://rdoc.info/github/ruby-amqp/amqp/master/file/docs/GettingStarted.textile"
	},
	{
		"cluster": 18,
		"tags": [
			"programming",
			"code",
			"learning",
			"teaching",
			"ui",
			"ux",
			"software",
			"languages",
			"educatio"
		],
		"y": 4.724467483514922,
		"x": -5.675310587534197,
		"extended": "",
		"description": "Learnable Programming",
		"time": "2012-10-23T15:24:28Z",
		"href": "http://worrydream.com/LearnableProgramming/"
	},
	{
		"cluster": 13,
		"tags": [
			"money",
			"economics",
			"fiat",
			"bubbles",
			"politics",
			"krugman"
		],
		"y": 8.843461908422624,
		"x": 8.612483678336426,
		"extended": "",
		"description": "Things That Aren't Bubbles - NYTimes.com",
		"time": "2012-10-22T14:20:05Z",
		"href": "http://krugman.blogs.nytimes.com/2012/10/22/things-that-arent-bubbles/?smid=tw-NytimesKrugman&seid=auto"
	},
	{
		"cluster": 18,
		"tags": [
			"programming",
			"design",
			"softwareengineering",
			"objectorientation",
			"oop",
			"computerscience",
			"code",
			"software"
		],
		"y": 4.586244016097289,
		"x": -7.585303448490214,
		"extended": "",
		"description": "Bad code smells - A Taxonomy",
		"time": "2012-10-22T12:05:16Z",
		"href": "http://www.soberit.hut.fi/mmantyla/BadCodeSmellsTaxonomy.htm"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"graphs",
			"python",
			"xkcd",
			"graphics",
			"datazix",
			"plotting",
			"matplotlib",
			"pylab"
		],
		"y": -4.299550119325209,
		"x": 6.118216346562431,
		"extended": "",
		"description": "XKCD-style plots in Matplotlib - Pythonic Perambulations",
		"time": "2012-10-21T14:46:47Z",
		"href": "http://jakevdp.github.com/blog/2012/10/07/xkcd-style-plots-in-matplotlib/"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"akka",
			"amqp",
			"heroku",
			"software",
			"web",
			"development",
			"programming"
		],
		"y": 7.2163924953101235,
		"x": -1.579678321067703,
		"extended": "",
		"description": "Scaling Out with Scala and Akka on Heroku | Heroku Dev Center",
		"time": "2012-10-21T14:45:36Z",
		"href": "https://devcenter.heroku.com/articles/scaling-out-with-scala-and-akka#scala"
	},
	{
		"cluster": 18,
		"tags": [
			"programming",
			"security",
			"objectcapabilities",
			"object",
			"oop",
			"capabilities",
			"software",
			"development"
		],
		"y": 3.9633109476803527,
		"x": -8.959435525633895,
		"extended": "",
		"description": "Rafael rambling: Security and Objects",
		"time": "2012-10-21T14:45:16Z",
		"href": "http://blog.rafaelferreira.net/2012/10/security-and-objects.html"
	},
	{
		"cluster": 17,
		"tags": [
			"designpatterns",
			"functional",
			"programming",
			"computerscience",
			"softwareengineering"
		],
		"y": 2.067508980491427,
		"x": -10.381385454917949,
		"extended": "",
		"description": "oop - Does Functional Programming Replace GoF Design Patterns? - Stack Overflow",
		"time": "2012-10-20T19:38:21Z",
		"href": "http://stackoverflow.com/questions/327955/does-functional-programming-replace-gof-design-patterns"
	},
	{
		"cluster": 12,
		"tags": [
			"mongo",
			"mongodb",
			"web",
			"sysadmin",
			"database",
			"nosql",
			"performance",
			"optimization",
			"indexing",
			"persistence",
			"storage",
			"devlopment",
			"programming"
		],
		"y": 3.1149188695291796,
		"x": 0.15397935323475503,
		"extended": "",
		"description": "Things I wish I knew about MongoDB a year ago",
		"time": "2012-10-19T15:02:15Z",
		"href": "http://snmaynard.com/2012/10/17/things-i-wish-i-knew-about-mongodb-a-year-ago/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"digital",
			"web",
			"productmanagement",
			"product"
		],
		"y": 9.537138942004841,
		"x": 1.1486365212733365,
		"extended": "",
		"description": "GDS design principles",
		"time": "2012-10-18T08:15:23Z",
		"href": "https://www.gov.uk/designprinciples"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"bayesian",
			"statistics",
			"ESP",
			"mathematics",
			"pvalues",
			"hypothesistesting"
		],
		"y": -4.603586597571296,
		"x": -3.888273315688675,
		"extended": "",
		"description": "Understanding uncertainty: ESP and the significance of significance | plus.maths.org",
		"time": "2012-10-15T22:52:35Z",
		"href": "http://plus.maths.org/content/esp-and-significance-significance"
	},
	{
		"cluster": 5,
		"tags": [
			"mathematics",
			"esp",
			"statistics",
			"bayes",
			"bayesian",
			"hypothesis",
			"testing",
			"pvalues"
		],
		"y": -4.5977601411434,
		"x": -3.8284819614264354,
		"extended": "",
		"description": "Understanding uncertainty: ESP and Bayes | plus.maths.org",
		"time": "2012-10-15T22:52:08Z",
		"href": "http://plus.maths.org/content/understanding-uncertainty-esp-and-bayes"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"food",
			"travel",
			"nyc",
			"brooklyn"
		],
		"y": -1.3235986552868624,
		"x": 4.575174042052455,
		"extended": "",
		"description": "Beer and burgers: how Brooklyn, New York, is brewing up a storm | Travel | The Guardian",
		"time": "2012-10-14T08:35:10Z",
		"href": "http://www.guardian.co.uk/travel/2012/oct/12/brooklyn-new-york-beer-food"
	},
	{
		"cluster": 12,
		"tags": [
			"akka",
			"scala",
			"subcut",
			"actors",
			"scalatra",
			"web",
			"development",
			"programming",
			"di",
			"dependencyinjection"
		],
		"y": 7.016802725079102,
		"x": -1.9594728958028842,
		"extended": "",
		"description": "Tutorial: Getting started with scala and scalatra - Part IV | Smartjava.org",
		"time": "2012-10-10T16:20:00Z",
		"href": "http://www.smartjava.org/content/tutorial-getting-started-scala-and-scalatra-part-iv"
	},
	{
		"cluster": 17,
		"tags": [
			"scalatra",
			"postgresql",
			"scala",
			"tutorials",
			"scalaquery",
			"programming",
			"web"
		],
		"y": 7.091252346079096,
		"x": -2.0016057393531543,
		"extended": "",
		"description": "Tutorial: Getting started with scala and scalatra - Part III | Smartjava.org",
		"time": "2012-10-10T16:08:57Z",
		"href": "http://www.smartjava.org/content/tutorial-getting-started-scala-and-scalatra-part-iii"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"parsing",
			"library",
			"parser",
			"combinators",
			"parsec",
			"programming",
			"development",
			"functional",
			"computerscience"
		],
		"y": 4.457272144548469,
		"x": -10.741048567114797,
		"extended": "",
		"description": "JParsec - Ruby Parsec",
		"time": "2012-10-09T14:17:22Z",
		"href": "http://jparsec.codehaus.org/Ruby+Parsec"
	},
	{
		"cluster": 13,
		"tags": [
			"vrm",
			"economics",
			"futurism",
			"business",
			"technology",
			"utopianpieinthesky",
			"strategy"
		],
		"y": 6.372506909316788,
		"x": 4.927064704185271,
		"extended": "",
		"description": "The Customer as a God: The Future of Shopping - WSJ.com",
		"time": "2012-10-09T12:23:58Z",
		"href": "http://online.wsj.com/article/SB10000872396390444873204577535352521092154.html?mod=googlenews_wsj"
	},
	{
		"cluster": 10,
		"tags": [
			"socialism",
			"politics",
			"work",
			"enjoyment",
			"communism"
		],
		"y": 2.552488076865934,
		"x": 10.548321707805579,
		"extended": "",
		"description": "Do we need bosses?",
		"time": "2012-10-09T10:11:40Z",
		"href": "http://www.socialistreview.org.uk/article.php?articlenumber=11606"
	},
	{
		"cluster": 13,
		"tags": [
			"hft",
			"trading",
			"business",
			"economics",
			"finance",
			"technology"
		],
		"y": 8.698125775947362,
		"x": 5.7357432067544565,
		"extended": "",
		"description": "The problem with high frequency trading | Felix Salmon",
		"time": "2012-10-09T10:04:00Z",
		"href": "http://blogs.reuters.com/felix-salmon/2012/10/06/the-problem-with-high-frequency-trading/"
	},
	{
		"cluster": 18,
		"tags": [
			"programming",
			"architecture",
			"design",
			"software"
		],
		"y": 5.611377460536795,
		"x": -5.521567865456856,
		"extended": "",
		"description": "Software Architecture cheat sheet",
		"time": "2012-10-09T09:37:43Z",
		"href": "http://gorban.org/post/32873465932/software-architecture-cheat-sheet"
	},
	{
		"cluster": 7,
		"tags": [
			"programming",
			"development",
			"mocking",
			"tdd",
			"bdd",
			"testing"
		],
		"y": 7.915872495790905,
		"x": -4.706594714240695,
		"extended": "",
		"description": "Mocks Aren't Stubs",
		"time": "2012-10-09T08:58:23Z",
		"href": "http://martinfowler.com/articles/mocksArentStubs.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"delimited",
			"continuations",
			"programming",
			"computerscience"
		],
		"y": 1.419176087826194,
		"x": -9.583076062332092,
		"extended": "",
		"description": "A Taste of 2.8: Continuations | The Scala Programming Language",
		"time": "2012-10-04T15:32:32Z",
		"href": "http://www.scala-lang.org/node/2096"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"akka",
			"lift",
			"actors"
		],
		"y": 5.1148817241850475,
		"x": -0.9332575460579008,
		"extended": "",
		"description": "The Rite of Coding: Beyond Chat : Lift, Comet and Akka",
		"time": "2012-10-03T16:51:41Z",
		"href": "http://riteofcoding.blogspot.co.uk/2011/05/beyond-chat-lift-comet-and-akka.html"
	},
	{
		"cluster": 7,
		"tags": [
			"programming",
			"oop",
			"java",
			"nouns",
			"verbs",
			"softwareengineering",
			"development",
			"functional",
			"design"
		],
		"y": 5.003053453693585,
		"x": -7.204439674022902,
		"extended": "",
		"description": "Stevey's Blog Rants: Execution in the Kingdom of Nouns",
		"time": "2012-09-28T15:35:21Z",
		"href": "http://steve-yegge.blogspot.co.uk/2006/03/execution-in-kingdom-of-nouns.html"
	},
	{
		"cluster": 7,
		"tags": [
			"testing",
			"xp",
			"tdd",
			"bdd",
			"programming",
			"development"
		],
		"y": 7.903803582316723,
		"x": -4.720365622826228,
		"extended": "",
		"description": "Michael Feathers: The Flawed Theory Behind Unit Testing",
		"time": "2012-09-28T14:50:20Z",
		"href": "http://michaelfeathers.typepad.com/michael_feathers_blog/2008/06/the-flawed-theo.html"
	},
	{
		"cluster": 2,
		"tags": [
			"cloudera",
			"virtualbox",
			"tutorial",
			"howto",
			"hadoop"
		],
		"y": -4.781646883737724,
		"x": 3.1425015154260127,
		"extended": "",
		"description": "Running the Cloudera Training VM in VirtualBox | Apache Hadoop for the Enterprise | Cloudera",
		"time": "2012-09-27T10:54:49Z",
		"href": "http://www.cloudera.com/blog/2009/07/cloudera-training-vm-virtualbox/"
	},
	{
		"cluster": 16,
		"tags": [
			"topology",
			"data",
			"analysis",
			"visualisation"
		],
		"y": -3.1323436909008224,
		"x": -0.8533205716739922,
		"extended": "",
		"description": "Michi’s blog » Blog Archive » Topology of Politics — Seminar talk",
		"time": "2012-09-21T16:33:57Z",
		"href": "http://blog.mikael.johanssons.org/archive/2012/09/topology-of-politics-seminar-talk/"
	},
	{
		"cluster": 17,
		"tags": [
			"unix",
			"processes",
			"os",
			"programming",
			"systems",
			"computerscience",
			"performance",
			"ruby",
			"passenger"
		],
		"y": 3.9219812519579995,
		"x": -11.323991949052646,
		"extended": "",
		"description": "The right way to deal with frozen processes on Unix – Phusion Corporate Blog",
		"time": "2012-09-21T16:26:29Z",
		"href": "http://blog.phusion.nl/2012/09/21/the-right-way-to-deal-with-frozen-processes-on-unix/#.UFyQCcfqTmE"
	},
	{
		"cluster": 17,
		"tags": [
			"scalding",
			"scala",
			"hadoop",
			"mapreduce",
			"recommendations",
			"recsys",
			"collaborative",
			"filtering",
			"programming",
			"machinelearning",
			"datascience",
			"computerscience",
			"pocket-unread"
		],
		"y": 0.8403029950437305,
		"x": -6.177967560983789,
		"extended": "",
		"description": "Movie recommendations and more via MapReduce and Scalding - Edwin Chen's Blog",
		"time": "2012-09-09T15:33:31Z",
		"href": "http://blog.echen.me/2012/02/09/movie-recommendations-and-more-via-mapreduce-and-scalding/"
	},
	{
		"cluster": 16,
		"tags": [
			"scalding",
			"scala",
			"mapreduce",
			"tools",
			"programming",
			"data",
			"datascience"
		],
		"y": 6.112476467535693,
		"x": -2.7341150294324823,
		"extended": "",
		"description": "Getting Started · twitter/scalding Wiki",
		"time": "2012-09-09T15:14:40Z",
		"href": "https://github.com/twitter/scalding/wiki/Getting-Started"
	},
	{
		"cluster": 16,
		"tags": [
			"mapreduce",
			"book",
			"text",
			"data",
			"datamining",
			"hadoop"
		],
		"y": -0.9109978392085404,
		"x": -1.657813622434807,
		"extended": "",
		"description": "Data-Intensive Text Processing with MapReduce",
		"time": "2012-09-09T07:50:44Z",
		"href": "http://lintool.github.com/MapReduceAlgorithms/"
	},
	{
		"cluster": 17,
		"tags": [
			"logic",
			"maths",
			"computerscience",
			"types",
			"functional",
			"programming",
			"curryhoward"
		],
		"y": -3.387491333522336,
		"x": -11.98176717895376,
		"extended": "",
		"description": "Philosophy Made Manifest: Curry-Howard for Non-Dummies – Part 1",
		"time": "2012-08-30T14:41:33Z",
		"href": "http://philosophymademanifest.blogspot.ca/2011/04/curry-howard-for-non-dummies-part-1.html"
	},
	{
		"cluster": 18,
		"tags": [
			"architecture",
			"softwarengineering",
			"oop",
			"hexagonal",
			"software",
			"engineering"
		],
		"y": 5.43064996029861,
		"x": -5.040988275606834,
		"extended": "",
		"description": "Ports-And-Adapters",
		"time": "2012-08-13T08:06:51Z",
		"href": "http://www.dossier-andreas.net/software_architecture/ports_and_adapters.html"
	},
	{
		"cluster": 18,
		"tags": [
			"bdd",
			"testing",
			"requirementsgathering",
			"cucumber",
			"tdd",
			"domain",
			"design",
			"software",
			"engineering"
		],
		"y": 7.118474661625421,
		"x": -4.657475331208631,
		"extended": "",
		"description": "Whose domain is it anyway? « Dan North & Associates",
		"time": "2012-08-13T08:01:04Z",
		"href": "http://dannorth.net/2011/01/31/whose-domain-is-it-anyway/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"IO",
			"longtraversable",
			"programming",
			"functional"
		],
		"y": 1.6290563578538821,
		"x": -7.720526692644256,
		"extended": "",
		"description": "Daily scala: Scala-IO Core: Long Traversable",
		"time": "2012-08-06T08:06:54Z",
		"href": "http://daily-scala.blogspot.co.uk/2012/08/scala-io-core-long-traversable.html"
	},
	{
		"cluster": 2,
		"tags": [
			"ssh-agent",
			"agent",
			"forwarding",
			"ssh",
			"security",
			"unix"
		],
		"y": -2.4154385277498944,
		"x": 3.338296653146213,
		"extended": "",
		"description": "An Illustrated Guide to SSH Agent Forwarding",
		"time": "2012-08-01T10:15:21Z",
		"href": "http://www.unixwiz.net/techtips/ssh-agent-forwarding.html"
	},
	{
		"cluster": 5,
		"tags": [
			"jaccard",
			"similarity",
			"mathematics",
			"fuzzy",
			"sets",
			"statistics"
		],
		"y": -4.321392489205715,
		"x": -4.357182043871419,
		"extended": "",
		"description": "brain of mat kelcey",
		"time": "2012-08-01T08:27:22Z",
		"href": "http://matpalm.com/blog/2012/07/31/fuzzy_jaccard/"
	},
	{
		"cluster": 17,
		"tags": [
			"dependency",
			"injection",
			"python",
			"programming",
			"patterns",
			"softwarengineering"
		],
		"y": 3.4461723675828044,
		"x": -5.817840563566199,
		"extended": "",
		"description": "Dependency Injection The Python Way « Python recipes « ActiveState Code",
		"time": "2012-07-31T11:39:39Z",
		"href": "http://code.activestate.com/recipes/413268-dependency-injection-the-python-way/"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"ml",
			"randomforest",
			"statistics",
			"learning",
			"ai",
			"decisiontree",
			"computerscience"
		],
		"y": -1.168454399420262,
		"x": -5.920970538361544,
		"extended": "",
		"description": "(18) Random Forests: How do random forests work in layman's terms? - Quora",
		"time": "2012-07-25T15:16:57Z",
		"href": "http://www.quora.com/Random-Forests/How-do-random-forests-work-in-laymans-terms"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"functional",
			"eventsourcing",
			"ddd",
			"stm",
			"concurrency",
			"programming",
			"design",
			"architecture",
			"softwareengineering",
			"pocket-unread"
		],
		"y": 5.715327391931709,
		"x": -1.8892535751268402,
		"extended": "",
		"description": "Martin Krasser's Blog: Building an Event-Sourced Web Application - Part 1: Domain Model, Events and State",
		"time": "2012-07-22T11:08:42Z",
		"href": "http://krasserm.blogspot.co.uk/2011/11/building-event-sourced-web-application.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"monad",
			"pedagogy",
			"functional",
			"programming",
			"typed",
			"types"
		],
		"y": -5.967171567615983,
		"x": -10.111270449875347,
		"extended": "",
		"description": "Monads: Easy or Hard? | blog :: Brent -> [String]",
		"time": "2012-07-22T08:24:05Z",
		"href": "http://byorgey.wordpress.com/2012/07/19/monads-easy-or-hard/"
	},
	{
		"cluster": 18,
		"tags": [
			"network",
			"bandwidth",
			"performance",
			"latency",
			"architecture",
			"programming",
			"software"
		],
		"y": 5.429923404913882,
		"x": -5.398372953375015,
		"extended": "",
		"description": "Latency: The New Web Performance Bottleneck - igvita.com",
		"time": "2012-07-21T12:44:41Z",
		"href": "http://www.igvita.com/2012/07/19/latency-the-new-web-performance-bottleneck/"
	},
	{
		"cluster": 2,
		"tags": [
			"bigdata",
			"realtime",
			"software",
			"analytics",
			"storm",
			"hadoop"
		],
		"y": 0.22964100182846206,
		"x": -1.6276473234824644,
		"extended": "",
		"description": "Realtime Analytics with Storm and Hadoop",
		"time": "2012-07-20T16:33:52Z",
		"href": "http://www.slideshare.net/Hadoop_Summit/realtime-analytics-with-storm"
	},
	{
		"cluster": 18,
		"tags": [
			"ar",
			"activerecord",
			"patterns",
			"design",
			"software",
			"engineering",
			"repositories",
			"ddd"
		],
		"y": 5.3236012908318,
		"x": -5.433961878255753,
		"extended": "",
		"description": "Active Records and Value Objects",
		"time": "2012-07-20T15:19:20Z",
		"href": "http://tomstuart.co.uk/2012/06/12/activerecord-and-value-objects.html"
	},
	{
		"cluster": 18,
		"tags": [
			"refactoring",
			"rails",
			"ruby",
			"hexagonal",
			"oop",
			"objectoriented",
			"design",
			"software",
			"engineering",
			"goos"
		],
		"y": 6.234510669934771,
		"x": -6.785122957199553,
		"extended": "",
		"description": "Refactoring with Hexagonal Rails",
		"time": "2012-07-20T15:12:22Z",
		"href": "http://theagileplanner.com/blog/building-agile-planner/refactoring-with-hexagonal-rails#comment-592926774"
	},
	{
		"cluster": 12,
		"tags": [
			"ssl",
			"https",
			"security",
			"web",
			"development",
			"operations",
			"hsts"
		],
		"y": 8.957285478709657,
		"x": 1.0473767348443048,
		"extended": "",
		"description": "ImperialViolet - Living with HTTPS",
		"time": "2012-07-20T11:49:41Z",
		"href": "http://www.imperialviolet.org/2012/07/19/hope9talk.html"
	},
	{
		"cluster": 4,
		"tags": [
			"tyingtheknot",
			"haskell",
			"reader",
			"monad",
			"cyclical",
			"data",
			"structures",
			"cyclicaldatastructure",
			"fix",
			"fixedpoint",
			"y",
			"functional",
			"programming",
			"rws"
		],
		"y": -5.14533204003016,
		"x": -9.317578113283862,
		"extended": "",
		"description": "» Tying the Knot, Redux mergeconflict",
		"time": "2012-07-17T10:25:38Z",
		"href": "http://mergeconflict.com/tying-the-knot-redux"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"computerscience",
			"computer",
			"science",
			"algorithm",
			"datastructure",
			"data",
			"structure",
			"reference",
			"dictionary"
		],
		"y": 1.473169277756774,
		"x": -12.302822925157237,
		"extended": "",
		"description": "Dictionary of Algorithms and Data Structures",
		"time": "2012-07-16T11:36:48Z",
		"href": "http://xlinux.nist.gov/dads/"
	},
	{
		"cluster": 9,
		"tags": [
			"debian",
			"linux",
			"thinkpad",
			"edge",
			"e320",
			"lenovo",
			"networking",
			"install"
		],
		"y": -5.280892374581657,
		"x": 4.9849048017011155,
		"extended": "",
		"description": "IT_fight: Install Debian/Linux on Lenovo ThinkPad EDGE E320 12984WG",
		"time": "2012-07-10T10:35:51Z",
		"href": "http://it-fight.blogspot.co.uk/2012/04/debian-and-lenovo-thinkpad-edge-e320.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"reflection",
			"programming",
			"computerscience",
			"plt"
		],
		"y": 1.433866402700113,
		"x": -9.622074365928716,
		"extended": "",
		"description": "Algorithmically challenged: JSON serialization with reflection in Scala! Part 1",
		"time": "2012-07-05T23:15:11Z",
		"href": "http://dcsobral.blogspot.co.uk/2012/07/json-serialization-with-reflection-in.html"
	},
	{
		"cluster": 18,
		"tags": [
			"functional",
			"programming",
			"design",
			"architecture",
			"software",
			"computerscience",
			"dataflow",
			"eventstreaming"
		],
		"y": 5.345360803801246,
		"x": -5.72256797494108,
		"extended": "",
		"description": "Abstractivate: Why Functional Matters: Your white board will never be the same",
		"time": "2012-07-05T11:43:59Z",
		"href": "http://blog.jessitron.com/2012/06/why-functional-matters-your-white-board.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"yesod",
			"web",
			"tutorial",
			"functional",
			"programming",
			"development"
		],
		"y": -4.53287406893233,
		"x": -6.867385558870876,
		"extended": "",
		"description": "Haskell web programming",
		"time": "2012-07-02T21:24:09Z",
		"href": "http://yannesposito.com/Scratch/en/blog/Yesod-tutorial-for-newbies/"
	},
	{
		"cluster": 18,
		"tags": [
			"swarm",
			"programming",
			"education",
			"presentation",
			"teaching",
			"learning",
			"software",
			"hacks",
			"tmux",
			"ssh"
		],
		"y": -0.08213694702645045,
		"x": -12.734429134817965,
		"extended": "",
		"description": "in which the facts are laid out concerning swarm coding - Technomancy",
		"time": "2012-07-02T21:01:43Z",
		"href": "http://technomancy.us/162"
	},
	{
		"cluster": 17,
		"tags": [
			"linux",
			"networking",
			"drivers",
			"software",
			"operating",
			"systems",
			"system",
			"computerscience",
			"programming"
		],
		"y": 2.455689318918895,
		"x": -13.727075973925587,
		"extended": "",
		"description": "Anatomy of the Linux networking stack",
		"time": "2012-07-02T16:47:56Z",
		"href": "http://www.ibm.com/developerworks/linux/library/l-linux-networking-stack/"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"graphics",
			"software",
			"computerscience",
			"operatingsystems",
			"os",
			"operating",
			"system"
		],
		"y": 2.453689664491994,
		"x": -13.778286294158804,
		"extended": "",
		"description": "The Linux Graphics Stack | Clean Rinse",
		"time": "2012-07-02T16:24:58Z",
		"href": "http://blog.mecheye.net/2012/06/the-linux-graphics-stack/"
	},
	{
		"cluster": 18,
		"tags": [
			"ruby",
			"oo",
			"design",
			"architecture",
			"software",
			"development",
			"rails",
			"poro",
			"oop",
			"objectoriented",
			"programming"
		],
		"y": 6.048298506393102,
		"x": -7.2089953294821525,
		"extended": "",
		"description": "Building a Rails app without Rails - the code",
		"time": "2012-07-02T13:36:53Z",
		"href": "http://ohthatjames.github.com/2012/06/30/rails-without-rails-code/"
	},
	{
		"cluster": 2,
		"tags": [
			"android",
			"emulator",
			"development",
			"hosts",
			"dns",
			"networking",
			"testing"
		],
		"y": 6.565623268588359,
		"x": 0.007196962745351728,
		"extended": "",
		"description": "Hosts files and the Google Android emulator",
		"time": "2012-06-29T11:32:37Z",
		"href": "http://www.bradcurtis.com/2011/02/13/hosts-file-google-android-emulator/"
	},
	{
		"cluster": 5,
		"tags": [
			"odds",
			"journalism",
			"probability",
			"statistics",
			"oddsratios",
			"science",
			"mathematics"
		],
		"y": -4.998115775245525,
		"x": -4.536742884900468,
		"extended": "",
		"description": "Language Log: Thou shalt not report odds ratios",
		"time": "2012-06-27T16:45:38Z",
		"href": "http://itre.cis.upenn.edu/~myl/languagelog/archives/004767.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"language",
			"mathematics",
			"odds",
			"oddsratio",
			"ratio",
			"percentage",
			"likelihood"
		],
		"y": -4.5519918041310214,
		"x": -4.232503078669989,
		"extended": "",
		"description": "Help the stats-challenged understand an odds ratio - statistics oddsratio percentage | Ask MetaFilter",
		"time": "2012-06-27T16:30:43Z",
		"href": "http://ask.metafilter.com/213378/Help-the-statschallenged-understand-an-odds-ratio"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"laziness",
			"programming",
			"computerscience",
			"circular",
			"lazy"
		],
		"y": -5.38843940433518,
		"x": -9.462628453883342,
		"extended": "",
		"description": "The Little Calculist: Circular programming in Haskell",
		"time": "2012-06-26T10:27:28Z",
		"href": "http://calculist.blogspot.co.uk/2005/07/circular-programming-in-haskell.html"
	},
	{
		"cluster": 7,
		"tags": [
			"rantly",
			"quickcheck",
			"propertybasedtesting",
			"testing",
			"properties",
			"ruby",
			"development",
			"software",
			"computerscience"
		],
		"y": 7.760583733583766,
		"x": -4.779884265036127,
		"extended": "",
		"description": "Randomly testing Ruby « LShift Ltd.",
		"time": "2012-06-26T10:26:26Z",
		"href": "http://www.lshift.net/blog/2011/11/26/randomly-testing-ruby"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"elasticity",
			"minimumwage",
			"policy",
			"wages",
			"employment"
		],
		"y": 10.307725751821723,
		"x": 9.477100833952056,
		"extended": "",
		"description": "Half Sigma: Elasticity of demand and the minimum wage",
		"time": "2012-06-20T16:20:26Z",
		"href": "http://www.halfsigma.com/2007/01/elasticity_of_d.html"
	},
	{
		"cluster": 17,
		"tags": [
			"bdd",
			"tdd",
			"queueing",
			"programming",
			"theory",
			"processes",
			"testing"
		],
		"y": 7.755451021982944,
		"x": -4.502924381076911,
		"extended": "",
		"description": "How test-driven development works (and more!) – jbrains",
		"time": "2012-06-19T13:08:30Z",
		"href": "http://www.jbrains.ca/permalink/how-test-driven-development-works-and-more"
	},
	{
		"cluster": 9,
		"tags": [
			"dropbox",
			"linux",
			"install",
			"headless",
			"puppet"
		],
		"y": -5.440045064472235,
		"x": 5.798955953109629,
		"extended": "",
		"description": "Setup Dropbox on headless Ubuntu 9.10 server | Jan Jonas' blog",
		"time": "2012-06-15T14:19:57Z",
		"href": "http://blog.janjonas.net/2010-11-21/setup-dropbox-headless-ubuntu-server"
	},
	{
		"cluster": 1,
		"tags": [
			"scala",
			"supercollider",
			"audio",
			"music",
			"jvm"
		],
		"y": -8.945404893590252,
		"x": 4.002111343677043,
		"extended": "",
		"description": "Sciss/ScalaCollider",
		"time": "2012-06-15T14:17:57Z",
		"href": "https://github.com/Sciss/ScalaCollider"
	},
	{
		"cluster": 9,
		"tags": [
			"debian",
			"network",
			"virtualbox",
			"vm",
			"linux"
		],
		"y": -5.35671799387042,
		"x": 5.019025535132842,
		"extended": "",
		"description": "#660 (Cloning Debian Etch guest breaks networking) – Oracle VM VirtualBox",
		"time": "2012-06-10T21:06:20Z",
		"href": "https://www.virtualbox.org/ticket/660"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"virtualbox",
			"ssh",
			"ubuntu"
		],
		"y": -5.965758186240987,
		"x": 5.665714443534358,
		"extended": "",
		"description": "Howto: SSH into VirtualBox 3 Linux Guests by Stuart Colville",
		"time": "2012-06-10T18:21:10Z",
		"href": "http://muffinresearch.co.uk/archives/2010/02/08/howto-ssh-into-virtualbox-3-linux-guests/"
	},
	{
		"cluster": 0,
		"tags": [
			"debian",
			"apt",
			"pinning",
			"testing",
			"stable",
			"package",
			"sysadmin",
			"management",
			"ops"
		],
		"y": -6.207381077812454,
		"x": 0.28341810310018445,
		"extended": "",
		"description": "Apt-Pinning for Beginners",
		"time": "2012-06-09T11:52:45Z",
		"href": "http://jaqque.sbih.org/kplug/apt-pinning.html"
	},
	{
		"cluster": 0,
		"tags": [
			"debian",
			"apt",
			"pinning",
			"testing",
			"stable",
			"package",
			"sysadmin",
			"management",
			"ops"
		],
		"y": -6.218242959236192,
		"x": 0.2725924938670006,
		"extended": "",
		"description": "APT HOWTO (Obsolete Documentation) - Managing packages",
		"time": "2012-06-09T11:52:26Z",
		"href": "http://www.debian.org/doc/manuals/apt-howto/ch-apt-get.en.html#s-default-version"
	},
	{
		"cluster": 0,
		"tags": [
			"debian",
			"apt",
			"pinning",
			"testing",
			"stable",
			"package",
			"sysadmin",
			"management",
			"ops"
		],
		"y": -6.207381054939769,
		"x": 0.28341810179230786,
		"extended": "",
		"description": "linux - How can I run Debian stable but install some packages from testing? - Server Fault",
		"time": "2012-06-09T11:52:18Z",
		"href": "http://serverfault.com/questions/22414/how-can-i-run-debian-stable-but-install-some-packages-from-testing"
	},
	{
		"cluster": 18,
		"tags": [
			"liskov",
			"lsp",
			"patterns",
			"programming",
			"substitution",
			"principle",
			"subtyping",
			"subclassing",
			"computerscience",
			"softwareengineering",
			"software",
			"engineering"
		],
		"y": 3.0372487009655114,
		"x": -9.257450844450796,
		"extended": "",
		"description": "Subtyping, Subclassing, and Trouble with OOP",
		"time": "2012-06-08T09:04:28Z",
		"href": "http://okmij.org/ftp/Computation/Subtyping/"
	},
	{
		"cluster": 7,
		"tags": [
			"android",
			"development",
			"programming",
			"tutorial",
			"java",
			"helloworld"
		],
		"y": 6.92693850112258,
		"x": -4.800522222556843,
		"extended": "",
		"description": "Hello, World | Android Developers",
		"time": "2012-06-08T08:03:18Z",
		"href": "http://developer.android.com/resources/tutorials/hello-world.html"
	},
	{
		"cluster": 15,
		"tags": [
			"subtyping",
			"scala",
			"typetheory",
			"computerscience",
			"mathematics"
		],
		"y": -1.7793626915714436,
		"x": -11.91241286106861,
		"extended": "",
		"description": "oop - Why avoid subtyping? - Stack Overflow",
		"time": "2012-06-08T07:45:32Z",
		"href": "http://stackoverflow.com/questions/7266596/why-avoid-subtyping"
	},
	{
		"cluster": 7,
		"tags": [
			"scala",
			"sbt",
			"plugin",
			"android",
			"programming",
			"development"
		],
		"y": 7.149581196355627,
		"x": -2.597668690336433,
		"extended": "",
		"description": "jberkel/android-plugin",
		"time": "2012-06-07T23:03:03Z",
		"href": "https://github.com/jberkel/android-plugin"
	},
	{
		"cluster": 7,
		"tags": [
			"android",
			"examples",
			"programming",
			"development",
			"scala"
		],
		"y": 7.153972931423392,
		"x": -2.6196532969745294,
		"extended": "",
		"description": "jberkel/android-sdk-scala · GitHub",
		"time": "2012-06-07T23:02:39Z",
		"href": "https://github.com/jberkel/android-sdk-scala"
	},
	{
		"cluster": 5,
		"tags": [
			"maths",
			"statistics",
			"machinelearning",
			"library",
			"scala",
			"scientific",
			"computing"
		],
		"y": -2.28022190192927,
		"x": -3.302533627354679,
		"extended": "",
		"description": "scalalab - A Matlab like environment for Scala - Google Project Hosting",
		"time": "2012-06-06T12:32:42Z",
		"href": "http://code.google.com/p/scalalab/"
	},
	{
		"cluster": 5,
		"tags": [
			"scala",
			"modelling",
			"machinelearning",
			"probabilistic",
			"statistics",
			"graphs",
			"library",
			"jvm",
			"inference"
		],
		"y": -2.238391876965923,
		"x": -3.4618499127048152,
		"extended": "",
		"description": "Factorie",
		"time": "2012-06-06T12:32:23Z",
		"href": "http://factorie.cs.umass.edu/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"functional",
			"computerscience",
			"types",
			"monomorphismrestriction"
		],
		"y": -6.256645249516003,
		"x": -10.539594058116778,
		"extended": "",
		"description": "Yet Another Lambda Blog » Towards understanding Haskell’s monomorphism restriction",
		"time": "2012-06-06T09:09:08Z",
		"href": "http://ics.p.lodz.pl/~stolarek/blog/2012/05/towards-understanding-haskells-monomorphism-restriction/"
	},
	{
		"cluster": 0,
		"tags": [
			"hiera",
			"puppet",
			"ops",
			"operations",
			"sysadmin",
			"linux"
		],
		"y": -8.203247316192478,
		"x": 7.898898193818067,
		"extended": "",
		"description": "Puppet configuration variables and Hiera. - - Craig Dunn's Blog",
		"time": "2012-06-03T18:16:37Z",
		"href": "http://www.craigdunn.org/2011/10/puppet-configuration-variables-and-hiera/"
	},
	{
		"cluster": 0,
		"tags": [
			"hiera",
			"encryption",
			"gpg",
			"puppet",
			"ops",
			"operations",
			"sysadmin",
			"linux"
		],
		"y": -8.235515492976912,
		"x": 7.898433235071349,
		"extended": "",
		"description": "Secret variables in Puppet with Hiera and GPG - - Craig Dunn's Blog",
		"time": "2012-06-03T18:16:17Z",
		"href": "http://www.craigdunn.org/2011/10/secret-variables-in-puppet-with-hiera-and-gpg/"
	},
	{
		"cluster": 18,
		"tags": [
			"ioc",
			"java",
			"programming",
			"patterns",
			"architecture",
			"software",
			"engineering",
			"dependencyinjection",
			"seveicelocator"
		],
		"y": 5.370643796674336,
		"x": -4.484270201149219,
		"extended": "",
		"description": "Inversion of Control Containers and the Dependency Injection pattern",
		"time": "2012-05-31T14:50:41Z",
		"href": "http://martinfowler.com/articles/injection.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scalaz",
			"presentation",
			"functional",
			"validation",
			"monad",
			"monoid",
			"applicative",
			"programming",
			"option",
			"lens",
			"scala"
		],
		"y": -0.662511378713433,
		"x": -8.64286536916233,
		"extended": "",
		"description": "Scalaz",
		"time": "2012-05-28T10:02:02Z",
		"href": "http://www.slideshare.net/mpilquist/scalaz-13068563"
	},
	{
		"cluster": 13,
		"tags": [
			"hft",
			"trading",
			"business",
			"economics",
			"regulation",
			"policy",
			"subpenny",
			"rule"
		],
		"y": 8.784634007853468,
		"x": 5.736184627443192,
		"extended": "",
		"description": "High Frequency Trading - What's broken and how to fix it",
		"time": "2012-05-23T08:36:12Z",
		"href": "http://www.chrisstucchio.com/blog/2012/hft_apology_3.html"
	},
	{
		"cluster": 0,
		"tags": [
			"puppet",
			"debian",
			"linux",
			"host",
			"sysadmin",
			"operations",
			"ops",
			"puppetmaster"
		],
		"y": -8.212391341692724,
		"x": 7.862215878540842,
		"extended": "",
		"description": "Installing Puppet master and client in the same host. The Debian way | www.elsotanillo.net de Juan Sierra Pons",
		"time": "2012-05-10T14:20:05Z",
		"href": "http://www.elsotanillo.net/2011/08/installing-puppet-master-and-client-in-the-same-host-the-debian-way/"
	},
	{
		"cluster": 4,
		"tags": [
			"theoremproving",
			"dependenttypes",
			"types",
			"programming",
			"computerscience",
			"logic",
			"mathematics",
			"functional"
		],
		"y": -3.327583003388897,
		"x": -12.016586546289421,
		"extended": "",
		"description": "Dependently typed programming and theorem proving in Haskell « Wolfgang Jeltsch",
		"time": "2012-05-01T07:28:01Z",
		"href": "http://jeltsch.wordpress.com/2012/04/30/dependently-typed-programming-and-theorem-proving-in-haskell/"
	},
	{
		"cluster": 12,
		"tags": [
			"haskell",
			"snap",
			"web",
			"programming",
			"development"
		],
		"y": -4.444976165351967,
		"x": -6.697079843327229,
		"extended": "",
		"description": "The Haskell / Snap ecosystem is as productive (or more) than Ruby/Rails.",
		"time": "2012-04-27T07:51:31Z",
		"href": "http://blog.dbpatterson.com/post/21885034168"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"finance",
			"hft",
			"trading"
		],
		"y": 8.844648946663112,
		"x": 5.9137677894269585,
		"extended": "",
		"description": "A High Frequency Trader's Apology, Pt 2",
		"time": "2012-04-26T16:38:50Z",
		"href": "http://www.chrisstucchio.com/blog/2012/hft_apology2.html"
	},
	{
		"cluster": 17,
		"tags": [
			"pointer",
			"C",
			"array",
			"char",
			"string",
			"programming",
			"computerscience"
		],
		"y": 2.4991114332042343,
		"x": -12.709703082186351,
		"extended": "",
		"description": "C notation: pointer to array of chars (string) - Stack Overflow",
		"time": "2012-04-23T22:16:25Z",
		"href": "http://stackoverflow.com/questions/6037426/c-notation-pointer-to-array-of-chars-string"
	},
	{
		"cluster": 17,
		"tags": [
			"c",
			"programming",
			"computerscience",
			"pointer",
			"array",
			"string"
		],
		"y": 2.48593637569153,
		"x": -12.679972883490715,
		"extended": "",
		"description": "Is it possible to modify a string of char in C? - Stack Overflow",
		"time": "2012-04-23T21:55:24Z",
		"href": "http://stackoverflow.com/questions/1011455/is-it-possible-to-modify-a-string-of-char-in-c/1011545#1011545"
	},
	{
		"cluster": 17,
		"tags": [
			"c",
			"programming",
			"pointer",
			"array",
			"string",
			"computerscience"
		],
		"y": 2.4914851971611847,
		"x": -12.691343021672,
		"extended": "",
		"description": "C Strings (Arrays vs. Pointers)",
		"time": "2012-04-23T21:54:47Z",
		"href": "http://www.cs.bu.edu/teaching/cpp/string/array-vs-ptr/"
	},
	{
		"cluster": 15,
		"tags": [
			"music",
			"mathematics",
			"algebra",
			"abstractalgebra",
			"abstract",
			"group",
			"theory",
			"grouptheory"
		],
		"y": -6.99109448006738,
		"x": -3.965203165462445,
		"extended": "",
		"description": "An application of abstract algebra to music theory",
		"time": "2012-04-21T12:04:43Z",
		"href": "http://www.slideshare.net/morkir/an-application-of-abstract-algebra-to-music-theory"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"semantic",
			"web",
			"linked",
			"data",
			"functional",
			"semanticweb",
			"linkedata",
			"computerscience"
		],
		"y": -5.257982006456028,
		"x": -8.683653091996103,
		"extended": "",
		"description": "Towards a Semantic Web Toolkit in Haskell - Querying RDF graphs & SPARQL construction",
		"time": "2012-04-19T19:25:25Z",
		"href": "https://docs.google.com/a/timcowlishaw.co.uk/viewer?url=http://www.macs.hw.ac.uk/~rs46/files/edlambda_talk/slides.pdf"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"machinelearning",
			"cf",
			"collaborativefiltering",
			"graphs",
			"location",
			"networks",
			"geodata",
			"recommendations"
		],
		"y": -1.4898292290936088,
		"x": -0.5931399183941486,
		"extended": "",
		"description": "Machine Learning with Large Networks of People and Places",
		"time": "2012-04-19T12:58:05Z",
		"href": "http://www.scribd.com/doc/86498718/Machine-Learning-with-Large-Networks-of-People-and-Places"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"monads",
			"mathematics",
			"categorytheory",
			"programming",
			"computerscience"
		],
		"y": -0.8881533890804285,
		"x": -11.281517544218994,
		"extended": "",
		"description": "Why Do Monads Matter? « Sententia cdsmithus",
		"time": "2012-04-18T14:33:42Z",
		"href": "http://cdsmith.wordpress.com/2012/04/18/why-do-monads-matter/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"monad",
			"programming",
			"functional",
			"types"
		],
		"y": -5.949610918490286,
		"x": -10.046528237341292,
		"extended": "",
		"description": "Software Simply: LTMT Part 2: Monads",
		"time": "2012-04-17T16:22:38Z",
		"href": "http://softwaresimply.blogspot.co.uk/2012/04/ltmt-part-2-monads.html"
	},
	{
		"cluster": 13,
		"tags": [
			"banking",
			"economics",
			"money",
			"trading",
			"finance",
			"business"
		],
		"y": 8.766146798122701,
		"x": 5.825741201898516,
		"extended": "",
		"description": "A High Frequency Trader's Apology, Pt 1",
		"time": "2012-04-17T16:00:05Z",
		"href": "http://www.chrisstucchio.com/blog/2012/hft_apology.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"types",
			"kinds",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -6.298033360032115,
		"x": -10.551658952065702,
		"extended": "",
		"description": "The Less Travelled Monad Tutorial: Understanding Kinds",
		"time": "2012-04-16T22:00:59Z",
		"href": "http://softwaresimply.blogspot.co.uk/2012/04/less-travelled-monad-tutorial-part-1.html"
	},
	{
		"cluster": 2,
		"tags": [
			"mortgage",
			"house",
			"banking",
			"money",
			"savings"
		],
		"y": 2.8459980529620665,
		"x": 5.156996504389086,
		"extended": "",
		"description": "Save to Buy First Time Buyer Savings Account | Nationwide",
		"time": "2012-03-31T06:06:08Z",
		"href": "http://www.nationwide.co.uk/savings/limited_access/savetobuy/"
	},
	{
		"cluster": 2,
		"tags": [
			"google",
			"vim",
			"docs",
			"hacks",
			"terminal"
		],
		"y": -2.3993481708631963,
		"x": 4.46994943670897,
		"extended": "",
		"description": "Sweet! Use Vim with Google Docs… | blog.milford.io",
		"time": "2012-03-30T07:12:15Z",
		"href": "http://blog.milford.io/2010/06/sweet-use-vim-with-google-docs/"
	},
	{
		"cluster": 9,
		"tags": [
			"apt",
			"dpkg",
			"ubuntu",
			"installed",
			"sysadmin",
			"linux",
			"backup",
			"restore",
			"migrate"
		],
		"y": -6.184956409789927,
		"x": 5.579368409279318,
		"extended": "",
		"description": "apt - How to find manually installed packages? - Ask Ubuntu - Stack Exchange",
		"time": "2012-03-28T20:22:21Z",
		"href": "http://askubuntu.com/questions/32007/how-to-find-manually-installed-packages"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"hadoop",
			"mapreduce",
			"scoobi",
			"scalding",
			"cascading"
		],
		"y": 5.5856707505918965,
		"x": 1.0192714776067031,
		"extended": "",
		"description": "Why Hadoop MapReduce needs Scala // Speaker Deck",
		"time": "2012-03-27T16:04:22Z",
		"href": "http://speakerdeck.com/u/agemooij/p/why-hadoop-mapreduce-needs-scala"
	},
	{
		"cluster": 18,
		"tags": [
			"estimation",
			"programming",
			"development",
			"software",
			"projectmanagement"
		],
		"y": 8.020433490537835,
		"x": -1.1883159285536928,
		"extended": "",
		"description": "Grabbing the Estimation Bull by the horns (and holding on for dear life)",
		"time": "2012-03-20T15:18:28Z",
		"href": "https://devblog.timgroup.com/index.php/2012/03/20/grabbing-the-estimation-bull-by-the-horns-and-holding-on-for-dear-life"
	},
	{
		"cluster": 7,
		"tags": [
			"oop",
			"ood",
			"object",
			"oriented",
			"design",
			"programming",
			"development",
			"ddd",
			"ruby",
			"rails",
			"web"
		],
		"y": 9.870362403171985,
		"x": -9.370616301270879,
		"extended": "",
		"description": "Objects on Rails",
		"time": "2012-03-18T22:52:53Z",
		"href": "http://objectsonrails.com/"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"ruby",
			"programming",
			"web",
			"3.2",
			"reference",
			"development"
		],
		"y": 9.336787942231428,
		"x": -7.56441435835318,
		"extended": "",
		"description": "Ruby on Rails Tutorial: Learn Rails by Example book and screencasts by Michael Hartl | Sign In Sign Out",
		"time": "2012-03-18T21:58:11Z",
		"href": "http://ruby.railstutorial.org/chapters/sign-in-sign-out?version=3.2#book_menu"
	},
	{
		"cluster": 18,
		"tags": [
			"software",
			"development",
			"lecture",
			"video",
			"programming",
			"engineering",
			"evidence",
			"statistics",
			"science",
			"softwarengineering"
		],
		"y": 6.573743136211451,
		"x": -4.417600092037919,
		"extended": "",
		"description": "Greg Wilson - What We Actually Know About Software Development, and Why We Believe It's True on Vimeo",
		"time": "2012-03-13T17:44:42Z",
		"href": "http://vimeo.com/9270320"
	},
	{
		"cluster": 17,
		"tags": [
			"guice",
			"hadoop",
			"mapreduce",
			"di",
			"dependencyinjection",
			"programming",
			"softwareengineering"
		],
		"y": 4.5321818541292815,
		"x": -3.382271105005561,
		"extended": "",
		"description": "Easing the Pain of Hadoop with Guice",
		"time": "2012-03-13T13:01:22Z",
		"href": "http://dev.hubspot.com/bid/51978/Easing-the-Pain-of-Hadoop-with-Guice"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"dependencyinjection",
			"di",
			"mapreduce",
			"softwareengineering",
			"programming"
		],
		"y": 4.545023463968721,
		"x": -3.385968701573549,
		"extended": "",
		"description": "Thoughts on Development: Map / Reduce and Dependency Injection",
		"time": "2012-03-13T12:10:03Z",
		"href": "http://esammer.blogspot.com/2009/09/map-reduce-and-dependency-injection.html"
	},
	{
		"cluster": 2,
		"tags": [
			"web",
			"javascrript",
			"bootstrap",
			"backbone"
		],
		"y": -1.9714102036983303,
		"x": 4.3312541412109855,
		"extended": "",
		"description": "Sample App with Backbone.js and Twitter Bootstrap",
		"time": "2012-03-08T18:32:26Z",
		"href": "http://coenraets.org/blog/2012/02/sample-app-with-backbone-js-and-twitter-bootstrap/"
	},
	{
		"cluster": 5,
		"tags": [
			"datamining",
			"predictive",
			"analysis",
			"computerscience",
			"statistics",
			"machinelearning"
		],
		"y": -2.009771196991636,
		"x": -5.466537224689139,
		"extended": "",
		"description": "Data Mining andPredictive Analytics: Target, Pregnancy, and Predictive Analytics,Part II",
		"time": "2012-02-23T23:16:39Z",
		"href": "http://abbottanalytics.blogspot.com/2012/02/target-pregnancy-and-predictive_21.html"
	},
	{
		"cluster": 18,
		"tags": [
			"erlang",
			"packaging",
			"rebar",
			"software",
			"reltool",
			"programming"
		],
		"y": 7.760021294438313,
		"x": -3.6459929403592963,
		"extended": "",
		"description": "Erlang App. Management with Rebar",
		"time": "2012-02-23T15:48:37Z",
		"href": "http://alancastro.org/2010/05/01/erlang-application-management-with-rebar.html"
	},
	{
		"cluster": 17,
		"tags": [
			"jvm",
			"java",
			"programming",
			"bytecode",
			"vm",
			"language",
			"interpreter",
			"compiler"
		],
		"y": 3.2347649494705384,
		"x": -4.884494303687837,
		"extended": "",
		"description": "Understanding JVM Internals | CUBRID Blog",
		"time": "2012-02-20T21:48:44Z",
		"href": "http://www.cubrid.org/blog/dev-platform/understanding-jvm-internals/"
	},
	{
		"cluster": 2,
		"tags": [
			"business",
			"management",
			"startups",
			"work"
		],
		"y": 1.9157113661841512,
		"x": 4.179597141852896,
		"extended": "",
		"description": "A VC: The Management Team - Guest Post From Joel Spolsky",
		"time": "2012-02-20T19:47:50Z",
		"href": "http://www.avc.com/a_vc/2012/02/the-management-team-guest-post-from-joel-spolsky.html"
	},
	{
		"cluster": 17,
		"tags": [
			"text",
			"data",
			"programming",
			"computerscience",
			"ai",
			"machinelearning",
			"nlp"
		],
		"y": -0.5343722431559339,
		"x": -6.742491189903036,
		"extended": "",
		"description": "Mining Unstructured Text: A new machine learning approach | ai-one",
		"time": "2012-02-19T12:37:18Z",
		"href": "http://www.ai-one.com/2012/02/13/mining-unstructured-text-a-new-machine-learning-approach/"
	},
	{
		"cluster": 17,
		"tags": [
			"visitor",
			"patterns",
			"programming",
			"functional",
			"traversal",
			"adt",
			"designpatterns"
		],
		"y": 2.59227618060828,
		"x": -7.907290280331595,
		"extended": "",
		"description": "logji: Correcting the Visitor pattern.",
		"time": "2012-02-19T12:13:21Z",
		"href": "http://logji.blogspot.com/2012/02/correcting-visitor-pattern.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"categorytheoiry",
			"programming",
			"languages",
			"plt",
			"computerscience",
			"category",
			"theory"
		],
		"y": -0.11472020543352603,
		"x": -11.323127934680633,
		"extended": "",
		"description": "Relating Category Theory to Programming Language Theory - MathOverflow",
		"time": "2012-02-19T11:59:10Z",
		"href": "http://mathoverflow.net/questions/4235/relating-category-theory-to-programming-language-theory/4274#4274"
	},
	{
		"cluster": 15,
		"tags": [
			"julia",
			"mathematics",
			"computing",
			"programming",
			"language",
			"parallel",
			"distributed",
			"numeric",
			"scienctific"
		],
		"y": -0.15172264648491363,
		"x": -10.83317027756281,
		"extended": "",
		"description": "The Julia Language",
		"time": "2012-02-19T11:37:09Z",
		"href": "http://julialang.org/"
	},
	{
		"cluster": 13,
		"tags": [
			"blackscholes",
			"finance",
			"mathematics",
			"derivatives",
			"economics",
			"trading"
		],
		"y": 8.932644566454512,
		"x": 5.841923757241694,
		"extended": "",
		"description": "The mathematical equation that caused the banks to crash | Science | The Observer",
		"time": "2012-02-13T10:02:57Z",
		"href": "http://www.guardian.co.uk/science/2012/feb/12/black-scholes-equation-credit-crunch"
	},
	{
		"cluster": 7,
		"tags": [
			"hadoop",
			"testing",
			"mrunit",
			"mapreduce",
			"programming",
			"development",
			"unit"
		],
		"y": 4.298919877137936,
		"x": -3.5094928877972724,
		"extended": "",
		"description": "Testing your Hadoop jobs with MRUnit",
		"time": "2012-02-06T17:26:16Z",
		"href": "http://eriwen.com/hadoop/testing-with-mrunit/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"json",
			"applicative",
			"functor",
			"validation",
			"computerscience",
			"programming"
		],
		"y": -0.7331919681843064,
		"x": -8.834275534748459,
		"extended": "",
		"description": "Ruminations of a Programmer: Applicatives and a story of composability with sjsonapp",
		"time": "2012-02-06T16:52:19Z",
		"href": "http://debasishg.blogspot.com/2012/02/applicatives-and-story-of-composability.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"scalaz",
			"applicative",
			"functor",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -0.70870713617965,
		"x": -8.746194285225428,
		"extended": "",
		"description": "A Small Example of Applicative Functors with Scalaz | Casual Miracles",
		"time": "2012-02-06T16:39:04Z",
		"href": "http://www.casualmiracles.com/2012/01/16/a-small-example-of-applicative-functors-with-scalaz/"
	},
	{
		"cluster": 16,
		"tags": [
			"storm",
			"twitter",
			"data",
			"processing",
			"realtime",
			"programming",
			"bigdata"
		],
		"y": 0.3436933044200927,
		"x": -1.6270438244201806,
		"extended": "",
		"description": "» Playing with huge information streams: Twitter Storm! arde en el infierno",
		"time": "2012-02-06T09:54:48Z",
		"href": "http://www.ardeenelinfierno.com/wordpress/2012/02/01/playing-with-huge-information-streams-twitter-storm/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"prolog",
			"interpreter",
			"jvm",
			"logic",
			"programming",
			"computerscience"
		],
		"y": 1.7963335598286176,
		"x": -10.221054855442812,
		"extended": "",
		"description": "styla - Styla is lightweight Scala-based Prolog interpreter based on a pure object oriented term hierarchy - Google Project Hosting",
		"time": "2012-02-03T12:55:33Z",
		"href": "http://code.google.com/p/styla/"
	},
	{
		"cluster": 14,
		"tags": [
			"search",
			"ux",
			"analytics",
			"data",
			"user",
			"interface",
			"ui",
			"experience",
			"web",
			"design"
		],
		"y": 1.4542818330196305,
		"x": 0.9974432310376921,
		"extended": "",
		"description": "Using search data to meet user needs | Government Digital Service",
		"time": "2012-02-01T16:59:29Z",
		"href": "http://digital.cabinetoffice.gov.uk/2012/01/27/search-data-user-needs/"
	},
	{
		"cluster": 2,
		"tags": [
			"ycombinator",
			"business",
			"funding",
			"application",
			"startups",
			"seed",
			"investment"
		],
		"y": 1.6501750333962486,
		"x": 4.151562877205513,
		"extended": "",
		"description": "Thoughts on How Y Combinator Evaluates Teams | The Art of Ass-Kicking",
		"time": "2012-02-01T08:23:59Z",
		"href": "http://www.jasonshen.com/2012/thoughts-on-how-y-combinator-evaluates-teams/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"engineering",
			"business",
			"functional",
			"typed",
			"programming",
			"software"
		],
		"y": -4.11999357519823,
		"x": -7.873222517861977,
		"extended": "",
		"description": "Make Things Now! Pragmatic FP with Haskell",
		"time": "2012-01-30T12:24:06Z",
		"href": "https://docs.google.com/a/timcowlishaw.co.uk/viewer?url=http://code.haskell.org/~dons/talks/padl-keynote-2012-01-24.pdf"
	},
	{
		"cluster": 12,
		"tags": [
			"erlang",
			"mochiweb",
			"html",
			"xpath",
			"scraping",
			"programming",
			"web",
			"development"
		],
		"y": 9.953631029157652,
		"x": -4.894079354874006,
		"extended": "",
		"description": "fun with mochiweb’s html parser and xpath « ppolv’s blog",
		"time": "2012-01-30T11:34:40Z",
		"href": "http://ppolv.wordpress.com/2008/05/09/fun-with-mochiwebs-html-parser-and-xpath/"
	},
	{
		"cluster": 18,
		"tags": [
			"event-driven",
			"architecture",
			"nginx",
			"node",
			"concurrency",
			"software",
			"engineering",
			"operatinggsystems",
			"servers"
		],
		"y": 5.310260537547153,
		"x": -4.8301928498162,
		"extended": "",
		"description": "Why are event-driven servers so great? | Moving Forward",
		"time": "2012-01-28T11:07:46Z",
		"href": "http://andrewbrobinson.com/2012/01/27/why-are-event-driven-servers-so-great/"
	},
	{
		"cluster": 2,
		"tags": [
			"banking",
			"finance",
			"business",
			"technology"
		],
		"y": 8.085159275453199,
		"x": 5.182292328016029,
		"extended": "",
		"description": "Life Beyond Fife - Banking Isn't Evil",
		"time": "2012-01-27T17:45:24Z",
		"href": "http://www.lifebeyondfife.com/86-banking.html"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"nlp",
			"library",
			"mavuno",
			"programming",
			"statistics",
			"linguistics",
			"computerscience",
			"language"
		],
		"y": -1.0091288177865596,
		"x": -7.371812065906646,
		"extended": "",
		"description": "Mavuno",
		"time": "2012-01-27T13:31:54Z",
		"href": "http://mavuno.isi.edu/mavuno/main.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"functional",
			"video",
			"spj"
		],
		"y": -5.169387675298204,
		"x": -8.294603180815011,
		"extended": "",
		"description": "Eventer",
		"time": "2012-01-25T08:39:25Z",
		"href": "http://yow.eventer.com/events/1004/talks/1054"
	},
	{
		"cluster": 5,
		"tags": [
			"lda",
			"latentdirichlectallocation",
			"dirichlet",
			"nlp",
			"linguistics",
			"computerscience",
			"computationallinguistics",
			"machinelearning",
			"unsupervised",
			"featureselection",
			"informationretrieval",
			"statistics"
		],
		"y": -2.1383481879152697,
		"x": -5.155078451559046,
		"extended": "",
		"description": "Introduction to Latent Dirichlet Allocation « Edwin Chen's Blog",
		"time": "2012-01-24T22:50:16Z",
		"href": "http://blog.echen.me/2011/08/22/introduction-to-latent-dirichlet-allocation/"
	},
	{
		"cluster": 17,
		"tags": [
			"erlang",
			"hbase",
			"thrift",
			"database",
			"programming"
		],
		"y": 3.429513663850098,
		"x": -3.4195403166041554,
		"extended": "",
		"description": "Erlang, Thrift and HBase « (defun side of kungfooguru)",
		"time": "2012-01-23T13:33:23Z",
		"href": "http://kungfooguru.wordpress.com/2009/08/31/erlang-thrift-and-hbase/"
	},
	{
		"cluster": 17,
		"tags": [
			"thrift",
			"erlang",
			"hbase",
			"programming",
			"database",
			"computerscience",
			"hadoop"
		],
		"y": 3.4197909241267346,
		"x": -3.4406051885116624,
		"extended": "",
		"description": "How to load thrift client in Erlang - Stack Overflow",
		"time": "2012-01-23T13:26:33Z",
		"href": "http://stackoverflow.com/questions/5837776/how-to-load-thrift-client-in-erlang"
	},
	{
		"cluster": 16,
		"tags": [
			"nlp",
			"data",
			"tool",
			"corpus",
			"public",
			"datasets"
		],
		"y": -2.3000325876233783,
		"x": 1.65728705568561,
		"extended": "",
		"description": "AutoCorpus - natural language corpora from large public datasets",
		"time": "2012-01-22T10:48:08Z",
		"href": "http://mpacula.com/autocorpus/"
	},
	{
		"cluster": 7,
		"tags": [
			"erlang",
			"tdd",
			"testing",
			"tutorial",
			"rebar",
			"dialyzer",
			"eunit",
			"programming",
			"development",
			"softwareengineering"
		],
		"y": 7.72869230192254,
		"x": -4.789928854925329,
		"extended": "",
		"description": "Erlang TDD hands on project – WorkerNet part 1 « Erlang, Testing and TDD",
		"time": "2012-01-20T10:35:33Z",
		"href": "http://erlcode.wordpress.com/2010/12/17/erlang-tdd-hands-on-project-workernet-part-1/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"akka",
			"eventsourcing",
			"event",
			"sourcing",
			"actors",
			"programming"
		],
		"y": 4.920037325696655,
		"x": -1.883539664944473,
		"extended": "",
		"description": "Ruminations of a Programmer: Retroactive Event Processing with Scala Actors",
		"time": "2012-01-19T20:32:54Z",
		"href": "http://debasishg.blogspot.com/2009/02/retroactive-event-processing-with-scala.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"akka",
			"actors",
			"computerscience",
			"eventsourcing",
			"event",
			"sourcing"
		],
		"y": 4.871802051347818,
		"x": -1.9426784638323678,
		"extended": "",
		"description": "Asynchronous Event Sourcing using Actors",
		"time": "2012-01-19T20:08:49Z",
		"href": "http://jboner.github.com/2009/02/12/event-sourcing-using-actors.html"
	},
	{
		"cluster": 2,
		"tags": [
			"ethical",
			"banking",
			"savings",
			"finance"
		],
		"y": 3.0048362097751324,
		"x": 5.164655975719282,
		"extended": "",
		"description": "Personal Banking - Triodos Bank | Triodos Bank",
		"time": "2012-01-10T12:25:34Z",
		"href": "http://www.triodos.co.uk/en/personal/?gclid=CKubqMKyxa0CFcMMtAodWBzo_g"
	},
	{
		"cluster": 2,
		"tags": [
			"postgres",
			"postgresql",
			"ubuntu",
			"setup",
			"database",
			"sysadmin",
			"reference"
		],
		"y": -1.1719644592878107,
		"x": 1.6481012784097895,
		"extended": "",
		"description": "Setup PostgreSQL in Ubuntu « solaris",
		"time": "2012-01-09T13:38:50Z",
		"href": "http://solyaris.wordpress.com/2008/08/09/setup-postgres-in-ubuntu/"
	},
	{
		"cluster": 17,
		"tags": [
			"performance",
			"programming",
			"datastructures",
			"algorithms",
			"algorithm",
			"computerscience"
		],
		"y": 1.304112073030149,
		"x": -12.721414971981192,
		"extended": "",
		"description": "Why Data Structures Matter « Sliding up the banister",
		"time": "2012-01-07T10:58:06Z",
		"href": "http://joelneely.wordpress.com/2011/03/05/why-data-structures-matter/"
	},
	{
		"cluster": 17,
		"tags": [
			"erlang",
			"meck",
			"testing",
			"td",
			"programming",
			"eunit"
		],
		"y": 3.520803857595038,
		"x": -5.864487162629669,
		"extended": "",
		"description": "Mochi Labs - meck and eunit best practices",
		"time": "2012-01-06T13:56:32Z",
		"href": "http://labs.mochimedia.com/archive/2011/06/13/meck-eunit-best-practices/"
	},
	{
		"cluster": 17,
		"tags": [
			"testing",
			"tdd",
			"clojure",
			"functional",
			"programming",
			"softwareengineering"
		],
		"y": 2.318653947783357,
		"x": -6.671944521461919,
		"extended": "",
		"description": "My Experience With TDD In Clojure",
		"time": "2012-01-06T13:14:57Z",
		"href": "http://philcalcado.com/2011/08/29/my_experience_with_test/driven_development_in_clojure_and_functional_programming.html"
	},
	{
		"cluster": 15,
		"tags": [
			"statistics",
			"book",
			"mathematics",
			"learning",
			"education",
			"reference"
		],
		"y": -8.848478931655668,
		"x": -5.605385905380187,
		"extended": "",
		"description": "Inferential Statistics",
		"time": "2012-01-05T12:30:20Z",
		"href": "http://faculty.vassar.edu/lowry/webtext.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"wilcoxon",
			"signed",
			"rank",
			"test",
			"mathematics",
			"reference"
		],
		"y": -4.476940691382209,
		"x": -4.126446968638557,
		"extended": "",
		"description": "Wilcoxon Signed-Rank Test",
		"time": "2012-01-05T12:30:02Z",
		"href": "http://faculty.vassar.edu/lowry/ch12a.html"
	},
	{
		"cluster": 7,
		"tags": [
			"erlang",
			"build",
			"rebar",
			"reltool",
			"release",
			"programming",
			"development"
		],
		"y": 7.835046280369123,
		"x": -3.586995264501315,
		"extended": "",
		"description": "How to create, build, and run an Erlang OTP application using Rebar | Skeptomai",
		"time": "2012-01-05T11:20:49Z",
		"href": "http://skeptomai.com/?p=56"
	},
	{
		"cluster": 4,
		"tags": [
			"functional",
			"programming",
			"computerscience",
			"scala",
			"haskell",
			"typetheory"
		],
		"y": -5.479606409464157,
		"x": -9.556985632840444,
		"extended": "",
		"description": "YOW! 2011: Tony Morris - Functional Programming and Functional Thinking | Charles | Channel 9",
		"time": "2012-01-04T22:46:32Z",
		"href": "http://channel9.msdn.com/Blogs/Charles/YOW-2011-Tony-Morris-Functional-Programming-and-Functional-Thinking"
	},
	{
		"cluster": 17,
		"tags": [
			"git",
			"rebase",
			"merge",
			"scm",
			"bestpractices",
			"sourcecontrol",
			"programming",
			"computerscience"
		],
		"y": 7.0272162287815005,
		"x": 0.4321422696503285,
		"extended": "",
		"description": "gitguru » Rebase v Merge in Git",
		"time": "2012-01-04T17:02:31Z",
		"href": "http://gitguru.com/2009/02/03/rebase-v-merge-in-git/"
	},
	{
		"cluster": 15,
		"tags": [
			"abstract",
			"algebra",
			"cyclic",
			"group",
			"mathematics",
			"cryptography",
			"publickey",
			"computerscience"
		],
		"y": -6.659791613582854,
		"x": -4.259979955735629,
		"extended": "",
		"description": "Computer Science, Math and Clever Dolphins: Abstract Algebra presented in a non-intimidating way (esp. for developers) - cryptography",
		"time": "2012-01-02T19:36:50Z",
		"href": "http://poincare101.blogspot.com/2012/01/hi-hopefully-you-read-last-post-and-if.html"
	},
	{
		"cluster": 2,
		"tags": [
			"maths",
			"cyclic",
			"group",
			"abstract",
			"algebra",
			"abstracalgebra",
			"modular",
			"arithmetic"
		],
		"y": -6.700426688276717,
		"x": -4.083344188252744,
		"extended": "",
		"description": "Computer Science, Math and Clever Dolphins: Abstract Algebra presented in a non-intimidating way (esp. for developers) part 2",
		"time": "2012-01-02T19:32:40Z",
		"href": "http://poincare101.blogspot.com/2011/12/abstract-algebra-presented-in-non.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"algebra",
			"abstract",
			"abstractalgebra",
			"groups"
		],
		"y": -6.992664896973038,
		"x": -3.952552650278603,
		"extended": "",
		"description": "Computer Science, Math and Clever Dolphins: Abstract Algebra presented in a non-intimidating way (esp. for developers)",
		"time": "2012-01-02T19:21:36Z",
		"href": "http://poincare101.blogspot.com/2011/11/abstract-algebra-presented-in-non.html"
	},
	{
		"cluster": 1,
		"tags": [
			"jazz",
			"chords",
			"music",
			"theory",
			"piano"
		],
		"y": -10.310725187589247,
		"x": 5.620435165257567,
		"extended": "",
		"description": "James Tauber : Why 13th Chords",
		"time": "2012-01-02T19:14:06Z",
		"href": "http://jtauber.com/blog/2008/09/23/why_13th_chords/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"objectoriended",
			"design",
			"oop",
			"development",
			"softwarengineering",
			"computerscience"
		],
		"y": 4.0521770718034515,
		"x": -8.794695438184451,
		"extended": "",
		"description": "Getting a SOLID start.",
		"time": "2011-12-31T13:12:22Z",
		"href": "http://www.instapaper.com/text?u=http%3A%2F%2Fblog.objectmentor.com%2Farticles%2F2009%2F02%2F12%2Fgetting-a-solid-start"
	},
	{
		"cluster": 18,
		"tags": [
			"oop",
			"patterns",
			"programming",
			"objectoriented",
			"softwareengineering",
			"design",
			"development"
		],
		"y": 5.0117479872272375,
		"x": -7.212834637141095,
		"extended": "",
		"description": "ArticleS.UncleBob.PrinciplesOfOod",
		"time": "2011-12-31T13:07:49Z",
		"href": "http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod"
	},
	{
		"cluster": 17,
		"tags": [
			"oop",
			"design",
			"programming",
			"computerscience",
			"softwareengineering",
			"objects",
			"objectoriented"
		],
		"y": 4.777593244609153,
		"x": -7.407161167771441,
		"extended": "",
		"description": "Building Skills in Object-Oriented Design — S.Lott v4.2 Site",
		"time": "2011-12-31T11:52:19Z",
		"href": "http://www.itmaybeahack.com/homepage/books/oodesign.html"
	},
	{
		"cluster": 4,
		"tags": [
			"cs",
			"functional",
			"spj",
			"peytonjones",
			"haskell",
			"programming",
			"computerscience"
		],
		"y": -5.703466138137113,
		"x": -9.262663976088332,
		"extended": "",
		"description": "YOW! 2011: Simon Peyton-Jones - Closer to Nirvana | Charles | Channel 9",
		"time": "2011-12-30T11:12:51Z",
		"href": "http://channel9.msdn.com/Blogs/Charles/YOW-2011-Simon-Peyton-Jones-Closer-to-Nirvana"
	},
	{
		"cluster": 13,
		"tags": [
			"property",
			"finance",
			"economics",
			"interest",
			"rates",
			"prices"
		],
		"y": 9.214028738796198,
		"x": 7.058381618426455,
		"extended": "",
		"description": "How do Interest Rates affect the Housing Market? | Finance Blog",
		"time": "2011-12-30T09:16:40Z",
		"href": "http://www.mortgageguideuk.co.uk/blog/uk-housing-market/how-do-interest-rates-affect-the-housing-market/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"hadoop",
			"programming",
			"library"
		],
		"y": 6.034651594700494,
		"x": -3.080471358813037,
		"extended": "",
		"description": "NICTA/scoobi - GitHub",
		"time": "2011-12-28T12:53:56Z",
		"href": "https://github.com/NICTA/scoobi"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"http",
			"client",
			"library",
			"programming"
		],
		"y": 6.2078863667020565,
		"x": -3.023187324467781,
		"extended": "",
		"description": "Dispatch — Dispatch",
		"time": "2011-12-28T12:53:42Z",
		"href": "http://dispatch.databinder.net/Dispatch.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"yampa",
			"frp",
			"functional",
			"reactive",
			"programming"
		],
		"y": -6.486375830537855,
		"x": -7.647959985556035,
		"extended": "",
		"description": "Hello Yampa « Daniel's Notebook",
		"time": "2011-12-25T23:36:46Z",
		"href": "http://danielmescheder.wordpress.com/2011/12/02/hello-yampa/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"frp",
			"functional",
			"reactive",
			"programming",
			"computerscience",
			"reactivebanana"
		],
		"y": -6.547529673074659,
		"x": -7.78110710947854,
		"extended": "",
		"description": "Functional Reactive Programming kick-starter guide « Web life between Python and lambda calculus",
		"time": "2011-12-25T23:14:09Z",
		"href": "http://alfredodinapoli.wordpress.com/2011/12/24/functional-reactive-programming-kick-starter-guide/"
	},
	{
		"cluster": 5,
		"tags": [
			"array",
			"r",
			"list",
			"programing",
			"apply",
			"functional",
			"statistics"
		],
		"y": -2.2594732987923547,
		"x": 1.407933679696489,
		"extended": "",
		"description": "R Library: Advanced functions",
		"time": "2011-12-24T08:44:16Z",
		"href": "http://www.ats.ucla.edu/stat/r/library/advanced_function_r.htm"
	},
	{
		"cluster": 5,
		"tags": [
			"r",
			"json",
			"data",
			"statistics",
			"programming",
			"computerscience",
			"datamining",
			"machinelearning"
		],
		"y": -1.3605717945126565,
		"x": -6.473095133846694,
		"extended": "",
		"description": "r - Getting dataframe directly from JSON-file? - Stack Overflow",
		"time": "2011-12-24T08:42:22Z",
		"href": "http://stackoverflow.com/questions/6526646/getting-dataframe-directly-from-json-file"
	},
	{
		"cluster": 2,
		"tags": [
			"porsche",
			"volkswagen",
			"short",
			"derivatives",
			"finance",
			"business"
		],
		"y": 7.990846975091092,
		"x": 4.922761988830112,
		"extended": "",
		"description": "High and Low Finance - A Clever Move by Porsche on VW’s Stock - NYTimes.com",
		"time": "2011-12-23T23:13:29Z",
		"href": "http://www.nytimes.com/2008/10/31/business/worldbusiness/31norris.html?pagewanted=all"
	},
	{
		"cluster": 15,
		"tags": [
			"finance",
			"mathematics",
			"intractibility",
			"computerscience",
			"derivatives",
			"business",
			"NP"
		],
		"y": -2.067882375596392,
		"x": -13.465830176684298,
		"extended": "",
		"description": "Intractability of Financial Derivatives | Freedom to Tinker",
		"time": "2011-12-23T23:09:12Z",
		"href": "https://freedom-to-tinker.com/blog/appel/intractability-financial-derivatives"
	},
	{
		"cluster": 17,
		"tags": [
			"data",
			"structures",
			"datastructures",
			"computerscience",
			"functional",
			"programming"
		],
		"y": 1.2298526426879979,
		"x": -7.510533813157947,
		"extended": "",
		"description": "reference request - What's new in purely functional data structures since Okasaki? - Theoretical Computer Science - Stack Exchange",
		"time": "2011-12-22T11:11:14Z",
		"href": "http://cstheory.stackexchange.com/questions/1539/whats-new-in-purely-functional-data-structures-since-okasaki/1550#1550"
	},
	{
		"cluster": 4,
		"tags": [
			"typefamilies",
			"haskell",
			"types",
			"typelevelprogramming",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -6.315130191503233,
		"x": -10.707403039513192,
		"extended": "",
		"description": "2011/2011-12-21-static-vector-algebra.md at master from leonidas/codeblog - GitHub",
		"time": "2011-12-21T17:53:04Z",
		"href": "https://github.com/leonidas/codeblog/blob/master/2011/2011-12-21-static-vector-algebra.md"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"machinelearning",
			"datamining",
			"mapreduce",
			"mahout",
			"programming",
			"computerscience"
		],
		"y": 0.7585192585241672,
		"x": -6.139710617884719,
		"extended": "",
		"description": "MacHine Learning, Hadoop, and Mahout • myNoSQL",
		"time": "2011-12-21T14:04:38Z",
		"href": "http://nosql.mypopescu.com/post/14559975263/machine-learning-hadoop-and-mahout"
	},
	{
		"cluster": 17,
		"tags": [
			"polymorphic",
			"generic",
			"typed",
			"programming",
			"scala",
			"computerscience",
			"functional"
		],
		"y": 0.5852539620852028,
		"x": -8.848699589412144,
		"extended": "",
		"description": "milessabin/shapeless - GitHub",
		"time": "2011-12-20T10:10:03Z",
		"href": "https://github.com/milessabin/shapeless"
	},
	{
		"cluster": 5,
		"tags": [
			"em",
			"expectationmaximisation",
			"parameterestimation",
			"statistics",
			"machinelearning",
			"mathematics",
			"maximumlikelihood",
			"mle",
			"map"
		],
		"y": -3.2160262917439773,
		"x": -4.561237690077079,
		"extended": "",
		"description": "(ML 16.3) Expectation-Maximization (EM) algorithm - YouTube",
		"time": "2011-12-20T09:48:44Z",
		"href": "http://www.youtube.com/watch?v=AnbiNaVp3eQ"
	},
	{
		"cluster": 2,
		"tags": [
			"business",
			"finance",
			"accounting",
			"software"
		],
		"y": 7.95021258230581,
		"x": 4.885667940807223,
		"extended": "",
		"description": "Finance for Geeks",
		"time": "2011-12-19T09:13:09Z",
		"href": "http://www.ericsink.com/bos/Finance_for_Geeks.html"
	},
	{
		"cluster": 5,
		"tags": [
			"data",
			"mining",
			"datamining",
			"machinelearning",
			"regression",
			"classification",
			"statistics",
			"programming",
			"computerscience",
			"mathematics"
		],
		"y": -1.4955548016989662,
		"x": -6.438250762579537,
		"extended": "",
		"description": "Win-Vector Blog » A Demonstration of Data Mining",
		"time": "2011-12-17T19:58:56Z",
		"href": "http://www.win-vector.com/blog/2009/08/a-demonstration-of-data-mining/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"null",
			"option",
			"computerscience",
			"programming",
			"functional",
			"typed"
		],
		"y": 0.6154558365941247,
		"x": -8.85214203858596,
		"extended": "",
		"description": "Daily scala: More on Null to Option Conversion",
		"time": "2011-12-16T17:06:58Z",
		"href": "http://daily-scala.blogspot.com/2010/01/more-on-null-to-option-conversion.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"list",
			"view",
			"zipWithIndex",
			"lazy",
			"functional",
			"programming",
			"computerscience"
		],
		"y": 0.42955021374196517,
		"x": -9.143333709106267,
		"extended": "",
		"description": "Daily scala: zipWithIndex",
		"time": "2011-12-15T10:21:30Z",
		"href": "http://daily-scala.blogspot.com/2010/05/zipwithindex.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"existential",
			"types",
			"programming",
			"computerscience",
			"type",
			"systems",
			"functional"
		],
		"y": 0.8465344214289775,
		"x": -8.8953848029389,
		"extended": "",
		"description": "Scalada - all about Scala: Existential types",
		"time": "2011-12-13T11:20:51Z",
		"href": "http://scalada.blogspot.com/2008/01/existential-types.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"existential",
			"type",
			"programming",
			"computerscience",
			"systems",
			"functional"
		],
		"y": 0.868973153563899,
		"x": -8.82842517335359,
		"extended": "",
		"description": "David R. MacIver",
		"time": "2011-12-13T11:20:37Z",
		"href": "http://www.drmaciver.com/2008/03/existential-types-in-scala/"
	},
	{
		"cluster": 15,
		"tags": [
			"debruijn",
			"index",
			"lambdacalculus",
			"computerscience",
			"compilers",
			"indexing",
			"freevariables",
			"mathematics"
		],
		"y": -1.3157508442673858,
		"x": -11.80831453743576,
		"extended": "",
		"description": "0.1 De Bruijn indexes",
		"time": "2011-12-05T22:49:39Z",
		"href": "http://webcache.googleusercontent.com/search?q=cache:04aMBJZ_zNAJ:pl.postech.ac.kr/~gla/pl2007/notes/deBruijn.ps+de+bruijn+index&cd=5&hl=en&ct=clnk&gl=uk&client=ubuntu"
	},
	{
		"cluster": 17,
		"tags": [
			"sbt",
			"scala",
			"programming",
			"java",
			"deployment",
			"scp"
		],
		"y": 4.134325990092077,
		"x": -4.110759348485361,
		"extended": "",
		"description": "reaktor/sbt-deploy - GitHub",
		"time": "2011-12-05T15:39:30Z",
		"href": "https://github.com/reaktor/sbt-deploy"
	},
	{
		"cluster": 17,
		"tags": [
			"sbt",
			"jar",
			"fatjar",
			"package",
			"java",
			"hadoop",
			"deployment",
			"programming"
		],
		"y": 4.015621835677755,
		"x": -4.168688132147873,
		"extended": "",
		"description": "sbt/sbt-assembly - GitHub",
		"time": "2011-12-05T15:39:11Z",
		"href": "https://github.com/sbt/sbt-assembly"
	},
	{
		"cluster": 9,
		"tags": [
			"x1",
			"power",
			"fan",
			"tweaks",
			"laptop",
			"lenovo",
			"thinkpad",
			"ubuntu",
			"linux"
		],
		"y": -5.989035855475346,
		"x": 5.7680358039802115,
		"extended": "",
		"description": "Review: Ubuntu Linux 11.10 on Thinkpad X1 — Jonas Wagner's Blog",
		"time": "2011-12-04T17:49:49Z",
		"href": "http://29a.ch/2011/10/14/review:-ubuntu-linux-on-thinkpad-x1"
	},
	{
		"cluster": 5,
		"tags": [
			"scala",
			"programming",
			"probabilistic",
			"probability",
			"statistics",
			"AI",
			"machinelearning",
			"mathematics",
			"hidden",
			"markov",
			"models",
			"hmms",
			"markovchains",
			"bayes",
			"networks"
		],
		"y": -2.408348419225663,
		"x": -6.743860089321918,
		"extended": "",
		"description": "Probabilistic Programming in Scala",
		"time": "2011-12-04T13:23:33Z",
		"href": "http://www.slideshare.net/BeScala/probabilistic-programming-in-scala"
	},
	{
		"cluster": 4,
		"tags": [
			"functional",
			"zipper",
			"programming",
			"tree",
			"datastructure",
			"haskell"
		],
		"y": -4.827337296113791,
		"x": -8.571297603096149,
		"extended": "",
		"description": "You could have invented zippers : Inside 233",
		"time": "2011-12-02T15:10:26Z",
		"href": "http://blog.ezyang.com/2010/04/you-could-have-invented-zippers/"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"threads",
			"concurrency",
			"locks",
			"raceconditions",
			"programming",
			"race",
			"conditions",
			"computerscience"
		],
		"y": 4.7178875195582854,
		"x": -11.422994372771171,
		"extended": "",
		"description": "A Modern Guide to Threads | The Carbon Emitter",
		"time": "2011-12-02T12:26:01Z",
		"href": "http://blog.carbonfive.com/2011/10/11/a-modern-guide-to-threads/"
	},
	{
		"cluster": 9,
		"tags": [
			"ubuntu",
			"linux",
			"sun",
			"java",
			"oneiric",
			"java6"
		],
		"y": -6.091744810114267,
		"x": 5.932830938378059,
		"extended": "",
		"description": "Installing Java6 JDK on Ubuntu 11.10 | digital nomad",
		"time": "2011-12-01T16:03:17Z",
		"href": "http://leo.gaggl.com/2011/10/installing-java6-jdk-on-ubuntu-11-10/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"bdd",
			"tdd",
			"testing",
			"programming",
			"specs"
		],
		"y": 7.496919109723505,
		"x": -4.1817909931928865,
		"extended": "",
		"description": "etorreborre/specs2 @ GitHub",
		"time": "2011-12-01T07:55:58Z",
		"href": "http://etorreborre.github.com/specs2/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"testing",
			"quickcheck",
			"specs",
			"properties"
		],
		"y": 7.121908532679376,
		"x": -3.8489168370290012,
		"extended": "",
		"description": "scalacheck - A powerful tool for automatic unit testing - Google Project Hosting",
		"time": "2011-12-01T07:55:28Z",
		"href": "http://code.google.com/p/scalacheck/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"mocking",
			"testing",
			"programming",
			"tdd",
			"library",
			"bdd"
		],
		"y": 7.61186752733405,
		"x": -4.289437090271064,
		"extended": "",
		"description": "ScalaMock",
		"time": "2011-12-01T07:55:01Z",
		"href": "http://scalamock.org/"
	},
	{
		"cluster": 18,
		"tags": [
			"audio",
			"programming",
			"java",
			"software",
			"sound",
			"synthesis"
		],
		"y": 1.9598519678092343,
		"x": -3.7683133347890063,
		"extended": "",
		"description": "JSyn audio synthesis API for Java",
		"time": "2011-12-01T07:54:38Z",
		"href": "http://www.softsynth.com/jsyn/"
	},
	{
		"cluster": 9,
		"tags": [
			"xmonad",
			"install",
			"linux",
			"ubuntu",
			"oneiric"
		],
		"y": -6.110478727773925,
		"x": 6.053844649676643,
		"extended": "",
		"description": "xmonad-log-applet for GNOME and Xfce : versia.com",
		"time": "2011-11-30T15:31:34Z",
		"href": "http://versia.com/2011/09/xmonad-log-applet-gnome-xfce/"
	},
	{
		"cluster": 9,
		"tags": [
			"java",
			"oracle",
			"java7",
			"ubuntu",
			"linux",
			"install"
		],
		"y": -6.06756913684917,
		"x": 5.914528608807918,
		"extended": "",
		"description": "How To Install Oracle Java 7 (JDK) In Ubuntu ~ Web Upd8: Ubuntu / Linux blog",
		"time": "2011-11-29T14:32:56Z",
		"href": "http://www.webupd8.org/2011/09/how-to-install-oracle-java-7-jdk-in.html"
	},
	{
		"cluster": 9,
		"tags": [
			"ssd",
			"ubuntu",
			"linux",
			"performance",
			"TRIM",
			"storage"
		],
		"y": -6.423198524682664,
		"x": 5.6505063779386715,
		"extended": "",
		"description": "installation - Optimizing the OS for SSDs - Ask Ubuntu - Stack Exchange",
		"time": "2011-11-29T13:17:27Z",
		"href": "http://askubuntu.com/questions/1400/optimizing-the-os-for-ssds"
	},
	{
		"cluster": 9,
		"tags": [
			"ssd",
			"ubuntu",
			"sysadmin",
			"performance",
			"tips",
			"linux"
		],
		"y": -6.517620492057704,
		"x": 5.698159749076464,
		"extended": "",
		"description": "Four Tweaks for Using Ubuntu with SSD / Ubuntu Linux / IT experts community",
		"time": "2011-11-29T13:13:27Z",
		"href": "http://itezer.com/blog/ubuntu-linux/125-four-tweaks-for-using-ubuntu-with-ssd.html"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"whittle",
			"parser",
			"grammar",
			"lalr",
			"library",
			"programming",
			"computerscience"
		],
		"y": 3.9327705341712016,
		"x": -11.234874256764652,
		"extended": "",
		"description": "d11wtq/whittle - GitHub",
		"time": "2011-11-28T23:18:12Z",
		"href": "https://github.com/d11wtq/whittle"
	},
	{
		"cluster": 17,
		"tags": [
			"hbase",
			"mapreduce",
			"examples",
			"hadoop",
			"programming",
			"database"
		],
		"y": 3.9277717677387547,
		"x": -3.447509863267976,
		"extended": "",
		"description": "7.2. HBase MapReduce Examples",
		"time": "2011-11-28T13:46:55Z",
		"href": "http://hbase.apache.org/book/mapreduce.example.html"
	},
	{
		"cluster": 17,
		"tags": [
			"mir",
			"ir",
			"machinelearning",
			"recommendations",
			"clustering",
			"collaborative",
			"filtering",
			"informationretrieval",
			"computerscience",
			"music",
			"hadoop",
			"programming",
			"algorithms"
		],
		"y": 0.17550401844575958,
		"x": -6.997127986906786,
		"extended": "",
		"description": "Algorithms on Hadoop at Last.fm",
		"time": "2011-11-27T15:22:03Z",
		"href": "http://www.slideshare.net/MarkLevy/algorithms-on-hadoop-at-lastfm"
	},
	{
		"cluster": 2,
		"tags": [
			"ssd",
			"storage",
			"database",
			"hardware",
			"performance",
			"computers"
		],
		"y": -4.4661481528190725,
		"x": 2.7717234244856623,
		"extended": "",
		"description": "De-Confusing SSD (for Oracle Databases) | The Pythian Blog",
		"time": "2011-11-27T15:17:39Z",
		"href": "http://www.pythian.com/news/28797/de-confusing-ssd-for-oracle-databases/"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"inputformat",
			"programming",
			"mapreduce"
		],
		"y": 4.129370230963324,
		"x": -3.517843262238799,
		"extended": "",
		"description": "Dawn Traveler: A Dabbler's Investigation of the Hadoop Input Format Interface",
		"time": "2011-11-27T15:14:36Z",
		"href": "http://jerryjcw.blogspot.com/2009/10/on-hbase-table-join-dabblers.html"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"hbase",
			"mapreduce",
			"programming",
			"tutorial"
		],
		"y": 4.023522914160105,
		"x": -3.492894884296488,
		"extended": "",
		"description": "Lineland: How to use HBase with Hadoop",
		"time": "2011-11-27T15:11:12Z",
		"href": "http://www.larsgeorge.com/2009/01/how-to-use-hbase-with-hadoop.html"
	},
	{
		"cluster": 2,
		"tags": [
			"hbase",
			"apache",
			"database",
			"bigtable",
			"technology",
			"bigdata"
		],
		"y": -3.7459846971075077,
		"x": 5.603546424714699,
		"extended": "",
		"description": "Matching Impedance: When to use HBase",
		"time": "2011-11-25T17:35:38Z",
		"href": "http://blog.rapleaf.com/dev/2008/03/11/matching-impedance-when-to-use-hbase/"
	},
	{
		"cluster": 17,
		"tags": [
			"scalaz",
			"learning",
			"tutorial",
			"documentation",
			"scala",
			"programming",
			"functional",
			"typeclasses",
			"types"
		],
		"y": 0.2638796849716936,
		"x": -8.323304426762398,
		"extended": "",
		"description": "jrwest/learn_you_a_scalaz - GitHub",
		"time": "2011-11-25T14:44:22Z",
		"href": "https://github.com/jrwest/learn_you_a_scalaz"
	},
	{
		"cluster": 18,
		"tags": [
			"designpatterns",
			"ioc",
			"refactoring",
			"design",
			"patterns",
			"architecture",
			"oop",
			"programming"
		],
		"y": 5.404928924016888,
		"x": -6.187146225097493,
		"extended": "",
		"description": "jamesladdcode.com » Blog Archive » DRAFT - A Design Compass: East Oriented …",
		"time": "2011-11-25T08:42:29Z",
		"href": "http://jamesladdcode.com/?p=12"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"types",
			"inheritance",
			"programming",
			"functional",
			"logic",
			"implicits",
			"subtyping",
			"covariance",
			"contravariance"
		],
		"y": 1.6218879612302493,
		"x": -8.177470724174972,
		"extended": "",
		"description": "Some Notes in Hostility Toward Subtyping | Apocalisp",
		"time": "2011-11-25T08:30:28Z",
		"href": "http://apocalisp.wordpress.com/2009/08/27/hostility-toward-subtyping/"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"configurations",
			"deployment",
			"mapreduce",
			"ops",
			"programming",
			"datamining",
			"tuning",
			"optimization"
		],
		"y": 3.901933865392869,
		"x": -3.5689630484780017,
		"extended": "",
		"description": "Tips, Tricks And Pointers When Setting Up Your First Hadoop Cluster To Run Map Reduce Jobs « All Things Hadoop",
		"time": "2011-11-24T23:34:01Z",
		"href": "http://allthingshadoop.com/2010/04/28/map-reduce-tips-tricks-your-first-real-cluster/"
	},
	{
		"cluster": 17,
		"tags": [
			"hbase",
			"hadoop",
			"configuration",
			"cloudera",
			"integration",
			"programming",
			"datamining",
			"ops"
		],
		"y": 3.907195072595049,
		"x": -3.5224759156760164,
		"extended": "",
		"description": "HBase Driver throwing ClassNotFoundException: org.apache.zookeeper.KeeperException",
		"time": "2011-11-24T18:39:25Z",
		"href": "http://getsatisfaction.com/cloudera/topics/hbase_driver_throwing_classnotfoundexception_org_apache_zookeeper_keeperexception"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"libraries",
			"mapreduce",
			"datamining",
			"ops",
			"classpath",
			"programming"
		],
		"y": 3.903284199938159,
		"x": -3.5620885555768846,
		"extended": "",
		"description": "How to Include Third-Party Libraries in Your Map-Reduce Job | Apache Hadoop for the Enterprise | Cloudera",
		"time": "2011-11-24T17:13:47Z",
		"href": "http://www.cloudera.com/blog/2011/01/how-to-include-third-party-libraries-in-your-map-reduce-job/"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"scala",
			"functional",
			"programming",
			"bigdata",
			"classpath",
			"datamining"
		],
		"y": 1.3504129257958366,
		"x": -6.7961688759047565,
		"extended": "",
		"description": "Heuristic Fencepost: Making Hadoop more \"functional\" with Scala",
		"time": "2011-11-24T17:13:30Z",
		"href": "http://heuristic-fencepost.blogspot.com/2010/11/making-hadoop-more-functional-with.html"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"typemismatch",
			"exception",
			"error",
			"programming",
			"java"
		],
		"y": 4.073833723927998,
		"x": -3.8956053976663663,
		"extended": "",
		"description": "Brian ONeill's Blog: Hadoop: java.io.IOException: Type mismatch in key from map",
		"time": "2011-11-24T17:12:58Z",
		"href": "http://brianoneill.blogspot.com/2009/07/hadoop-javaioioexception-type-mismatch.html"
	},
	{
		"cluster": 2,
		"tags": [
			"hbase",
			"scala",
			"sbt",
			"maven",
			"ivy",
			"library",
			"dependency",
			"thrift",
			"hadoop"
		],
		"y": 5.820147362028386,
		"x": -0.44340922287772994,
		"extended": "",
		"description": "scala - How can get I get HBase to play nicely with sbt's dependency management? - Stack Overflow",
		"time": "2011-11-24T14:39:18Z",
		"href": "http://stackoverflow.com/questions/6258406/how-can-get-i-get-hbase-to-play-nicely-with-sbts-dependency-management"
	},
	{
		"cluster": 2,
		"tags": [
			"oneiric",
			"xmonad",
			"ubuntu",
			"upgrade",
			"install"
		],
		"y": -6.152702468671014,
		"x": 6.199714120021008,
		"extended": "",
		"description": "Ubuntu Oneiric upgrade (Thinkpad/Xmonad) : Inside 233",
		"time": "2011-11-24T12:46:58Z",
		"href": "http://blog.ezyang.com/2011/11/ubuntu-oneiric-thinkpad-xmonad/?"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"language",
			"getters",
			"setters",
			"programming"
		],
		"y": 6.288420621814691,
		"x": -3.008586198317709,
		"extended": "",
		"description": "Getters and Setters in Scala | The Personal Blog of Dustin Martin",
		"time": "2011-11-23T16:21:32Z",
		"href": "http://www.dustinmartin.net/2009/10/getters-and-setters-in-scala/"
	},
	{
		"cluster": 2,
		"tags": [
			"rails",
			"testing",
			"ruby",
			"oop",
			"talk",
			"lecture",
			"bdd"
		],
		"y": 5.598726129679107,
		"x": -9.357121246302725,
		"extended": "",
		"description": "Fast Rails Tests - Corey Haines - Golden Gate Ruby Conference 2011",
		"time": "2011-11-23T14:03:16Z",
		"href": "http://confreaks.net/videos/641-gogaruco2011-fast-rails-tests"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"computerscience",
			"evaluation",
			"metrics",
			"statistics",
			"mathematics",
			"ensemblelearning",
			"ensemblemethods",
			"isotonicregression",
			"platttscaling",
			"calibration",
			"measurement",
			"modelselection",
			"ensemble"
		],
		"y": -2.566030897688202,
		"x": -5.353148669896123,
		"extended": "<blockquote>Decision trees are intelligible, but do they perform well enough that you should use them? Have SVMs replaced neural nets, or are neural nets still best for regression, and SVMs best for classification? Boosting maximizes margins similar to SVMs, but can boosting compete with SVMs? And if it does compete, is it better to boost weak models, as theory might suggest, or to boost stronger models? Bagging is simpler than boosting -- how well does bagging stack up against boosting? Breiman said Random Forests are better than bagging and as good as boosting. Was he right? And what about old friends like logistic regression, KNN, and naive bayes? Should they be relegated to the history books, or do they still fill important niches? \nIn this talk we compare the performance of ten supervised learning methods on nine criteria: Accuracy, F-score, Lift, Precision/Recall Break-Even Point, Area under the ROC, Average Precision, Squared Error, Cross-Entropy, and Probability Calibration. The results show that no one learning method does it all, but some methods can be \"repaired\" so that they do very well across all performance metrics. In particular, we show how to obtain the best probabilities from max margin methods such as SVMs and boosting via Platt's Method and isotonic regression. We then describe a new ensemble method that combines select models from these ten learning methods to yield much better performance. Although these ensembles perform extremely well, they are too complex for many applications. We'll describe what we're doing to try to fix that. Finally, if time permits, we'll discuss how the nine performance metrics relate to each other, and which of them you probably should (or shouldn't) use. \nDuring this talk I'll briefly describe the learning methods and performance metrics to help make the lecture accessible to non-specialists in machine learning.</blockquote>",
		"description": "Which Supervised Learning Method Works Best for What? An Empirical Comparison of Learning Methods and Metrics - videolectures.net",
		"time": "2011-11-22T19:35:11Z",
		"href": "http://videolectures.net/solomon_caruana_wslmw/"
	},
	{
		"cluster": 17,
		"tags": [
			"java",
			"thrift",
			"tutorial",
			"howto",
			"programming"
		],
		"y": 4.008837502209724,
		"x": -4.343175386188207,
		"extended": "",
		"description": "Simple Thrift tutorial « Spoot!",
		"time": "2011-11-22T10:53:04Z",
		"href": "http://nbonvin.wordpress.com/2009/03/08/simple-thrift-tutorial/"
	},
	{
		"cluster": 17,
		"tags": [
			"combinators",
			"ycombinator",
			"kestrel",
			"smullyan",
			"birds",
			"ruby",
			"programming",
			"functional",
			"recursion",
			"computerscience"
		],
		"y": 4.014353676847192,
		"x": -12.027416104355671,
		"extended": "",
		"description": "2011/11/mockingbirds.md at master from raganwald/homoiconic - GitHub",
		"time": "2011-11-22T08:30:44Z",
		"href": "https://github.com/raganwald/homoiconic/blob/master/2011/11/mockingbirds.md#readme"
	},
	{
		"cluster": 16,
		"tags": [
			"statistics",
			"medicine",
			"signal",
			"detection",
			"big",
			"data",
			"hadoop",
			"datamining"
		],
		"y": -1.5551397411900212,
		"x": -1.6712782942124254,
		"extended": "",
		"description": "Using Apache Hadoop to Find Signal in the Noise: Analyzing Adverse Drug Events | Apache Hadoop for the Enterprise | Cloudera",
		"time": "2011-11-22T08:22:36Z",
		"href": "http://www.cloudera.com/blog/2011/11/using-hadoop-to-analyze-adverse-drug-events/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"scala",
			"types",
			"programming",
			"gadts",
			"functional"
		],
		"y": -6.204771356947446,
		"x": -10.314463835537977,
		"extended": "",
		"description": "Lambdalog - Haskell GADTs in Scala",
		"time": "2011-11-22T08:18:39Z",
		"href": "http://lambdalog.seanseefried.com/posts/2011-11-22-gadts-in-scala.html"
	},
	{
		"cluster": 18,
		"tags": [
			"di",
			"programming",
			"dependencyinjection",
			"software",
			"engineering"
		],
		"y": 5.3363535679780405,
		"x": -3.914008794212078,
		"extended": "",
		"description": "Dependency Injection In Ruby - Programming Is Fun",
		"time": "2011-11-22T08:12:55Z",
		"href": "http://kresimirbojcic.com/2011/11/19/dependency-injection-in-ruby.html"
	},
	{
		"cluster": 12,
		"tags": [
			"twitter",
			"architecture",
			"programming",
			"web",
			"development",
			"spidering",
			"scaling",
			"systems",
			"computerscience"
		],
		"y": 9.370964895170543,
		"x": -5.780235364164479,
		"extended": "",
		"description": "Twitter Engineering: SpiderDuck: Twitter's Real-time URL Fetcher",
		"time": "2011-11-21T16:55:10Z",
		"href": "http://engineering.twitter.com/2011/11/spiderduck-twitters-real-time-url.html"
	},
	{
		"cluster": 17,
		"tags": [
			"erlang",
			"concurrency",
			"tutorial",
			"functional",
			"programming",
			"machinelearning",
			"neuralnets",
			"neural",
			"networks",
			"ai"
		],
		"y": -7.773131701476919,
		"x": -8.554042992440836,
		"extended": "",
		"description": "Erlang Community - Erlang and Neural Networks - Trapexit",
		"time": "2011-11-21T16:47:45Z",
		"href": "http://www.trapexit.org/Erlang_and_Neural_Networks"
	},
	{
		"cluster": 2,
		"tags": [
			"maven",
			"sbt",
			"scala",
			"build",
			"repository"
		],
		"y": 5.64379654362753,
		"x": -0.19938945945958722,
		"extended": "",
		"description": "SBT and Your Own Maven Repository",
		"time": "2011-11-21T15:46:53Z",
		"href": "http://brizzled.clapper.org/id/100/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"mathematics",
			"datamining",
			"machinelearning",
			"education",
			"computerscience"
		],
		"y": -2.0797217040026994,
		"x": -5.520649220625555,
		"extended": "",
		"description": "Statistical Learning Part III",
		"time": "2011-11-21T08:44:06Z",
		"href": "http://www.information-management.com/blogs/statistical-learning-data-model-BI-Trevor-Hastie-10021479-1.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"languages",
			"implementation",
			"interpreter",
			"compiler",
			"marshalling",
			"scope"
		],
		"y": 5.326855204182657,
		"x": -9.988414476942987,
		"extended": "",
		"description": "How to Marshal Procs Using Rubinius « Katz Got Your Tongue?",
		"time": "2011-11-21T08:35:44Z",
		"href": "http://yehudakatz.com/2011/11/19/how-to-marshal-procs-using-rubinius/?"
	},
	{
		"cluster": 8,
		"tags": [
			"tcp",
			"dns",
			"networking",
			"hack",
			"wifi",
			"computers",
			"internet"
		],
		"y": -3.630074247407421,
		"x": 3.7606157219837058,
		"extended": "",
		"description": "TCP-over-DNS tunnel software HOWTO | analogbit.com",
		"time": "2011-11-21T08:30:43Z",
		"href": "http://analogbit.com/tcp-over-dns_howto"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"generic",
			"types",
			"safety",
			"implicits",
			"programming",
			"functional"
		],
		"y": 1.4797663265952214,
		"x": -8.322067155201218,
		"extended": "",
		"description": "How to write \"asInstanceOfOption\" in Scala - Stack Overflow",
		"time": "2011-11-17T17:31:34Z",
		"href": "http://stackoverflow.com/questions/1803036/how-to-write-asinstanceofoption-in-scala"
	},
	{
		"cluster": 17,
		"tags": [
			"canbuildfrom",
			"scala",
			"types",
			"implicits",
			"conversion",
			"functional",
			"programming",
			"generics"
		],
		"y": 1.592235816823164,
		"x": -8.230588496978994,
		"extended": "",
		"description": "generics - scala 2.8 CanBuildFrom - Stack Overflow",
		"time": "2011-11-17T16:29:34Z",
		"href": "http://stackoverflow.com/questions/1721356/scala-2-8-canbuildfrom"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"documentation",
			"canBuildFrom",
			"generics",
			"implicits",
			"types",
			"programming",
			"functional"
		],
		"y": 1.5839076371232343,
		"x": -8.232276041716311,
		"extended": "",
		"description": "Graham Hacking Scala: Scala Pragmatism: Ignore CanBuildFrom",
		"time": "2011-11-17T16:20:44Z",
		"href": "http://grahamhackingscala.blogspot.com/2011/01/scala-pragmatism-ignore-canbuildfrom.html"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"shadoop",
			"api",
			"java",
			"scala",
			"programming",
			"mapreduce"
		],
		"y": 4.496808572113708,
		"x": -3.396544672727577,
		"extended": "",
		"description": "Jonhnny Weslley / My blog: SHadoop",
		"time": "2011-11-15T13:39:43Z",
		"href": "http://blog.jonhnnyweslley.net/2008/05/shadoop.html"
	},
	{
		"cluster": 17,
		"tags": [
			"combinators",
			"combinatory",
			"logic",
			"programming",
			"ruby",
			"AOP",
			"functional"
		],
		"y": 5.302898565007093,
		"x": -10.143026082904216,
		"extended": "",
		"description": "2008-11-07/from_birds_that_compose_to_method_advice.markdown at master from raganwald/homoiconic - GitHub",
		"time": "2011-11-11T12:47:39Z",
		"href": "https://github.com/raganwald/homoiconic/blob/master/2008-11-07/from_birds_that_compose_to_method_advice.markdown#readme"
	},
	{
		"cluster": 14,
		"tags": [
			"AOP",
			"youaredachef",
			"javascript",
			"coffescript",
			"programming",
			"design",
			"combinators"
		],
		"y": 4.671588613758617,
		"x": -5.781837812010667,
		"extended": "",
		"description": "2011/11/YouAreDaChef.md at master from raganwald/homoiconic - GitHub",
		"time": "2011-11-11T12:44:24Z",
		"href": "https://github.com/raganwald/homoiconic/blob/master/2011/11/YouAreDaChef.md"
	},
	{
		"cluster": 16,
		"tags": [
			"cloudera",
			"hadoop",
			"ec2",
			"documentation",
			"mapreduce",
			"data",
			"analysis",
			"Howto",
			"instructions",
			"cloud",
			"programming",
			"ops"
		],
		"y": 4.057529610730854,
		"x": -3.3602217845889215,
		"extended": "",
		"description": "Cloudera's Distribution for Hadoop on Amazon EC2 | Cloudera",
		"time": "2011-11-09T17:52:03Z",
		"href": "http://web.archive.org/web/20090504215831/http://www.cloudera.com/hadoop-ec2"
	},
	{
		"cluster": 2,
		"tags": [
			"flock",
			"swarm",
			"graphics",
			"processing",
			"generative",
			"animation",
			"boids"
		],
		"y": -2.52671110554297,
		"x": 3.1951412807132944,
		"extended": "",
		"description": "Flocking and Swarming in Processing on Vimeo",
		"time": "2011-11-09T09:33:11Z",
		"href": "http://vimeo.com/2481794"
	},
	{
		"cluster": 2,
		"tags": [
			"cs229",
			"stanford",
			"mlclass",
			"resources",
			"education",
			"learning",
			"machinelearning"
		],
		"y": -8.07091075735404,
		"x": -5.671222364803985,
		"extended": "",
		"description": "CS 229: Machine Learning (Course handouts)",
		"time": "2011-11-07T15:33:09Z",
		"href": "http://cs229.stanford.edu/materials.html"
	},
	{
		"cluster": 17,
		"tags": [
			"lisp",
			"programming",
			"computerscience",
			"compiler",
			"interpreter",
			"plt"
		],
		"y": -2.926884992388129,
		"x": -10.291148472671324,
		"extended": "",
		"description": "RIP John McCarthy « Programming Praxis",
		"time": "2011-11-07T10:36:00Z",
		"href": "http://programmingpraxis.com/2011/11/01/rip-john-mccarthy/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"scalaz",
			"functional",
			"typeclasses",
			"programming"
		],
		"y": 0.27565838924317465,
		"x": -8.342383256292889,
		"extended": "",
		"description": "StackMob :: Why StackMob uses Scalaz with Scala",
		"time": "2011-11-07T07:51:24Z",
		"href": "http://www.stackmob.com/2011/11/why-stackmob-uses-scalaz-with-scala/"
	},
	{
		"cluster": 4,
		"tags": [
			"databases",
			"programming",
			"sql",
			"haskell",
			"tutorial",
			"haskelldb"
		],
		"y": -6.097184040555162,
		"x": -7.891446401177199,
		"extended": "",
		"description": "HaskellDB: A long tutorial",
		"time": "2011-11-07T07:47:44Z",
		"href": "http://chrisdone.com/posts/2011-11-06-haskelldb-tutorial.html"
	},
	{
		"cluster": 15,
		"tags": [
			"stanford",
			"ml",
			"machinelearning",
			"mlclass",
			"notes",
			"computerscience",
			"resources",
			"education",
			"ai",
			"programming",
			"mathematics"
		],
		"y": -0.26898526023913216,
		"x": -12.062235828417947,
		"extended": "",
		"description": "Stanford School of Engineering - Stanford Engineering Everywhere",
		"time": "2011-11-04T16:49:38Z",
		"href": "http://see.stanford.edu/see/courseinfo.aspx?coll=348ca38a-3a6d-4052-937d-cb017338d7b1"
	},
	{
		"cluster": 16,
		"tags": [
			"scala",
			"spark",
			"data",
			"analysis",
			"distributed",
			"parallel",
			"processing",
			"mapreduce",
			"mesos",
			"hadoop",
			"functional"
		],
		"y": 4.068539588124214,
		"x": -1.596474922974084,
		"extended": "",
		"description": "Matei Zaharia - Spark",
		"time": "2011-11-04T10:03:47Z",
		"href": "http://www.cs.berkeley.edu/~matei/spark/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"mvc",
			"framework",
			"programming",
			"clientside",
			"web",
			"development"
		],
		"y": 10.114854445543564,
		"x": -3.541003817481431,
		"extended": "",
		"description": "Backbone.js",
		"time": "2011-11-03T12:29:28Z",
		"href": "http://documentcloud.github.com/backbone/"
	},
	{
		"cluster": 16,
		"tags": [
			"statistics",
			"machinelearning",
			"data",
			"analysis",
			"mining",
			"programming",
			"hadoop",
			"pig"
		],
		"y": -1.219343378094986,
		"x": -2.5821426297224295,
		"extended": "",
		"description": "linkedin/datafu - GitHub",
		"time": "2011-11-02T17:06:13Z",
		"href": "https://github.com/linkedin/datafu"
	},
	{
		"cluster": 16,
		"tags": [
			"graph",
			"processing",
			"data",
			"analysis",
			"bsp",
			"programming",
			"machinelearning",
			"analytics",
			"hadoop"
		],
		"y": -1.1029161732477153,
		"x": -2.6180504855363615,
		"extended": "",
		"description": "Welcome To Apache Incubator Giraph",
		"time": "2011-11-02T17:05:36Z",
		"href": "http://incubator.apache.org/giraph/"
	},
	{
		"cluster": 16,
		"tags": [
			"spark",
			"data",
			"mining",
			"analytics",
			"machinelearning",
			"computerscience",
			"scala",
			"processing",
			"parallel"
		],
		"y": -1.3962533649109032,
		"x": -2.911664076957406,
		"extended": "",
		"description": "Spark Cluster Computing Framework",
		"time": "2011-11-02T15:55:51Z",
		"href": "http://www.spark-project.org/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"akka",
			"concurrency",
			"actors",
			"functional",
			"programming",
			"computerscience",
			"architecture"
		],
		"y": 3.1573289976833823,
		"x": -3.591162846318204,
		"extended": "",
		"description": "The Middleware Connection: Scala, Akka, and Heroku",
		"time": "2011-11-02T08:58:44Z",
		"href": "http://www.readwriteweb.com/hack/2011/10/the-middleware-connection-scal.php"
	},
	{
		"cluster": 16,
		"tags": [
			"hadoop",
			"mahout",
			"mapreduce",
			"data",
			"mining",
			"analytics",
			"machinelearning",
			"programming",
			"computerscience"
		],
		"y": 0.7468222871315949,
		"x": -6.055393173101609,
		"extended": "",
		"description": "Machine Learning With Hadoop | Machine Learning With Hadoop Online | Download Machine Learning With Hadoop « Information Technology « Study Aids « Examville",
		"time": "2011-11-02T08:51:38Z",
		"href": "http://www.examville.com/examville/Machine%20Learning%20With%20Hadoop-ID7615"
	},
	{
		"cluster": 17,
		"tags": [
			"weka",
			"java",
			"library",
			"machinelearning",
			"programming",
			"computerscience",
			"datamining"
		],
		"y": -0.5357375398452249,
		"x": -6.768653915933634,
		"extended": "",
		"description": "Weka 3 - Data Mining with Open Source Machine Learning Software in Java",
		"time": "2011-10-26T17:54:48Z",
		"href": "http://www.cs.waikato.ac.nz/ml/weka/"
	},
	{
		"cluster": 17,
		"tags": [
			"jruby",
			"java",
			"ruby",
			"programming",
			"compilation",
			"documentation",
			"computerscience",
			"jvm",
			"class"
		],
		"y": 5.685756965754585,
		"x": -8.904786342537417,
		"extended": "",
		"description": "JRuby: Wiki: JRubyCompiler — Project Kenai",
		"time": "2011-10-26T17:18:55Z",
		"href": "http://kenai.com/projects/jruby/pages/JRubyCompiler"
	},
	{
		"cluster": 2,
		"tags": [
			"bnc",
			"corpus",
			"word",
			"frequency",
			"wordfrequency",
			"tf",
			"df",
			"count",
			"english",
			"linguistics",
			"nlp"
		],
		"y": -2.052269995564908,
		"x": 5.687586017330287,
		"extended": "",
		"description": "Read-me for Kilgarriff's BNC word frequency lists",
		"time": "2011-10-26T14:43:38Z",
		"href": "http://www.kilgarriff.co.uk/bnc-readme.html#raw"
	},
	{
		"cluster": 5,
		"tags": [
			"R",
			"machinelearning",
			"programming",
			"statistics",
			"libraries",
			"computerscience"
		],
		"y": -1.310913489073734,
		"x": -6.602434828362411,
		"extended": "",
		"description": "CRAN Task View: Machine Learning & Statistical Learning",
		"time": "2011-10-26T13:40:16Z",
		"href": "http://cran.r-project.org/web/views/MachineLearning.html"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"ruby",
			"jruby",
			"moonstone",
			"java",
			"analytics",
			"mapreduce",
			"bigdata",
			"programming",
			"computerscience",
			"machinelearning"
		],
		"y": 3.2149479697580396,
		"x": -8.745417627719261,
		"extended": "",
		"description": "automatthew/moonstone - GitHub",
		"time": "2011-10-26T10:08:55Z",
		"href": "https://github.com/automatthew/moonstone"
	},
	{
		"cluster": 17,
		"tags": [
			"jruby",
			"ruby",
			"hadoop",
			"mapreduce",
			"analytics",
			"bigdata",
			"analysis",
			"machinelearning",
			"programming",
			"computerscience",
			"library"
		],
		"y": 3.200973801159707,
		"x": -8.75004765568328,
		"extended": "",
		"description": "fujibee/jruby-on-hadoop - GitHub",
		"time": "2011-10-26T10:08:25Z",
		"href": "https://github.com/fujibee/jruby-on-hadoop"
	},
	{
		"cluster": 2,
		"tags": [
			"alpha",
			"beta",
			"capital",
			"risk",
			"model",
			"adjusted",
			"return",
			"hedge",
			"fund",
			"business",
			"finance",
			"investment",
			"leverage"
		],
		"y": 7.823895606368025,
		"x": 4.8812134519727435,
		"extended": "",
		"description": "Hedge funds, alpha, and beta | Felix Salmon",
		"time": "2011-10-24T14:55:44Z",
		"href": "http://www.felixsalmon.com/2006/05/hedge-funds-alpha-and-beta/"
	},
	{
		"cluster": 2,
		"tags": [
			"aho",
			"corasick",
			"text",
			"search",
			"string",
			"match",
			"variable",
			"length",
			"multistring",
			"algorithm",
			"ruby",
			"gem"
		],
		"y": -1.1735633219439863,
		"x": 2.062373451589558,
		"extended": "",
		"description": "latimes/keyword_prospector - GitHub",
		"time": "2011-10-24T11:36:09Z",
		"href": "https://github.com/latimes/keyword_prospector"
	},
	{
		"cluster": 16,
		"tags": [
			"mixture",
			"gaussian",
			"model",
			"statistics",
			"datamining",
			"R",
			"data",
			"mining",
			"progability",
			"normal",
			"mixtools",
			"package",
			"expectation",
			"maximisation",
			"regression",
			"fitting",
			"em",
			"expectationmaximisation"
		],
		"y": -1.4899433365349204,
		"x": -2.04177837711878,
		"extended": "",
		"description": "Fitting mixture distributions with the R package mixtools | (R news & tutorials)",
		"time": "2011-10-17T16:01:09Z",
		"href": "http://www.r-bloggers.com/fitting-mixture-distributions-with-the-r-package-mixtools/"
	},
	{
		"cluster": 9,
		"tags": [
			"rvm",
			"cron",
			"ruby",
			"linux",
			"ubuntu",
			"sysadmin"
		],
		"y": -6.252654348097154,
		"x": 5.68598731870267,
		"extended": "",
		"description": "ruby - Script executes successfully in commandline but not as a cronjob - Stack Overflow",
		"time": "2011-10-17T11:47:41Z",
		"href": "http://stackoverflow.com/questions/2398722/script-executes-successfully-in-commandline-but-not-as-a-cronjob"
	},
	{
		"cluster": 5,
		"tags": [
			"mahout",
			"cloudera",
			"text",
			"mining",
			"datamining",
			"textmining",
			"classification",
			"bayes",
			"naive",
			"statistics",
			"machinelearning",
			"computerscience",
			"programming"
		],
		"y": -1.3489114529697532,
		"x": -6.608379397739284,
		"extended": "",
		"description": "Classification with Naive Bayes",
		"time": "2011-10-17T11:04:44Z",
		"href": "http://www.slideshare.net/jpatanooga/sea-hug-navebayes24042011v5"
	},
	{
		"cluster": 4,
		"tags": [
			"rankntypes",
			"haskell",
			"types",
			"programming",
			"computerscience",
			"functional"
		],
		"y": -6.284972662709931,
		"x": -10.564898408691612,
		"extended": "",
		"description": "Rank-N types, a simple DB example",
		"time": "2011-10-16T10:00:08Z",
		"href": "http://chrisdone.com/posts/2011-10-16-rankntypes.html"
	},
	{
		"cluster": 17,
		"tags": [
			"databases",
			"CAP",
			"theorem",
			"mysql",
			"persistence",
			"systems",
			"computerscience",
			"immutability",
			"programming"
		],
		"y": 1.1007208337997985,
		"x": -10.821413310337558,
		"extended": "",
		"description": "How to beat the CAP theorem - thoughts from the red planet - thoughts from the red planet",
		"time": "2011-10-15T20:12:15Z",
		"href": "http://nathanmarz.com/blog/how-to-beat-the-cap-theorem.html"
	},
	{
		"cluster": 2,
		"tags": [
			"facebook",
			"hbase",
			"hadoop",
			"bigdata",
			"storage",
			"messaging",
			"nosql"
		],
		"y": 2.812601976574565,
		"x": 0.6237501482466014,
		"extended": "",
		"description": "InfoQ: HBase @ Facebook",
		"time": "2011-10-14T15:02:34Z",
		"href": "http://www.infoq.com/presentations/HBase-at-Facebook"
	},
	{
		"cluster": 2,
		"tags": [
			"erlang",
			"interview",
			"functional",
			"language"
		],
		"y": -2.2352014963316393,
		"x": 1.9094402571505193,
		"extended": "",
		"description": "InfoQ: Mike Williams on the History of Erlang, Modeling and Large Scale Design",
		"time": "2011-10-14T15:02:26Z",
		"href": "http://www.infoq.com/interviews/williams-erlang"
	},
	{
		"cluster": 17,
		"tags": [
			"svm",
			"machinelearning",
			"textmining",
			"programming",
			"text",
			"learning",
			"mining",
			"support",
			"vector",
			"machine",
			"methods",
			"optimization",
			"classification",
			"computerscience",
			"neuralnets",
			"perceptron"
		],
		"y": -0.2889958749048629,
		"x": -6.68837946283461,
		"extended": "",
		"description": "How well do Support Vector Machines scale to very large training datasets? : MachineLearning",
		"time": "2011-10-10T10:02:44Z",
		"href": "http://www.reddit.com/r/MachineLearning/comments/l65dm/how_well_do_support_vector_machines_scale_to_very/"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"mapreduce",
			"math",
			"matrix",
			"parallel",
			"graph",
			"bsp",
			"pregel",
			"processing",
			"datamining",
			"concurrency",
			"computerscience",
			"programming"
		],
		"y": 0.9212627053060506,
		"x": -6.103143563656607,
		"extended": "",
		"description": "Hama -",
		"time": "2011-10-09T21:43:59Z",
		"href": "http://incubator.apache.org/hama/"
	},
	{
		"cluster": 16,
		"tags": [
			"phoebus",
			"pregel",
			"graph",
			"processing",
			"analytics",
			"statistics",
			"data",
			"mining",
			"computerscience",
			"programming",
			"mathematics"
		],
		"y": -0.673747642419076,
		"x": -10.12912404012771,
		"extended": "",
		"description": "xslogic/phoebus - GitHub",
		"time": "2011-10-09T21:43:18Z",
		"href": "https://github.com/xslogic/phoebus#readme"
	},
	{
		"cluster": 15,
		"tags": [
			"linear",
			"algebra",
			"eigenvectors",
			"eigenvalues",
			"mathematics",
			"calculation"
		],
		"y": 3.088127744473499,
		"x": 1.4643666780220386,
		"extended": "",
		"description": "Computation of Eigenvectors",
		"time": "2011-10-05T09:23:06Z",
		"href": "http://www.sosmath.com/matrix/eigen2/eigen2.html"
	},
	{
		"cluster": 17,
		"tags": [
			"trampoline",
			"recursion",
			"tco",
			"tail",
			"call",
			"optimisation",
			"scala",
			"programming",
			"functional",
			"jvm",
			"computerscience",
			"continuations",
			"cps"
		],
		"y": 1.9844858646472578,
		"x": -9.92448679076532,
		"extended": "",
		"description": "Rich Dougherty's blog: Tail calls, @tailrec and trampolines",
		"time": "2011-10-05T08:31:10Z",
		"href": "http://blog.richdougherty.com/2009/04/tail-calls-tailrec-and-trampolines.html"
	},
	{
		"cluster": 12,
		"tags": [
			"http",
			"request",
			"pipelining",
			"keepalive",
			"network",
			"web",
			"optimization",
			"development",
			"programming",
			"computerscience"
		],
		"y": 10.889017904301303,
		"x": -5.523068348800658,
		"extended": "",
		"description": "Optimizing HTTP: Keep-alive and Pipelining - igvita.com",
		"time": "2011-10-04T22:51:54Z",
		"href": "http://www.igvita.com/2011/10/04/optimizing-http-keep-alive-and-pipelining/"
	},
	{
		"cluster": 12,
		"tags": [
			"akka",
			"heroku",
			"scala",
			"programming",
			"web",
			"amqp",
			"mongodb",
			"worker",
			"actor",
			"model",
			"development",
			"deployment",
			"architecture"
		],
		"y": 7.182679030367681,
		"x": -1.4107947027780832,
		"extended": "",
		"description": "Heroku | Dev Center | Scaling Out with Scala and Akka on Heroku",
		"time": "2011-10-04T16:36:13Z",
		"href": "http://devcenter.heroku.com/articles/scaling-out-with-scala-and-akka"
	},
	{
		"cluster": 15,
		"tags": [
			"encoding",
			"machinelearning",
			"categorical",
			"cardinality",
			"hashing",
			"datamining",
			"computerscience",
			"mathematics"
		],
		"y": -1.7910411590710267,
		"x": -5.447756426479286,
		"extended": "",
		"description": "Looking for strategies for encoding input data with categorical fields that have a very large number of possible values, suitable for a Neural Net or SVM : MachineLearning",
		"time": "2011-10-04T10:32:48Z",
		"href": "http://www.reddit.com/r/MachineLearning/comments/kzxdy/looking_for_strategies_for_encoding_input_data/"
	},
	{
		"cluster": 15,
		"tags": [
			"machinelearning",
			"ml",
			"nlp",
			"research",
			"hashing",
			"computerscience",
			"mathematics",
			"programming"
		],
		"y": -0.2655996701974231,
		"x": -11.205578247097574,
		"extended": "",
		"description": "Hashing Representations",
		"time": "2011-10-04T10:28:02Z",
		"href": "http://hunch.net/~jl/projects/hash_reps/index.html"
	},
	{
		"cluster": 5,
		"tags": [
			"mathematics",
			"statistics",
			"pareto",
			"zipf",
			"powerlaw",
			"rank",
			"regression"
		],
		"y": -4.148608123343554,
		"x": -3.450782257955718,
		"extended": "",
		"description": "Zipf, Power-law, Pareto - a ranking tutorial",
		"time": "2011-10-04T10:21:16Z",
		"href": "http://www.hpl.hp.com/research/idl/papers/ranking/ranking.html"
	},
	{
		"cluster": 16,
		"tags": [
			"normalisation",
			"tfidf",
			"lebesque",
			"programming",
			"computerscience",
			"machinelearning",
			"informationretrieval",
			"datamining",
			"textmining",
			"data",
			"text",
			"mining"
		],
		"y": -0.9481890698102886,
		"x": -6.634167808649516,
		"extended": "",
		"description": "Machine Learning :: Text feature extraction (tf-idf) – Part II | Pyevolve",
		"time": "2011-10-04T10:11:02Z",
		"href": "http://pyevolve.sourceforge.net/wordpress/?p=1747"
	},
	{
		"cluster": 17,
		"tags": [
			"machinelearning",
			"pything",
			"informationrtetrieval",
			"text",
			"featureextraction",
			"datamining",
			"textmining",
			"programming",
			"computerscience"
		],
		"y": -0.8852666804325962,
		"x": -6.755558139912808,
		"extended": "",
		"description": "Machine Learning :: Text feature extraction (tf-idf) – Part I | Pyevolve",
		"time": "2011-10-04T10:05:15Z",
		"href": "http://pyevolve.sourceforge.net/wordpress/?p=1589"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"concurrency",
			"programming",
			"GIL",
			"mutex",
			"lock",
			"global",
			"interpreter",
			"MRI",
			"green",
			"threads",
			"scheduling"
		],
		"y": 6.0182255219767695,
		"x": -11.352250301788212,
		"extended": "",
		"description": "The Global Interpreter Lock and Ruby / Python concurrency | Merbist",
		"time": "2011-10-04T09:49:02Z",
		"href": "http://merbist.com/2011/10/03/about-concurrency-and-the-gil/"
	},
	{
		"cluster": 12,
		"tags": [
			"heroku",
			"scala",
			"web",
			"development",
			"deployment"
		],
		"y": 7.148604702194109,
		"x": -1.3802536599771398,
		"extended": "",
		"description": "Heroku | Scala on Heroku",
		"time": "2011-10-04T08:40:04Z",
		"href": "http://blog.heroku.com/archives/2011/10/3/scala/"
	},
	{
		"cluster": 2,
		"tags": [
			"kipling",
			"thornbridge",
			"recipe",
			"beer",
			"brewing"
		],
		"y": -4.3770050918485595,
		"x": 0.18339475082751297,
		"extended": "",
		"description": "Thornbridge Kipling (AG#14) – Fairwater Brewery",
		"time": "2011-10-03T18:34:16Z",
		"href": "http://www.fairwater-brewery.co.uk/2011/07/thornbridge-kipling-ag14/"
	},
	{
		"cluster": 18,
		"tags": [
			"hbase",
			"lzo",
			"hadoop",
			"compression",
			"apache",
			"sysadmin",
			"software",
			"development"
		],
		"y": 7.257818901084734,
		"x": -0.559173971994715,
		"extended": "",
		"description": "FAQ - hadoop-gpl-compression - Frequently Asked Questions - GPL'ed compression codecs that work with Hadoop - Google Project Hosting",
		"time": "2011-10-03T14:47:47Z",
		"href": "http://code.google.com/a/apache-extras.org/p/hadoop-gpl-compression/wiki/FAQ"
	},
	{
		"cluster": 5,
		"tags": [
			"datamining",
			"data",
			"mining",
			"machinelearning",
			"statistics",
			"computerscience",
			"learning",
			"research"
		],
		"y": -1.7936706310188717,
		"x": -6.0469847003105945,
		"extended": "",
		"description": "Wiki - Data Mining Research Notes",
		"time": "2011-10-02T11:02:22Z",
		"href": "https://sites.google.com/site/dataminingresearchnotes/wiki"
	},
	{
		"cluster": 18,
		"tags": [
			"dziuba",
			"concurrency",
			"rant",
			"programming",
			"node",
			"javascript",
			"unix",
			"software",
			"engineering"
		],
		"y": 5.736741914236828,
		"x": -4.121461587145932,
		"extended": "",
		"description": "Node.js is Cancer",
		"time": "2011-10-02T09:05:24Z",
		"href": "http://teddziuba.com/2011/10/node-js-is-cancer.html"
	},
	{
		"cluster": 16,
		"tags": [
			"zohmg",
			"database",
			"timeseries",
			"hadoop",
			"programming",
			"nosql",
			"data",
			"analytics"
		],
		"y": 3.2268448855998204,
		"x": -0.7568754581035114,
		"extended": "",
		"description": "zohmg/zohmg - GitHub",
		"time": "2011-10-01T08:59:59Z",
		"href": "https://github.com/zohmg/zohmg"
	},
	{
		"cluster": 16,
		"tags": [
			"pregel",
			"graph",
			"computing",
			"google",
			"data",
			"analysis",
			"machinelearning",
			"datamining",
			"computerscience",
			"parallel",
			"concurrency",
			"processing"
		],
		"y": -1.2362911754186712,
		"x": -3.2014954292147104,
		"extended": "",
		"description": "Research Blog",
		"time": "2011-09-29T16:32:56Z",
		"href": "http://googleresearch.blogspot.com/2009/06/large-scale-graph-computing-at-google.html"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"hadoop",
			"hbase",
			"openstsdb",
			"time",
			"series",
			"database",
			"monitoring",
			"persistence",
			"nosql",
			"programming",
			"development"
		],
		"y": 3.324562165402704,
		"x": -0.6997738406874812,
		"extended": "",
		"description": "OpenTSDB - A Distributed, Scalable Monitoring System",
		"time": "2011-09-29T16:31:08Z",
		"href": "http://opentsdb.net/index.html"
	},
	{
		"cluster": 7,
		"tags": [
			"kyoto",
			"tokyo",
			"cabinet",
			"db",
			"persistence",
			"nosql",
			"programming",
			"development",
			"key",
			"value",
			"ruby"
		],
		"y": 7.405357239379999,
		"x": -8.722820999594365,
		"extended": "",
		"description": "Tokyo Cabinet: Beyond Key-Value Store - igvita.com",
		"time": "2011-09-29T15:57:17Z",
		"href": "http://www.igvita.com/2009/02/13/tokyo-cabinet-beyond-key-value-store/"
	},
	{
		"cluster": 17,
		"tags": [
			"benchmark",
			"nosql",
			"time",
			"series",
			"database",
			"programming",
			"mongo",
			"redis",
			"kyoto",
			"cabinet"
		],
		"y": 3.450717842158817,
		"x": -0.4943478545411448,
		"extended": "",
		"description": "NoSQL for Time Series Data Benchmark - 有微码头",
		"time": "2011-09-29T15:56:51Z",
		"href": "http://yinhm.appspot.com/2010/05/nosql-tokyocabinet-vs-mongodb-vs-redis-for-time-series-data-benchmark"
	},
	{
		"cluster": 17,
		"tags": [
			"nosql",
			"database",
			"library",
			"persistence",
			"time",
			"series",
			"computerscience",
			"programming",
			"kyoto",
			"cabinet"
		],
		"y": 3.4200594893821803,
		"x": -0.5095452274023643,
		"extended": "",
		"description": "Kyoto Cabinet: a straightforward implementation of DBM",
		"time": "2011-09-29T15:56:23Z",
		"href": "http://fallabs.com/kyotocabinet/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"mapreduce",
			"programming",
			"functional",
			"development",
			"category",
			"machinelearning"
		],
		"y": -5.053289008387704,
		"x": -7.572745510795014,
		"extended": "",
		"description": "MapReduce as a monad - HaskellWiki",
		"time": "2011-09-29T12:29:30Z",
		"href": "http://www.haskell.org/haskellwiki/MapReduce_as_a_monad"
	},
	{
		"cluster": 12,
		"tags": [
			"nginx",
			"godaddy",
			"ssl",
			"certificate",
			"authentication",
			"security",
			"web",
			"development",
			"ops",
			"sysadmin",
			"admin"
		],
		"y": 8.741072246209024,
		"x": 1.3647205590987075,
		"extended": "",
		"description": "How to setup godaddy SSL certificate on Nginx | WuyaSea.com",
		"time": "2011-09-26T15:35:11Z",
		"href": "http://nginx.groups.wuyasea.com/articles/how-to-setup-godaddy-ssl-certificate-on-nginx/2"
	},
	{
		"cluster": 7,
		"tags": [
			"java",
			"svm",
			"programming",
			"machinelearning",
			"development"
		],
		"y": 5.625345835345616,
		"x": -7.692142532663159,
		"extended": "",
		"description": "jlibsvm",
		"time": "2011-09-26T09:30:16Z",
		"href": "http://dev.davidsoergel.com/trac/jlibsvm/"
	},
	{
		"cluster": 7,
		"tags": [
			"pigi",
			"orm",
			"database",
			"hbase",
			"nosql",
			"programming",
			"development",
			"java",
			"indexing"
		],
		"y": 6.0372159117588104,
		"x": -8.191880433836724,
		"extended": "",
		"description": "Pigi project",
		"time": "2011-09-26T09:29:53Z",
		"href": "http://www.pigi-project.org/index.php?prtlid=1130&kat_id=200&art_id=238"
	},
	{
		"cluster": 17,
		"tags": [
			"hadoop",
			"svm",
			"machinelearning",
			"programming",
			"computerscience",
			"java",
			"mapreduce"
		],
		"y": 0.874624504667459,
		"x": -6.016550314283715,
		"extended": "",
		"description": "Support Vector Machines: What is the best way to implement an SVM using Hadoop? - Quora",
		"time": "2011-09-26T09:14:03Z",
		"href": "http://www.quora.com/Support-Vector-Machines/What-is-the-best-way-to-implement-an-SVM-using-Hadoop"
	},
	{
		"cluster": 7,
		"tags": [
			"jruby",
			"hbase",
			"example",
			"programming",
			"ruby",
			"java",
			"database",
			"nosql",
			"development"
		],
		"y": 6.201621205720005,
		"x": -8.514405204713412,
		"extended": "",
		"description": "effectiveui/jruby-hbase-demo - GitHub",
		"time": "2011-09-26T09:09:54Z",
		"href": "https://github.com/effectiveui/jruby-hbase-demo"
	},
	{
		"cluster": 15,
		"tags": [
			"information",
			"theory",
			"learning",
			"inference",
			"machinelearning",
			"mathematics",
			"computerscience",
			"ai"
		],
		"y": -1.0777232515172877,
		"x": -10.781435533178415,
		"extended": "",
		"description": "David MacKay: Information Theory, Inference, and Learning Algorithms: Home",
		"time": "2011-09-23T09:37:18Z",
		"href": "http://www.inference.phy.cam.ac.uk/mackay/itila/"
	},
	{
		"cluster": 15,
		"tags": [
			"machinelearning",
			"machine",
			"learning",
			"computer",
			"science",
			"computerscience",
			"ai",
			"statistics",
			"mathematics",
			"education",
			"resources",
			"books"
		],
		"y": -2.3514127991708147,
		"x": -5.864813579606545,
		"extended": "",
		"description": "Pin Dancing: Learning about Machine Learning",
		"time": "2011-09-23T09:37:01Z",
		"href": "http://pindancing.blogspot.com/2010/01/learning-about-machine-learniing.html"
	},
	{
		"cluster": 15,
		"tags": [
			"computerscience",
			"programming",
			"data",
			"science",
			"datascience",
			"statistics",
			"mathematics",
			"list",
			"resources",
			"education"
		],
		"y": -0.7868528846836855,
		"x": -10.494169471878143,
		"extended": "",
		"description": "Career Advice: How do I become a data scientist? - Quora",
		"time": "2011-09-22T13:04:06Z",
		"href": "http://www.quora.com/Career-Advice/How-do-I-become-a-data-scientist"
	},
	{
		"cluster": 5,
		"tags": [
			"programming",
			"reference",
			"statistics",
			"computerscience",
			"list",
			"machinelearning",
			"resources"
		],
		"y": -1.2847738450678061,
		"x": -6.767465834763528,
		"extended": "",
		"description": "Machine Learning: What are some good resources for learning about machine learning? Why? - Quora",
		"time": "2011-09-22T13:03:42Z",
		"href": "http://www.quora.com/Machine-Learning/What-are-some-good-resources-for-learning-about-machine-learning-Why"
	},
	{
		"cluster": 10,
		"tags": [
			"labour",
			"politics",
			"philosophy",
			"society"
		],
		"y": 5.4773497729761855,
		"x": 13.038451341685597,
		"extended": "",
		"description": "Maurice Glasman - Labour as a Radical Tradition",
		"time": "2011-09-22T11:33:58Z",
		"href": "https://docs.google.com/viewer?url=http://www.lwbooks.co.uk/journals/soundings/articles/s46glasman.pdf"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"machinelearning",
			"education",
			"mathematics",
			"computerscience"
		],
		"y": -2.1943566108279464,
		"x": -5.508639572138049,
		"extended": "",
		"description": "Statistics vs. Machine Learning, fight! | AI and Social Science – Brendan O'Connor",
		"time": "2011-09-21T08:39:53Z",
		"href": "http://brenocon.com/blog/2008/12/statistics-vs-machine-learning-fight/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"mathematics",
			"history",
			"normal",
			"distribution",
			"gaussian",
			"science"
		],
		"y": -5.264233105197637,
		"x": -4.009560105947351,
		"extended": "",
		"description": "MAA Writing Awards | The Evolution of the Normal Distribution",
		"time": "2011-09-20T22:04:19Z",
		"href": "http://mathdl.maa.org/mathDL/22/?pa=content&sa=viewDocument&nodeId=3133"
	},
	{
		"cluster": 2,
		"tags": [
			"machinelearning",
			"dzubia",
			"rubumanortalk",
			"rant"
		],
		"y": -1.1038339472500562,
		"x": 3.2856628564687944,
		"extended": "",
		"description": "Machine Learning Is Not As Cool As It Sounds",
		"time": "2011-09-20T21:55:05Z",
		"href": "http://teddziuba.com/2008/05/machine-learning-is-not-as-coo.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"scalaz",
			"validation",
			"monad",
			"monoid",
			"applicative",
			"functor",
			"types",
			"computerscience",
			"functional",
			"typelambda",
			"programming"
		],
		"y": -0.8219749162757709,
		"x": -8.757629518784253,
		"extended": "",
		"description": "A Tale of 3 Nightclubs — Gist",
		"time": "2011-09-18T13:08:26Z",
		"href": "https://gist.github.com/970717"
	},
	{
		"cluster": 17,
		"tags": [
			"scalaz",
			"programming",
			"scala",
			"video",
			"types",
			"functional",
			"category",
			"theory",
			"computerscience"
		],
		"y": 0.2300397369722889,
		"x": -8.60633187105726,
		"extended": "",
		"description": "Skills Matter : London Scala Users Group:Practical Scalaz: m",
		"time": "2011-09-18T11:56:24Z",
		"href": "http://skillsmatter.com/podcast/scala/practical-scalaz-2518/js-2680"
	},
	{
		"cluster": 5,
		"tags": [
			"datamining",
			"statistics",
			"database",
			"datasets",
			"machinelearning",
			"R"
		],
		"y": -2.284294358212655,
		"x": -3.827872656574273,
		"extended": "",
		"description": "Datasets to Practice Your Data Mining | (R news & tutorials)",
		"time": "2011-09-17T14:37:00Z",
		"href": "http://www.r-bloggers.com/datasets-to-practice-your-data-mining/"
	},
	{
		"cluster": 16,
		"tags": [
			"dataset",
			"data",
			"stats",
			"machinelearning",
			"datamining"
		],
		"y": -1.489551439301695,
		"x": -0.9773044489699692,
		"extended": "",
		"description": "Datasets Archive",
		"time": "2011-09-17T14:36:41Z",
		"href": "http://www.reddit.com/r/datasets"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"neo",
			"neo4j",
			"graph",
			"database",
			"programming",
			"java",
			"nosql"
		],
		"y": 3.5781660912456026,
		"x": -0.7785831107065363,
		"extended": "",
		"description": "Neo4j and Scala hacking notes « Digifesto",
		"time": "2011-09-17T09:06:14Z",
		"href": "http://digifesto.com/2011/09/15/neo4j-and-scala-hacking-notes/#comments"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"piano",
			"sheetmusic",
			"download"
		],
		"y": -9.827280377524938,
		"x": 4.865405463829991,
		"extended": "",
		"description": "free piano sheet music",
		"time": "2011-09-16T10:54:07Z",
		"href": "http://my-piano.blogspot.com/"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"maps",
			"crime",
			"statistics",
			"life",
			"geography",
			"mathematics"
		],
		"y": -4.125692087984149,
		"x": -3.7082311147158133,
		"extended": "",
		"description": "Uber Blog » Uberdata: How prostitution and alcohol make Uber better",
		"time": "2011-09-15T14:53:07Z",
		"href": "http://blog.uber.com/2011/09/13/uberdata-how-prostitution-and-alcohol-make-uber-better/"
	},
	{
		"cluster": 5,
		"tags": [
			"math",
			"programming",
			"r",
			"search",
			"statistics",
			"reference",
			"help"
		],
		"y": 2.621676342098646,
		"x": -5.126137644238683,
		"extended": "",
		"description": "RSeek.org R-project Search Engine",
		"time": "2011-09-12T21:31:07Z",
		"href": "http://rseek.org/"
	},
	{
		"cluster": 2,
		"tags": [
			"algorithms",
			"amazon",
			"books",
			"business",
			"pricing"
		],
		"y": 0.9549814411509614,
		"x": 4.033714536605204,
		"extended": "",
		"description": "Amazon’s $23,698,655.93 book about flies",
		"time": "2011-09-12T09:41:53Z",
		"href": "http://www.michaeleisen.org/blog/?p=358"
	},
	{
		"cluster": 2,
		"tags": [
			"capybara",
			"facebook",
			"testing",
			"acceptance",
			"rspec",
			"cucumber",
			"ruby"
		],
		"y": 7.396936848486807,
		"x": 1.8594294911498517,
		"extended": "",
		"description": "tigerlily/capybara-facebook - GitHub",
		"time": "2011-09-09T17:04:23Z",
		"href": "https://github.com/tigerlily/capybara-facebook"
	},
	{
		"cluster": 2,
		"tags": [
			"rspec",
			"capybara",
			"ruby",
			"testing",
			"bdd",
			"tdd",
			"acceptance",
			"integration"
		],
		"y": 7.409934635780993,
		"x": 1.831011869711058,
		"extended": "",
		"description": "Acceptance testing using Capybara's new RSpec DSL - Jeff Kreeftmeijer",
		"time": "2011-09-09T16:41:39Z",
		"href": "http://jeffkreeftmeijer.com/2011/acceptance-testing-using-capybaras-new-rspec-dsl/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"functional",
			"functor",
			"applicative",
			"scalaz",
			"programming",
			"development"
		],
		"y": -0.7034620744169643,
		"x": -8.69136081698024,
		"extended": "",
		"description": "Video | Scala Days 2011",
		"time": "2011-09-09T13:18:34Z",
		"href": "http://days2011.scala-lang.org/node/138/275"
	},
	{
		"cluster": 7,
		"tags": [
			"jruby",
			"profiler",
			"programming",
			"ruby",
			"java",
			"performance"
		],
		"y": 5.973469664985852,
		"x": -8.76687275339196,
		"extended": "",
		"description": "How to use the new JRuby profiler - Nuclear Nutcracker",
		"time": "2011-09-09T10:58:55Z",
		"href": "http://danlucraft.com/blog/2011/03/built-in-profiler-in-jruby-1.6/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"aync",
			"eventmachine",
			"fibers",
			"1.9"
		],
		"y": 5.826555385326548,
		"x": -10.525194064436127,
		"extended": "",
		"description": "igrigorik/em-synchrony - GitHub",
		"time": "2011-09-08T21:54:46Z",
		"href": "https://github.com/igrigorik/em-synchrony"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"asynchronous",
			"eventmachine",
			"sinatra",
			"web",
			"development"
		],
		"y": 8.68975015581085,
		"x": -7.990772687470079,
		"extended": "",
		"description": "kyledrake/sinatra-synchrony - GitHub",
		"time": "2011-09-08T21:54:22Z",
		"href": "https://github.com/kyledrake/sinatra-synchrony"
	},
	{
		"cluster": 7,
		"tags": [
			"jruby",
			"memory",
			"programming",
			"java",
			"ruby",
			"development",
			"profiling",
			"performance",
			"optimization"
		],
		"y": 6.245388436472382,
		"x": -8.562915124142103,
		"extended": "",
		"description": "Four Guidelines for sizing JRuby apps (Jacob Kessler's Blog)",
		"time": "2011-09-08T21:52:58Z",
		"href": "http://blogs.oracle.com/Jacobkessler/entry/four_guidelines_for_sizing_jruby"
	},
	{
		"cluster": 7,
		"tags": [
			"java",
			"jruby",
			"programming",
			"development",
			"ruby"
		],
		"y": 6.2790617744850925,
		"x": -8.692613212468537,
		"extended": "",
		"description": "Using Java Classes in JRuby (Cool Stuff)",
		"time": "2011-09-08T16:09:53Z",
		"href": "http://blogs.oracle.com/coolstuff/entry/using_java_classes_in_jruby"
	},
	{
		"cluster": 2,
		"tags": [
			"java",
			"jruby",
			"benchmark",
			"parsing",
			"performance"
		],
		"y": -0.27417116764727273,
		"x": 1.880786823257148,
		"extended": "",
		"description": "JSON Benchmarks in jRuby | Erics Tech Blog",
		"time": "2011-09-08T15:14:47Z",
		"href": "http://eric.lubow.org/2010/ruby/jruby/json-benchmarks-in-jruby/"
	},
	{
		"cluster": 2,
		"tags": [
			"configuration",
			"jruby",
			"bundler",
			"rails",
			"gems"
		],
		"y": -2.5347598674387624,
		"x": 4.8568931634222166,
		"extended": "",
		"description": "Specifying different gems in Bundler’s Gemfile when using JRuby « rebel with a cause",
		"time": "2011-09-08T14:21:18Z",
		"href": "http://jaustinhughey.wordpress.com/2010/08/09/specifying-different-gems-in-bundlers-gemfile-when-using-jruby/"
	},
	{
		"cluster": 7,
		"tags": [
			"java",
			"jvm",
			"performance",
			"arguments",
			"programming",
			"ruby",
			"jruby"
		],
		"y": 5.883990823954938,
		"x": -8.777296653460558,
		"extended": "",
		"description": "Headius: My Favorite Hotspot JVM Flags",
		"time": "2011-09-08T14:20:56Z",
		"href": "http://blog.headius.com/2009/01/my-favorite-hotspot-jvm-flags.html"
	},
	{
		"cluster": 17,
		"tags": [
			"jvm",
			"async",
			"cnoncurrency",
			"paralellism",
			"programming",
			"java"
		],
		"y": 3.821016795117932,
		"x": -4.576529388780591,
		"extended": "",
		"description": "purplefox/node.x @ GitHub",
		"time": "2011-09-06T15:08:22Z",
		"href": "http://purplefox.github.com/node.x/"
	},
	{
		"cluster": 15,
		"tags": [
			"finance",
			"business",
			"quant",
			"computerscience",
			"dissertation",
			"mathematics"
		],
		"y": -2.0769828103074146,
		"x": -13.568227873630951,
		"extended": "",
		"description": "Man vs. Machine on Wall Street: How Computers Beat the Market - Business - The Atlantic",
		"time": "2011-08-31T11:56:12Z",
		"href": "http://m.theatlantic.com/business/print/2011/03/man-vs-machine-on-wall-street-how-computers-beat-the-market/73120/"
	},
	{
		"cluster": 17,
		"tags": [
			"language",
			"programming",
			"reference",
			"cheatsheet"
		],
		"y": 2.9290391949636674,
		"x": -4.9866183378342015,
		"extended": "",
		"description": "Programming Languages Reference Sheets - Hyperpolyglot",
		"time": "2011-08-28T12:18:26Z",
		"href": "http://hyperpolyglot.org/"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"classification",
			"svm",
			"library",
			"statistics",
			"machine",
			"learning",
			"computerscience",
			"programming",
			"clustering",
			"ranking"
		],
		"y": -0.39839830814662697,
		"x": -6.707950996137835,
		"extended": "",
		"description": "sofia-ml - Suite of Fast Incremental Algorithms for Machine Learning. Includes methods for learning classification and ranking models, using Pegasos SVM, SGD-SVM, ROMMA, Passive-Aggressive Perceptron, Perceptron with Margins, and Logistic Regression. - Go",
		"time": "2011-08-23T17:10:21Z",
		"href": "http://code.google.com/p/sofia-ml/"
	},
	{
		"cluster": 17,
		"tags": [
			"ai",
			"svm",
			"machinelearning",
			"programming",
			"learning",
			"library",
			"c"
		],
		"y": -0.13504501805616168,
		"x": -6.610876748241894,
		"extended": "",
		"description": "SVM-Light Support Vector Machine",
		"time": "2011-08-23T17:09:38Z",
		"href": "http://svmlight.joachims.org/"
	},
	{
		"cluster": 17,
		"tags": [
			"machinelearning",
			"ml",
			"svm",
			"ranking",
			"learningtorank",
			"computerscience",
			"ir",
			"programming",
			"c",
			"library"
		],
		"y": -0.24465132712665622,
		"x": -6.788537454483564,
		"extended": "",
		"description": "SVM-rank: Support Vector Machine for Ranking",
		"time": "2011-08-23T17:09:11Z",
		"href": "http://www.cs.cornell.edu/People/tj/svm_light/svm_rank.html"
	},
	{
		"cluster": 5,
		"tags": [
			"ruby",
			"statistics",
			"library",
			"computerscience",
			"programming",
			"machinelearning"
		],
		"y": -0.8837600166432713,
		"x": -6.819600078869868,
		"extended": "",
		"description": "Statsample: Statistic Library for Ruby",
		"time": "2011-08-23T17:08:41Z",
		"href": "http://ruby-statsample.rubyforge.org/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"oop",
			"programming",
			"duck",
			"typing"
		],
		"y": 4.790267330211873,
		"x": -6.2482723285264345,
		"extended": "",
		"description": "OOP The Good Parts: Message Passing, Duck Typing, Object Composition, and not Inheritance",
		"time": "2011-08-23T08:31:54Z",
		"href": "http://fitzgeraldnick.com/weblog/39/"
	},
	{
		"cluster": 2,
		"tags": [
			"ghci",
			"haskell",
			"development",
			"load",
			"path"
		],
		"y": -4.933703005440968,
		"x": -6.167329353931995,
		"extended": "",
		"description": "Haskell - Glasgow-haskell-users - ghci module load path",
		"time": "2011-08-21T14:19:01Z",
		"href": "http://haskell.1045720.n5.nabble.com/ghci-module-load-path-td3182388.html"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"jazz",
			"milesdavis",
			"chords",
			"bell",
			"piano"
		],
		"y": -10.325635644683608,
		"x": 5.64046881465877,
		"extended": "",
		"description": "\"If I Were a Bell\" help - Jazz Bulletin Board",
		"time": "2011-08-20T16:56:17Z",
		"href": "http://forums.allaboutjazz.com/showthread.php?t=37356"
	},
	{
		"cluster": 18,
		"tags": [
			"ddd",
			"domain",
			"driven",
			"design",
			"software",
			"engineering",
			"modelling",
			"data"
		],
		"y": 5.1943404511816,
		"x": -5.748433519949944,
		"extended": "",
		"description": "Entities, Value Objects, Aggregates and Roots | Jimmy Bogard's Blog",
		"time": "2011-08-19T11:31:04Z",
		"href": "http://lostechies.com/jimmybogard/2008/05/21/entities-value-objects-aggregates-and-roots/"
	},
	{
		"cluster": 5,
		"tags": [
			"expectation",
			"maximization",
			"probability",
			"statistics",
			"mathematics",
			"machinelearning",
			"computerscience",
			"machine",
			"learning",
			"expectationmaximization"
		],
		"y": -2.6652384466448904,
		"x": -5.789462117088254,
		"extended": "",
		"description": "quick view of Expectation-Maximization: « thoughts on the set of interesting things",
		"time": "2011-08-16T11:27:22Z",
		"href": "http://valserb.wordpress.com/2011/08/16/quick-view-of-expectation-maximization/"
	},
	{
		"cluster": 2,
		"tags": [
			"eventmachine",
			"jabber",
			"ruby",
			"xmpp",
			"ejabberd",
			"distributed",
			"parallel",
			"computing"
		],
		"y": -8.722685912367675,
		"x": -1.70531509030354,
		"extended": "",
		"description": "Distributed programming with jabber and eventmachine | nutrun",
		"time": "2011-08-15T15:30:21Z",
		"href": "http://nutrun.com/weblog/2008/05/04/distributed-programming-with-jabber-and-eventmachine.html"
	},
	{
		"cluster": 7,
		"tags": [
			"redis",
			"efficiency",
			"memory",
			"ops",
			"development",
			"programming",
			"RAM"
		],
		"y": 8.070287736592194,
		"x": -2.5499751391699643,
		"extended": "",
		"description": "How redis can ruin your day, and what you can do to fix it | Miso Engineering",
		"time": "2011-08-15T13:33:58Z",
		"href": "http://engineering.gomiso.com/2011/05/24/how-redis-can-ruin-your-day-and-what-you-can-do-to-fix-it/"
	},
	{
		"cluster": 2,
		"tags": [
			"http",
			"ruby",
			"client",
			"faraday",
			"middleware",
			"web"
		],
		"y": 9.429208684274379,
		"x": -9.288460552988836,
		"extended": "",
		"description": "Faraday: advanced HTTP requests made easy",
		"time": "2011-08-12T16:59:18Z",
		"href": "http://mislav.uniqpath.com/2011/07/faraday-advanced-http/"
	},
	{
		"cluster": 2,
		"tags": [
			"asynchronous",
			"concurrency",
			"eventmachine",
			"fibers",
			"ruby",
			"synchrony"
		],
		"y": 5.8204337267993544,
		"x": -10.861952284517741,
		"extended": "",
		"description": "Untangling Evented Code with Ruby Fibers - igvita.com",
		"time": "2011-08-12T16:45:17Z",
		"href": "http://www.igvita.com/2010/03/22/untangling-evented-code-with-ruby-fibers/"
	},
	{
		"cluster": 4,
		"tags": [
			"types",
			"haskell",
			"programming",
			"computerscience",
			"heterogenous",
			"lists",
			"collections",
			"functional"
		],
		"y": -6.384603994786487,
		"x": -10.638421949117413,
		"extended": "",
		"description": "Heterogenous collections - HaskellWiki",
		"time": "2011-08-08T09:30:12Z",
		"href": "http://www.haskell.org/haskellwiki/Heterogenous_collections"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"csp",
			"programming",
			"chp",
			"concurrency",
			"dsl",
			"paralellism",
			"functional",
			"computerscience"
		],
		"y": -7.259538856603014,
		"x": -9.104985787715187,
		"extended": "",
		"description": "An Introduction to Communicating Haskell Processes",
		"time": "2011-08-08T09:25:36Z",
		"href": "http://www.scribd.com/doc/28420119/An-Introduction-to-Communicating-Haskell-Processes"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"mapreduce"
		],
		"y": -5.119926519476707,
		"x": -8.308942638227988,
		"extended": "",
		"description": "Implementing MapReduce in Haskell « JP Embedded Solutions",
		"time": "2011-08-05T18:52:55Z",
		"href": "http://jpembeddedsolutions.wordpress.com/2011/04/02/mapreduce/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"abm",
			"simulation",
			"modelling"
		],
		"y": -5.195566921558676,
		"x": -8.308018712539532,
		"extended": "",
		"description": "HackageDB: aivika-0.1",
		"time": "2011-08-05T18:52:35Z",
		"href": "http://hackage.haskell.org/package/aivika"
	},
	{
		"cluster": 16,
		"tags": [
			"r",
			"text",
			"statistics",
			"machinelearning",
			"nlp",
			"mining",
			"data"
		],
		"y": -1.6832895493520685,
		"x": -2.653467761116286,
		"extended": "",
		"description": "RTextTools: a machine learning library for text classification - Blog",
		"time": "2011-08-05T16:29:14Z",
		"href": "http://www.rtexttools.com/"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"visualization",
			"svg",
			"javascript",
			"framework",
			"dom",
			"analysis"
		],
		"y": -2.6074305981832584,
		"x": -0.2038234910623153,
		"extended": "",
		"description": "d3.js",
		"time": "2011-08-05T14:47:09Z",
		"href": "http://mbostock.github.com/d3/"
	},
	{
		"cluster": 2,
		"tags": [
			"api",
			"delicious",
			"classification",
			"computerscience",
			"tagging"
		],
		"y": -0.10129902510724191,
		"x": -2.920284173614915,
		"extended": "",
		"description": "How to Semantically Analyze Web Pages With Delicious",
		"time": "2011-08-05T14:43:22Z",
		"href": "http://www.readwriteweb.com/hack/2010/12/how-to-semantically-analyze-we.php"
	},
	{
		"cluster": 15,
		"tags": [
			"datasets",
			"machinelearning",
			"nlp",
			"datamining",
			"mathematics",
			"computerscience",
			"resources"
		],
		"y": -1.7660327548635224,
		"x": -5.350493745424765,
		"extended": "",
		"description": "pskomoroch's dataset Bookmarks on Delicious",
		"time": "2011-08-05T14:43:05Z",
		"href": "http://www.delicious.com/pskomoroch/dataset?setcount=100"
	},
	{
		"cluster": 0,
		"tags": [
			"chef",
			"ops",
			"server",
			"sysadmin",
			"dependencies",
			"configuration",
			"ruby"
		],
		"y": 0.03978570383465404,
		"x": 0.5819719619108135,
		"extended": "",
		"description": "Command-line cookbook dependency solving with knife exec -",
		"time": "2011-08-03T16:17:33Z",
		"href": "http://agilesysadmin.net/chef-dependencies"
	},
	{
		"cluster": 0,
		"tags": [
			"foreman",
			"deployment",
			"monitoring",
			"rails",
			"ruby",
			"ops",
			"sysadmin",
			"development"
		],
		"y": 0.12471927921357498,
		"x": 0.44134261750793774,
		"extended": "",
		"description": "Michael van Rooijen (meskyanichi) - Managing and monitoring your Ruby application with Foreman and Upstart",
		"time": "2011-08-03T16:05:39Z",
		"href": "http://michaelvanrooijen.com/articles/2011/06/08-managing-and-monitoring-your-ruby-application-with-foreman-and-upstart/"
	},
	{
		"cluster": 0,
		"tags": [
			"rails",
			"deployment",
			"web",
			"ruby",
			"foreman",
			"capistrano",
			"upstart",
			"linux",
			"sysadmin",
			"systems",
			"ops"
		],
		"y": 0.11320702003195346,
		"x": 0.4703910401624858,
		"extended": "",
		"description": "Example of a Foreman/Capistrano/upstart setup — Gist",
		"time": "2011-08-03T15:54:31Z",
		"href": "https://gist.github.com/1027117"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"sysadmin",
			"unix",
			"posix",
			"resource",
			"limits",
			"systems",
			"administration",
			"computerscience"
		],
		"y": -5.121113318611468,
		"x": 3.5131189297780296,
		"extended": "",
		"description": "limits.conf(5) - Linux man page",
		"time": "2011-08-03T15:53:51Z",
		"href": "http://linux.die.net/man/5/limits.conf"
	},
	{
		"cluster": 0,
		"tags": [
			"chef",
			"deployment",
			"sysadmin",
			"ops",
			"systems",
			"development",
			"linux"
		],
		"y": 0.05817577504048679,
		"x": 0.5920347904935962,
		"extended": "",
		"description": "Getting started with Chef tutorial - Momoro Machine",
		"time": "2011-08-02T18:39:37Z",
		"href": "http://www.themomorohoax.com/2010/07/31/ruby-chef-tutorial"
	},
	{
		"cluster": 0,
		"tags": [
			"chef",
			"knife",
			"amazon",
			"ec2",
			"ops",
			"development",
			"web",
			"infrastructure",
			"sysadmin",
			"sysop"
		],
		"y": 0.15787502717162902,
		"x": 0.5688413408413009,
		"extended": "",
		"description": "Launch Cloud Instances with Knife - Chef - Opscode Open Source Wiki",
		"time": "2011-08-02T18:21:34Z",
		"href": "http://wiki.opscode.com/display/chef/Launch+Cloud+Instances+with+Knife"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"machinelearning",
			"web",
			"corpus",
			"text",
			"computerscience",
			"informationretrieval",
			"information",
			"learning",
			"machine",
			"retrieval"
		],
		"y": -0.7748973118612587,
		"x": -5.717806492595629,
		"extended": "",
		"description": "dotbot | DotNetDotCom.org",
		"time": "2011-08-01T14:19:48Z",
		"href": "http://www.dotnetdotcom.org/#index"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"svm",
			"supportvectormachines",
			"machinelearning",
			"ffi",
			"library",
			"development",
			"programming"
		],
		"y": 6.27335199805249,
		"x": -8.202214365370676,
		"extended": "",
		"description": "bdigital/libsvmffi - GitHub",
		"time": "2011-07-31T12:26:56Z",
		"href": "https://github.com/bdigital/libsvmffi"
	},
	{
		"cluster": 5,
		"tags": [
			"ml",
			"machinelearning",
			"statistics",
			"computing",
			"computerscience",
			"software",
			"linux"
		],
		"y": -1.9000315423350052,
		"x": -5.755921535281082,
		"extended": "",
		"description": "Ask reddit: what Machine Learning package(s) do you use under linux? : MachineLearning",
		"time": "2011-07-31T12:05:52Z",
		"href": "http://www.reddit.com/r/MachineLearning/comments/j4127/ask_reddit_what_machine_learning_packages_do_you/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"concurrency",
			"erlang",
			"actors",
			"programming",
			"functional",
			"computerscience"
		],
		"y": -7.658532458387773,
		"x": -9.048811537193501,
		"extended": "",
		"description": "Erlang: Impressed with Haskell's concurrency",
		"time": "2011-07-25T23:01:13Z",
		"href": "http://orbitz-erlang.blogspot.com/2009/09/impressed-with-haskells-concurrency.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"xmonad",
			"design",
			"programming",
			"computerscience",
			"functional",
			"software",
			"engineering"
		],
		"y": -3.9279125690498713,
		"x": -7.773547467381645,
		"extended": "",
		"description": "The Design and Implementation of XMonad « xmonad",
		"time": "2011-07-23T10:40:11Z",
		"href": "http://xmonad.wordpress.com/2009/09/09/the-design-and-implementation-of-xmonad/"
	},
	{
		"cluster": 4,
		"tags": [
			"functional",
			"programming",
			"haskell",
			"computerscience",
			"software",
			"engineering",
			"development"
		],
		"y": -4.1203604263655,
		"x": -7.676151159754246,
		"extended": "",
		"description": "Engineering Large Projects in a Functional Language « Control.Monad.Writer",
		"time": "2011-07-23T10:27:25Z",
		"href": "http://donsbot.wordpress.com/2010/07/11/engineering-large-projects-in-a-functional-language/"
	},
	{
		"cluster": 18,
		"tags": [
			"haskell",
			"design",
			"development",
			"functional",
			"programming",
			"computerscience",
			"software",
			"engineering",
			"patterns"
		],
		"y": -3.966186496416962,
		"x": -7.669334341186242,
		"extended": "",
		"description": "Large-scale design in Haskell? - Stack Overflow",
		"time": "2011-07-23T10:21:14Z",
		"href": "http://stackoverflow.com/questions/3077866/large-scale-design-in-haskell"
	},
	{
		"cluster": 17,
		"tags": [
			"partialFunction",
			"orElse",
			"scala",
			"case",
			"match",
			"programming"
		],
		"y": 6.3761188434550915,
		"x": -2.9539026613421275,
		"extended": "",
		"description": "Daily scala: Chaining Partial Functions with orElse",
		"time": "2011-07-22T18:21:38Z",
		"href": "http://daily-scala.blogspot.com/2010/02/chaining-partial-functions-with-orelse.html"
	},
	{
		"cluster": 7,
		"tags": [
			"lcc",
			"web",
			"development",
			"urls",
			"programming",
			"rails",
			"ruby"
		],
		"y": 9.356263328455322,
		"x": -7.542220088951375,
		"extended": "",
		"description": "Dynamic CMS like routes in ruby on rails - Stack Overflow",
		"time": "2011-07-22T14:33:58Z",
		"href": "http://stackoverflow.com/questions/776268/dynamic-cms-like-routes-in-ruby-on-rails"
	},
	{
		"cluster": 9,
		"tags": [
			"sysadmin",
			"linux",
			"monitoring",
			"performance",
			"computer"
		],
		"y": -6.742547838416238,
		"x": 5.815303446250456,
		"extended": "",
		"description": "Start page – collectd – The system statistics collection daemon",
		"time": "2011-07-22T14:33:34Z",
		"href": "http://collectd.org/"
	},
	{
		"cluster": 12,
		"tags": [
			"visualization",
			"javascript",
			"chart",
			"charts",
			"data",
			"metrics",
			"programming",
			"web"
		],
		"y": 10.139946041559753,
		"x": -3.672232904504355,
		"extended": "",
		"description": "Highcharts - Interactive JavaScript charts for your webpage",
		"time": "2011-07-22T14:33:18Z",
		"href": "http://highcharts.com/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"web",
			"metrics",
			"visualisation",
			"stats",
			"sysadmin",
			"development",
			"programming"
		],
		"y": 10.143133947383319,
		"x": -3.6447792162938537,
		"extended": "",
		"description": "Visage",
		"time": "2011-07-22T14:33:00Z",
		"href": "http://auxesis.github.com/visage/#about"
	},
	{
		"cluster": 17,
		"tags": [
			"book",
			"computerscience",
			"ocaml",
			"programming",
			"functional"
		],
		"y": -4.340431104627103,
		"x": -10.543246966005057,
		"extended": "",
		"description": "How to Think Like a (Functional) Programmer",
		"time": "2011-07-22T12:49:33Z",
		"href": "http://thinkocaml.com/"
	},
	{
		"cluster": 12,
		"tags": [
			"oauth",
			"authentication",
			"api",
			"development",
			"web",
			"security"
		],
		"y": 8.693624939634056,
		"x": 1.43453807480898,
		"extended": "",
		"description": "Introducing OAuth 2.0 « hueniverse",
		"time": "2011-07-21T12:16:31Z",
		"href": "http://hueniverse.com/2010/05/introducing-oauth-2-0/"
	},
	{
		"cluster": 12,
		"tags": [
			"haskell",
			"yesod",
			"heroku",
			"deployment",
			"web",
			"development",
			"programming"
		],
		"y": -4.364326300678108,
		"x": -6.651359448684693,
		"extended": "",
		"description": "Yesod :: Deploying a Yesod web app to the Heroku Cloud",
		"time": "2011-07-20T11:30:12Z",
		"href": "http://www.yesodweb.com/show/topic/429"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"functional",
			"finite",
			"domain",
			"solver",
			"constraints",
			"logic",
			"computerscience",
			"sudoku"
		],
		"y": -6.210211416456591,
		"x": -9.406896291545893,
		"extended": "",
		"description": "David's Blog: A Haskell Sudoku Solver using Finite Domain Constraints",
		"time": "2011-07-18T01:39:58Z",
		"href": "http://overtond.blogspot.com/2008/07/haskell-sudoku-solver-using-finite.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"logic",
			"prolog",
			"functional",
			"programming",
			"computerscience",
			"rules"
		],
		"y": -6.251379700597495,
		"x": -9.151222134940298,
		"extended": "",
		"description": "Typed Logic: A Haskell Rule Engine",
		"time": "2011-07-18T01:21:57Z",
		"href": "http://logicaltypes.blogspot.com/2008/06/haskell-rule-engine.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"logic",
			"monadplus",
			"programming",
			"nondeterminism",
			"computerscience",
			"prolog",
			"functional",
			"monad",
			"choice"
		],
		"y": -6.203833072866525,
		"x": -9.178329586819892,
		"extended": "",
		"description": "Typed Logic: Guarded Choice with MonadPlus",
		"time": "2011-07-18T01:16:33Z",
		"href": "http://logicaltypes.blogspot.com/2008/05/guarded-choice-with-monadplus.html"
	},
	{
		"cluster": 4,
		"tags": [
			"logic",
			"haskell",
			"arrows",
			"prolog",
			"computerscience",
			"programming",
			"conjunction",
			"predicate"
		],
		"y": -6.514335554847602,
		"x": -9.098372558171887,
		"extended": "",
		"description": "Typed Logic: Composing functions with Arrows",
		"time": "2011-07-18T01:03:48Z",
		"href": "http://logicaltypes.blogspot.com/2008/05/composing-functions-with-arrows.html"
	},
	{
		"cluster": 2,
		"tags": [
			"filtering",
			"recommendation",
			"machinelearning",
			"ir",
			"collaborativefiltering",
			"cf",
			"itembased",
			"information",
			"retrieval",
			"recommendations",
			"computerscience"
		],
		"y": -1.0603917747727123,
		"x": -4.7210770939930224,
		"extended": "",
		"description": "Improving recommendation systems - MIT News Office",
		"time": "2011-07-18T00:01:57Z",
		"href": "http://web.mit.edu/newsoffice/2011/compare-recommendation-systems-0708.html"
	},
	{
		"cluster": 18,
		"tags": [
			"scala",
			"implicits",
			"programming",
			"computerscience",
			"engineering",
			"software",
			"typeclasses"
		],
		"y": 5.2279004630473755,
		"x": -3.6082852510398458,
		"extended": "",
		"description": "Implicits without the import tax on Vimeo",
		"time": "2011-07-17T23:02:52Z",
		"href": "http://vimeo.com/20308847"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"akka",
			"type",
			"typeclasses",
			"design",
			"software",
			"computerscience",
			"programming",
			"implicit",
			"refactoring"
		],
		"y": 1.761660366342244,
		"x": -9.10136142896648,
		"extended": "",
		"description": "Ruminations of a Programmer: Refactoring into Scala Type Classes",
		"time": "2011-07-17T21:42:50Z",
		"href": "http://debasishg.blogspot.com/2010/07/refactoring-into-scala-type-classes.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"implicit",
			"context",
			"bound",
			"types",
			"programming",
			"computerscience"
		],
		"y": 1.3016387644269523,
		"x": -9.373781512226591,
		"extended": "",
		"description": "scala - How do I get an instance of the type class associated with a context bound? - Stack Overflow",
		"time": "2011-07-17T21:36:42Z",
		"href": "http://stackoverflow.com/questions/4373070/how-do-i-get-an-instance-of-the-type-class-associated-with-a-context-bound/4373153#4373153"
	},
	{
		"cluster": 17,
		"tags": [
			"haskell",
			"implicit",
			"scala",
			"typeclass",
			"programming",
			"computerscience",
			"contextbound"
		],
		"y": 1.3986255807690082,
		"x": -9.244167287567192,
		"extended": "",
		"description": "Ruminations of a Programmer: Scala Implicits : Type Classes Here I Come",
		"time": "2011-07-17T21:33:38Z",
		"href": "http://debasishg.blogspot.com/2010/06/scala-implicits-type-classes-here-i.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"typeclass",
			"implicit",
			"type",
			"computerscience",
			"programming"
		],
		"y": 1.4164765020523864,
		"x": -9.208044077655059,
		"extended": "",
		"description": "The Power of Type-classes with Scala implicit defs « λ Tony’s Blog λ",
		"time": "2011-07-17T21:22:15Z",
		"href": "http://dibblego.wordpress.com/2007/05/23/the-power-of-type-classes-with-scala-implicit-defs/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"typeclass",
			"pattern",
			"types",
			"programming",
			"computerscience",
			"context",
			"bound",
			"view",
			"type",
			"signature",
			"implicit"
		],
		"y": 1.3813169306111153,
		"x": -9.32870072927409,
		"extended": "",
		"description": "implicits - What are Scala context and view bounds? - Stack Overflow",
		"time": "2011-07-17T21:12:32Z",
		"href": "http://stackoverflow.com/questions/4465948/what-are-scala-context-and-view-bounds/4467012#4467012"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"types",
			"context",
			"bounds",
			"signatures",
			"views"
		],
		"y": 5.555746497941808,
		"x": 0.34540578510694075,
		"extended": "",
		"description": "What is a \"context bound\" in Scala? - Stack Overflow",
		"time": "2011-07-17T20:06:10Z",
		"href": "http://stackoverflow.com/questions/2982276/what-is-a-context-bound-in-scala/2983376#2983376"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"typeclasses",
			"generics",
			"implicit",
			"conversion",
			"view",
			"bounds"
		],
		"y": 5.540470990191374,
		"x": 0.5939502304033953,
		"extended": "",
		"description": "Ricky's technical blog: The Typeclass Pattern",
		"time": "2011-07-17T19:46:44Z",
		"href": "http://rickyclarkson.blogspot.com/2009/01/typeclass-pattern.html"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"marketing",
			"social",
			"media",
			"mathematics",
			"economics",
			"sociology"
		],
		"y": -4.29444612737476,
		"x": -4.0969847697199,
		"extended": "",
		"description": "Tim Harford — Article — Why social marketing doesn’t work",
		"time": "2011-07-17T14:24:04Z",
		"href": "http://timharford.com/2011/07/why-social-marketing-doesn%e2%80%99t-work/?"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"cheatsheet",
			"programming"
		],
		"y": 6.17367486127563,
		"x": -3.0160482411945333,
		"extended": "",
		"description": "cheat sheet for scala syntax",
		"time": "2011-07-17T13:07:10Z",
		"href": "http://brenocon.com/scalacheat/"
	},
	{
		"cluster": 4,
		"tags": [
			"cabal",
			"testing",
			"haskell",
			"quickcheck",
			"functional",
			"programming",
			"building"
		],
		"y": -5.075379544096504,
		"x": -8.258907981447496,
		"extended": "",
		"description": "Test dependencies in Cabal « «Insert Name Here»",
		"time": "2011-07-11T11:27:29Z",
		"href": "http://ivanmiljenovic.wordpress.com/2010/09/03/test-dependencies-in-cabal/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"types",
			"tutorial",
			"type",
			"system",
			"computerscience",
			"programming"
		],
		"y": 1.205009132669183,
		"x": -9.294740916633081,
		"extended": "",
		"description": "A crash course in Scala types » Scalabound",
		"time": "2011-07-08T10:58:42Z",
		"href": "http://scalabound.org/?p=323"
	},
	{
		"cluster": 16,
		"tags": [
			"semantic",
			"web",
			"semweb",
			"big",
			"data",
			"search",
			"informationretrieval"
		],
		"y": 1.6612486092663654,
		"x": 2.3907392631978803,
		"extended": "",
		"description": "Big data and the semantic web - O'Reilly Radar",
		"time": "2011-07-08T09:27:03Z",
		"href": "http://radar.oreilly.com/2011/06/big-data-and-the-semantic-web.html"
	},
	{
		"cluster": 5,
		"tags": [
			"entropy",
			"mathematics",
			"physics",
			"statistics",
			"probability",
			"energy"
		],
		"y": -4.849239383278049,
		"x": -4.549632231761929,
		"extended": "",
		"description": "Another Look at Entropy | Understanding Uncertainty",
		"time": "2011-07-02T06:37:07Z",
		"href": "http://understandinguncertainty.org/another-look-entropy?"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"monetarypolicy",
			"policy",
			"politics",
			"interest",
			"money"
		],
		"y": 9.699237340687052,
		"x": 9.160766492124193,
		"extended": "",
		"description": "An idiot’s guide to interest rates and money supply",
		"time": "2011-06-29T10:41:50Z",
		"href": "http://www.prnixon.org/2008/04/09/an-idiots-guide-to-interest-rates-and-money-supply/"
	},
	{
		"cluster": 4,
		"tags": [
			"quickcheck",
			"haskell",
			"testing",
			"functional",
			"programming"
		],
		"y": -5.066336127539521,
		"x": -8.291393303102492,
		"extended": "",
		"description": "Introduction to QuickCheck - HaskellWiki",
		"time": "2011-06-27T18:50:11Z",
		"href": "http://www.haskell.org/haskellwiki/Introduction_to_QuickCheck"
	},
	{
		"cluster": 0,
		"tags": [
			"chef",
			"deployment",
			"sysadmin",
			"ops",
			"systems"
		],
		"y": 0.030737439447221016,
		"x": 0.6219424027203126,
		"extended": "",
		"description": "Chef Solo tutorial: Managing a single server with Chef",
		"time": "2011-06-27T14:55:21Z",
		"href": "http://opinionated-programmer.com/2011/06/chef-solo-tutorial-managing-a-single-server-with-chef/"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"quickcheck",
			"dsl",
			"programming",
			"testing",
			"computerscience"
		],
		"y": 3.86304493604205,
		"x": -11.123308672911323,
		"extended": "",
		"description": "Sinful QuickChecking in Ruby",
		"time": "2011-06-27T11:17:32Z",
		"href": "http://www.metacircus.com/hacking/2009/04/10/look-ma-no-monads.html"
	},
	{
		"cluster": 2,
		"tags": [
			"databases",
			"sql",
			"ruby",
			"relational",
			"database",
			"dsl",
			"squeel"
		],
		"y": 2.6095867067494267,
		"x": -1.8184602765677393,
		"extended": "",
		"description": "ernie/squeel - GitHub",
		"time": "2011-06-25T17:57:32Z",
		"href": "https://github.com/ernie/squeel"
	},
	{
		"cluster": 2,
		"tags": [
			"mongodb",
			"nosql",
			"persistence",
			"storage"
		],
		"y": 2.957088574178255,
		"x": 0.40798837708033764,
		"extended": "",
		"description": "An Introduction to MongoDB :: myNoSQL",
		"time": "2011-06-25T11:20:08Z",
		"href": "http://nosql.mypopescu.com/post/6869895323/an-introduction-to-mongodb"
	},
	{
		"cluster": 2,
		"tags": [
			"mongodb",
			"hbase",
			"couchdb",
			"nosql",
			"comparison",
			"persistence",
			"database"
		],
		"y": 3.110861088839527,
		"x": 0.40023370225012855,
		"extended": "",
		"description": "Cassandra vs MongoDB vs CouchDB vs Redis vs Riak vs HBase comparison :: KKovacs",
		"time": "2011-06-25T11:04:27Z",
		"href": "http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis/"
	},
	{
		"cluster": 15,
		"tags": [
			"topology",
			"computability",
			"mathematics",
			"computerscience",
			"number",
			"representation",
			"cauchy",
			"sequence"
		],
		"y": -1.18731494625701,
		"x": -11.671633489659449,
		"extended": "",
		"description": "A Neighborhood of Infinity: What does topology have to do with computability?",
		"time": "2011-06-23T11:09:32Z",
		"href": "http://blog.sigfpe.com/2008/01/what-does-topology-have-to-do-with.html"
	},
	{
		"cluster": 9,
		"tags": [
			"xmonad",
			"ubuntu",
			"natty",
			"11",
			"linux",
			"haskell",
			"configuration"
		],
		"y": -6.177345256857085,
		"x": 6.110737481832834,
		"extended": "",
		"description": "Xmonad/Using xmonad in Gnome - HaskellWiki",
		"time": "2011-06-21T16:34:14Z",
		"href": "http://www.haskell.org/haskellwiki/Xmonad/Using_xmonad_in_Gnome#Ubuntu_Natty"
	},
	{
		"cluster": 15,
		"tags": [
			"category",
			"theory",
			"resources",
			"books",
			"mathematics"
		],
		"y": -7.233900115645032,
		"x": -5.131590763118301,
		"extended": "",
		"description": "Electronically Available Books and Other Sources (mainly Category Theory)",
		"time": "2011-06-21T09:38:36Z",
		"href": "http://www.cs.le.ac.uk/people/akurz/books.html"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"actors",
			"concurrency",
			"programming",
			"computerscience"
		],
		"y": 4.806903321105409,
		"x": -11.24114057170725,
		"extended": "",
		"description": "Revactor",
		"time": "2011-06-20T10:55:52Z",
		"href": "http://revactor.github.com/"
	},
	{
		"cluster": 17,
		"tags": [
			"kestrel",
			"combinator",
			"scala",
			"dsl",
			"programming",
			"design",
			"computerscience"
		],
		"y": 2.1475181177699376,
		"x": -8.64571737291494,
		"extended": "",
		"description": "Ruminations of a Programmer: Side-effects with Kestrel in Scala",
		"time": "2011-06-18T11:28:14Z",
		"href": "http://debasishg.blogspot.com/2009/09/side-effects-with-kestrel-in-scala.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scalaz",
			"scala",
			"monad",
			"functional",
			"programming",
			"modelling",
			"dsl",
			"reader",
			"dissertation",
			"computerscience"
		],
		"y": -0.5202485284101914,
		"x": -8.643947383075117,
		"extended": "",
		"description": "Ruminations of a Programmer: A case study of cleaner composition of APIs with the Reader monad",
		"time": "2011-06-16T08:45:20Z",
		"href": "http://debasishg.blogspot.com/2010/12/case-study-of-cleaner-composition-of.html"
	},
	{
		"cluster": 4,
		"tags": [
			"applicative",
			"functional",
			"haskell",
			"monad",
			"functor",
			"computerscience",
			"programming",
			"scalaz",
			"scala"
		],
		"y": -0.9817571423847642,
		"x": -8.782550584285888,
		"extended": "",
		"description": "Ruminations of a Programmer: Monads, Applicative Functors and sequencing of effects",
		"time": "2011-06-16T08:34:29Z",
		"href": "http://debasishg.blogspot.com/2010/12/monads-applicative-functors-and.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scalaz",
			"scala",
			"functional",
			"dsl",
			"domain",
			"model",
			"programming",
			"functor",
			"applicative",
			"validation",
			"computerscience",
			"dissertation"
		],
		"y": -0.765816898587424,
		"x": -8.779345306530976,
		"extended": "",
		"description": "Ruminations of a Programmer: Composable domain models using scalaz",
		"time": "2011-06-16T08:28:43Z",
		"href": "http://debasishg.blogspot.com/2010/12/composable-domain-models-using-scalaz.html"
	},
	{
		"cluster": 17,
		"tags": [
			"functor",
			"scala",
			"applicative",
			"functional",
			"programming",
			"computer",
			"science"
		],
		"y": -0.7782035419108767,
		"x": -8.707626206201041,
		"extended": "",
		"description": "Applicatives are generalized functors | Heiko's Blog",
		"time": "2011-06-16T08:03:21Z",
		"href": "http://hseeberger.wordpress.com/2011/01/31/applicatives-are-generalized-functors/"
	},
	{
		"cluster": 17,
		"tags": [
			"functional",
			"scala",
			"categorytheory",
			"mathematics",
			"functors",
			"categories",
			"computerscience",
			"programming"
		],
		"y": -0.5891724236526644,
		"x": -10.794909357783034,
		"extended": "",
		"description": "Introduction to Category Theory in Scala | Heiko's Blog",
		"time": "2011-06-16T08:03:03Z",
		"href": "http://hseeberger.wordpress.com/2010/11/25/introduction-to-category-theory-in-scala/"
	},
	{
		"cluster": 2,
		"tags": [
			"clearing",
			"finance",
			"risk",
			"dissertation",
			"systemicrisk",
			"default"
		],
		"y": -0.187255058977694,
		"x": 4.721444158377451,
		"extended": "",
		"description": "FT.com / Comment / Analysis - Financial reform: Conduits of contention",
		"time": "2011-06-16T07:26:45Z",
		"href": "http://www.ft.com/cms/s/0/a0bc4030-9790-11e0-af13-00144feab49a.html?ftcamp=rss#axzz1PFC2rxKW"
	},
	{
		"cluster": 17,
		"tags": [
			"lexisnexis",
			"bigdata",
			"analysis",
			"programming",
			"computerscience",
			"datamining",
			"hadoop"
		],
		"y": 1.065978999351457,
		"x": -6.730936213169749,
		"extended": "",
		"description": "LexisNexis Announces HPCC Systems, an Open Source Platform to Solve Big Data Problems for Enterprise Customers | HPCC Systems",
		"time": "2011-06-16T07:23:20Z",
		"href": "http://hpccsystems.com/about-us/press_center/lexisnexis-announces-hpcc-systems"
	},
	{
		"cluster": 17,
		"tags": [
			"informationretrieval",
			"computerscience",
			"nlp",
			"journalism",
			"data",
			"programming",
			"machinelearning",
			"search",
			"clustering",
			"filtering"
		],
		"y": -0.126725862096755,
		"x": -7.0025491481993045,
		"extended": "",
		"description": "Investigating thousands (or millions) of documents by clustering on Vimeo",
		"time": "2011-06-16T07:17:45Z",
		"href": "http://vimeo.com/20450035"
	},
	{
		"cluster": 17,
		"tags": [
			"akka",
			"actors",
			"scala",
			"concurrency",
			"functional",
			"programming",
			"computerscience",
			"scalaz"
		],
		"y": 3.1311551117248304,
		"x": -3.6162008112914212,
		"extended": "",
		"description": "derekjw/akka-scalaz - GitHub",
		"time": "2011-06-15T18:21:29Z",
		"href": "https://github.com/derekjw/akka-scalaz"
	},
	{
		"cluster": 2,
		"tags": [
			"ebay",
			"hadoop",
			"presentation",
			"datamining",
			"architecture",
			"mapreduce",
			"bigdata"
		],
		"y": 0.010952259431281761,
		"x": -2.127201671483651,
		"extended": "",
		"description": "SNA Projects Blog : Tech Talk: Anil Madan (eBay) — “Hadoop at eBay”",
		"time": "2011-06-15T08:48:14Z",
		"href": "http://sna-projects.com/blog/2011/06/hadoop-at-ebay/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"null",
			"semantics",
			"nothing",
			"unit",
			"nil",
			"computerscience"
		],
		"y": 1.3626714567296654,
		"x": -9.66461846793767,
		"extended": "",
		"description": "A Post About Nothing « Matt Malone’s Old-Fashioned Software Development Blog",
		"time": "2011-06-14T10:47:59Z",
		"href": "http://oldfashionedsoftware.com/2008/08/20/a-post-about-nothing/"
	},
	{
		"cluster": 17,
		"tags": [
			"search",
			"distributed",
			"db",
			"database",
			"realtime",
			"data",
			"computerscience",
			"programming"
		],
		"y": 2.1482560385137845,
		"x": -2.6897705674844214,
		"extended": "",
		"description": "Sensei",
		"time": "2011-06-14T10:43:14Z",
		"href": "http://sna-projects.com/sensei/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"sealed",
			"class",
			"patternmatch",
			"programming",
			"computerscience"
		],
		"y": 1.4586861877868673,
		"x": -9.651802766582675,
		"extended": "",
		"description": "Sealed Classes - Another tour of Scala",
		"time": "2011-06-13T17:17:28Z",
		"href": "http://www.naildrivin5.com/scalatour/wiki_pages/SealedClasses"
	},
	{
		"cluster": 2,
		"tags": [
			"databases",
			"nosql",
			"visualization",
			"database",
			"comparison"
		],
		"y": 3.179245106835188,
		"x": -0.1160331695156791,
		"extended": "",
		"description": "Visual Guide to NoSQL Systems - Nathan Hurst's Blog",
		"time": "2011-06-13T16:40:24Z",
		"href": "http://blog.nahurst.com/visual-guide-to-nosql-systems"
	},
	{
		"cluster": 2,
		"tags": [
			"mongodb",
			"nosql",
			"database",
			"couchdb",
			"comparison",
			"riak",
			"redis",
			"cassandra",
			"hbase"
		],
		"y": 3.1275944509406637,
		"x": 0.45296230458375336,
		"extended": "",
		"description": "Cassandra vs MongoDB vs CouchDB vs Redis vs Riak vs HBase comparison :: KKovacs",
		"time": "2011-06-13T16:38:18Z",
		"href": "http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis"
	},
	{
		"cluster": 2,
		"tags": [
			"database",
			"persistence",
			"schemaless",
			"nosql",
			"mongodb",
			"cassandra",
			"redis",
			"couchdb"
		],
		"y": 3.108194888076179,
		"x": 0.4231284333323083,
		"extended": "",
		"description": "database - What should I choose: MongoDB/Cassandra/Redis/CouchDB? - Stack Overflow",
		"time": "2011-06-13T09:55:04Z",
		"href": "http://stackoverflow.com/questions/3478916/what-should-i-choose-mongodb-cassandra-redis-couchdb"
	},
	{
		"cluster": 17,
		"tags": [
			"functional",
			"programming",
			"scala",
			"computerscience",
			"monads",
			"types"
		],
		"y": 0.8329008785822621,
		"x": -9.071493479075134,
		"extended": "",
		"description": "λ Tony’s blog λ » Blog Archive » What Does Monad Mean?",
		"time": "2011-06-11T19:32:15Z",
		"href": "http://blog.tmorris.net/what-does-monad-mean/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"types",
			"type",
			"level",
			"programming",
			"computerscience",
			"continuations",
			"hlists",
			"functional",
			"kinds",
			"tyeclasses"
		],
		"y": 0.8056647941258538,
		"x": -9.074481673369032,
		"extended": "",
		"description": "High Wizardry in the Land of Scala on Vimeo",
		"time": "2011-06-10T12:07:16Z",
		"href": "http://vimeo.com/13518456"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"redis",
			"search",
			"ir",
			"informationretrieval",
			"web",
			"development",
			"programming",
			"functional",
			"yesod"
		],
		"y": -4.486312347746135,
		"x": -6.8000676650263,
		"extended": "",
		"description": "Fatvat: Writing a simple keyword search engine using Haskell and Redis",
		"time": "2011-06-07T20:10:11Z",
		"href": "http://www.fatvat.co.uk/2011/06/writing-simple-keyword-search-engine.html"
	},
	{
		"cluster": 2,
		"tags": [
			"finance",
			"business",
			"trading",
			"regulation",
			"liquidity",
			"darkpools",
			"legislation"
		],
		"y": 8.67981086182241,
		"x": 5.581457219315733,
		"extended": "",
		"description": "“Dark pools”: The menace of rising opacity in financial markets | vox - Research-based policy analysis and commentary from leading economists",
		"time": "2011-06-07T19:38:17Z",
		"href": "http://www.voxeu.org/index.php?q=node/5056"
	},
	{
		"cluster": 2,
		"tags": [
			"social",
			"marketing",
			"facebook",
			"business"
		],
		"y": 1.4196579868784591,
		"x": 3.9687671544427756,
		"extended": "",
		"description": "The 7 Biggest Fan Page Marketing Mistakes",
		"time": "2011-06-06T20:19:30Z",
		"href": "http://www.allfacebook.com/7-biggest-fan-page-marketing-mistakes-2011-05"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"list",
			"scan",
			"functions",
			"cumulative",
			"functional",
			"programming",
			"function",
			"computerscience"
		],
		"y": 0.42345159745280636,
		"x": -9.150799867507791,
		"extended": "",
		"description": "Graham Hacking Scala: What's the best way to transform a list with a cumulative function?",
		"time": "2011-06-06T10:59:34Z",
		"href": "http://grahamhackingscala.blogspot.com/2011/06/whats-best-way-to-transform-list-with.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+blogspot%2Fvnby+%28Graham+Hacking+Scala%29"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"web",
			"development",
			"functional",
			"frameworks",
			"libraries"
		],
		"y": -4.526498968120525,
		"x": -6.853919719518097,
		"extended": "",
		"description": "Three Haskell web frameworks « Aidan Delaney’s weblog",
		"time": "2011-06-06T10:55:18Z",
		"href": "http://blogs.linux.ie/balor/2011/06/04/three-haskell-web-frameworks/"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"recipe",
			"porter",
			"historic",
			"victorian",
			"london"
		],
		"y": -3.7049292257573643,
		"x": 1.2927918715404274,
		"extended": "",
		"description": "recipes",
		"time": "2011-06-03T14:03:02Z",
		"href": "http://www.durdenparkbeer.org.uk/Recipes.html#Whitbreads porter"
	},
	{
		"cluster": 17,
		"tags": [
			"dsl",
			"programming",
			"computerscience",
			"softwareengineering",
			"dissertation"
		],
		"y": 2.3362592384153964,
		"x": -10.88553982680812,
		"extended": "",
		"description": "DSL for the Uninitiated - ACM Queue",
		"time": "2011-06-03T10:14:43Z",
		"href": "http://queue.acm.org/detail.cfm?id=1989750"
	},
	{
		"cluster": 4,
		"tags": [
			"algebra",
			"functional",
			"haskell",
			"programming",
			"types",
			"typetheory",
			"derivative"
		],
		"y": -6.345036210083478,
		"x": -10.281644552006291,
		"extended": "",
		"description": "The Algebra of Data, and the Calculus of Mutation » Lab49 Blog",
		"time": "2011-06-02T14:48:39Z",
		"href": "http://blog.lab49.com/archives/3011"
	},
	{
		"cluster": 15,
		"tags": [
			"python",
			"machinelearning",
			"ai",
			"library",
			"computerscience",
			"learning",
			"machine",
			"ml"
		],
		"y": -0.7914386926592044,
		"x": -5.9150227381589335,
		"extended": "",
		"description": "scikits.learn: machine learning in Python — scikits.learn v0.8 documentation",
		"time": "2011-06-02T14:40:31Z",
		"href": "http://scikit-learn.sourceforge.net/index.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"actors",
			"concurrency",
			"functional",
			"programming",
			"parallel",
			"distributed",
			"computerscience",
			"disseration"
		],
		"y": -7.829761224572809,
		"x": -9.004168388015815,
		"extended": "",
		"description": "HackageDB: simple-actors-0.0.1",
		"time": "2011-06-02T14:35:29Z",
		"href": "http://hackage.haskell.org/package/simple-actors-0.0.1"
	},
	{
		"cluster": 15,
		"tags": [
			"finance",
			"cdos",
			"banking",
			"quantitative",
			"models",
			"methods",
			"mathematics",
			"hft",
			"dissertation",
			"video"
		],
		"y": -2.0558960476074346,
		"x": 2.760652850205485,
		"extended": "",
		"description": "YouTube - Quants: The Alchemists of Wall Street (Marije Meerman, VPRO Backlight 2010)",
		"time": "2011-06-02T07:17:30Z",
		"href": "http://www.youtube.com/watch?v=ed2FWNWwE3I"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"language",
			"parsers",
			"lexers",
			"parsing",
			"languages",
			"plt",
			"cfgs",
			"contextfreegrammars",
			"computerscience",
			"programming"
		],
		"y": 3.7375677464278882,
		"x": -11.365113848419439,
		"extended": "",
		"description": "The Ruby Language Toolkit | There is Yet Further to Go",
		"time": "2011-06-02T07:04:43Z",
		"href": "http://chris.wailes.name/?page_id=51"
	},
	{
		"cluster": 2,
		"tags": [
			"ai",
			"datamining",
			"machinelearning",
			"rub",
			"computerscience",
			"ensemble",
			"collaborativefiltering",
			"cf",
			"ml"
		],
		"y": -1.0352768838227007,
		"x": -5.635024018050134,
		"extended": "ensemble tech",
		"description": "Collaborative Filtering with Ensembles - igvita.com",
		"time": "2011-06-02T06:53:14Z",
		"href": "http://www.igvita.com/2009/09/01/collaborative-filtering-with-ensembles/"
	},
	{
		"cluster": 7,
		"tags": [
			"ai",
			"ml",
			"ruby",
			"data",
			"programming",
			"machinelearning",
			"datamining",
			"clustering",
			"filtering",
			"cf",
			"development",
			"computerscience"
		],
		"y": -0.742607863835237,
		"x": -7.134597676086379,
		"extended": "",
		"description": "Intelligent Ruby and Machine Learning what, why, the trends, and the toolkit | Intelligent Ruby and Machine Learning what, why, the trends, and the toolkit Online | Download Intelligent Ruby and Machine Learning what, why, the trends, and the toolkit « P",
		"time": "2011-06-02T06:49:26Z",
		"href": "http://www.examville.com/examville/Intelligent%20Ruby%20and%20Machine%20Learning%20%20%20what,%20why,%20the%20trends,%20and%20the%20toolkit-ID7500"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"mongodb",
			"dsl",
			"rogue",
			"database"
		],
		"y": 4.291400964356621,
		"x": -0.025512013728626597,
		"extended": "",
		"description": "Rogue: A Type-Safe Scala DSL for querying MongoDB | Foursquare Engineering Blog",
		"time": "2011-06-01T11:22:47Z",
		"href": "http://engineering.foursquare.com/2011/01/21/rogue-a-type-safe-scala-dsl-for-querying-mongodb/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"googlemaps",
			"code",
			"google",
			"utility",
			"library",
			"programming",
			"web",
			"development",
			"mapping",
			"geo"
		],
		"y": 10.204230358520004,
		"x": -3.588402913999807,
		"extended": "",
		"description": "Libraries - google-maps-utility-library-v3 - List of libraries here and quick links to them - Open source project to be a central repository of utility libraries that can be used with the Google Maps API JavaScript v3. - Google Project Hosting",
		"time": "2011-05-30T17:16:58Z",
		"href": "http://code.google.com/p/google-maps-utility-library-v3/wiki/Libraries"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"parallel",
			"papers",
			"haskell",
			"functional",
			"computerscience",
			"actors",
			"concurrency"
		],
		"y": -7.745479808248923,
		"x": -9.017427964491564,
		"extended": "",
		"description": "Parallel Haskell",
		"time": "2011-05-28T17:33:56Z",
		"href": "http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/"
	},
	{
		"cluster": 17,
		"tags": [
			"actors",
			"concurrency",
			"scala",
			"akka",
			"computerscience",
			"programming",
			"development"
		],
		"y": 3.265090194093633,
		"x": -3.515843007054835,
		"extended": "",
		"description": "Introducing Akka - Simpler Scalability, Fault-Tolerance, Concurrency & Remoting through Actors",
		"time": "2011-05-28T17:33:30Z",
		"href": "http://jonasboner.com/2010/01/04/introducing-akka.html"
	},
	{
		"cluster": 5,
		"tags": [
			"kmeans",
			"clustering",
			"ruby",
			"machinelearning",
			"ml",
			"statistics",
			"computerscience",
			"datamining",
			"programming"
		],
		"y": -0.9634439050118764,
		"x": -6.954933381440723,
		"extended": "",
		"description": "Clustering in Ruby - Colin Drake - colinfdrake.com",
		"time": "2011-05-28T16:38:15Z",
		"href": "http://colinfdrake.com/blog/clustering_in_ruby/"
	},
	{
		"cluster": 17,
		"tags": [
			"database",
			"graph",
			"java",
			"opensource",
			"programming",
			"persistence",
			"computerscience"
		],
		"y": 2.9696684783191816,
		"x": -0.8571283437412963,
		"extended": "",
		"description": "neo4j open source nosql graph database »",
		"time": "2011-05-28T10:28:15Z",
		"href": "http://neo4j.org/"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"nlp",
			"learning",
			"ml",
			"machinelearning",
			"linguistics",
			"language",
			"science",
			"chomsky",
			"shannon"
		],
		"y": -0.13843438029827743,
		"x": 7.80048630225945,
		"extended": "",
		"description": "On Chomsky and the Two Cultures of Statistical Learning",
		"time": "2011-05-28T09:08:06Z",
		"href": "http://norvig.com/chomsky.html"
	},
	{
		"cluster": 7,
		"tags": [
			"scala",
			"programming",
			"development",
			"dev",
			"android",
			"mobile"
		],
		"y": 7.195922287685884,
		"x": -2.618156926701124,
		"extended": "",
		"description": "scalaforandroid - Scala for Android - Google Project Hosting",
		"time": "2011-05-28T08:47:40Z",
		"href": "http://code.google.com/p/scalaforandroid/"
	},
	{
		"cluster": 5,
		"tags": [
			"kdnuggets",
			"datamining",
			"machinelearning",
			"ai",
			"statistics",
			"computerscience",
			"programming"
		],
		"y": -1.269048823377325,
		"x": -6.557524916074245,
		"extended": "",
		"description": "Data Mining Course",
		"time": "2011-05-26T18:04:44Z",
		"href": "http://www.kdnuggets.com/data_mining_course/"
	},
	{
		"cluster": 2,
		"tags": [
			"solr",
			"java",
			"index",
			"error"
		],
		"y": -2.1498492592846015,
		"x": 3.8991352690375227,
		"extended": "",
		"description": "Mats Lindh » Blog Archive » SOLR: java.io.FileNotFoundException: no segments* file found",
		"time": "2011-05-21T09:24:47Z",
		"href": "http://e-mats.org/2010/01/solr-java-io-filenotfoundexception-no-segments-file-found/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"web",
			"mathematics",
			"literate",
			"worksheet",
			"programming",
			"functional"
		],
		"y": -4.876842319064438,
		"x": -7.610464509775341,
		"extended": "",
		"description": "Wolfgang Lambda - Interactive Haskell Worksheets",
		"time": "2011-05-20T09:01:28Z",
		"href": "http://jabberwock.xs4all.nl/exp/wolfgang/"
	},
	{
		"cluster": 17,
		"tags": [
			"typeclasses",
			"types",
			"reification",
			"gadts",
			"functional",
			"programming",
			"computerscience",
			"algebraic",
			"data"
		],
		"y": -6.666772339075707,
		"x": -11.08733302895908,
		"extended": "",
		"description": "Lambdalog - Reifying type classes with GADTs",
		"time": "2011-05-18T12:46:20Z",
		"href": "http://lambdalog.seanseefried.com/post/5532400646"
	},
	{
		"cluster": 4,
		"tags": [
			"gadts",
			"algebraic",
			"data",
			"types",
			"haskell",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -6.584945362203465,
		"x": -10.913741530639959,
		"extended": "",
		"description": "Haskell/GADT - Wikibooks, open books for an open world",
		"time": "2011-05-18T12:43:45Z",
		"href": "http://en.wikibooks.org/wiki/Haskell/GADT"
	},
	{
		"cluster": 2,
		"tags": [
			"covariance",
			"contravariance",
			"types",
			"scala"
		],
		"y": 5.522286132168237,
		"x": -0.14286914954400923,
		"extended": "",
		"description": "Coding time - Martin Konicek: Covariance and contravariance - simple explanation",
		"time": "2011-05-18T12:28:34Z",
		"href": "http://coding-time.blogspot.com/2011/05/covariance-and-contravariance-simple.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"parallel",
			"concurrency",
			"unambiguouschoice",
			"speculative",
			"computerscience",
			"functional",
			"programming",
			"unamb"
		],
		"y": -7.608943064402052,
		"x": -9.028811251890906,
		"extended": "",
		"description": "Explicit speculative parallelism for Haskell's Par monad | Blog | TomasP.Net",
		"time": "2011-05-18T12:26:22Z",
		"href": "http://tomasp.net/blog/speculative-par-monad.aspx"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"play",
			"development",
			"web",
			"library",
			"framework",
			"mvc",
			"programming",
			"jvm"
		],
		"y": 7.352672976237199,
		"x": -2.036956782158179,
		"extended": "",
		"description": "Play framework - Scala",
		"time": "2011-05-14T11:59:01Z",
		"href": "http://scala.playframework.org/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"2.9.0",
			"parallel",
			"collections",
			"types",
			"safety",
			"programming",
			"computerscience"
		],
		"y": 1.2072070004278732,
		"x": -9.403717568786988,
		"extended": "",
		"description": "Algorithmically challenged: Scala 2.9 and Parallel collections",
		"time": "2011-05-14T09:19:07Z",
		"href": "http://dcsobral.blogspot.com/2011/05/scala-29-and-parallel-collections.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"erlang",
			"distributed",
			"parallel",
			"concurrency",
			"actors",
			"messagepassing",
			"computerscience",
			"functional",
			"programming",
			"dissertation"
		],
		"y": -7.875101853190369,
		"x": -9.019251773823203,
		"extended": "",
		"description": "jepst/CloudHaskell - GitHub",
		"time": "2011-05-14T09:17:53Z",
		"href": "https://github.com/jepst/CloudHaskell"
	},
	{
		"cluster": 4,
		"tags": [
			"erlang",
			"distributed",
			"haskell",
			"concurrency",
			"actors",
			"parallel",
			"programming",
			"functional",
			"dissertation",
			"computerscience"
		],
		"y": -7.849851016672478,
		"x": -9.021066141610168,
		"extended": "",
		"description": "ErlangInHaskell – GHC",
		"time": "2011-05-14T09:16:12Z",
		"href": "http://hackage.haskell.org/trac/ghc/wiki/ErlangInHaskell"
	},
	{
		"cluster": 10,
		"tags": [
			"science",
			"policy",
			"politics",
			"social",
			"society",
			"trials",
			"evidence"
		],
		"y": 4.440598624982983,
		"x": 13.597552098430425,
		"extended": "",
		"description": "How can you tell if a policy is working? Run a trial | Ben Goldacre | Comment is free | The Guardian",
		"time": "2011-05-14T08:48:53Z",
		"href": "http://www.guardian.co.uk/commentisfree/2011/may/14/bad-science-ben-goldacre-randomised-trials?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+theguardian%2Fcommentisfree%2Frss+%28Comment+is+free%29&utm_content=Google+Reader"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"strictness",
			"performance",
			"benchmarking",
			"programming",
			"computerscience",
			"laziness"
		],
		"y": -4.860734861329851,
		"x": -10.196493828145162,
		"extended": "",
		"description": "Byte Histogram",
		"time": "2011-05-13T13:38:13Z",
		"href": "http://permalink.gmane.org/gmane.comp.lang.haskell.cafe/85976"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"cooking",
			"recipe",
			"risotto"
		],
		"y": -3.7521123308308493,
		"x": 1.143457637913673,
		"extended": "",
		"description": "Cooking with Beer: Beer and Bacon Risotto | Beer Reviews - Beer Blog",
		"time": "2011-05-13T11:48:59Z",
		"href": "http://www.beerreviews.co.uk/beer/cooking-with-beer-beer-and-bacon-risotto/"
	},
	{
		"cluster": 4,
		"tags": [
			"frp",
			"functional",
			"reactive",
			"programming",
			"haskell",
			"reactive-banana"
		],
		"y": -6.554963027544323,
		"x": -7.592926793023548,
		"extended": "",
		"description": "apfelmus - Introduction to FRP - Why Applicative Functors?",
		"time": "2011-05-07T12:28:40Z",
		"href": "http://apfelmus.nfshost.com/blog/2011/05/06-frp-why-functors.html"
	},
	{
		"cluster": 16,
		"tags": [
			"statistsics",
			"national",
			"government",
			"ons",
			"demographics",
			"census",
			"data",
			"api"
		],
		"y": -1.039598058047257,
		"x": 4.0282618790034075,
		"extended": "",
		"description": "Nomis RESTful API",
		"time": "2011-05-07T10:20:54Z",
		"href": "http://www.nomisweb.co.uk/api/v01"
	},
	{
		"cluster": 16,
		"tags": [
			"statistsics",
			"national",
			"government",
			"ons",
			"demographics",
			"census",
			"data",
			"api"
		],
		"y": -0.6443578070377087,
		"x": 3.884241101064013,
		"extended": "",
		"description": "Information Page",
		"time": "2011-05-07T10:20:39Z",
		"href": "http://www.neighbourhood.statistics.gov.uk/dissemination/Info.do;jessionid=ac1f930c30d5cf320cb7ff004fd2921296b280c2d283?m=0&s=1304762493571&enc=1&page=nde.htm&nsjs=true&nsck=true&nssvg=false&nswid=1276"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"testing",
			"shell",
			"programming",
			"scalatest",
			"tests",
			"tdd",
			"bdd",
			"dsl"
		],
		"y": 7.523255577545769,
		"x": -4.1748430538552315,
		"extended": "",
		"description": "Introducing the ScalaTest Shell: a DSL for the Scala Interpreter",
		"time": "2011-05-07T10:20:11Z",
		"href": "http://www.artima.com/weblogs/viewpost.jsp?thread=326389"
	},
	{
		"cluster": 18,
		"tags": [
			"planning",
			"software",
			"plans",
			"design",
			"development",
			"architecture",
			"engineering",
			"programming"
		],
		"y": 5.994128428134724,
		"x": -5.3189213722700455,
		"extended": "",
		"description": "Is planning essential? And are plans really inconsequential? - raganwald's posterous",
		"time": "2011-05-06T09:46:28Z",
		"href": "http://raganwald.posterous.com/is-planning-essential-and-are-plans-really-in"
	},
	{
		"cluster": 18,
		"tags": [
			"architecture",
			"design",
			"development",
			"programming",
			"software"
		],
		"y": 5.9856777433020945,
		"x": -5.434870523100892,
		"extended": "",
		"description": "Don't Let Architecture Astronauts Scare You - Joel on Software",
		"time": "2011-05-06T09:34:53Z",
		"href": "http://www.joelonsoftware.com/articles/fog0000000018.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"data",
			"newtype",
			"types",
			"strictness",
			"boxing",
			"computerscience"
		],
		"y": -6.485337685027224,
		"x": -10.759038680467583,
		"extended": "",
		"description": "types - Difference between `data` and `newtype` in Haskell - Stack Overflow",
		"time": "2011-05-06T09:24:12Z",
		"href": "http://stackoverflow.com/questions/5889696/difference-between-data-and-newtype-in-haskell"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"stout",
			"recipe",
			"oatmeal",
			"brewing"
		],
		"y": -4.377022841633025,
		"x": 0.1833956398461976,
		"extended": "",
		"description": "Beer. Birra. Bier. - A blog about beer and brewing.: Brewing an Oatmeal Stout",
		"time": "2011-05-05T10:11:06Z",
		"href": "http://www.beerbirrabier.com/2011/04/brewing-oatmeal-stout.html"
	},
	{
		"cluster": 12,
		"tags": [
			"rails",
			"url",
			"namespace",
			"models",
			"model_name",
			"restful",
			"routes",
			"web",
			"development",
			"programming"
		],
		"y": 9.637709977895158,
		"x": -6.730480592857181,
		"extended": "",
		"description": "Using ActiveModel::Name to simplify URL generation at Code Colossus",
		"time": "2011-05-03T14:42:54Z",
		"href": "http://codecolossus.com/2011/05/01/using-activemodelname-to-simplify-url-generation/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"lazy",
			"evaluation",
			"semantics",
			"computerscience",
			"languages"
		],
		"y": -5.263479983241146,
		"x": -9.909793651733107,
		"extended": "",
		"description": "Things that amuse me",
		"time": "2011-05-02T23:24:55Z",
		"href": "http://augustss.blogspot.com/2011/05/more-points-for-lazy-evaluation-in.html"
	},
	{
		"cluster": 2,
		"tags": [
			"amazon",
			"aws",
			"s3",
			"bucket",
			"copy"
		],
		"y": -1.2907172777274456,
		"x": 4.458984847123119,
		"extended": "",
		"description": "Copying files between S3 accounts | elc technologies - Blog : Ruby on Rails, iPhone, Flash, Agile, Interactive Design",
		"time": "2011-04-26T21:50:46Z",
		"href": "http://web.elctech.com/2009/10/07/copying-files-between-s3-accounts/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed:+ElcCodeFeed+ELC+Code+Feed"
	},
	{
		"cluster": 2,
		"tags": [
			"amazon",
			"aws",
			"bucket",
			"copy",
			"s3"
		],
		"y": -2.358194425677417,
		"x": 4.7731091981704,
		"extended": "",
		"description": "Austin Riba » Blog Archive » Copy Contents of one S3 Bucket to Another.",
		"time": "2011-04-26T21:50:33Z",
		"href": "http://www.austinriba.com/2011/02/copy-contents-of-one-s3-bucket-to-another/"
	},
	{
		"cluster": 4,
		"tags": [
			"monad",
			"haskell",
			"laziness",
			"strictness",
			"functional",
			"programming",
			"computerscience",
			"types",
			"semantics"
		],
		"y": -5.764565448420766,
		"x": -10.301375755166305,
		"extended": "",
		"description": "Monad, Laziness, Strictness - Haskell",
		"time": "2011-04-25T22:31:41Z",
		"href": "http://sites.google.com/site/haskell/notes/Monad-Laziness-Strictness"
	},
	{
		"cluster": 17,
		"tags": [
			"functional",
			"programming",
			"monad",
			"ruby",
			"computerscience",
			"lazy",
			"evaluation"
		],
		"y": -4.1682688338469465,
		"x": -10.082683941437494,
		"extended": "",
		"description": "functional programming - Monad equivalent in Ruby - Stack Overflow",
		"time": "2011-04-25T21:58:23Z",
		"href": "http://stackoverflow.com/questions/2709361/monad-equivalent-in-ruby"
	},
	{
		"cluster": 14,
		"tags": [
			"complexsystems",
			"knowledgemanagement",
			"ia",
			"ux",
			"intranets",
			"web",
			"design",
			"km"
		],
		"y": 2.0164546172722364,
		"x": 1.2136111128589038,
		"extended": "",
		"description": "Intranet as complex ecology final .doc - Powered by Google Docs",
		"time": "2011-04-25T16:12:45Z",
		"href": "http://docs.google.com/a/timcowlishaw.co.uk/viewer?url=http://www.cognitive-edge.com/ceresources/articles/37_Intranet_as_complex_ecology_final_.pdf"
	},
	{
		"cluster": 14,
		"tags": [
			"ia",
			"ux",
			"architecture",
			"design",
			"search",
			"navigation",
			"web",
			"information",
			"knowledge",
			"statistics",
			"metrics",
			"business"
		],
		"y": 2.114979083031942,
		"x": 1.2426055849461077,
		"extended": "",
		"description": "Adaptable Information Workshop slides",
		"time": "2011-04-25T16:06:43Z",
		"href": "http://www.slideshare.net/lrosenfeld/adaptable-ia-presentation"
	},
	{
		"cluster": 14,
		"tags": [
			"ux",
			"ia",
			"design",
			"business",
			"processes",
			"planning",
			"web",
			"intranet",
			"knowledge",
			"km",
			"management",
			"architecture",
			"information",
			"complexsystems"
		],
		"y": 2.130389732754244,
		"x": 1.2761696227654904,
		"extended": "",
		"description": "Connected companies, complex systems, and social intranets - Intranet Blog - ThoughtFarmer",
		"time": "2011-04-25T16:06:12Z",
		"href": "http://www.thoughtfarmer.com/blog/2011/04/06/connected-companies-complex-systems-and-social-intranets/"
	},
	{
		"cluster": 12,
		"tags": [
			"rails",
			"keyvaluestore",
			"persistence",
			"programming",
			"development",
			"postgres",
			"activerecord",
			"web",
			"hstore"
		],
		"y": 9.788512475655661,
		"x": -6.811790770214115,
		"extended": "",
		"description": "softa/activerecord-postgres-hstore - GitHub",
		"time": "2011-04-24T18:22:43Z",
		"href": "https://github.com/softa/activerecord-postgres-hstore"
	},
	{
		"cluster": 17,
		"tags": [
			"λcalculus",
			"lambdacalculus",
			"scheme",
			"lisp",
			"functional",
			"programming",
			"combinators",
			"peano",
			"mathematics",
			"computerscience"
		],
		"y": -4.808692018026195,
		"x": -12.40656252161875,
		"extended": "",
		"description": "The Lambda Calculus - Code Monkey Have Fun - Site Home - MSDN Blogs",
		"time": "2011-04-24T15:18:30Z",
		"href": "http://blogs.msdn.com/b/ashleyf/archive/2008/12/03/the-lambda-calculus.aspx"
	},
	{
		"cluster": 18,
		"tags": [
			"agile",
			"softwareengineering",
			"xp",
			"programming",
			"design",
			"architecture",
			"engineering",
			"development",
			"software"
		],
		"y": 6.036355327042201,
		"x": -5.299842530431794,
		"extended": "",
		"description": "Considering the limits of DRY('dont repeat yourself') / factoring - (note-20110424T0826Z) - HXA7241",
		"time": "2011-04-24T14:42:34Z",
		"href": "http://www.hxa.name/notes/note-hxa7241-20110424T0826Z.html"
	},
	{
		"cluster": 4,
		"tags": [
			"actors",
			"concurrency",
			"erlang",
			"functional",
			"haskell",
			"programming",
			"computerscience"
		],
		"y": -7.644468185292963,
		"x": -9.048263792069008,
		"extended": "",
		"description": "The Actors Model and Haskell « lstephen",
		"time": "2011-04-24T09:50:05Z",
		"href": "http://lstephen.wordpress.com/2007/09/08/the-actors-model-and-haskell/"
	},
	{
		"cluster": 12,
		"tags": [
			"api",
			"rest",
			"rails",
			"web",
			"http",
			"json",
			"xml",
			"programming",
			"development",
			"plugin"
		],
		"y": 9.80904388131973,
		"x": -6.443652816216686,
		"extended": "",
		"description": "fabrik42/acts_as_api - GitHub",
		"time": "2011-04-23T09:41:28Z",
		"href": "https://github.com/fabrik42/acts_as_api"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"logic",
			"programming",
			"list",
			"monad",
			"functional",
			"prolog"
		],
		"y": -6.199167301858508,
		"x": -8.892518719823356,
		"extended": "",
		"description": "Logic programming example - HaskellWiki",
		"time": "2011-04-23T08:54:09Z",
		"href": "http://www.haskell.org/haskellwiki/Logic_programming_example"
	},
	{
		"cluster": 4,
		"tags": [
			"book",
			"haskell",
			"logic",
			"math",
			"programming",
			"computerscience",
			"functional"
		],
		"y": -6.074014415614961,
		"x": -9.451441412142001,
		"extended": "",
		"description": "The Haskell Road to Logic, Maths and Programming",
		"time": "2011-04-23T08:53:33Z",
		"href": "http://homepages.cwi.nl/~jve/HR/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"monads",
			"logic",
			"backtracking",
			"programming",
			"prolog",
			"ai",
			"functional",
			"monad"
		],
		"y": -6.322205417848821,
		"x": -8.716817850569058,
		"extended": "",
		"description": "Monads",
		"time": "2011-04-23T08:53:27Z",
		"href": "http://okmij.org/ftp/Computation/monads.html"
	},
	{
		"cluster": 4,
		"tags": [
			"functional",
			"haskell",
			"computer",
			"programming",
			"logic",
			"ai",
			"prolog"
		],
		"y": -6.290676956794789,
		"x": -8.714735181761775,
		"extended": "",
		"description": "Publication-Abstracts by Martin Erwig",
		"time": "2011-04-23T08:53:07Z",
		"href": "http://web.engr.oregonstate.edu/~erwig/papers/abstracts.html#JFP04"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"programming",
			"ai",
			"machinelearning",
			"zlib",
			"compression",
			"clustering",
			"computerscience"
		],
		"y": 3.3568002622813604,
		"x": -10.803906037122431,
		"extended": "",
		"description": "Intuition & Data-Driven Machine Learning - igvita.com",
		"time": "2011-04-21T09:29:44Z",
		"href": "http://www.igvita.com/2011/04/20/intuition-data-driven-machine-learning/?utm_source=feedburner&utm_medium=Google+Reader&utm_campaign=Feed%3A+igvita+%28igvita.com%29&utm_content=feed"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"actors",
			"concurrency",
			"programming"
		],
		"y": 5.333096420037013,
		"x": -11.05118483776791,
		"extended": "",
		"description": "Concurrency with Actors | Carbon Five Community",
		"time": "2011-04-21T09:27:17Z",
		"href": "http://blog.carbonfive.com/2011/04/19/concurrency-with-actors/"
	},
	{
		"cluster": 2,
		"tags": [
			"ruby",
			"actors",
			"concurrency",
			"background",
			"async",
			"work",
			"queue"
		],
		"y": 5.388187014399632,
		"x": -11.301262796104234,
		"extended": "",
		"description": "Asynchronous Processing with girl_friday | Carbon Five Community",
		"time": "2011-04-21T09:18:05Z",
		"href": "http://blog.carbonfive.com/2011/04/20/asynchronous-processing-with-girl_friday/"
	},
	{
		"cluster": 17,
		"tags": [
			"semantics",
			"meaning",
			"philosophy",
			"data",
			"translation",
			"computerscience",
			"engineering",
			"programming",
			"librarianship"
		],
		"y": 1.2826322361402673,
		"x": -11.258852672115776,
		"extended": "",
		"description": "Semantic mapping is hard | The Reinvigorated Programmer",
		"time": "2011-04-19T23:19:53Z",
		"href": "http://reprog.wordpress.com/2011/04/19/semantic-mapping-is-hard/#"
	},
	{
		"cluster": 2,
		"tags": [
			"brewing",
			"business",
			"cuckoo",
			"beer"
		],
		"y": -4.423642011619491,
		"x": 0.12186033215079255,
		"extended": "",
		"description": "THE GOOD STUFF: Brewing Cuckoo (pt 2)",
		"time": "2011-04-16T10:38:03Z",
		"href": "http://goodpeopleeats.blogspot.com/2011/03/brewing-cuckoo-pt-2.html"
	},
	{
		"cluster": 2,
		"tags": [
			"brewing",
			"cuckoo",
			"business",
			"beer"
		],
		"y": -4.425140376053567,
		"x": 0.10679002775864234,
		"extended": "",
		"description": "THE GOOD STUFF: Brewing Cuckoo (Pt 1)",
		"time": "2011-04-16T10:35:51Z",
		"href": "http://goodpeopleeats.blogspot.com/2011/03/brewing-cuckoo-pt-1.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"edsl",
			"functional",
			"state",
			"monad",
			"programming",
			"computerscience",
			"dissertation"
		],
		"y": -5.4214172216188725,
		"x": -9.676909400389105,
		"extended": "",
		"description": "Haskell eDSL Tutorial - Shared expenses",
		"time": "2011-04-13T12:48:19Z",
		"href": "http://lpenz.github.com/articles/hedsl-sharedexpenses/index.html"
	},
	{
		"cluster": 7,
		"tags": [
			"metaprogramming",
			"ruby",
			"programming",
			"oop"
		],
		"y": 5.706224631466843,
		"x": -9.792030404934215,
		"extended": "",
		"description": "Practicing Ruby - Fun with Class.new",
		"time": "2011-04-11T14:34:22Z",
		"href": "http://blog.rubybestpractices.com/posts/gregory/anonymous_class_hacks.html"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"ruby",
			"web",
			"programming",
			"development",
			"sti",
			"inheritance"
		],
		"y": 9.454656281150092,
		"x": -7.510543379520287,
		"extended": "",
		"description": "Rails 3 + STI: Making Associations Work Properly « Simple10",
		"time": "2011-04-11T13:43:27Z",
		"href": "http://www.simple10.com/rails-3-sti/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"typeclass",
			"development",
			"programming",
			"pattern",
			"generics",
			"typesystem",
			"functional",
			"types"
		],
		"y": 1.803088063442361,
		"x": -8.197889171983002,
		"extended": "",
		"description": "Algorithmically challenged: Implicit tricks -- the Type Class pattern",
		"time": "2011-04-11T11:50:58Z",
		"href": "http://dcsobral.blogspot.com/2010/06/implicit-tricks-type-class-pattern.html"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"context",
			"view",
			"bounds",
			"types",
			"generics",
			"implicits",
			"type"
		],
		"y": 5.563688833941426,
		"x": 0.5002791493680778,
		"extended": "",
		"description": "scala - Context and view bounds again - Stack Overflow",
		"time": "2011-04-11T11:43:44Z",
		"href": "http://stackoverflow.com/questions/4465948/context-and-view-bounds-again/4467012#4467012"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"chained",
			"implicits",
			"types",
			"generics",
			"view",
			"constraint"
		],
		"y": 5.5623541706788036,
		"x": 0.5362258101463672,
		"extended": "",
		"description": "How can I chain implicits in Scala? - Stack Overflow",
		"time": "2011-04-11T11:36:22Z",
		"href": "http://stackoverflow.com/questions/5332801/how-can-i-chain-implicits-in-scala"
	},
	{
		"cluster": 17,
		"tags": [
			"bounds",
			"scala",
			"types",
			"generics",
			"constraints",
			"programming",
			"functional",
			"signature",
			"reference",
			"context",
			"view",
			"contravariance",
			"covariance"
		],
		"y": 5.57903879009396,
		"x": 0.2952874685148092,
		"extended": "",
		"description": "Tour of Scala Type Bounds — Gist",
		"time": "2011-04-11T11:13:34Z",
		"href": "https://gist.github.com/257758/47f06f2f3ca47702b3a86c76a5479d096cb8c7ec"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"type",
			"constraints",
			"bounds",
			"typesystem",
			"programming",
			"functional"
		],
		"y": 1.265016611062819,
		"x": -8.124799837943659,
		"extended": "",
		"description": "Identify and describe Scala's generic type constraints - Stack Overflow",
		"time": "2011-04-11T11:12:39Z",
		"href": "http://stackoverflow.com/questions/4869988/identify-and-describe-scalas-generic-type-constraints"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"nlp",
			"machinelearning",
			"library",
			"computerscience",
			"linearalgebra"
		],
		"y": -0.2885901112998861,
		"x": -6.2067328090163505,
		"extended": "",
		"description": "ScalaNLP",
		"time": "2011-04-10T23:40:50Z",
		"href": "http://www.scalanlp.org/"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"scalatra",
			"web",
			"development",
			"programming"
		],
		"y": 7.239493768368291,
		"x": -2.0945062923286195,
		"extended": "",
		"description": "Quick starting Scalatra or In which I discover Scalatra and sbt | Everything's Beta",
		"time": "2011-04-10T23:40:01Z",
		"href": "http://blog.everythings-beta.com/?p=430"
	},
	{
		"cluster": 2,
		"tags": [
			"map",
			"travel",
			"fun",
			"days",
			"out"
		],
		"y": -1.2559735127979796,
		"x": 4.7930237452530395,
		"extended": "",
		"description": "Nerdy Day Trips - tell us about yours, we'll build an archive #nerdytrips - bengoldacre - secondary blog",
		"time": "2011-04-07T19:59:16Z",
		"href": "http://bengoldacre.posterous.com/nerdy-day-trips-tell-us-about-yours-well-buil"
	},
	{
		"cluster": 18,
		"tags": [
			"web",
			"architecture",
			"programming",
			"systems",
			"performance",
			"development",
			"engineering",
			"scalability"
		],
		"y": 4.8837933998962315,
		"x": -4.797449291271125,
		"extended": "",
		"description": "The Full Stack, Part I",
		"time": "2011-04-06T23:17:54Z",
		"href": "http://www.facebook.com/notes/facebook-engineering/the-full-stack-part-i/461505383919"
	},
	{
		"cluster": 2,
		"tags": [
			"hadoop",
			"mapreduce",
			"cloud9",
			"ucl",
			"masters",
			"gi15",
			"informationretrieval",
			"invertedindex",
			"index"
		],
		"y": 4.117297592481211,
		"x": 0.4380649902228396,
		"extended": "",
		"description": "Cloud9: A MapReduce Library for Hadoop » Exercises » Inverted Indexing",
		"time": "2011-04-05T19:49:00Z",
		"href": "http://www.umiacs.umd.edu/~jimmylin/cloud9/docs/exercises/indexing.html"
	},
	{
		"cluster": 2,
		"tags": [
			"url",
			"bibtex",
			"latex",
			"citations"
		],
		"y": -0.6797916879356148,
		"x": 5.488777212896187,
		"extended": "",
		"description": "TeX Frequently Asked Questions -- question label \"citeURL\"",
		"time": "2011-04-05T18:22:21Z",
		"href": "http://www.tex.ac.uk/cgi-bin/texfaq2html?label=citeURL"
	},
	{
		"cluster": 2,
		"tags": [
			"harvard",
			"bibtex",
			"latex",
			"citation",
			"url",
			"access",
			"date"
		],
		"y": -0.5252135073824366,
		"x": 5.532807269686142,
		"extended": "",
		"description": "Adding URL accessed date field to Harvard BibTeX style",
		"time": "2011-04-05T18:09:46Z",
		"href": "http://technomadics.net/2006/11/02/adding-url-accessed-date-field-to-harvard-bibtex-style/"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"java",
			"guardian",
			"programming",
			"development",
			"web"
		],
		"y": 7.306109203796955,
		"x": -2.2222866751537556,
		"extended": "",
		"description": "InfoQ: Guardian.co.uk Switching from Java to Scala",
		"time": "2011-04-05T13:21:19Z",
		"href": "http://www.infoq.com/articles/guardian_scala"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"arrows",
			"programming",
			"functional",
			"tutorial",
			"types",
			"categorytheory",
			"kleislicategory",
			"kleisli",
			"monads",
			"computerscience",
			"mathematics"
		],
		"y": -5.759868130146754,
		"x": -11.35186456564878,
		"extended": "",
		"description": "Arrow tutorial - HaskellWiki",
		"time": "2011-04-04T11:35:18Z",
		"href": "http://www.haskell.org/haskellwiki/Arrow_tutorial"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"arrows",
			"functional",
			"programing",
			"computerscience",
			"types",
			"categorytheory"
		],
		"y": -6.134634207748782,
		"x": -10.848570861613275,
		"extended": "",
		"description": "Arrows: A General Interface to Computation",
		"time": "2011-04-04T07:52:52Z",
		"href": "http://www.haskell.org/arrows/"
	},
	{
		"cluster": 2,
		"tags": [
			"nlp",
			"language",
			"haskell",
			"book",
			"ai"
		],
		"y": -1.2574213589443082,
		"x": 3.2934180553935297,
		"extended": "",
		"description": "Natural Language Processing for the Working Programmer",
		"time": "2011-04-03T20:18:44Z",
		"href": "http://nlpwp.org/"
	},
	{
		"cluster": 4,
		"tags": [
			"state",
			"stm",
			"monad",
			"haskell",
			"functional",
			"concurrency",
			"parallel",
			"programming"
		],
		"y": -5.759740836595759,
		"x": -8.435671143669877,
		"extended": "",
		"description": "Control.Concurrent.MState",
		"time": "2011-04-03T07:22:35Z",
		"href": "http://hackage.haskell.org/packages/archive/mstate/0.2.2/doc/html/Control-Concurrent-MState.html"
	},
	{
		"cluster": 4,
		"tags": [
			"logic",
			"computation",
			"mathematics",
			"types",
			"functional",
			"programming",
			"computerscience",
			"categorytheory"
		],
		"y": -3.259978824710777,
		"x": -12.001647949412352,
		"extended": "",
		"description": "The Holy Trinity « Existential Type",
		"time": "2011-04-03T07:13:46Z",
		"href": "http://existentialtype.wordpress.com/2011/03/27/the-holy-trinity/"
	},
	{
		"cluster": 2,
		"tags": [
			"kindle",
			"rss",
			"reader",
			"google"
		],
		"y": -2.521607211935024,
		"x": 4.57487109320826,
		"extended": "",
		"description": "G:RSS-Web: A Google Reader for Kindle and Nook (eReaders) | nowsci.com",
		"time": "2011-04-02T11:34:13Z",
		"href": "http://nowsci.com/grss-web/"
	},
	{
		"cluster": 2,
		"tags": [
			"pulledpork",
			"recipe",
			"cooking",
			"food"
		],
		"y": -3.62068235823792,
		"x": 1.3250030626108331,
		"extended": "",
		"description": "Cooking with beer – Bamberg Pulled Pork | Beer Reviews - Beer Blog",
		"time": "2011-04-01T13:54:53Z",
		"href": "http://www.beerreviews.co.uk/beer/cooking-with-beer-bamberg-pulled-pork/"
	},
	{
		"cluster": 2,
		"tags": [
			"haskell",
			"pdf",
			"kindle",
			"reading",
			"utility"
		],
		"y": -3.624014778871894,
		"x": 3.6403819937089494,
		"extended": "",
		"description": "PDFSplit",
		"time": "2011-04-01T09:38:53Z",
		"href": "http://dmwit.com/pdfsplit/"
	},
	{
		"cluster": 12,
		"tags": [
			"rails",
			"spork",
			"autotest",
			"testing",
			"bdd",
			"rspec",
			"development",
			"programming",
			"tdd",
			"web"
		],
		"y": 8.928719112476056,
		"x": -5.978225582346605,
		"extended": "",
		"description": "Blazingly Fast Tests Using Spork, Rails 3, and RSpec 2 - mikbe",
		"time": "2011-03-30T16:57:59Z",
		"href": "http://mikbe.tk/2011/02/10/blazingly-fast-tests/"
	},
	{
		"cluster": 4,
		"tags": [
			"books",
			"haskell",
			"semantics",
			"programming",
			"theoryB",
			"computerscience",
			"functional",
			"reading",
			"education"
		],
		"y": -5.6093320459807625,
		"x": -9.975569633243971,
		"extended": "",
		"description": "Project CAMP » Blog Archive » Erik Meijer’s suggestions for further reading in Functional Programming",
		"time": "2011-03-25T08:24:38Z",
		"href": "http://kanak.kshetri.com/camping/?p=94"
	},
	{
		"cluster": 15,
		"tags": [
			"feynmann",
			"physics",
			"computerscience",
			"calculus",
			"pdes",
			"logic",
			"mathematics",
			"history"
		],
		"y": -2.0060136370603088,
		"x": -11.736009952878279,
		"extended": "",
		"description": "Richard Feynman and The Connection Machine - The Long Now",
		"time": "2011-03-24T23:31:14Z",
		"href": "http://longnow.org/essays/richard-feynman-connection-machine/"
	},
	{
		"cluster": 7,
		"tags": [
			"amazon",
			"elasticbeanstalk",
			"beanstalk",
			"aws",
			"jruby",
			"ruby",
			"rails",
			"deployment",
			"hosting",
			"web",
			"development",
			"programming"
		],
		"y": 9.331306521918457,
		"x": -7.556458014319104,
		"extended": "",
		"description": "Amazon Web Services Blog: Rack and the Beanstalk",
		"time": "2011-03-24T23:22:45Z",
		"href": "http://aws.typepad.com/aws/2011/02/rack-and-the-beanstalk.html"
	},
	{
		"cluster": 17,
		"tags": [
			"json",
			"scala",
			"lift",
			"parser",
			"library",
			"programming",
			"javascript",
			"web",
			"computerscience"
		],
		"y": 9.727604475603364,
		"x": -3.527512330901744,
		"extended": "",
		"description": "framework/lift-base/lift-json at master from lift/lift - GitHub",
		"time": "2011-03-24T23:22:05Z",
		"href": "https://github.com/lift/lift/tree/master/framework/lift-base/lift-json"
	},
	{
		"cluster": 7,
		"tags": [
			"programming",
			"ruby",
			"scala",
			"decoration",
			"aop",
			"openclasses",
			"computerscience",
			"development"
		],
		"y": 6.342510282658227,
		"x": -11.217828711850288,
		"extended": "",
		"description": "Ruminations of a Programmer: Why I like Scala's Lexically Scoped Open Classes",
		"time": "2011-03-24T20:14:25Z",
		"href": "http://debasishg.blogspot.com/2008/02/why-i-like-scalas-lexically-scoped-open.html"
	},
	{
		"cluster": 17,
		"tags": [
			"dsl",
			"domain",
			"specific",
			"languages",
			"development",
			"programming",
			"computerscience",
			"dissertation"
		],
		"y": 2.4345411190604693,
		"x": -11.064606478133268,
		"extended": "",
		"description": "State of Flow: Domain Specific Language Nonsense::journal",
		"time": "2011-03-23T00:20:42Z",
		"href": "http://www.stateofflow.com/journal/60/domain-specific-language-nonsense"
	},
	{
		"cluster": 4,
		"tags": [
			"Haskell",
			"applicative",
			"functor",
			"categorytheory",
			"programming",
			"functional",
			"types",
			"computerscience"
		],
		"y": -5.809389880511556,
		"x": -10.664795956172993,
		"extended": "Anytime you feel the need to define different higher order functions to accommodate for function-arguments with a different number of arguments, think about how defining a proper instance of Applicative can make your life easier.",
		"description": "Haskell/Applicative Functors - Wikibooks, open books for an open world",
		"time": "2011-03-22T22:02:22Z",
		"href": "http://en.wikibooks.org/wiki/Haskell/Applicative_Functors"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"functional",
			"dsls",
			"computerscience",
			"languages"
		],
		"y": -5.44998459695445,
		"x": -9.615046106088442,
		"extended": "",
		"description": "Haskell’s Niche: Hard Problems « Sententia cdsmithus",
		"time": "2011-03-22T21:56:15Z",
		"href": "http://cdsmith.wordpress.com/2011/03/13/haskells-niche-hard-problems/"
	},
	{
		"cluster": 7,
		"tags": [
			"java",
			"ruby",
			"jruby",
			"mirah",
			"programming",
			"jvm",
			"languages"
		],
		"y": 5.858236126136391,
		"x": -8.812310681654942,
		"extended": "",
		"description": "Breaking the Rules - Making Java Fun with Mirah - Arbia - Cogitations",
		"time": "2011-03-22T21:30:11Z",
		"href": "http://cogitations.arbia.co.uk/post/3984477935/fun-java-with-mirah"
	},
	{
		"cluster": 4,
		"tags": [
			"scala",
			"haskell",
			"functional",
			"programming",
			"configuration",
			"reader",
			"monad",
			"computerscience"
		],
		"y": -5.244721458476627,
		"x": -9.737896460758815,
		"extended": "",
		"description": "λ Tony’s blog λ » Blog Archive » Configuration Without the Bugs and Gymnastics",
		"time": "2011-03-22T21:26:18Z",
		"href": "http://blog.tmorris.net/configuration-without-the-bugs-and-gymnastics/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"forall",
			"existential",
			"types",
			"programming",
			"functional",
			"logic",
			"computerscience"
		],
		"y": -6.317636574120358,
		"x": -10.58544910421051,
		"extended": "",
		"description": "Existential type - HaskellWiki",
		"time": "2011-03-22T21:20:41Z",
		"href": "http://www.haskell.org/haskellwiki/Existential_type#Existentials_in_terms_of_.22forall.22"
	},
	{
		"cluster": 17,
		"tags": [
			"reification",
			"jvm",
			"java",
			"scala",
			"programming",
			"types",
			"computerscience",
			"reflection",
			"introspection"
		],
		"y": 1.3778949011380501,
		"x": -9.60277783669452,
		"extended": "",
		"description": "Scala Blog: Manifests: Reified Types",
		"time": "2011-03-18T12:11:58Z",
		"href": "http://www.scala-blogs.org/2008/10/manifests-reified-types.html"
	},
	{
		"cluster": 15,
		"tags": [
			"discrete",
			"mathematics",
			"haskell",
			"computerscience",
			"education"
		],
		"y": -1.252121043597851,
		"x": -11.841183660496581,
		"extended": "",
		"description": "DMC: Discrete Mathematics Using a Computer",
		"time": "2011-03-13T12:09:28Z",
		"href": "http://www.dcs.gla.ac.uk/~jtod/discrete-mathematics/"
	},
	{
		"cluster": 17,
		"tags": [
			"java",
			"option",
			"null",
			"npe",
			"maybe",
			"monad",
			"programming",
			"computerscience",
			"languages"
		],
		"y": -3.7913706287833397,
		"x": -10.333378712327054,
		"extended": "",
		"description": "Code Monkeyism: “For” hack with Option monad in Java",
		"time": "2011-03-11T15:13:56Z",
		"href": "http://codemonkeyism.com/for-hack-with-option-monad-in-java/"
	},
	{
		"cluster": 17,
		"tags": [
			"books",
			"compiler",
			"compilers",
			"design",
			"functional",
			"programming",
			"computerscience",
			"plt"
		],
		"y": -2.8757547534459675,
		"x": -10.219473707086486,
		"extended": "",
		"description": "Simon Peyton Jones: book",
		"time": "2011-03-11T11:40:59Z",
		"href": "http://research.microsoft.com/en-us/um/people/simonpj/papers/pj-lester-book/"
	},
	{
		"cluster": 17,
		"tags": [
			"functional",
			"programming",
			"languages",
			"plt",
			"implementation",
			"computerscience",
			"compiler",
			"interpreter",
			"runtime"
		],
		"y": -2.8814405566109467,
		"x": -10.27801516353483,
		"extended": "",
		"description": "The Implementation of Functional Programming Languages",
		"time": "2011-03-11T11:40:28Z",
		"href": "http://research.microsoft.com/en-us/um/people/simonpj/papers/slpj-book-1987/index.htm"
	},
	{
		"cluster": 9,
		"tags": [
			"hadoop",
			"linux",
			"admin",
			"installation",
			"java",
			"howto",
			"tutorial"
		],
		"y": -5.104221276219498,
		"x": 3.209046700238494,
		"extended": "",
		"description": "Running Hadoop On Ubuntu Linux (Single-Node Cluster) @ Michael G. Noll",
		"time": "2011-03-10T19:58:07Z",
		"href": "http://www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux-single-node-cluster/"
	},
	{
		"cluster": 7,
		"tags": [
			"controller",
			"rails",
			"web",
			"development",
			"inherited_resources",
			"ruby",
			"programming",
			"rest"
		],
		"y": 9.38711755787716,
		"x": -7.399308005362456,
		"extended": "",
		"description": "Admin controllers with Inherited Resources « Roberto Soares",
		"time": "2011-03-10T14:19:27Z",
		"href": "http://roberto.peakhut.com/2010/09/27/admin-controllers-with-inherited-resources/"
	},
	{
		"cluster": 2,
		"tags": [
			"rails",
			"ubuntu",
			"postgres",
			"test",
			"optimization",
			"database"
		],
		"y": -1.3084307701542308,
		"x": 1.8415837436616629,
		"extended": "",
		"description": "Speeding up Slow Specs and Features on Ubuntu 10 with Postgres | Geoff Evason",
		"time": "2011-03-10T14:18:46Z",
		"href": "http://geoff.evason.name/2010/12/22/speeding-up-slow-specs-and-features-on-ubuntu-10-with-postgres/"
	},
	{
		"cluster": 12,
		"tags": [
			"rails",
			"development",
			"testing",
			"programming",
			"web"
		],
		"y": 9.44536954333916,
		"x": -6.88736875269307,
		"extended": "",
		"description": "How to run a single rails unit test | Flavio Castelli",
		"time": "2011-03-04T10:33:45Z",
		"href": "http://flavio.castelli.name/rails_execute_single_test"
	},
	{
		"cluster": 17,
		"tags": [
			"trading",
			"finance",
			"quantitative",
			"quant",
			"computerscience",
			"dissertation",
			"programming",
			"economics",
			"business"
		],
		"y": -2.1353823900438087,
		"x": -13.697704640639198,
		"extended": "",
		"description": "Will Slowing Down High Frequency Trading Endanger Efficiency? - Daniel Indiviglio - Business - The Atlantic",
		"time": "2011-03-04T10:33:24Z",
		"href": "http://www.theatlantic.com/business/archive/2011/03/will-slowing-down-high-frequency-trading-endanger-efficiency/71991/"
	},
	{
		"cluster": 4,
		"tags": [
			"pancito",
			"haskell",
			"visualization",
			"graphics",
			"programming",
			"dsl",
			"computerscience",
			"design",
			"art",
			"functional"
		],
		"y": -5.830891333672059,
		"x": -7.775106506356737,
		"extended": "",
		"description": "andrew cooke: pancito: introduction",
		"time": "2011-03-02T08:45:39Z",
		"href": "http://www.acooke.org/pancito-code/intro.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"literate",
			"programming",
			"latex",
			"tex",
			"computerscience"
		],
		"y": -4.341055636596434,
		"x": -10.189082377445361,
		"extended": "",
		"description": "Haskell Code in LaTeX",
		"time": "2011-03-01T15:02:09Z",
		"href": "http://yav.purely-functional.net/haskell_latex.html"
	},
	{
		"cluster": 17,
		"tags": [
			"oo",
			"scala",
			"functional",
			"programming",
			"computerscience",
			"composability",
			"dependencyinjection",
			"di",
			"design",
			"architecture",
			"dsls"
		],
		"y": 2.8948132111709572,
		"x": -7.434154571754801,
		"extended": "",
		"description": "Ruminations of a Programmer: Pushing the envelope on OO and functional with Scala",
		"time": "2011-03-01T07:55:12Z",
		"href": "http://debasishg.blogspot.com/2011/03/pushing-envelope-on-oo-and-functional.html"
	},
	{
		"cluster": 15,
		"tags": [
			"swarming",
			"ai",
			"behaviour",
			"agentbasedmodelling",
			"computing",
			"programming",
			"mathematics",
			"computerscience",
			"dissertation"
		],
		"y": -0.16820803623616393,
		"x": -11.444763153453815,
		"extended": "",
		"description": "Collective behaviour: Follow my leader | The Economist",
		"time": "2011-02-28T23:23:09Z",
		"href": "http://www.economist.com/node/18226831?fsrc=scn%252Ffb%252Fwl%252Far%252Ffollowmyleader&ref=nf"
	},
	{
		"cluster": 7,
		"tags": [
			"workflow",
			"unix",
			"make",
			"hacks",
			"tricks",
			"programming",
			"development"
		],
		"y": 8.400199636816494,
		"x": -2.9402519768973248,
		"extended": "",
		"description": "Stupid Unix Tricks: Workflow Control with GNU Make",
		"time": "2011-02-27T13:27:49Z",
		"href": "http://teddziuba.com/2011/02/stupid-unix-tricks-workflow-control-with-gnu-make.html"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"concurrency",
			"dissertation",
			"dsls",
			"stanfordppl",
			"stanford",
			"ppl",
			"paralellism"
		],
		"y": 0.11009593468840338,
		"x": 2.1812320893191037,
		"extended": "",
		"description": "Scala at Stanford Pervasive Parallelism Laboratory | The Scala Programming Language",
		"time": "2011-02-16T13:39:54Z",
		"href": "http://www.scala-lang.org/node/3200"
	},
	{
		"cluster": 4,
		"tags": [
			"functional",
			"haskell",
			"programming",
			"typing",
			"typesystems",
			"types",
			"oop",
			"computerscience"
		],
		"y": -6.481015007468258,
		"x": -10.80993103417511,
		"extended": "",
		"description": "OOP vs type classes - HaskellWiki",
		"time": "2011-02-09T21:31:04Z",
		"href": "http://www.haskell.org/haskellwiki/OOP_vs_type_classes"
	},
	{
		"cluster": 4,
		"tags": [
			"dsls",
			"haskell",
			"programming",
			"design",
			"dissertation",
			"edsl"
		],
		"y": -2.807322287221108,
		"x": -8.029284254229408,
		"extended": "",
		"description": "Domain Specific Languages: state of the art and future directions - Powered by Google Docs",
		"time": "2011-02-09T14:32:38Z",
		"href": "http://docs.google.com/viewer?url=http://dsl4dsp.inf.elte.hu/publications/swday2009.pdf"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"scripting",
			"development",
			"dsl",
			"programming",
			"functional",
			"typed",
			"composable"
		],
		"y": -5.028725179415219,
		"x": -7.2897275645087065,
		"extended": "",
		"description": "Practical Haskell: scripting with types « Control.Monad.Writer",
		"time": "2011-02-09T13:59:35Z",
		"href": "http://donsbot.wordpress.com/2010/08/17/practical-haskell/"
	},
	{
		"cluster": 17,
		"tags": [
			"jquery",
			"deferred",
			"asynchronous",
			"event-driven",
			"programming",
			"client-side",
			"ajax",
			"monad",
			"neat"
		],
		"y": 5.81520102408938,
		"x": -3.335147746409177,
		"extended": "",
		"description": "Fun With jQuery Deferred - Intridea Blog",
		"time": "2011-02-09T13:44:09Z",
		"href": "http://intridea.com/2011/2/8/fun-with-jquery-deferred"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"programming",
			"web",
			"development",
			"software",
			"engineering"
		],
		"y": 9.911675859185493,
		"x": -3.6882247431812307,
		"extended": "",
		"description": "Maintainable front-end code in Ruby on Rails applications",
		"time": "2011-02-04T15:12:29Z",
		"href": "http://georgebrock.com/conferences/rubyconfua2010/"
	},
	{
		"cluster": 13,
		"tags": [
			"culture",
			"economics",
			"society",
			"engineering",
			"rockets",
			"space",
			"history",
			"pathdependency",
			"lockin"
		],
		"y": -5.72217878128164,
		"x": 10.611951541903201,
		"extended": "",
		"description": "Space stasis: What the strange persistence of rockets can teach us about innovation. - By Neal Stephenson - Slate Magazine",
		"time": "2011-02-03T09:43:13Z",
		"href": "http://www.slate.com/id/2283469/pagenum/all/#"
	},
	{
		"cluster": 2,
		"tags": [
			"javascript",
			"http",
			"security",
			"hack"
		],
		"y": -2.4468268563153712,
		"x": 4.561562103025332,
		"extended": "",
		"description": "Abusing HTTP Status Codes to Expose Private Information | Mike Cardwell, Online",
		"time": "2011-02-03T09:32:17Z",
		"href": "https://grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"probability",
			"mathematics",
			"causation",
			"science",
			"bayes"
		],
		"y": -4.921267436894104,
		"x": -4.497825168148127,
		"extended": "",
		"description": "Nuances of probability theory",
		"time": "2011-02-02T16:27:06Z",
		"href": "http://research.microsoft.com/en-us/um/people/minka/papers/nuances.html#"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"statistics",
			"probability",
			"mathematics",
			"science"
		],
		"y": -4.894252583661301,
		"x": -4.477425092697732,
		"extended": "",
		"description": "Yudkowsky - Bayes' Theorem",
		"time": "2011-02-02T16:26:46Z",
		"href": "http://yudkowsky.net/rational/bayes#"
	},
	{
		"cluster": 2,
		"tags": [
			"sunspot",
			"solr",
			"search",
			"java",
			"ruby",
			"rails",
			"configuration",
			"stemming",
			"ir"
		],
		"y": -1.7765872013258754,
		"x": 2.909236172529337,
		"extended": "",
		"description": "Setting up Sunspot/Solr for OR queries, stemming and lower memory usage - Tony’s Place",
		"time": "2011-02-02T15:02:19Z",
		"href": "http://www.tonycode.com/blog/archives/192"
	},
	{
		"cluster": 17,
		"tags": [
			"prolog",
			"programming",
			"logic",
			"tutorial",
			"rss",
			"reader",
			"computerscience"
		],
		"y": 2.438128897346053,
		"x": -11.57392616836204,
		"extended": "",
		"description": "prolog « Virtuous Programmer",
		"time": "2011-02-01T17:59:40Z",
		"href": "http://www.virtuousprogrammer.com/?page_id=230"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"oop",
			"functional",
			"languages",
			"imperative",
			"computerscience"
		],
		"y": -0.1396397353356404,
		"x": -9.185491068028918,
		"extended": "",
		"description": "Knowing and Doing: January 2011 Archives",
		"time": "2011-01-28T08:36:39Z",
		"href": "http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2011-01.html#e2011-01-27T16_48_24.htm"
	},
	{
		"cluster": 4,
		"tags": [
			"lub",
			"lattice",
			"partialorder",
			"scottdomain",
			"domaintheory",
			"denotationalsemantics",
			"semantics",
			"domain",
			"haskell",
			"programming",
			"computerscience",
			"insane"
		],
		"y": -4.9466396308659215,
		"x": -10.863187379249156,
		"extended": "",
		"description": "Conal Elliott » Merging partial values",
		"time": "2011-01-27T21:18:25Z",
		"href": "http://conal.net/blog/posts/merging-partial-values/"
	},
	{
		"cluster": 7,
		"tags": [
			"software",
			"development",
			"education",
			"curiosity",
			"programming",
			"ruby",
			"computerscience"
		],
		"y": 4.04534119999947,
		"x": -9.429601868132693,
		"extended": "",
		"description": "2010/09/concept.md at master from raganwald's homoiconic - GitHub",
		"time": "2011-01-26T17:35:35Z",
		"href": "https://github.com/raganwald/homoiconic/blob/master/2010/09/concept.md#readme"
	},
	{
		"cluster": 7,
		"tags": [
			"haskell",
			"libraries",
			"dependencies",
			"programming",
			"development"
		],
		"y": -4.734037877871562,
		"x": -6.597140471985349,
		"extended": "",
		"description": "A Recap About Cabal and Haskell Libraries « Sententia cdsmithus",
		"time": "2011-01-26T11:14:59Z",
		"href": "http://cdsmith.wordpress.com/2011/01/21/a-recap-about-cabal-and-haskell-libraries/"
	},
	{
		"cluster": 7,
		"tags": [
			"scala",
			"squeryl",
			"orm",
			"database",
			"programming",
			"relational",
			"development"
		],
		"y": 3.4266306272318423,
		"x": -2.1412249695696217,
		"extended": "",
		"description": "Schema Definition - Squeryl - A Scala ORM for SQL Databases",
		"time": "2011-01-26T11:06:17Z",
		"href": "http://squeryl.org/schema-definition.html"
	},
	{
		"cluster": 17,
		"tags": [
			"ai",
			"book",
			"learning",
			"computerscience",
			"machinelearning",
			"programming",
			"education"
		],
		"y": 0.23921351260536342,
		"x": -12.408727610459392,
		"extended": "",
		"description": "Introduction to Machine Learning",
		"time": "2011-01-18T15:14:22Z",
		"href": "http://ai.stanford.edu/~nilsson/mlbook.html"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"languages",
			"semantics",
			"types",
			"haskell",
			"typesystems",
			"plt",
			"static",
			"dynamic",
			"computerscience",
			"typing"
		],
		"y": -6.518621473719601,
		"x": -11.10387135464616,
		"extended": "",
		"description": "An Old Article I Wrote « Sententia cdsmithus",
		"time": "2011-01-18T15:11:53Z",
		"href": "http://cdsmith.wordpress.com/2011/01/09/an-old-article-i-wrote/"
	},
	{
		"cluster": 15,
		"tags": [
			"hsakell",
			"arrows",
			"categorytheory",
			"mathematics",
			"semantics",
			"programming",
			"computerscience"
		],
		"y": -0.45933441572602096,
		"x": -11.33884432576073,
		"extended": "",
		"description": "Thoughts Heap - On how Haskell's are just might just be function compositions with a fancier name",
		"time": "2011-01-18T15:04:38Z",
		"href": "http://blog.romanandreg.com/post/2755301358/on-how-haskells-are-just-might-just-be-function"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"development",
			"design",
			"css",
			"shadow"
		],
		"y": 10.260939904494188,
		"x": 0.5307814617706367,
		"extended": "",
		"description": "Drop shadow with CSS for all web browsers - Robert's talk",
		"time": "2011-01-17T14:10:27Z",
		"href": "http://robertnyman.com/2010/03/16/drop-shadow-with-css-for-all-web-browsers/"
	},
	{
		"cluster": 16,
		"tags": [
			"hadoop",
			"scala",
			"mapreduce",
			"programming",
			"development",
			"data",
			"analysis",
			"informationretrieval"
		],
		"y": 6.49612902665485,
		"x": -2.5281791629237973,
		"extended": "",
		"description": "Scala Blog: A Scalable Language, and a Scalable Framework",
		"time": "2011-01-13T10:09:13Z",
		"href": "http://www.scala-blogs.org/2008/09/scalable-language-and-scalable.html"
	},
	{
		"cluster": 7,
		"tags": [
			"bdd",
			"acceptance",
			"tests",
			"stories",
			"rails",
			"ruby",
			"tdd",
			"development",
			"programming",
			"testing"
		],
		"y": 8.345012360409951,
		"x": -5.323150215920888,
		"extended": "",
		"description": "citrusbyte/stories - GitHub",
		"time": "2011-01-13T00:38:23Z",
		"href": "https://github.com/citrusbyte/stories"
	},
	{
		"cluster": 2,
		"tags": [
			"rails",
			"rubber",
			"development",
			"deployment",
			"ec2",
			"cloud",
			"amazon"
		],
		"y": 0.22313679036685466,
		"x": 2.3881892730761463,
		"extended": "",
		"description": "Quick start - rubber - GitHub",
		"time": "2011-01-10T17:55:45Z",
		"href": "https://github.com/wr0ngway/rubber/wiki/Quick-Start"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"ruby",
			"ec2",
			"ruby1.9",
			"rvm",
			"deployment",
			"web",
			"development",
			"programming",
			"operations"
		],
		"y": 9.092957161822635,
		"x": -7.725179621402136,
		"extended": "",
		"description": "Deploying Rails 3 on Ruby 1.9.2",
		"time": "2011-01-10T17:04:16Z",
		"href": "http://xaop.com/blog/2010/08/04/deploying-rails-3-on-ruby-1-9-2/"
	},
	{
		"cluster": 9,
		"tags": [
			"headless",
			"linux",
			"test",
			"testing",
			"selenium",
			"x11",
			"xvfb"
		],
		"y": -5.639769673405823,
		"x": 6.6380771490504165,
		"extended": "",
		"description": "a little madness » Blog Archive » Running Selenium Headless",
		"time": "2011-01-04T13:32:40Z",
		"href": "http://www.alittlemadness.com/2008/03/05/running-selenium-headless/"
	},
	{
		"cluster": 9,
		"tags": [
			"xvfb",
			"headless",
			"x11",
			"linux",
			"centos",
			"redhat"
		],
		"y": -5.63918738967857,
		"x": 6.625092206980666,
		"extended": "",
		"description": "How to install Xvfb (X11 Server) in Linux Server",
		"time": "2011-01-04T13:31:30Z",
		"href": "http://corpocrat.com/2008/08/19/how-to-install-xvfb-x11-server-in-linux-server/"
	},
	{
		"cluster": 7,
		"tags": [
			"development",
			"java",
			"junit",
			"mock",
			"testing",
			"mocking",
			"stubbing",
			"bdd",
			"tdd",
			"programming"
		],
		"y": 8.05018545453027,
		"x": -4.635301205818622,
		"extended": "",
		"description": "jMock - An Expressive Mock Object Library for Java",
		"time": "2010-12-28T15:48:27Z",
		"href": "http://www.jmock.org/"
	},
	{
		"cluster": 7,
		"tags": [
			"java",
			"junit",
			"junitx",
			"testing",
			"unittesting",
			"test",
			"introspection",
			"bdd",
			"tdd",
			"xp",
			"programming",
			"development"
		],
		"y": 8.004262429625697,
		"x": -4.719192071645156,
		"extended": "",
		"description": "Extreme Java - JUnitX",
		"time": "2010-12-28T15:47:57Z",
		"href": "http://www.extreme-java.de/junitx/"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"unfiltered",
			"web",
			"development",
			"programming",
			"url",
			"pattern",
			"matching",
			"parameters"
		],
		"y": 7.335097176221641,
		"x": -2.1676965601674647,
		"extended": "",
		"description": "Coderspiel — Holding the Parameter",
		"time": "2010-12-25T00:51:37Z",
		"href": "http://code.technically.us/post/998251172/holding-the-parameter"
	},
	{
		"cluster": 7,
		"tags": [
			"git",
			"scala",
			"installation",
			"build",
			"utility",
			"programming",
			"development",
			"template"
		],
		"y": 7.204086110338587,
		"x": -2.564806401454493,
		"extended": "",
		"description": "n8han/giter8 - GitHub",
		"time": "2010-12-25T00:48:24Z",
		"href": "https://github.com/n8han/giter8#readme"
	},
	{
		"cluster": 10,
		"tags": [
			"work",
			"life",
			"politics",
			"society"
		],
		"y": 2.1714166116781097,
		"x": 11.483456666793309,
		"extended": "",
		"description": "Less Work, More Life — Politics — Utne Reader",
		"time": "2010-12-24T18:02:58Z",
		"href": "http://www.utne.com/Politics/Thirty-Hour-Workweek-John-de-Graaf.aspx"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"cells",
			"ruby",
			"programming",
			"development",
			"UI"
		],
		"y": 9.276061553100776,
		"x": -8.17685111179529,
		"extended": "",
		"description": "Pragmatic Rails: Thoughts on Views, Inheritance, View Inheritance and Rails 3.0.4 ¶ Nicksda",
		"time": "2010-12-23T18:08:38Z",
		"href": "http://nicksda.apotomo.de/2010/12/pragmatic-rails-thoughts-on-views-inheritance-view-inheritance-and-rails-304/"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"monad",
			"comprehensions",
			"programming"
		],
		"y": 6.110147578435589,
		"x": -3.1060562495316164,
		"extended": "",
		"description": "scala_monads.pdf - Powered by Google Docs",
		"time": "2010-12-23T12:02:19Z",
		"href": "http://docs.google.com/viewer?a=v"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"comprehensions",
			"sequence",
			"monad",
			"programming"
		],
		"y": 6.115809306171592,
		"x": -3.1165411025772634,
		"extended": "",
		"description": "A Tour of Scala: Sequence Comprehensions | The Scala Programming Language",
		"time": "2010-12-23T11:52:05Z",
		"href": "http://www.scala-lang.org/node/111"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"traits",
			"types",
			"programming",
			"tutorial"
		],
		"y": 6.0663511243364825,
		"x": -2.938690854097003,
		"extended": "",
		"description": "AlBlue’s Blog: [Scala] Introduction to Scala — traits",
		"time": "2010-12-23T10:52:43Z",
		"href": "http://alblue.bandlem.com/2007/12/scala-introduction-to-scala-traits.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"caseclasses",
			"classes",
			"patternmatching",
			"programming",
			"tutorial"
		],
		"y": 6.055934571262338,
		"x": -3.0067686284870505,
		"extended": "",
		"description": "AlBlue’s Blog: [Scala] Introduction to Scala — case classes, matching, symbols, enumerations and sealed classes",
		"time": "2010-12-23T10:49:41Z",
		"href": "http://alblue.bandlem.com/2007/12/scala-introduction-to-scala-case.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"classes",
			"objects",
			"programming",
			"tutorial"
		],
		"y": 6.063339412275626,
		"x": -3.00603517359414,
		"extended": "",
		"description": "AlBlue’s Blog: [Scala] Introduction to Scala — compiler, packages, objects and applications",
		"time": "2010-12-23T10:34:48Z",
		"href": "http://alblue.bandlem.com/2007/11/scala-introduction-to-scala-compiler.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"oop",
			"classes",
			"objects",
			"tutorial"
		],
		"y": 6.006519048029478,
		"x": -2.9923790477703776,
		"extended": "",
		"description": "AlBlue’s Blog: [Scala] Introduction to Scala — creating Scala classes",
		"time": "2010-12-23T10:31:11Z",
		"href": "http://alblue.bandlem.com/2007/10/scala-introduction-to-scala-creating.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"programming",
			"objects",
			"classes"
		],
		"y": 6.109925321636254,
		"x": -2.994956464002656,
		"extended": "",
		"description": "AlBlue’s Blog: [Scala] Introduction to Scala — dealing with objects",
		"time": "2010-12-23T10:24:39Z",
		"href": "http://alblue.bandlem.com/2007/10/scala-introduction-to-scala-dealing.html"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"functions",
			"programming",
			"tutorial"
		],
		"y": 6.1057103586536,
		"x": -3.021424594451609,
		"extended": "",
		"description": "AlBlue’s Blog: [Scala] Introduction to Scala — functions",
		"time": "2010-12-23T10:22:15Z",
		"href": "http://alblue.bandlem.com/2007/10/scala-introduction-to-scala-functions.html"
	},
	{
		"cluster": 7,
		"tags": [
			"scala",
			"programming",
			"development"
		],
		"y": 7.114664778115762,
		"x": -2.6007881468221434,
		"extended": "",
		"description": "AlBlue’s Blog: [Scala] Introduction to Scala — the interpreter",
		"time": "2010-12-23T10:20:03Z",
		"href": "http://alblue.bandlem.com/2007/10/scala-introduction-to-scala-interpreter.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"graph",
			"topologicalsort",
			"tsort",
			"sorting",
			"traversal",
			"algorithm",
			"library"
		],
		"y": 5.98463777230367,
		"x": -10.093543083914346,
		"extended": "",
		"description": "Getting to Know the Ruby Standard Library – TSort | End of Line",
		"time": "2010-12-23T09:38:18Z",
		"href": "http://endofline.wordpress.com/2010/12/22/ruby-standard-library-tsort/"
	},
	{
		"cluster": 2,
		"tags": [
			"scala",
			"vim",
			"syntax",
			"highlighting",
			"development"
		],
		"y": 3.9749041258382833,
		"x": 1.4027230990589936,
		"extended": "",
		"description": "Getting scala syntax hightlighting to work in vim « Keeping it Small and Simple",
		"time": "2010-12-22T16:33:34Z",
		"href": "http://lorenzod8n.wordpress.com/2008/01/11/getting-scala-syntax-hightlighting-to-work-in-vim/"
	},
	{
		"cluster": 7,
		"tags": [
			"haskell",
			"development",
			"programming",
			"build",
			"cabal",
			"dependencies",
			"sandbox"
		],
		"y": -4.783696058842808,
		"x": -6.537755427458994,
		"extended": "",
		"description": "Galois, Inc - Galois Blog - cabal-dev: sandboxed development builds for Haskell",
		"time": "2010-12-21T09:44:00Z",
		"href": "http://corp.galois.com/blog/2010/12/20/cabal-dev-sandboxed-development-builds-for-haskell.html"
	},
	{
		"cluster": 2,
		"tags": [
			"mail",
			"vim",
			"utility",
			"imap",
			"productivity",
			"gmail"
		],
		"y": -2.5685438865822006,
		"x": 4.572047215216789,
		"extended": "",
		"description": "Vmail",
		"time": "2010-12-21T09:18:05Z",
		"href": "http://danielchoi.com/software/vmail.html"
	},
	{
		"cluster": 15,
		"tags": [
			"categorytheory",
			"mathematics",
			"computerscience",
			"databases",
			"relationaltheory",
			"relationaldatabase"
		],
		"y": -1.1423987389375998,
		"x": -11.601545534602169,
		"extended": "",
		"description": "Galois, Inc - Galois Blog - Tech Talk: Databases are Categories 2: Refinements and Extensions.",
		"time": "2010-12-19T19:34:35Z",
		"href": "http://corp.galois.com/blog/2010/10/18/tech-talk-databases-are-categories-2-refinements-and-extensi.html"
	},
	{
		"cluster": 15,
		"tags": [
			"databases",
			"categorytheory",
			"database",
			"relational",
			"mathematics",
			"computerscience",
			"programming",
			"research",
			"dissertation",
			"schema"
		],
		"y": -0.672525283433551,
		"x": -11.354050103091934,
		"extended": "",
		"description": "Galois, Inc - Galois Blog - Tech Talk: Categories are Databases",
		"time": "2010-12-19T14:28:41Z",
		"href": "http://corp.galois.com/blog/2010/5/27/tech-talk-categories-are-databases.html"
	},
	{
		"cluster": 16,
		"tags": [
			"geodata",
			"mapping",
			"data",
			"visualisation"
		],
		"y": -2.2770983436884435,
		"x": -0.22763950219732818,
		"extended": "",
		"description": "Facebook | Visualizing Friendships",
		"time": "2010-12-14T15:50:38Z",
		"href": "http://www.facebook.com/notes/facebook-engineering/visualizing-friendships/469716398919"
	},
	{
		"cluster": 4,
		"tags": [
			"hassediagrams",
			"",
			"hasse",
			"types",
			"bottom",
			"computation",
			"computerscience",
			"definedness",
			"haskell",
			"programming",
			"functional"
		],
		"y": -6.428785564126574,
		"x": -10.643490663477372,
		"extended": "",
		"description": "Hussling Haskell types into Hasse diagrams : Inside T5",
		"time": "2010-12-06T20:12:08Z",
		"href": "http://blog.ezyang.com/2010/12/hussling-haskell-types-into-hasse-diagrams/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"types",
			"typelevelprogramming",
			"recursion",
			"Y",
			"fixedpointcombinator",
			"fix",
			"generics",
			"computerscience",
			"functional"
		],
		"y": -6.18071928677391,
		"x": -11.204170478687038,
		"extended": "",
		"description": "main is usually a function: Type-level Fix and generic folds",
		"time": "2010-12-06T09:32:06Z",
		"href": "http://mainisusuallyafunction.blogspot.com/2010/12/type-level-fix-and-generic-folds.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"ycombinator",
			"recursion",
			"fixedpointcombinator",
			"fix",
			"functional",
			"programming",
			"lambdacalculus",
			"computerscience"
		],
		"y": -5.658551303204062,
		"x": -11.614878017533368,
		"extended": "",
		"description": "You could have re-invented fix too!",
		"time": "2010-12-06T09:11:33Z",
		"href": "http://www.vex.net/~trebla/haskell/fix.xhtml"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"synechdoche",
			"tides",
			"visualization"
		],
		"y": -2.6659209947871094,
		"x": 0.3619622107173915,
		"extended": "",
		"description": "Romance has lived too long upon this river: A London Companion | booktwo.org",
		"time": "2010-12-03T18:20:53Z",
		"href": "http://booktwo.org/notebook/thamestide/"
	},
	{
		"cluster": 15,
		"tags": [
			"military",
			"politics",
			"mathematics",
			"computerscience",
			"graphtheory",
			"data",
			"datamining"
		],
		"y": 3.92922035508754,
		"x": 6.062518585857013,
		"extended": "",
		"description": "U.S. 'Connects The Dots' To Catch Roadside Bombers : NPR",
		"time": "2010-12-03T18:14:34Z",
		"href": "http://www.npr.org/2010/12/03/131755378/u-s-connects-the-dots-to-catch-roadside-bombers"
	},
	{
		"cluster": 4,
		"tags": [
			"semantics",
			"denotational",
			"denotationalsemantics",
			"bottom",
			"infomation",
			"ordering",
			"computerscience",
			"functional",
			"haskell"
		],
		"y": -5.152234126695422,
		"x": -10.827439329904523,
		"extended": "",
		"description": "How I Learned to Stop Worrying and Love the ⊥ : Inside T5",
		"time": "2010-12-01T17:00:35Z",
		"href": "http://blog.ezyang.com/2010/12/how-i-learned-to-stop-worrying-and-love-the-bottom/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+ezyang+(Inside+245s)&utm_content=Google+Reader"
	},
	{
		"cluster": 2,
		"tags": [
			"lsi",
			"latentsemanticanalysis",
			"informationretrieval",
			"ai",
			"machinelearning",
			"tfidf",
			"svd",
			"singularvaluedecomposition"
		],
		"y": -0.8504222247489616,
		"x": 3.230570506243279,
		"extended": "",
		"description": "Latent Semantic Analysis in Ruby | Joseph Wilk",
		"time": "2010-11-30T23:02:14Z",
		"href": "http://blog.josephwilk.net/ruby/latent-semantic-analysis-in-ruby.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"taxation",
			"substitution",
			"laffer",
			"footballers"
		],
		"y": 8.304542298865039,
		"x": 8.947613198106682,
		"extended": "",
		"description": "Stumbling and Mumbling: Laffer curves for footballers",
		"time": "2010-11-29T15:25:11Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2010/11/laffer-curves-for-footballers.html"
	},
	{
		"cluster": 2,
		"tags": [
			"database",
			"index",
			"optimisation",
			"bitmap",
			"binarytree]"
		],
		"y": -1.838274301267038,
		"x": 2.621161719343616,
		"extended": "",
		"description": "Index Combine Performance in SQL (Oracle, MySQL, PostgreSQL) | Use The Index, Luke!",
		"time": "2010-11-29T14:37:03Z",
		"href": "http://use-the-index-luke.com/sql/where-clause/searching-for-ranges/index-combine-performance"
	},
	{
		"cluster": 13,
		"tags": [
			"marxism",
			"socialism",
			"politics",
			"economics",
			"society"
		],
		"y": 3.813226549570045,
		"x": 11.552223466073954,
		"extended": "",
		"description": "Stumbling and Mumbling: Why I'm (still) a Marxist",
		"time": "2010-11-25T20:48:52Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2007/07/why-im-still-a-.html"
	},
	{
		"cluster": 18,
		"tags": [
			"business",
			"economics",
			"programming",
			"development",
			"software",
			"pricing"
		],
		"y": 8.613640270099276,
		"x": -0.9856358896826855,
		"extended": "",
		"description": "How to set a price. Or: cost, value, and price | The Reinvigorated Programmer",
		"time": "2010-11-24T22:09:51Z",
		"href": "http://reprog.wordpress.com/2010/11/24/how-to-set-a-price-or-cost-value-and-price/"
	},
	{
		"cluster": 18,
		"tags": [
			"programming",
			"software",
			"engineering",
			"business",
			"technicaldebt"
		],
		"y": 5.345868566902193,
		"x": -3.973450253722344,
		"extended": "",
		"description": "Bad code isn’t Technical Debt, it’s an unhedged Call Option | Steve Freeman",
		"time": "2010-11-22T09:30:08Z",
		"href": "http://www.m3p.co.uk/blog/2010/07/23/bad-code-isnt-technical-debt-its-an-unhedged-call-option/"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"styles",
			"ibu",
			"brewing",
			"ebu",
			"bitterness"
		],
		"y": -4.4484368100979905,
		"x": 0.08519076163421328,
		"extended": "",
		"description": "Beer Styles – IBU Chart Graph (Bitterness Range) | Brewer's Friend",
		"time": "2010-11-17T20:53:41Z",
		"href": "http://www.brewersfriend.com/2009/01/24/beer-styles-ibu-chart-graph-bitterness-range/"
	},
	{
		"cluster": 7,
		"tags": [
			"rspec",
			"progress",
			"formatter",
			"ruby",
			"testing",
			"development"
		],
		"y": 7.470110557608344,
		"x": -8.381567894298481,
		"extended": "",
		"description": "Fuubar: the instafailing RSpec progress bar formatter - Jeff Kreeftmeijer",
		"time": "2010-11-17T20:05:34Z",
		"href": "http://jeffkreeftmeijer.com/2010/fuubar-the-instafailing-rspec-progress-bar-formatter/"
	},
	{
		"cluster": 12,
		"tags": [
			"functional",
			"programming",
			"web",
			"api",
			"soa",
			"development"
		],
		"y": 10.165371331243607,
		"x": -4.413492946081969,
		"extended": "",
		"description": "Functional Web: Functional Programing for Web Integration and Mashups - Zengularity",
		"time": "2010-11-17T20:05:12Z",
		"href": "http://www.zengularity.com/item/1519646134/functional-web-functional-programing-for-web"
	},
	{
		"cluster": 2,
		"tags": [
			"vim",
			"syntax",
			"highlighting",
			"todo"
		],
		"y": 3.8982200717551283,
		"x": 1.473179210272245,
		"extended": "",
		"description": "Vim documentation: filetype",
		"time": "2010-11-09T09:15:03Z",
		"href": "http://vimdoc.sourceforge.net/htmldoc/filetype.html"
	},
	{
		"cluster": 4,
		"tags": [
			"typelevelprogramming",
			"types",
			"haskell",
			"programming",
			"typesystems",
			"computerscience",
			"functional"
		],
		"y": -6.360497912054639,
		"x": -10.73916641661273,
		"extended": "",
		"description": "Typed type-level programming in Haskell, part I: functional dependencies « blog :: Brent -> [String]",
		"time": "2010-11-08T22:34:30Z",
		"href": "http://byorgey.wordpress.com/2010/06/29/typed-type-level-programming-in-haskell-part-i-functional-dependencies/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskelldb",
			"haskell",
			"functional",
			"programming",
			"computerscience",
			"database",
			"dsl",
			"dissertation"
		],
		"y": -7.257525551464638,
		"x": -9.882587611255797,
		"extended": "",
		"description": "HaskellDB Basics | pseudofish",
		"time": "2010-11-08T22:25:12Z",
		"href": "http://pseudofish.com/blog/2008/05/11/haskelldb-basics/"
	},
	{
		"cluster": 7,
		"tags": [
			"kdtree",
			"tree",
			"datastructure",
			"ruby",
			"geodata",
			"index",
			"spatial",
			"geo",
			"programming"
		],
		"y": 5.739554184358138,
		"x": -10.067145230443067,
		"extended": "",
		"description": "gurge.com » Blog Archive » Ruby Nearest Neighbor (fast kdtree gem)",
		"time": "2010-11-07T11:36:00Z",
		"href": "http://gurge.com/blog/2009/10/22/ruby-nearest-neighbor-fast-kdtree-gem/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"relational",
			"algebra",
			"dissertation",
			"database",
			"programming",
			"computerscience",
			"functional"
		],
		"y": -7.264729194872978,
		"x": -9.962338300473718,
		"extended": "",
		"description": "A Relational Algebra Simulator in Haskell - brianbec's WebLog",
		"time": "2010-11-05T13:26:23Z",
		"href": "http://weblogs.asp.net/brianbec/pages/246392.aspx"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"relational",
			"database",
			"programming",
			"types",
			"computerscience",
			"dissertation",
			"functional"
		],
		"y": -7.208165637834287,
		"x": -10.043313000963641,
		"extended": "",
		"description": "Haskell as a relational database language",
		"time": "2010-11-05T13:22:10Z",
		"href": "http://www.mail-archive.com/haskell@haskell.org/msg03273.html"
	},
	{
		"cluster": 17,
		"tags": [
			"mercury",
			"logic",
			"programming",
			"computerscience",
			"languages",
			"dissertation"
		],
		"y": 2.1405087782258767,
		"x": -11.426801434364222,
		"extended": "",
		"description": "The Mercury Project: Motivation and Overview",
		"time": "2010-11-05T13:21:46Z",
		"href": "http://www.mercury.cs.mu.oz.au/information/motivation.html"
	},
	{
		"cluster": 7,
		"tags": [
			"java",
			"mvc",
			"architecture",
			"gui",
			"application",
			"programming",
			"development"
		],
		"y": 6.770537990922545,
		"x": -5.530857359591595,
		"extended": "",
		"description": "Java SE Application Design With MVC",
		"time": "2010-10-29T11:38:37Z",
		"href": "http://www.oracle.com/technetwork/articles/javase/index-142890.html"
	},
	{
		"cluster": 7,
		"tags": [
			"java",
			"mvc",
			"architecture",
			"gui",
			"application",
			"programming",
			"development"
		],
		"y": 6.821231130328583,
		"x": -5.533915074257432,
		"extended": "",
		"description": "Java: Model-View-Controller (MVC) Structure",
		"time": "2010-10-29T11:33:50Z",
		"href": "http://www.ensta.fr/~diam/java/online/notes-java/GUI/structure/40mvc.html"
	},
	{
		"cluster": 15,
		"tags": [
			"proof",
			"programming",
			"computerscience",
			"formalmethods",
			"formal",
			"methods",
			"design",
			"mathematics"
		],
		"y": -0.2157005359549284,
		"x": -11.216660792547303,
		"extended": "A really interesting article from Edward Yang on the purpose of formal proof in real world software, that's kinda related to one of my dissertation ideas. In a nutshell, Curry-Howard doesn't guarantee the correctness of a program, as it provides a proof that the program does what it does, not that it does what it should do, and the sort of proofs we should be cultivating are tools for designing systems, and communicating their purpose. This ties in nicely with my idea of a semi-formal specification DSL that could be used in a similar way to a behaviour specification or unit test in BDD/TDD.\n",
		"description": "Purpose of proof: semi-formal methods : Inside T5",
		"time": "2010-10-26T10:51:51Z",
		"href": "http://blog.ezyang.com/2010/10/purpose-of-proof-sem-formal-methods/"
	},
	{
		"cluster": 2,
		"tags": [
			"vim",
			"split",
			"unix",
			"tips"
		],
		"y": -2.5724740082028412,
		"x": 3.4640182485290683,
		"extended": "",
		"description": "Re: How to switch between horizontal split and vertical split?",
		"time": "2010-10-23T21:34:31Z",
		"href": "http://www.mail-archive.com/vim@vim.org/msg11206.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"compiler",
			"computerscience",
			"programming",
			"interpreter"
		],
		"y": -3.242758100358462,
		"x": -10.241234180798598,
		"extended": "",
		"description": "Let's build a compiler (in Haskell): Part 1 - Introduction at AlephNullPlex",
		"time": "2010-10-22T08:22:25Z",
		"href": "http://alephnullplex.appspot.com/blog/view/2010/01/12/lbach-1-introduction"
	},
	{
		"cluster": 18,
		"tags": [
			"programming",
			"development",
			"unix",
			"linux",
			"design",
			"architecture",
			"systems"
		],
		"y": 5.928029630800132,
		"x": -5.4802492926031094,
		"extended": "",
		"description": "Taco Bell Programming",
		"time": "2010-10-22T08:05:54Z",
		"href": "http://teddziuba.com/2010/10/taco-bell-programming.html"
	},
	{
		"cluster": 13,
		"tags": [
			"cuts",
			"labour",
			"spendingreview",
			"politics",
			"economics"
		],
		"y": 9.499352004444187,
		"x": 9.93620061535631,
		"extended": "",
		"description": "New Statesman - Labour let us down yesterday",
		"time": "2010-10-21T14:16:23Z",
		"href": "http://www.newstatesman.com/blogs/laurie-penny/2010/10/labour-party-answers-today"
	},
	{
		"cluster": 2,
		"tags": [
			"zsh",
			"prompt",
			"unix",
			"hacks",
			"customisation",
			"ohmyzsh"
		],
		"y": -2.594050150751839,
		"x": 4.16997610438716,
		"extended": "",
		"description": "My Extravagant Zsh Prompt / Steve Losh",
		"time": "2010-10-21T12:17:39Z",
		"href": "http://stevelosh.com/blog/2010/02/my-extravagant-zsh-prompt/"
	},
	{
		"cluster": 15,
		"tags": [
			"education",
			"mathematics",
			"computerscience",
			"programming",
			"research",
			"course"
		],
		"y": -0.33315903435455674,
		"x": -12.004877760387771,
		"extended": "",
		"description": "Midlands Graduate School in the Foundations of Computing Science",
		"time": "2010-10-21T10:33:11Z",
		"href": "http://www.cs.nott.ac.uk/MGS/"
	},
	{
		"cluster": 13,
		"tags": [
			"budget",
			"spendingreview",
			"politics",
			"society",
			"economics",
			"welfare",
			"benefits"
		],
		"y": 9.962169120043571,
		"x": 10.338421859670703,
		"extended": "",
		"description": "Osborne's fairness claims fall flat. Again | Left Foot Forward",
		"time": "2010-10-20T17:25:08Z",
		"href": "http://www.leftfootforward.org/2010/10/the-regressive-unfair-comprehensive-spending-review/"
	},
	{
		"cluster": 13,
		"tags": [
			"society",
			"politics",
			"spendingreview",
			"budget",
			"cuts",
			"economics",
			"welfare"
		],
		"y": 9.948521323651606,
		"x": 10.291294654103996,
		"extended": "",
		"description": "The truth about George Osborne's social security reforms | Tom Clark | Comment is free | guardian.co.uk",
		"time": "2010-10-20T17:21:35Z",
		"href": "http://www.guardian.co.uk/politics/2010/oct/20/truth-george-osborne-social-security"
	},
	{
		"cluster": 10,
		"tags": [
			"education",
			"society",
			"politics",
			"socialmedia",
			"technology"
		],
		"y": 3.0487601171414256,
		"x": 12.860136809218277,
		"extended": "",
		"description": "Tom Morris - Keep your social media out of education, thanks",
		"time": "2010-10-20T16:52:31Z",
		"href": "http://blog.tommorris.org/post/1344913960/keep-your-social-media-out-of-education-thanks"
	},
	{
		"cluster": 12,
		"tags": [
			"mvc",
			"web",
			"application",
			"architecture",
			"programming",
			"development",
			"design"
		],
		"y": 6.709179964549437,
		"x": -5.536750366427319,
		"extended": "",
		"description": "raganwald's Roweis at master - GitHub",
		"time": "2010-10-20T16:51:12Z",
		"href": "http://github.com/raganwald/roweis#readme"
	},
	{
		"cluster": 10,
		"tags": [
			"dagenham",
			"ford",
			"strike",
			"politics",
			"feminism"
		],
		"y": 1.9821130883954865,
		"x": 8.47162833168683,
		"extended": "",
		"description": "The real story of Made in Dagenham | Workers' Liberty",
		"time": "2010-10-20T16:42:00Z",
		"href": "http://www.workersliberty.org/story/2008/07/14/we-brought-ford-empire-its-knees"
	},
	{
		"cluster": 13,
		"tags": [
			"environment",
			"politics",
			"spendingreview",
			"economics"
		],
		"y": 9.105881830691173,
		"x": 9.330117423005447,
		"extended": "",
		"description": "Huge cuts to climate and environment departments hit Tories' green claims | Left Foot Forward",
		"time": "2010-10-20T16:12:13Z",
		"href": "http://www.leftfootforward.org/2010/10/spending-review-huge-cuts-to-climate-and-energy-departments-hit-tory-green-credentials/"
	},
	{
		"cluster": 13,
		"tags": [
			"deficit",
			"economics",
			"politics",
			"cuts",
			"finance",
			"spendingreview"
		],
		"y": 9.669395903511635,
		"x": 9.599366317469036,
		"extended": "",
		"description": "Opinion: we shouldn’t blame the banks",
		"time": "2010-10-20T16:07:19Z",
		"href": "http://www.libdemvoice.org/opinion-we-shouldnt-blame-the-banks-21659.html"
	},
	{
		"cluster": 17,
		"tags": [
			"mips",
			"assembler",
			"instruction",
			"reference",
			"computerscience",
			"programming",
			"assembly"
		],
		"y": 1.2972581120361943,
		"x": -12.534305468778616,
		"extended": "LUI\n",
		"description": "MIPS Instruction Reference",
		"time": "2010-10-20T15:01:00Z",
		"href": "http://www.mrc.uidaho.edu/mrc/people/jff/digital/MIPSir.html"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"cuts",
			"spendingreview"
		],
		"y": 9.451373836941478,
		"x": 9.727369077877922,
		"extended": "",
		"description": "Countering the cuts myths - Red Pepper",
		"time": "2010-10-20T14:58:56Z",
		"href": "http://www.redpepper.org.uk/Countering-the-cuts-myths"
	},
	{
		"cluster": 12,
		"tags": [
			"testing",
			"cucumber",
			"acceptance",
			"internetexplorer",
			"windows",
			"browser",
			"web",
			"development"
		],
		"y": 11.704751796563407,
		"x": -3.4370280043400676,
		"extended": "",
		"description": "John Griffin: Run Capybara & Cucumber Features In Internet Explorer On Remote Windows",
		"time": "2010-10-18T16:12:38Z",
		"href": "http://www.johng.co.uk/2010/10/13/run_capybara_and_cucumber_features_in_internet_explorer_on_remote_windows/"
	},
	{
		"cluster": 15,
		"tags": [
			"categorytheory",
			"logic",
			"mathematics",
			"learning",
			"education",
			"computerscience",
			"types",
			"typetheory"
		],
		"y": -2.4537443290062266,
		"x": -12.121156086957123,
		"extended": "",
		"description": "Categorical Logic",
		"time": "2010-10-18T14:38:35Z",
		"href": "http://www.andrew.cmu.edu/user/awodey/catlog/"
	},
	{
		"cluster": 7,
		"tags": [
			"business",
			"management",
			"contract",
			"pricing",
			"freelance",
			"work",
			"development",
			"programming"
		],
		"y": 8.860586931391383,
		"x": -1.2481545888204855,
		"extended": "",
		"description": "Target Cost Contracts",
		"time": "2010-10-17T16:09:53Z",
		"href": "http://www.agilekiwi.com/estimationandpricing/target-cost-contracts/"
	},
	{
		"cluster": 7,
		"tags": [
			"buesinss",
			"law",
			"contracts",
			"legal",
			"programming",
			"development",
			"agreements"
		],
		"y": 8.67565284862638,
		"x": -1.9354101991971997,
		"extended": "",
		"description": "InfoQ: Contracts for Agile Software Development",
		"time": "2010-10-17T16:06:18Z",
		"href": "http://www.infoq.com/news/2009/05/Agile-Contracts"
	},
	{
		"cluster": 7,
		"tags": [
			"business",
			"contract",
			"development",
			"programming",
			"law",
			"legal",
			"agreement"
		],
		"y": 8.80555984426996,
		"x": -1.6414402925061684,
		"extended": "",
		"description": "Scottmanning.com's Sample Contract",
		"time": "2010-10-17T16:06:01Z",
		"href": "http://www.digitalsurvivors.com/services/contract/"
	},
	{
		"cluster": 8,
		"tags": [
			"social",
			"software",
			"media",
			"web",
			"technology"
		],
		"y": 4.389952297844587,
		"x": 3.1360361640004863,
		"extended": "\"..when we talked about social software was that we made software that added useful functionality by tapping into social effects. But now the social part has become the point.\"\n",
		"description": "Tom Morris - Designing for Solitude",
		"time": "2010-10-11T16:41:47Z",
		"href": "http://blog.tommorris.org/post/1252159382/designing-for-solitude-by-ben-fullerton-at"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"pubs",
			"london",
			"map",
			"ale"
		],
		"y": -3.6714731510785774,
		"x": 2.083101654881549,
		"extended": "",
		"description": "200 Ale Pubs in London - Google Maps",
		"time": "2010-10-10T12:59:02Z",
		"href": "http://maps.google.co.uk/maps/ms?hl=en&ie=UTF8&msa=0&msid=105739817074265702028.00044648764348ae92bf3&ll=51.517609,-0.120249&spn=0.018961,0.038581&z=15"
	},
	{
		"cluster": 7,
		"tags": [
			"cucumber",
			"testing",
			"ruby",
			"programming",
			"development",
			"business",
			"web"
		],
		"y": 8.764308791328926,
		"x": -7.663435200970563,
		"extended": "Like  Reply\n",
		"description": "Imperative vs Declarative Scenarios in User Stories • Ben Mabey",
		"time": "2010-10-10T11:48:50Z",
		"href": "http://benmabey.com/2008/05/19/imperative-vs-declarative-scenarios-in-user-stories.html"
	},
	{
		"cluster": 7,
		"tags": [
			"transactions",
			"rspec",
			"ruby",
			"web",
			"development",
			"rails",
			"datamapper",
			"beforeAll",
			"before"
		],
		"y": 9.498887251769375,
		"x": -7.506995291274689,
		"extended": "",
		"description": "Transactional before all with RSpec and DataMapper - Xavier Shay's Blog",
		"time": "2010-10-09T11:53:40Z",
		"href": "http://rhnh.net/2010/10/06/transactional-before-all-with-rspec-and-datamapper"
	},
	{
		"cluster": 17,
		"tags": [
			"logic",
			"programming",
			"ruby",
			"prolog",
			"computerscience",
			"formalmethods",
			"dsl"
		],
		"y": 3.537585861065831,
		"x": -11.266886942008389,
		"extended": "",
		"description": "the { buckblogs :here }: Prolog in Ruby",
		"time": "2010-10-07T11:32:37Z",
		"href": "http://weblog.jamisbuck.org/2006/10/28/prolog-in-ruby"
	},
	{
		"cluster": 15,
		"tags": [
			"abstractalgebra",
			"abstraction",
			"programming",
			"correctness",
			"formalmethods",
			"formal",
			"methods",
			"computerscience",
			"algebra",
			"mathematics",
			"hoarelogic",
			"hoare"
		],
		"y": -0.24178874152811533,
		"x": -11.071358796687143,
		"extended": "",
		"description": "Abstraction without a concrete concept : Inside 245s",
		"time": "2010-10-07T11:14:12Z",
		"href": "http://blog.ezyang.com/2010/10/beyond-generalizatio/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+ezyang+(Inside+245s)"
	},
	{
		"cluster": 7,
		"tags": [
			"eventmachine",
			"eventdriven",
			"programming",
			"continuationpassing",
			"continuations",
			"cps",
			"development",
			"ruby"
		],
		"y": 7.451013154372287,
		"x": -8.74533837312966,
		"extended": "",
		"description": "An introduction to eventmachine, and how to avoid callback spaghetti",
		"time": "2010-10-07T09:42:30Z",
		"href": "http://rubylearning.com/blog/2010/10/01/an-introduction-to-eventmachine-and-how-to-avoid-callback-spaghetti/"
	},
	{
		"cluster": 7,
		"tags": [
			"programming",
			"requirements",
			"development",
			"planning",
			"business"
		],
		"y": 8.80643857904307,
		"x": -1.5297353905341227,
		"extended": "",
		"description": "How To Tell A Software Developer What You Want | ITworld",
		"time": "2010-10-06T17:17:12Z",
		"href": "http://www.itworld.com/development/122237/how-to-tell-a-software-developer-what-you-want?page=0%2C0"
	},
	{
		"cluster": 17,
		"tags": [
			"java",
			"memory",
			"management",
			"memorymanagement",
			"programming",
			"computerscience",
			"allocation",
			"garbagecollection",
			"optimisation"
		],
		"y": -13.347146932293644,
		"x": 4.179602889693263,
		"extended": "",
		"description": "Better Software Magazine: In this Issue Featured Articles.",
		"time": "2010-10-06T09:03:29Z",
		"href": "http://www.stickyminds.com/BetterSoftware/magazine.asp?fn=cifea&id=99"
	},
	{
		"cluster": 9,
		"tags": [
			"gnome",
			"gmail",
			"google",
			"app",
			"ubuntu",
			"application",
			"debian",
			"email",
			"gui",
			"software",
			"utility",
			"mail",
			"linux",
			"tool"
		],
		"y": -5.51300332917965,
		"x": 5.397045746665464,
		"extended": "",
		"description": "Gnome Gmail",
		"time": "2010-10-05T13:15:59Z",
		"href": "http://gnome-gmail.sourceforge.net/"
	},
	{
		"cluster": 9,
		"tags": [
			"gmail",
			"gnome",
			"linux",
			"utilities"
		],
		"y": -4.975125510219811,
		"x": 5.258660608720339,
		"extended": "",
		"description": "Gnome Gmail | Download Gnome Gmail software for free at SourceForge.net",
		"time": "2010-10-05T12:58:25Z",
		"href": "http://sourceforge.net/projects/gnome-gmail/"
	},
	{
		"cluster": 9,
		"tags": [
			"vpn",
			"cisco",
			"linux",
			"howto",
			"patch",
			"install"
		],
		"y": -5.431418476497073,
		"x": 4.463948878321895,
		"extended": "",
		"description": "How to install Cisco VPN client on Ubuntu Jaunty Jackalope and Karmic Koala 64 bit | L.A.M.N.K",
		"time": "2010-10-03T21:00:45Z",
		"href": "http://www.lamnk.com/blog/vpn/how-to-install-cisco-vpn-client-on-ubuntu-jaunty-jackalope-and-karmic-koala-64-bit/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"computerscience",
			"learning",
			"programming",
			"logic",
			"propositionallogic",
			"predicatelogic",
			"propositional",
			"predicate"
		],
		"y": -0.2634404919359222,
		"x": -11.948100326580413,
		"extended": "",
		"description": "Introduction to Logic",
		"time": "2010-10-03T20:11:46Z",
		"href": "http://www.cs.odu.edu/~toida/nerzic/level-a/logic/intr_to_logic.html"
	},
	{
		"cluster": 9,
		"tags": [
			"vpn",
			"cisco",
			"cpnc",
			"linux",
			"ubuntu",
			"client",
			"networking",
			"howto",
			"tutorial",
			"install",
			"remote",
			"vpnc"
		],
		"y": -5.578141417008989,
		"x": 4.603415734990162,
		"extended": "",
		"description": "ubuntu linux VPN connection without cisco vpn client",
		"time": "2010-09-30T14:22:52Z",
		"href": "http://www.spiration.co.uk/post/1293/ubuntu%20linux%20VPN%20connection%20without%20cisco%20vpn%20client"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"activerecord",
			"graph",
			"plugin",
			"poset",
			"dag",
			"programming",
			"development"
		],
		"y": 9.796339421121306,
		"x": -6.315558266122493,
		"extended": "",
		"description": "yipdw's dagnabit at master - GitHub",
		"time": "2010-09-24T16:12:27Z",
		"href": "http://github.com/yipdw/dagnabit"
	},
	{
		"cluster": 17,
		"tags": [
			"sentimentanalysis",
			"informationretrieval",
			"ai",
			"computerscience",
			"programming",
			"internet",
			"business"
		],
		"y": 0.5452144625463041,
		"x": -11.575212604990737,
		"extended": "",
		"description": "Sentiment Analysis Takes the Pulse of the Internet - NYTimes.com",
		"time": "2010-09-24T13:04:06Z",
		"href": "http://www.nytimes.com/2009/08/24/technology/internet/24emotion.html?pagewanted=1&_r=3"
	},
	{
		"cluster": 17,
		"tags": [
			"machinelearning",
			"classification",
			"programming",
			"software",
			"research",
			"svm",
			"library",
			"supportvectormachines",
			"informationretrieval",
			"computerscience"
		],
		"y": -0.12809126655661274,
		"x": -6.827561626257484,
		"extended": "",
		"description": "tomz's libsvm-ruby-swig at master - GitHub",
		"time": "2010-09-24T12:59:18Z",
		"href": "http://github.com/tomz/libsvm-ruby-swig/"
	},
	{
		"cluster": 15,
		"tags": [
			"programming",
			"computerscience",
			"mathematics",
			"philosophy",
			"semantics",
			"denotationalsemantics",
			"analogy",
			"abstraction"
		],
		"y": -0.13005756980013422,
		"x": -11.132135790153018,
		"extended": "",
		"description": "Programs are made of ideas « Luke Palmer",
		"time": "2010-09-24T12:32:05Z",
		"href": "http://lukepalmer.wordpress.com/2010/09/24/programs-are-made-of-ideas/"
	},
	{
		"cluster": 7,
		"tags": [
			"security",
			"ruby",
			"rails",
			"http",
			"web",
			"development",
			"programming",
			"diaspora"
		],
		"y": 9.379233311068699,
		"x": -7.470755362718147,
		"extended": "",
		"description": "Security Lessons Learned From The Diaspora Launch: MicroISV on a Shoestring",
		"time": "2010-09-23T14:15:53Z",
		"href": "http://www.kalzumeus.com/2010/09/22/security-lessons-learned-from-the-diaspora-launch/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"hash",
			"semantics",
			"programming"
		],
		"y": 5.709775779838909,
		"x": -10.081714366818382,
		"extended": "",
		"description": "An interesting Ruby hash semantics gotcha « Playlouder MSP",
		"time": "2010-09-22T10:58:51Z",
		"href": "http://blog.playlouder.com/2008/05/07/an-interesting-ruby-hash-semantics-gotcha/"
	},
	{
		"cluster": 17,
		"tags": [
			"ycombinator",
			"ruby",
			"programming",
			"quine",
			"computerscience"
		],
		"y": 3.763929475447661,
		"x": -11.475055173335186,
		"extended": "",
		"description": "An Interview Question That Prints Out Its Own Source Code (In Ruby)",
		"time": "2010-09-21T15:32:20Z",
		"href": "http://www.skorks.com/2010/03/an-interview-question-that-prints-out-its-own-source-code-in-ruby/"
	},
	{
		"cluster": 17,
		"tags": [
			"quine",
			"ruby",
			"programming",
			"computerscience",
			"ycombinator"
		],
		"y": 3.7573517289274716,
		"x": -11.487151437408317,
		"extended": "",
		"description": "The first quines in Ruby",
		"time": "2010-09-21T15:31:49Z",
		"href": "http://rubyhacker.com/ruby-quine.html"
	},
	{
		"cluster": 17,
		"tags": [
			"quine",
			"tutorial",
			"ycombinator",
			"programming",
			"computerscience"
		],
		"y": 3.356175942198172,
		"x": -11.651860996546748,
		"extended": "",
		"description": "How to write a self reproducing code (prints the source on exec)? - Stack Overflow",
		"time": "2010-09-21T15:31:32Z",
		"href": "http://stackoverflow.com/questions/105725/how-to-write-a-self-reproducing-code-prints-the-source-on-exec"
	},
	{
		"cluster": 16,
		"tags": [
			"gravity",
			"hop",
			"ratio",
			"chart",
			"beer",
			"brewing",
			"hops",
			"data",
			"recipe"
		],
		"y": -4.38182264198341,
		"x": 0.09912376937280382,
		"extended": "",
		"description": "understanding the relationship between hops and malt",
		"time": "2010-09-20T18:59:05Z",
		"href": "http://www.brewsupplies.com/hops-gravity.htm"
	},
	{
		"cluster": 16,
		"tags": [
			"beer",
			"brewing",
			"balance",
			"data",
			"measurements",
			"ratio",
			"bitterness",
			"sweetness"
		],
		"y": -4.414555716763171,
		"x": 0.05273253828470976,
		"extended": "",
		"description": "On Beer Balance",
		"time": "2010-09-20T18:53:28Z",
		"href": "http://beercolor.netfirms.com/balance.html"
	},
	{
		"cluster": 2,
		"tags": [
			"hops",
			"brewing",
			"beer",
			"fwh",
			"technique"
		],
		"y": -4.4449983702430895,
		"x": 0.09077077983965334,
		"extended": "",
		"description": "First Wort Hopping Summary",
		"time": "2010-09-20T18:49:24Z",
		"href": "http://www.brewery.org/library/1stwort.html"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"recipe",
			"american",
			"us",
			"ipa",
			"brewing"
		],
		"y": -4.381547385717467,
		"x": 0.17120236909945694,
		"extended": "",
		"description": "Simple all-grain American IPA recipe? - Realbeer.com Beer Community",
		"time": "2010-09-20T18:47:36Z",
		"href": "http://www.realbeer.com/discussions/showthread.php?t=18636"
	},
	{
		"cluster": 7,
		"tags": [
			"agile",
			"process",
			"programming",
			"development",
			"productivity",
			"projectmanagement",
			"scrum"
		],
		"y": 7.964528522251673,
		"x": -0.9815830921987113,
		"extended": "",
		"description": "Agile Development: The quickstart guide to doing it right - Ruby Pond",
		"time": "2010-09-20T11:17:31Z",
		"href": "http://rubypond.com/blog/quickstart-guide-to-agile"
	},
	{
		"cluster": 17,
		"tags": [
			"shazam",
			"audio",
			"programming",
			"informationretrieval",
			"fingerprinting",
			"computerscience",
			"java",
			"algorithms",
			"ai",
			"music",
			"recognition"
		],
		"y": -9.60707147790169,
		"x": -8.238370380140372,
		"extended": "",
		"description": "Creating Shazam in Java - Redcode",
		"time": "2010-09-18T14:37:51Z",
		"href": "http://www.redcode.nl/blog/2010/06/creating-shazam-in-java/"
	},
	{
		"cluster": 15,
		"tags": [
			"ai",
			"shazam",
			"informationretrieval",
			"sound",
			"fingerprinting",
			"mathematics",
			"computerscience",
			"music",
			"audio",
			"algorithms",
			"programming",
			"statistics"
		],
		"y": -9.601084606143502,
		"x": -8.236662834630991,
		"extended": "",
		"description": "How Shazam Works « Free Won’t",
		"time": "2010-09-18T14:35:46Z",
		"href": "http://laplacian.wordpress.com/2009/01/10/how-shazam-works/"
	},
	{
		"cluster": 8,
		"tags": [
			"economics",
			"internet",
			"behaviour",
			"psychology",
			"externalities",
			"interaction",
			"commons",
			"community",
			"publicgood"
		],
		"y": 7.631879589352486,
		"x": 7.43407127612386,
		"extended": "",
		"description": "FT.com / Weekend columnists / Tim Harford - Why does anyone bother contributing to Wikipedia?",
		"time": "2010-09-18T14:34:01Z",
		"href": "http://www.ft.com/cms/s/2/9b1281be-c06b-11df-8a81-00144feab49a.html"
	},
	{
		"cluster": 5,
		"tags": [
			"ruby",
			"statistics",
			"gem",
			"mathematics",
			"programming",
			"ai",
			"bayesian",
			"computerscience",
			"probability"
		],
		"y": 2.573706154218179,
		"x": -10.627462276638708,
		"extended": "<tree>.flatten # flattens a tree and computes probabilities.\n",
		"description": "urso's rb_probdsl at master - GitHub",
		"time": "2010-09-14T11:23:06Z",
		"href": "http://github.com/urso/rb_probdsl"
	},
	{
		"cluster": 2,
		"tags": [
			"computerscience",
			"education",
			"careers",
			"academia",
			"phd"
		],
		"y": -2.252653529369041,
		"x": -7.693645888617173,
		"extended": "",
		"description": "Volatile and Decentralized: So, you want to go to grad school?",
		"time": "2010-09-11T10:39:28Z",
		"href": "http://matt-welsh.blogspot.com/2010/09/so-you-want-to-go-to-grad-school.html"
	},
	{
		"cluster": 7,
		"tags": [
			"sti",
			"rails",
			"activerecord",
			"hack",
			"ruby",
			"programming",
			"development",
			"web"
		],
		"y": 9.571934604542962,
		"x": -7.440775808366167,
		"extended": "",
		"description": "Building the right class with STI in Rails « coderrr",
		"time": "2010-09-10T11:12:55Z",
		"href": "http://coderrr.wordpress.com/2008/04/22/building-the-right-class-with-sti-in-rails/"
	},
	{
		"cluster": 7,
		"tags": [
			"performance",
			"programming",
			"optimization",
			"development",
			"softwareengineering"
		],
		"y": 6.455140284255611,
		"x": -7.812660680023815,
		"extended": "",
		"description": "Joe Duffy's Weblog",
		"time": "2010-09-08T18:06:23Z",
		"href": "http://www.bluebytesoftware.com/blog/PermaLink,guid,4db70333-295b-441f-80f9-21b90bd44287.aspx"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"finance",
			"business"
		],
		"y": 9.124765514701185,
		"x": 7.382394384288224,
		"extended": "",
		"description": "Stumbling and Mumbling: A venture capitalist state?",
		"time": "2010-09-08T09:19:40Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2010/09/a-venture-capitalist-state.html"
	},
	{
		"cluster": 7,
		"tags": [
			"machinist",
			"testing",
			"ruby",
			"rails",
			"setup",
			"development",
			"programming"
		],
		"y": 9.075027702514118,
		"x": -6.924998998415202,
		"extended": "",
		"description": "Stubbing methods (eg callbacks) in a Machinist blueprint | webcrisps – webby snippets found by Max Williams",
		"time": "2010-09-07T11:33:06Z",
		"href": "http://webcrisps.wordpress.com/2009/08/13/stubbing-before_create-callbacks-in-a-machinist-blueprint/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"statistics",
			"functional",
			"programming",
			"mathematics",
			"computerscience",
			"probability",
			"pfp"
		],
		"y": -5.1849608274322945,
		"x": -9.933006292436096,
		"extended": "",
		"description": "PFP - Probabilistic Functional Programming in Haskell",
		"time": "2010-09-03T10:05:30Z",
		"href": "http://web.engr.oregonstate.edu/~erwig/pfp/"
	},
	{
		"cluster": 4,
		"tags": [
			"functional",
			"programming",
			"haskell",
			"computerscience",
			"denotational",
			"operational",
			"semantics"
		],
		"y": -5.24760895693707,
		"x": -10.562868230048878,
		"extended": "",
		"description": "monoidal: Algorithms and functions",
		"time": "2010-09-03T08:23:40Z",
		"href": "http://monoidal.blogspot.com/2010/09/algorithms-and-functions.html"
	},
	{
		"cluster": 1,
		"tags": [
			"business",
			"management",
			"society",
			"policy",
			"netflix",
			"culture",
			"strategy"
		],
		"y": 1.8168157270861025,
		"x": 4.2826410898834695,
		"extended": "",
		"description": "Netflix lets its staff take as much holiday as they want, whenever they want – and it works - Telegraph",
		"time": "2010-08-19T08:10:50Z",
		"href": "http://www.telegraph.co.uk/finance/newsbysector/mediatechnologyandtelecoms/7945719/Netflix-lets-its-staff-take-as-much-holiday-as-they-want-whenever-they-want-and-it-works.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"concurrency",
			"threads",
			"events",
			"programming",
			"development",
			"web"
		],
		"y": 9.31903340555769,
		"x": -7.571972966887893,
		"extended": "",
		"description": "Threads (in Ruby): Enough Already « Katz Got Your Tongue?",
		"time": "2010-08-19T08:10:31Z",
		"href": "http://yehudakatz.com/2010/08/14/threads-in-ruby-enough-already/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+KatzGotYourTongue+(Katz+Got+Your+Tongue%3F)&utm_content=Google+Reader"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"opengl",
			"programming",
			"tutorial",
			"graphics",
			"3d",
			"functional"
		],
		"y": -5.918710300296073,
		"x": -8.08939578221576,
		"extended": "",
		"description": "Michi’s blog » Blog Archive » OpenGL programming in Haskell, a tutorial (Part 2)",
		"time": "2010-08-11T13:06:38Z",
		"href": "http://blog.mikael.johanssons.org/archive/2006/09/opengl-programming-in-haskell-a-tutorial-part-2/"
	},
	{
		"cluster": 13,
		"tags": [
			"housing",
			"politics",
			"economics",
			"law",
			"benefits"
		],
		"y": 7.9554156026035745,
		"x": 9.22111180387158,
		"extended": "",
		"description": "Christina Patterson: Why is social housing such a mess? - Christina Patterson, Commentators - The Independent",
		"time": "2010-08-11T08:17:22Z",
		"href": "http://www.independent.co.uk/opinion/commentators/christina-patterson/christina-patterson-why-is-social-housing-such-a-mess-2048875.html"
	},
	{
		"cluster": 2,
		"tags": [
			"hardknott",
			"beer",
			"brewery",
			"sales",
			"shop"
		],
		"y": -3.0761916971558025,
		"x": 3.601001979185297,
		"extended": "",
		"description": "Local Real Ale/Beer shipped direct from the breweries. Over 400 beers listed. Join the 52 week beer club - Real Ale Online Hardknott Brewery - Beer by Brewery - Buy Real Ale/Beer",
		"time": "2010-08-10T10:25:25Z",
		"href": "http://www.mybrewerytap.com/buy-real-ale/beer-by-brewery/hardknott-brewery.html"
	},
	{
		"cluster": 17,
		"tags": [
			"informationretrieval",
			"computerscience",
			"programming",
			"nlp",
			"ai",
			"book",
			"reference"
		],
		"y": 0.7013588560088375,
		"x": -11.79728643707241,
		"extended": "",
		"description": "Introduction to Information Retrieval",
		"time": "2010-08-07T11:28:46Z",
		"href": "http://www-nlp.stanford.edu/IR-book/"
	},
	{
		"cluster": 15,
		"tags": [
			"comonads",
			"categorytheory",
			"mathematics",
			"computerscience",
			"functors",
			"dualcategories",
			"arrows",
			"cofunctors",
			"haskell",
			"abstractnonsense"
		],
		"y": -1.2786447211464969,
		"x": -11.332494604928437,
		"extended": "",
		"description": "Flipping arrows in coBurger King : Inside 245s",
		"time": "2010-08-06T13:24:17Z",
		"href": "http://blog.ezyang.com/2010/07/flipping-arrows-in-coburger-king/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+ezyang+(Inside+245s)&utm_content=Google+Reader"
	},
	{
		"cluster": 12,
		"tags": [
			"design",
			"projectmanagement",
			"management",
			"business",
			"meetings",
			"process",
			"web",
			"development",
			"clients"
		],
		"y": 8.94528812553519,
		"x": 0.2975839129001264,
		"extended": "",
		"description": "A List Apart: Articles: Kick Ass Kickoff Meetings",
		"time": "2010-08-03T11:01:44Z",
		"href": "http://www.alistapart.com/articles/kick-ass-kickoff-meetings/"
	},
	{
		"cluster": 4,
		"tags": [
			"fold",
			"haskell",
			"functional",
			"programming",
			"computation",
			"development",
			"computerscience"
		],
		"y": -4.751032420966677,
		"x": -7.6124136417342765,
		"extended": "",
		"description": "Foldr Foldl Foldl' - HaskellWiki",
		"time": "2010-08-02T12:47:01Z",
		"href": "http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl'"
	},
	{
		"cluster": 7,
		"tags": [
			"rails3",
			"rails",
			"ruby",
			"programming",
			"upgrade",
			"howto",
			"tutorials",
			"rubyonrails",
			"development",
			"web"
		],
		"y": 9.780707598701465,
		"x": -7.611127418247273,
		"extended": "",
		"description": "The Road to Rails 3: make your Rails 2.3 project more Rails 3 oriented – Simone Carletti's Blog",
		"time": "2010-08-02T12:27:54Z",
		"href": "http://www.simonecarletti.com/blog/2010/07/the-way-to-rails-3/"
	},
	{
		"cluster": 2,
		"tags": [
			"depression",
			"health",
			"illness",
			"mentalhealth",
			"mind",
			"psychology"
		],
		"y": 0.6945060200862224,
		"x": 6.910672911753302,
		"extended": "",
		"description": "Depression – the illness that's still taboo | Life and style | The Guardian",
		"time": "2010-08-02T09:12:06Z",
		"href": "http://www.guardian.co.uk/lifeandstyle/2010/aug/02/depression-mental-health-breakdown"
	},
	{
		"cluster": 15,
		"tags": [
			"linearprogramming",
			"mathematics",
			"computerscience",
			"linear",
			"programming"
		],
		"y": -0.4339924803645914,
		"x": -11.524367216523098,
		"extended": "",
		"description": "RAND | Reports | Linear Programming and Extensions",
		"time": "2010-08-01T18:51:32Z",
		"href": "http://www.rand.org/pubs/reports/R366/"
	},
	{
		"cluster": 15,
		"tags": [
			"linearprogramming",
			"computerscience",
			"mathematics"
		],
		"y": -1.1738695913820543,
		"x": -11.731986678226773,
		"extended": "",
		"description": "linear programing | TutorNext | 3055",
		"time": "2010-08-01T18:48:15Z",
		"href": "http://www.tutornext.com/linear-programing/3055"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"programming",
			"computerscience",
			"ai",
			"linearprogramming"
		],
		"y": -0.2455252925908943,
		"x": -11.499818597295512,
		"extended": "",
		"description": "What is linear programming? - Mathematics - Stack Exchange",
		"time": "2010-08-01T17:52:36Z",
		"href": "http://math.stackexchange.com/questions/741/what-is-linear-programming"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"software",
			"essay",
			"future",
			"languages",
			"functional",
			"design",
			"computerscience",
			"plt"
		],
		"y": -2.665100620426419,
		"x": -9.872275636358227,
		"extended": "",
		"description": "Programming for a culture approaching singularity « Luke Palmer",
		"time": "2010-08-01T17:51:53Z",
		"href": "http://lukepalmer.wordpress.com/2010/07/22/programming-for-a-culture-approaching-singularity/"
	},
	{
		"cluster": 10,
		"tags": [
			"glennbeck",
			"politics",
			"media",
			"us",
			"mccarthyism",
			"history"
		],
		"y": 6.460656943884927,
		"x": 10.639780810418973,
		"extended": "",
		"description": "Glenn Beck misses Joe McCarthy - War Room - Salon.com",
		"time": "2010-07-28T21:33:27Z",
		"href": "http://www.salon.com/news/politics/war_room/2010/03/11/beck_mccarthy"
	},
	{
		"cluster": 5,
		"tags": [
			"computerscience",
			"research",
			"institutions",
			"organisations",
			"reference",
			"publication",
			"statistics",
			"academia"
		],
		"y": -1.686093481189133,
		"x": -7.3773443194811685,
		"extended": "",
		"description": "Top organizations in Computer Science Overall - Microsoft Academic Search",
		"time": "2010-07-28T21:31:38Z",
		"href": "http://academic.research.microsoft.com/CSDirectory/org_category_24.htm"
	},
	{
		"cluster": 18,
		"tags": [
			"economics",
			"software",
			"development",
			"programming",
			"pricing",
			"business",
			"strategy"
		],
		"y": 8.613731485661727,
		"x": -0.9177833252385347,
		"extended": "",
		"description": "The Economics of Software : The Observation Deck",
		"time": "2010-07-27T19:21:34Z",
		"href": "http://blogs.sun.com/bmc/entry/the_economics_of_software"
	},
	{
		"cluster": 18,
		"tags": [
			"software",
			"engineering",
			"design",
			"ux",
			"development",
			"programming"
		],
		"y": 6.021971732198802,
		"x": -5.306411687193145,
		"extended": "",
		"description": "What Are We Still Doing Wrong",
		"time": "2010-07-26T15:53:12Z",
		"href": "http://www.slideshare.net/afareg/what-are-we-still-doing-wrong"
	},
	{
		"cluster": 2,
		"tags": [
			"language",
			"nlp",
			"corpus",
			"sentimentanalysis",
			"linguistics",
			"words",
			"attention",
			"mood",
			"semantic",
			"reference",
			"sentiment_analysis",
			"sentiment",
			"dictionary",
			"emotion"
		],
		"y": -0.11163137166229806,
		"x": 7.844055912682632,
		"extended": "",
		"description": "NIMH Center for the Study of Emotion and Attention",
		"time": "2010-07-26T13:45:22Z",
		"href": "http://csea.phhp.ufl.edu/media/anewmessage.html"
	},
	{
		"cluster": 16,
		"tags": [
			"machinelearning",
			"nlp",
			"visualisation",
			"twitter",
			"research",
			"inference",
			"categorisation",
			"data",
			"usa"
		],
		"y": -1.6003135988501558,
		"x": -0.7258592153270158,
		"extended": "",
		"description": "Pulse of the Nation: U.S. Mood Throughout the Day inferred from Twitter",
		"time": "2010-07-26T13:44:39Z",
		"href": "http://www.ccs.neu.edu/home/amislove/twittermood/"
	},
	{
		"cluster": 18,
		"tags": [
			"architecture",
			"engineering",
			"software",
			"programming",
			"development",
			"design",
			"agile",
			"scrum"
		],
		"y": 6.074589587001631,
		"x": -5.198841408537885,
		"extended": "",
		"description": "Tiago Fernandez: Can architecture emerge from continuous refactoring?",
		"time": "2010-07-26T08:33:39Z",
		"href": "http://tiagofernandez.blogspot.com/2010/07/can-architecture-emerge-from-continuous.html"
	},
	{
		"cluster": 13,
		"tags": [
			"keynes",
			"economics",
			"society",
			"politics",
			"stimulus",
			"macroeconomics"
		],
		"y": 4.066263203296329,
		"x": 12.387552818137273,
		"extended": "",
		"description": "FT.com / Comment / Opinion - A sunlit Keynesian paradise awaits our grandchildren",
		"time": "2010-07-21T09:40:33Z",
		"href": "http://www.ft.com/cms/s/0/5c600ac6-942a-11df-a3fe-00144feab49a.html"
	},
	{
		"cluster": 2,
		"tags": [
			"games",
			"play",
			"business"
		],
		"y": 1.06413359930064,
		"x": 4.116881087140017,
		"extended": "",
		"description": "Tim Harford — Article — Why we still love board games",
		"time": "2010-07-21T09:35:48Z",
		"href": "http://timharford.com/2010/07/why-we-still-love-board-games/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+TimHarford+(Tim+Harford)&utm_content=Google+Reader"
	},
	{
		"cluster": 17,
		"tags": [
			"drseuss",
			"haltingproblem",
			"computerscience",
			"turingcompleteness",
			"npcompleteness",
			"computer",
			"logic",
			"science",
			"complexity",
			"funny",
			"programming",
			"theory",
			"humor"
		],
		"y": 1.7159716884098764,
		"x": -11.833148460883761,
		"extended": "",
		"description": "How Dr. Seuss would prove the halting problem undecidable",
		"time": "2010-07-20T21:45:23Z",
		"href": "http://ebiquity.umbc.edu/blogger/2008/01/19/how-dr-suess-would-prove-the-halting-problem-undecidable/"
	},
	{
		"cluster": 17,
		"tags": [
			"writing",
			"style",
			"grammar",
			"technology",
			"script",
			"hack",
			"programming",
			"research",
			"education"
		],
		"y": -9.482594475918962,
		"x": -2.1281501231653177,
		"extended": "",
		"description": "3 shell scripts: Kill weasel words, avoid the passive, eliminate duplicates",
		"time": "2010-07-19T16:56:41Z",
		"href": "http://matt.might.net/articles/shell-scripts-for-passive-voice-weasel-words-duplicates/"
	},
	{
		"cluster": 13,
		"tags": [
			"education",
			"economics",
			"society",
			"politics"
		],
		"y": 3.501775200829293,
		"x": 12.518306746102663,
		"extended": "",
		"description": "Stumbling and Mumbling: Private schools & unintended consequences",
		"time": "2010-07-19T16:46:32Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2010/07/private-schools-unintended-consequences.html"
	},
	{
		"cluster": 8,
		"tags": [
			"semanticweb",
			"linkeddata",
			"web",
			"internet",
			"okfn",
			"knowledge",
			"opendata"
		],
		"y": 3.697712066550983,
		"x": 2.7718577843158663,
		"extended": "",
		"description": "Open Knowledge Foundation Blog » Blog Archive » Briefing paper on “The Semantic Web, Linked and Open Data”",
		"time": "2010-07-19T09:32:28Z",
		"href": "http://blog.okfn.org/2010/07/19/briefing-paper-on-the-semantic-web-linked-and-open-data/"
	},
	{
		"cluster": 5,
		"tags": [
			"probability",
			"conditional",
			"unconditional",
			"dependent",
			"independent",
			"bayes",
			"mathematics",
			"statistics",
			"gamblersfallacy"
		],
		"y": -4.884454027278857,
		"x": -4.6660891900908625,
		"extended": "",
		"description": "Can anyone please explain why it is that if you're playing roulette and it comes up red 20 times in a row, you have a 50-50 chance of red the next time, but... : math",
		"time": "2010-07-19T07:47:38Z",
		"href": "http://www.reddit.com/r/math/comments/cr1cm/can_anyone_please_explain_why_it_is_that_if_youre/"
	},
	{
		"cluster": 14,
		"tags": [
			"motivation",
			"design",
			"theory",
			"research",
			"model",
			"ux",
			"psychology",
			"experience",
			"behavior",
			"persuasion"
		],
		"y": -5.845340452325277,
		"x": 1.23406735980932,
		"extended": "",
		"description": "BJ Fogg's Behavior Model",
		"time": "2010-07-14T09:45:15Z",
		"href": "http://www.behaviormodel.org/"
	},
	{
		"cluster": 17,
		"tags": [
			"haskelll",
			"combinators",
			"combinatorylogic",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -4.604129598557936,
		"x": -11.062604920351776,
		"extended": "",
		"description": "More composition operators - blog 21",
		"time": "2010-07-14T08:37:53Z",
		"href": "http://twan.home.fmf.nl/blog/haskell/more-function-composition.details"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"democracy",
			"cuts",
			"government",
			"budget",
			"technology",
			"crowdsourcing",
			"politics"
		],
		"y": 9.4129994647932,
		"x": 9.661056664918956,
		"extended": "",
		"description": "Consulting the public on cuts can work | Chris Dillow | Comment is free | guardian.co.uk",
		"time": "2010-07-13T15:07:25Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/jul/13/public-consultation-cuts"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"categorytheory",
			"functionalprogramming",
			"topology",
			"geomtry",
			"lambdacalculus",
			"calculus",
			"lambda",
			"computation"
		],
		"y": -8.864985181243451,
		"x": -4.39564722912843,
		"extended": "",
		"description": "Page 2 - E2E: Whiteboard Jam Session with Brian Beckman and Greg Meredith - Monads and Coordinate Systems | Going Deep | Channel 9",
		"time": "2010-07-12T14:17:48Z",
		"href": "http://channel9.msdn.com/shows/Going+Deep/E2E-Whiteboard-Jam-Session-with-Brian-Beckman-Greg-Meredith-Monads-and-Coordinate-Systems/#Page=2"
	},
	{
		"cluster": 18,
		"tags": [
			"userstories",
			"scrum",
			"agile",
			"requirements",
			"user",
			"software",
			"engineering",
			"development",
			"programming",
			"design"
		],
		"y": 6.292380035550909,
		"x": -4.865968576027378,
		"extended": "",
		"description": "Scrum Alliance - New to User Stories?Written for the Scrum Alliance. A CSP’s perspective on user stories, requirements, and use cases",
		"time": "2010-07-09T13:29:01Z",
		"href": "http://www.scrumalliance.org/articles/169-new-to-user-stories"
	},
	{
		"cluster": 7,
		"tags": [
			"userstories",
			"requirements",
			"development",
			"design",
			"scrum",
			"agile",
			"programming",
			"project",
			"management"
		],
		"y": 6.493992486605645,
		"x": -4.545437992108207,
		"extended": "",
		"description": "Agile Project Planning: Writing Good User Stories",
		"time": "2010-07-09T13:12:18Z",
		"href": "http://www.extremeplanner.com/blog/2006/01/writing-good-user-stories.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"steganography",
			"image",
			"programming",
			"mathematica"
		],
		"y": -0.1440511871711274,
		"x": -10.898010009266926,
		"extended": "",
		"description": "Wolfram Blog : Doing Spy Stuff with Mathematica",
		"time": "2010-07-09T08:18:49Z",
		"href": "http://blog.wolfram.com/2010/07/08/doing-spy-stuff-with-mathematica/"
	},
	{
		"cluster": 10,
		"tags": [
			"cuba",
			"left",
			"socialism",
			"humanrights",
			"politics"
		],
		"y": 2.8495185994112324,
		"x": 9.871036557867704,
		"extended": "",
		"description": "Terence Blacker: Let's break Havana's hold over us - Terence Blacker, Commentators - The Independent",
		"time": "2010-07-09T08:13:45Z",
		"href": "http://www.independent.co.uk/opinion/commentators/terence-blacker/terence-blacker-lets-break-havanas-hold-over-us-2021952.html"
	},
	{
		"cluster": 8,
		"tags": [
			"queer",
			"sexuality",
			"technology",
			"society",
			"culture",
			"internet",
			"online"
		],
		"y": -4.40029590845485,
		"x": 11.22847399297188,
		"extended": "",
		"description": "Of gays and griots: sexuality, technology and story-telling | booktwo.org",
		"time": "2010-07-06T15:02:54Z",
		"href": "http://booktwo.org/notebook/of-gays-and-griots/"
	},
	{
		"cluster": 17,
		"tags": [
			"binarytree",
			"c",
			"programming",
			"datastructures",
			"search",
			"tree",
			"btree",
			"binary"
		],
		"y": 3.5525708008785073,
		"x": -6.158182343098298,
		"extended": "",
		"description": "Ben Pfaff: GNU libavl",
		"time": "2010-07-05T13:53:22Z",
		"href": "http://adtinfo.org/"
	},
	{
		"cluster": 2,
		"tags": [
			"airport",
			"security",
			"technology",
			"surveillance",
			"psychology"
		],
		"y": -3.7039779277867946,
		"x": 5.580953087148692,
		"extended": "",
		"description": "Marbury: airport mindreading",
		"time": "2010-07-05T11:21:19Z",
		"href": "http://marbury.typepad.com/marbury/2010/07/airport-mind-games.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"economy",
			"business",
			"budget",
			"government",
			"libdems",
			"politics",
			"ecology",
			"environment"
		],
		"y": 9.56754352647715,
		"x": 7.849885704646518,
		"extended": "",
		"description": "Chris Huhne and Vince Cable: The green economy is still viable - Commentators, Opinion - The Independent",
		"time": "2010-07-05T10:23:02Z",
		"href": "http://www.independent.co.uk/opinion/commentators/chris-huhne-and-vince-cable-the-green-economy-is-still-viable-2018425.html"
	},
	{
		"cluster": 2,
		"tags": [
			"cognitivebias",
			"cognitive",
			"bias",
			"psychology",
			"brain"
		],
		"y": 6.360626470943916,
		"x": 6.699034415318987,
		"extended": "",
		"description": "Cognitive Biases - A Visual Study Guide",
		"time": "2010-07-03T10:58:37Z",
		"href": "http://www.scribd.com/doc/30548590/Cognitive-Biases-A-Visual-Study-Guide"
	},
	{
		"cluster": 13,
		"tags": [
			"budget",
			"politics",
			"economics",
			"finance",
			"economy"
		],
		"y": 9.40207128873439,
		"x": 7.761210761937989,
		"extended": "",
		"description": "FT.com / Comment / Opinion - The Tories are taking too big a risk with growth",
		"time": "2010-07-03T10:55:14Z",
		"href": "http://www.ft.com/cms/s/0/7c5b6544-8545-11df-9c2f-00144feabdc0.html?ftcamp=rss"
	},
	{
		"cluster": 2,
		"tags": [
			"rails3",
			"introduction",
			"reference",
			"upgrade",
			"transition"
		],
		"y": -0.4809840076095849,
		"x": 4.075923279820974,
		"extended": "",
		"description": "Introduction to Rails 3",
		"time": "2010-07-02T17:27:46Z",
		"href": "http://www.slideshare.net/anupnivargi/introduction-to-rails-3"
	},
	{
		"cluster": 17,
		"tags": [
			"fingertree",
			"datastructures",
			"functional",
			"programming",
			"data",
			"structure",
			"tree",
			"list",
			"array",
			"mathematics",
			"categorytheory",
			"abstractalgebra",
			"computerscience"
		],
		"y": -1.4902550077921037,
		"x": -10.17877720982675,
		"extended": "",
		"description": "Finger Tree Update: I forgot something : Good Math, Bad Math",
		"time": "2010-07-01T15:07:18Z",
		"href": "http://scienceblogs.com/goodmath/2009/05/finger_tree_update_i_forgot_so.php"
	},
	{
		"cluster": 17,
		"tags": [
			"fingertree",
			"datastructures",
			"functional",
			"programming",
			"data",
			"structure",
			"tree",
			"list",
			"array",
			"mathematics",
			"categorytheory",
			"abstractalgebra",
			"computerscience"
		],
		"y": -1.3407856666214788,
		"x": -10.177007567763933,
		"extended": "",
		"description": "Finally: Finger Trees! : Good Math, Bad Math",
		"time": "2010-07-01T15:01:56Z",
		"href": "http://scienceblogs.com/goodmath/2009/05/finally_finger_trees.php"
	},
	{
		"cluster": 10,
		"tags": [
			"science",
			"uk",
			"greenparty",
			"health",
			"politics"
		],
		"y": 3.4323086479288087,
		"x": 9.348350340229535,
		"extended": "",
		"description": "The Greens have changed their approach to science | Liberal Conspiracy",
		"time": "2010-07-01T14:12:36Z",
		"href": "http://liberalconspiracy.org/2010/02/23/the-greens-have-changed-their-approach-to-science/"
	},
	{
		"cluster": 7,
		"tags": [
			"has_many",
			"rails",
			"activerecord",
			"ruby",
			"associations",
			"web",
			"development",
			"programming"
		],
		"y": 9.566171270519726,
		"x": -7.439111542496961,
		"extended": "",
		"description": "Tim, the Enchanter: How to has_many :through a has_many :through",
		"time": "2010-06-30T16:57:54Z",
		"href": "http://tim.theenchanter.com/2008/10/how-to-hasmany-through-hasmany-through.html"
	},
	{
		"cluster": 7,
		"tags": [
			"mysql",
			"size",
			"crazy",
			"nonsense",
			"development",
			"programming",
			"database"
		],
		"y": 3.5511734853264105,
		"x": -1.8485211168479623,
		"extended": "",
		"description": "What does \"size\" in int(size) of MySQL mean? » alexander kirk » Blog Archive",
		"time": "2010-06-30T16:05:05Z",
		"href": "http://alexander.kirk.at/2007/08/24/what-does-size-in-intsize-of-mysql-mean/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"cities",
			"society",
			"geography",
			"externalities"
		],
		"y": 3.916768204381412,
		"x": 12.464172828895531,
		"extended": "",
		"description": "Tim Harford — Article — Fried chicken versus fresh air",
		"time": "2010-06-29T07:54:50Z",
		"href": "http://timharford.com/2006/03/fried-chicken-versus-fresh-air/"
	},
	{
		"cluster": 10,
		"tags": [
			"management",
			"society",
			"class",
			"politics",
			"agile",
			"development",
			"software",
			"business",
			"work"
		],
		"y": 1.8076139911761033,
		"x": 11.284557426460763,
		"extended": "",
		"description": "Stumbling and Mumbling: Class and football",
		"time": "2010-06-28T10:24:12Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2010/06/class-and-football.html"
	},
	{
		"cluster": 15,
		"tags": [
			"IP",
			"LP",
			"p=np",
			"programming",
			"complexity",
			"mathematics",
			"computation",
			"computerscience",
			"linearequations",
			"linearprogramming",
			"gaussianelimination"
		],
		"y": -1.6132479536910038,
		"x": -12.870043006816946,
		"extended": "",
		"description": "Stating P=NP Without Turing Machines « Gödel’s Lost Letter and P=NP",
		"time": "2010-06-28T07:57:00Z",
		"href": "http://rjlipton.wordpress.com/2010/06/26/stating-pnp-without-turing-machines/"
	},
	{
		"cluster": 9,
		"tags": [
			"backup",
			"restore",
			"ubuntu",
			"howto",
			"tutorial",
			"system",
			"sysadmin",
			"linux",
			"reference",
			"security"
		],
		"y": -5.720435732662163,
		"x": 4.305595475226742,
		"extended": "",
		"description": "Howto: Backup and restore your system! - Ubuntu Forums",
		"time": "2010-06-25T13:14:54Z",
		"href": "http://ubuntuforums.org/showthread.php?t=81311"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"percent",
			"syntax",
			"reference",
			"programming",
			"development"
		],
		"y": 7.5615263057281155,
		"x": -8.550539301266774,
		"extended": "",
		"description": "Jim Hoskins » Ruby Percent Syntax (Percent Functions)",
		"time": "2010-06-25T11:44:53Z",
		"href": "http://jimhoskins.com/?p=8"
	},
	{
		"cluster": 13,
		"tags": [
			"economy",
			"economics",
			"recession",
			"business",
			"fiscal",
			"policy",
			"government",
			"politics",
			"deficit",
			"austerity",
			"budget2010",
			"budget"
		],
		"y": 9.899909147294068,
		"x": 7.759063726361172,
		"extended": "",
		"description": "Op-Ed Columnist - That ’30s Feeling - NYTimes.com",
		"time": "2010-06-25T09:37:49Z",
		"href": "http://www.nytimes.com/2010/06/18/opinion/18krugman.html"
	},
	{
		"cluster": 10,
		"tags": [
			"activism",
			"socialmedia",
			"participation",
			"democracy",
			"politics",
			"social",
			"online",
			"advocacy"
		],
		"y": 5.8540578140058575,
		"x": 11.432878147677082,
		"extended": "",
		"description": "…My heart’s in Accra » Overcoming apathy through participation? – (not) my talk at Personal Democracy Forum",
		"time": "2010-06-25T09:35:32Z",
		"href": "http://www.ethanzuckerman.com/blog/2010/06/03/overcoming-apathy-through-participation-not-my-talk-at-personal-democracy-forum/"
	},
	{
		"cluster": 13,
		"tags": [
			"budget",
			"economics",
			"finance",
			"tax",
			"politics",
			"uk"
		],
		"y": 9.425098735973485,
		"x": 7.708961396297954,
		"extended": "",
		"description": "What does the UK budget mean? | openDemocracy",
		"time": "2010-06-23T19:14:24Z",
		"href": "http://www.opendemocracy.net/tony-curzon-price/what-does-uk-budget-mean"
	},
	{
		"cluster": 7,
		"tags": [
			"vim",
			"editor",
			"programming",
			"development",
			"tips"
		],
		"y": 8.864823900865638,
		"x": -2.4530771719366737,
		"extended": "",
		"description": "Useful Vim commands for developers - thinksimple.pl",
		"time": "2010-06-23T16:46:26Z",
		"href": "http://thinksimple.pl/entries/89-Useful-Vim-commands-for-developers"
	},
	{
		"cluster": 10,
		"tags": [
			"statistics",
			"medicine",
			"depression",
			"health",
			"homeopathy",
			"science",
			"politics"
		],
		"y": 1.3420389538165995,
		"x": 7.325823920425407,
		"extended": "",
		"description": "nontoxic.org.uk » A quick lesson on type-II errors (false negatives)",
		"time": "2010-06-23T16:46:26Z",
		"href": "http://www.nontoxic.org.uk/?p=205"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"society",
			"discourse",
			"language",
			"logic",
			"debate",
			"budget2010",
			"cuts"
		],
		"y": 4.092177286857261,
		"x": 12.477734703808627,
		"extended": "",
		"description": "Stumbling and Mumbling: Necessity, choice & legitimation",
		"time": "2010-06-23T16:46:26Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2010/06/necessity-choice-legitimation.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"fiscal",
			"policy",
			"finance",
			"deficit",
			"reduction",
			"government",
			"global",
			"business"
		],
		"y": 9.647793571760836,
		"x": 7.5284667433987185,
		"extended": "",
		"description": "The Bad Logic Of Fiscal Austerity - Paul Krugman Blog - NYTimes.com",
		"time": "2010-06-19T13:17:22Z",
		"href": "http://krugman.blogs.nytimes.com/2010/06/14/the-bad-logic-of-fiscal-austerity/"
	},
	{
		"cluster": 10,
		"tags": [
			"eastend",
			"london",
			"towerhamlets",
			"politics",
			"racism",
			"islam",
			"edl",
			"fascism",
			"history"
		],
		"y": 5.013798634066274,
		"x": 8.757894262636585,
		"extended": "",
		"description": "Will London's East End witness a return to confrontation? | openDemocracy",
		"time": "2010-06-15T15:18:07Z",
		"href": "http://www.opendemocracy.net/nick-ryan/will-londons-east-end-witness-return-to-confrontation"
	},
	{
		"cluster": 15,
		"tags": [
			"euler",
			"identity",
			"eulersidentity",
			"complexnumbers",
			"complex",
			"numbers",
			"imaginary",
			"mathematics",
			"visualization",
			"tutorial",
			"presentation",
			"learning",
			"geometry"
		],
		"y": -9.610138627192217,
		"x": -5.845905021285712,
		"extended": "",
		"description": "How to explain Euler's identity using triangles and spirals",
		"time": "2010-06-15T07:26:37Z",
		"href": "http://docs.google.com/present/view?id=dgbfz8sm_16f84msqd2"
	},
	{
		"cluster": 15,
		"tags": [
			"complexnumbers",
			"complex",
			"imaginary",
			"arithmetic",
			"mathematics",
			"numbers",
			"visualization",
			"learning",
			"education",
			"tutorial"
		],
		"y": -9.492240842533697,
		"x": -5.822282949218636,
		"extended": "",
		"description": "A Visual, Intuitive Guide to Imaginary Numbers | BetterExplained",
		"time": "2010-06-15T07:19:40Z",
		"href": "http://betterexplained.com/articles/a-visual-intuitive-guide-to-imaginary-numbers/"
	},
	{
		"cluster": 5,
		"tags": [
			"bayes",
			"r",
			"statistics",
			"computation",
			"programming"
		],
		"y": -4.001130441989944,
		"x": -4.65015657906264,
		"extended": "",
		"description": "CRAN - Package LearnBayes",
		"time": "2010-06-14T09:03:16Z",
		"href": "http://cran.r-project.org/web/packages/LearnBayes/index.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"philosophy",
			"usa",
			"america",
			"2010",
			"libertarianism",
			"love",
			"teaparty"
		],
		"y": 5.204324822134874,
		"x": 11.273542793299963,
		"extended": "",
		"description": "The Very Angry Tea Party - Opinionator Blog - NYTimes.com",
		"time": "2010-06-14T08:10:06Z",
		"href": "http://opinionator.blogs.nytimes.com/2010/06/13/the-very-angry-tea-party/"
	},
	{
		"cluster": 2,
		"tags": [
			"holiday",
			"acommodation",
			"france",
			"marseille"
		],
		"y": -0.9377147803176031,
		"x": 4.750848696393777,
		"extended": "",
		"description": "Holiday Rentals Marseille in Apartment 2 persons with Terrace sight on town - France",
		"time": "2010-06-13T20:40:57Z",
		"href": "http://www.homelidays.co.uk/marseille/apartment-flat-280147en1.htm#planning"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"monad",
			"programming",
			"reference",
			"functional",
			"language",
			"computerscience",
			"monads"
		],
		"y": -6.556730689940273,
		"x": -8.95471366408843,
		"extended": "",
		"description": "A tour of the Haskell monad functions",
		"time": "2010-06-11T13:52:09Z",
		"href": "http://members.chello.nl/hjgtuyl/tourdemonad.html"
	},
	{
		"cluster": 9,
		"tags": [
			"munin",
			"server",
			"linux",
			"monitoring",
			"alerts",
			"email"
		],
		"y": -5.064368323322093,
		"x": 5.419547415292895,
		"extended": "y j\n",
		"description": "Munin alert email notification - Jason's postings and stuff",
		"time": "2010-06-10T12:49:52Z",
		"href": "http://blog.edseek.com/archives/2006/07/13/munin-alert-email-notification/"
	},
	{
		"cluster": 0,
		"tags": [
			"rails",
			"passenger",
			"monitoring",
			"ruby",
			"monitor",
			"munin",
			"ops",
			"sysadmin",
			"linux"
		],
		"y": 0.08307566328610813,
		"x": 0.4532763972795362,
		"extended": "",
		"description": "How to Monitor Your Rails/Passenger App with Munin - Alfa Jango Blog » Blog Archive",
		"time": "2010-06-10T12:48:22Z",
		"href": "http://www.alfajango.com/blog/how-to-monitor-your-railspassenger-app-with-munin/"
	},
	{
		"cluster": 0,
		"tags": [
			"munin",
			"rails",
			"ops",
			"plugin",
			"monitoring",
			"server",
			"sysadmin",
			"ruby"
		],
		"y": 0.09713508438783872,
		"x": 0.4563903617132386,
		"extended": "",
		"description": "barttenbrinke's munin-plugins-rails at master - GitHub",
		"time": "2010-06-10T12:47:48Z",
		"href": "http://github.com/barttenbrinke/munin-plugins-rails"
	},
	{
		"cluster": 0,
		"tags": [
			"rails",
			"logging",
			"syslog-ng",
			"linux",
			"monitoring",
			"sysadmin",
			"deployment",
			"infrastructure",
			"ruby",
			"syslog"
		],
		"y": 0.07151192909740392,
		"x": 0.4474953913851864,
		"extended": "",
		"description": "Unified Rails Logging with Syslog-ng",
		"time": "2010-06-10T11:04:51Z",
		"href": "http://www.blueboxgrp.com/news/2009/06/unified_rails_logging_with_syslog-ng"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"functional",
			"programming",
			"mathematics",
			"computerscience",
			"denotationalsemantics",
			"denotational",
			"semantics"
		],
		"y": -5.146428909248297,
		"x": -10.72503601370978,
		"extended": "",
		"description": "Haskell/Denotational semantics - Wikibooks, collection of open-content textbooks",
		"time": "2010-06-09T20:07:18Z",
		"href": "http://en.wikibooks.org/wiki/Haskell/Denotational_semantics#cite_note-5"
	},
	{
		"cluster": 9,
		"tags": [
			"munin",
			"mysql",
			"linux",
			"sysadmin",
			"graphs",
			"monitoring",
			"centos",
			"ubuntu",
			"debian",
			"setup",
			"howto"
		],
		"y": -6.119101902975412,
		"x": 5.114101515761861,
		"extended": "",
		"description": "Michael Brandonisio » How to get your MySQL Munin Graphs working",
		"time": "2010-06-09T17:26:17Z",
		"href": "http://www.mbrando.com/2007/08/06/how-to-get-your-mysql-munin-graphs-working/"
	},
	{
		"cluster": 18,
		"tags": [
			"agile",
			"requirements",
			"engineering",
			"planning",
			"development",
			"programming",
			"project",
			"management",
			"projectmananagement",
			"software",
			"design",
			"process",
			"scrum",
			"xp",
			"userstories"
		],
		"y": 6.405460304004964,
		"x": -4.681224888276171,
		"extended": "",
		"description": "Introduction to User Stories",
		"time": "2010-06-09T13:27:25Z",
		"href": "http://www.agilemodeling.com/artifacts/userStory.htm"
	},
	{
		"cluster": 16,
		"tags": [
			"ai",
			"computing",
			"science",
			"data",
			"research",
			"software",
			"mathematics",
			"analysis",
			"statistics",
			"analytics",
			"geneticalgorithms"
		],
		"y": -3.121136778827411,
		"x": -1.8239035109319262,
		"extended": "",
		"description": "Eureqa | Cornell Computational Synthesis Laboratory",
		"time": "2010-06-08T07:26:48Z",
		"href": "http://ccsl.mae.cornell.edu/eureqa"
	},
	{
		"cluster": 5,
		"tags": [
			"bayesian",
			"statistics",
			"probability",
			"montyhallproblem",
			"mathematics"
		],
		"y": -4.767710660661448,
		"x": -4.387362143477669,
		"extended": "",
		"description": "Less Wrong: Bayes' Theorem Illustrated (My Way)",
		"time": "2010-06-07T08:08:07Z",
		"href": "http://lesswrong.com/lw/2b0/bayes_theorem_illustrated_my_way/"
	},
	{
		"cluster": 4,
		"tags": [
			"domainspecificlanguage",
			"dsl",
			"programming",
			"haskell",
			"development",
			"concurreny",
			"paralllel",
			"functional",
			"computerscience"
		],
		"y": -4.488783263098679,
		"x": -7.458802266993394,
		"extended": "",
		"description": "Galois › Blog › Blog » Domain Specific Languages for Domain Specific Problems",
		"time": "2010-06-06T17:53:58Z",
		"href": "http://www.galois.com/blog/2009/10/13/domain-specific-languages-for-domain-specific-problems/"
	},
	{
		"cluster": 15,
		"tags": [
			"cryptography",
			"mathematics",
			"numbertheory",
			"computerscience",
			"abstractalgebra",
			"ellipticcurves",
			"diffehelman",
			"rsa",
			"programming",
			"technology",
			"algebra"
		],
		"y": -0.19001872501698364,
		"x": -11.218029763574641,
		"extended": "",
		"description": "Galois › Blog › Blog » Tech Talk: Mathematics of Cryptography: A Guided Tour",
		"time": "2010-06-06T17:42:52Z",
		"href": "http://www.galois.com/blog/2009/07/22/cryptomath/"
	},
	{
		"cluster": 4,
		"tags": [
			"engineering",
			"functional",
			"development",
			"programming",
			"presentation",
			"language",
			"management",
			"projects",
			"haskell"
		],
		"y": -4.85187573405523,
		"x": -7.3297584185910205,
		"extended": "",
		"description": "Galois › Blog › Blog » Engineering Large Projects in Haskell: A Decade of FP at Galois",
		"time": "2010-06-05T09:25:54Z",
		"href": "http://www.galois.com/blog/2009/04/27/engineering-large-projects-in-haskell-a-decade-of-fp-at-galois/"
	},
	{
		"cluster": 2,
		"tags": [
			"mathemtaics",
			"database",
			"relational",
			"categorytheory",
			"categories",
			"computerscience"
		],
		"y": 2.057223809825608,
		"x": -2.6003083489330465,
		"extended": "",
		"description": "Galois › Blog › Blog » Tech Talk: Categories are Databases",
		"time": "2010-06-04T23:07:02Z",
		"href": "http://www.galois.com/blog/2010/05/27/tech-talk-categories-are-databases/"
	},
	{
		"cluster": 7,
		"tags": [
			"video",
			"plt",
			"programming",
			"language",
			"semantics",
			"ruby",
			"metaprogramming",
			"sexp",
			"parsing",
			"compilers",
			"rewrite",
			"lisp"
		],
		"y": 5.231091758155928,
		"x": -10.182935329393892,
		"extended": "",
		"description": "InfoQ: Ruby.rewrite(Ruby)",
		"time": "2010-06-03T16:01:14Z",
		"href": "http://www.infoq.com/presentations/braithwaite-rewrite-ruby"
	},
	{
		"cluster": 14,
		"tags": [
			"ux",
			"ui",
			"technology",
			"apple",
			"exploration",
			"interface"
		],
		"y": -4.597914328440017,
		"x": 1.5475239023354754,
		"extended": "",
		"description": "Dennis Forbes on Software and Technology - Let Your Users Act Like Children.",
		"time": "2010-06-01T07:58:37Z",
		"href": "http://www.yafla.com/dforbes/Act_Like_a_Child_Let_Your_Users_Be_Children/"
	},
	{
		"cluster": 1,
		"tags": [
			"polari",
			"language",
			"culture",
			"society",
			"prejudice",
			"gay",
			"lgbt",
			"homosexuality"
		],
		"y": -3.34847590217699,
		"x": 11.39368107251807,
		"extended": "",
		"description": "Polari, a vibrant language born out of prejudice | Paul Baker | Comment is free | guardian.co.uk",
		"time": "2010-05-29T09:11:50Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/24/polari-language-origins"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"development",
			"functional",
			"reference",
			"tips",
			"cheatsheet",
			"tutorial",
			"computerscience"
		],
		"y": -6.752990827816249,
		"x": -8.649387682227223,
		"extended": "",
		"description": "Haskell: The Confusing Parts",
		"time": "2010-05-28T13:51:21Z",
		"href": "http://echo.rsmw.net/n00bfaq.html"
	},
	{
		"cluster": 10,
		"tags": [
			"relativity",
			"science",
			"politics",
			"understanding",
			"media",
			"climate",
			"climatechange",
			"change",
			"environment"
		],
		"y": 4.58156777904602,
		"x": 7.651372059742166,
		"extended": "",
		"description": "Parallels between climate denial & 1920s anti-relativity movement | Left Foot Forward",
		"time": "2010-05-28T13:46:29Z",
		"href": "http://www.leftfootforward.org/2010/05/the-parallels-between-climate-denial-and-the-1920s-anti-relativity-movement/"
	},
	{
		"cluster": 10,
		"tags": [
			"feminism",
			"culture",
			"media",
			"politics",
			"society",
			"sexandthecity",
			"satc",
			"television"
		],
		"y": 0.7715184623811204,
		"x": 12.399801387581817,
		"extended": "",
		"description": "New Statesman - It's all over for sex-and-shopping feminism",
		"time": "2010-05-27T12:54:56Z",
		"href": "http://www.newstatesman.com/blogs/laurie-penny/2010/05/sex-women-city-feminism-female"
	},
	{
		"cluster": 10,
		"tags": [
			"war",
			"ethics",
			"politics",
			"afghanistan"
		],
		"y": 5.25607999578567,
		"x": 9.782742947542548,
		"extended": "",
		"description": "A different kind of war | Mary Kaldor | Comment is free | The Guardian",
		"time": "2010-05-27T11:36:58Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/26/afghanistan-human-security-withdrawal"
	},
	{
		"cluster": 9,
		"tags": [
			"sysstat",
			"sar",
			"performance",
			"monitoring",
			"ops",
			"sysadmin",
			"server",
			"linux",
			"administration",
			"centos"
		],
		"y": -6.919402577271479,
		"x": 5.845905480222196,
		"extended": "",
		"description": "How To Monitor A System With Sysstat On Centos 4.3 | HowtoForge - Linux Howtos and Tutorials",
		"time": "2010-05-27T11:18:05Z",
		"href": "http://www.howtoforge.com/sysstat_monitoring_centos"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"liberalism",
			"politics",
			"childtrustfund",
			"society"
		],
		"y": 3.891865608915515,
		"x": 12.340410343421407,
		"extended": "",
		"description": "Stumbling and Mumbling: Families vs markets",
		"time": "2010-05-26T17:43:00Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2010/05/families-vs-markets.html"
	},
	{
		"cluster": 7,
		"tags": [
			"plotting",
			"mathemaics",
			"ruby",
			"data",
			"visualization",
			"programming"
		],
		"y": 5.8119298199307705,
		"x": -9.976271038333255,
		"extended": "",
		"description": "Tioga",
		"time": "2010-05-26T14:18:58Z",
		"href": "http://www.kitp.ucsb.edu/~paxton/tioga.html#intro"
	},
	{
		"cluster": 5,
		"tags": [
			"incanter",
			"java",
			"stats",
			"clojure",
			"lisp",
			"scheme",
			"statistics",
			"visualization",
			"r",
			"programming",
			"graphics",
			"math"
		],
		"y": 2.332082188602027,
		"x": -6.363643441527992,
		"extended": "",
		"description": "Incanter: Statistical Computing and Graphics Environment for Clojure",
		"time": "2010-05-26T14:18:30Z",
		"href": "http://incanter.org/"
	},
	{
		"cluster": 7,
		"tags": [
			"r",
			"ruby",
			"statistics",
			"programming",
			"gem",
			"development"
		],
		"y": 7.739901648013529,
		"x": -9.477358167334799,
		"extended": "",
		"description": "alexgutteridge's rsruby at master - GitHub",
		"time": "2010-05-26T14:15:00Z",
		"href": "http://github.com/alexgutteridge/rsruby"
	},
	{
		"cluster": 5,
		"tags": [
			"statistics",
			"mathematics",
			"books",
			"list",
			"learniing",
			"resources"
		],
		"y": -7.203522083585454,
		"x": -5.181212617954087,
		"extended": "",
		"description": "statistics - book list",
		"time": "2010-05-26T14:13:26Z",
		"href": "http://www.meandeviation.com/tutorials/stats/notes/booklist.html"
	},
	{
		"cluster": 1,
		"tags": [
			"copyright",
			"art",
			"culture",
			"business",
			"appropriation"
		],
		"y": -9.516312580293949,
		"x": 2.184660128235655,
		"extended": "",
		"description": "NEWSgrist - where spin is art: Why referencing isn't 'stealing'",
		"time": "2010-05-26T13:15:59Z",
		"href": "http://newsgrist.typepad.com/underbelly/2010/05/why-referencing-isnt-stealing.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+typepad%2Fnewsgrist%2Funderbelly+(NEWSgrist+-+where+spin+is+art)&utm_content=Google+Reader"
	},
	{
		"cluster": 7,
		"tags": [
			"technicaldebt",
			"technical",
			"debt",
			"development",
			"agile",
			"architecture",
			"programming",
			"business",
			"strategy",
			"management"
		],
		"y": 7.992986510950475,
		"x": 0.18693678074139805,
		"extended": "",
		"description": "Coding Horror: Paying Down Your Technical Debt",
		"time": "2010-05-26T10:31:20Z",
		"href": "http://www.codinghorror.com/blog/2009/02/paying-down-your-technical-debt.html"
	},
	{
		"cluster": 18,
		"tags": [
			"technicaldebt",
			"debt",
			"metrics",
			"technical",
			"analysis",
			"finance",
			"business",
			"development",
			"software",
			"refactoring",
			"agile"
		],
		"y": 7.954214257763061,
		"x": 0.3764953870363928,
		"extended": "",
		"description": "Technical Debt on Your Balance Sheet « The Agile Executive",
		"time": "2010-05-26T10:27:09Z",
		"href": "http://theagileexecutive.com/2009/09/29/technical-debt-on-your-balance-sheet/"
	},
	{
		"cluster": 18,
		"tags": [
			"technicaldebt",
			"debt",
			"technical",
			"programming",
			"development",
			"software",
			"management",
			"business",
			"agile",
			"productivity",
			"strategy",
			"methodology",
			"finance"
		],
		"y": 7.988469034988498,
		"x": 0.22558685564327668,
		"extended": "",
		"description": "Technical Debt - 10x Software Development",
		"time": "2010-05-26T10:23:41Z",
		"href": "http://blogs.construx.com/blogs/stevemcc/archive/2007/11/01/technical-debt-2.aspx"
	},
	{
		"cluster": 13,
		"tags": [
			"debt",
			"finance",
			"economics",
			"politics",
			"cuts",
			"recession",
			"fiscalpolicy",
			"policy",
			"nationaldebt"
		],
		"y": 10.370576694084761,
		"x": 8.008047172355566,
		"extended": "",
		"description": "New Statesman - Why the debt hysterics have got it wrong",
		"time": "2010-05-25T17:00:13Z",
		"href": "http://www.newstatesman.com/blogs/the-staggers/2010/05/austerity-cuts-style-debt-imf"
	},
	{
		"cluster": 8,
		"tags": [
			"investment",
			"business",
			"shares",
			"startup",
			"internet",
			"technology",
			"exchange",
			"economics",
			"online",
			"auction",
			"clearinghouse",
			"finance"
		],
		"y": 8.298653342857637,
		"x": 5.396648040741379,
		"extended": "",
		"description": "Making Markets In Misfit Securities - Forbes.com",
		"time": "2010-05-25T16:22:58Z",
		"href": "http://www.forbes.com/forbes/2010/0607/entrepreneurs-auction-rate-securities-cdo-facebook-lord-of-liquidity.html"
	},
	{
		"cluster": 10,
		"tags": [
			"economy",
			"politics",
			"fiscal",
			"policy",
			"finance",
			"cuts",
			"recession",
			"keynes"
		],
		"y": 10.279439698404667,
		"x": 7.933856616128514,
		"extended": "",
		"description": "Stumbling and Mumbling: WEHT \"efficiency savings\"",
		"time": "2010-05-25T13:38:31Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2010/05/weht-efficiency-savings.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"coalition",
			"libdems",
			"tories",
			"parliament",
			"society"
		],
		"y": 3.709747923187368,
		"x": 11.115933831953376,
		"extended": "Some look at any deal between any two parties (and there are a lot of them across the UK) as selling out and betraying principles. I don’t think that’s right.\n\nThe reality is that different parties and politicians have a lot more in common than they, or their supporters, often want to admit. That parties – themselves broad churches – have always worked together and have always had a great deal they agree on, as well as big chunks they don’t.\n",
		"description": "Liberal Democrat Voice: All our parties have more in common than we’d like to admit",
		"time": "2010-05-25T12:58:36Z",
		"href": "http://www.libdemvoice.org/all-our-parties-have-more-in-common-than-theyd-like-to-admit-19665.html"
	},
	{
		"cluster": 4,
		"tags": [
			"edsl",
			"haskell",
			"programming",
			"dsl",
			"functional",
			"development",
			"presentation",
			"typesystems",
			"types",
			"stronglytyped"
		],
		"y": -5.445076197999078,
		"x": -7.3103496731962245,
		"extended": "",
		"description": "InfoQ: Strongly Typed Domain Specific Embedded Languages",
		"time": "2010-05-25T11:00:07Z",
		"href": "http://www.infoq.com/presentations/Strongly-Typed-DSEL-Lennart-Augustsson"
	},
	{
		"cluster": 17,
		"tags": [
			"dsl",
			"programming",
			"development",
			"language",
			"book",
			"domainspecificlanguage",
			"computerscience"
		],
		"y": 3.042925531260413,
		"x": -10.812253518125177,
		"extended": "",
		"description": "DSL Book WIP",
		"time": "2010-05-25T09:44:18Z",
		"href": "http://martinfowler.com/dslwip/"
	},
	{
		"cluster": 13,
		"tags": [
			"finance",
			"banking",
			"education",
			"society",
			"politics",
			"economics",
			"citizenship"
		],
		"y": 9.928863102131242,
		"x": 7.283229415272785,
		"extended": "",
		"description": "FT.com / UK - Finance could benefit from people's trust",
		"time": "2010-05-25T09:32:30Z",
		"href": "http://www.ft.com/cms/s/0/1ec7ef38-6795-11df-a932-00144feab49a.html"
	},
	{
		"cluster": 7,
		"tags": [
			"testing",
			"unittest",
			"programming",
			"development",
			"unit",
			"test",
			"tdd"
		],
		"y": 7.4551036407464855,
		"x": -7.265311145182542,
		"extended": "",
		"description": "It's OK Not to Write Unit Tests - cashto's blog - Home - MSDN Blogs",
		"time": "2010-05-25T09:20:11Z",
		"href": "http://blogs.msdn.com/b/cashto/archive/2009/03/31/it-s-ok-not-to-write-unit-tests.aspx"
	},
	{
		"cluster": 13,
		"tags": [
			"keynes",
			"economics",
			"macroeconomics",
			"policy",
			"monetary",
			"employment",
			"politics"
		],
		"y": 10.22366268252498,
		"x": 9.150063111734163,
		"extended": "",
		"description": "Keynes's General Theory - Introduction",
		"time": "2010-05-24T23:04:56Z",
		"href": "http://homepage.newschool.edu/het/essays/keynes/gtintro.htm"
	},
	{
		"cluster": 10,
		"tags": [
			"education",
			"access",
			"society",
			"politics",
			"wealth",
			"socialjustice"
		],
		"y": 3.2169538934442183,
		"x": 12.88383791093539,
		"extended": "",
		"description": "Plan after plan fails to make Oxbridge access fair. There is another way | George Monbiot | Comment is free | The Guardian",
		"time": "2010-05-24T22:55:00Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/24/oxbridge-access-fair-top-universities"
	},
	{
		"cluster": 13,
		"tags": [
			"politcs",
			"economics",
			"cuts",
			"finance",
			"business",
			"taxation",
			"recession"
		],
		"y": 9.112275967109186,
		"x": 6.731997540802904,
		"extended": "",
		"description": "These cuts won't hurt a bit. Unless you're young or poor | Polly Toynbee | Comment is free | The Guardian",
		"time": "2010-05-24T22:54:36Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/24/cuts-george-osborne-young-elderly"
	},
	{
		"cluster": 13,
		"tags": [
			"keynes",
			"economics",
			"generaltheory",
			"employment",
			"interest",
			"capital",
			"inflation",
			"politics"
		],
		"y": 9.17301977203198,
		"x": 8.765914472411604,
		"extended": "",
		"description": "Economist's View: Paul Krugman's Introduction to Keynes' General Theory",
		"time": "2010-05-24T22:54:24Z",
		"href": "http://economistsview.typepad.com/economistsview/2006/03/paul_krugmans_i.html"
	},
	{
		"cluster": 16,
		"tags": [
			"orm",
			"database",
			"design",
			"architecture",
			"modeling",
			"programming",
			"informationscience",
			"objectrolemodelling",
			"technology",
			"information",
			"data",
			"schema"
		],
		"y": 3.173363115634447,
		"x": -3.7921916711561345,
		"extended": "",
		"description": "ORM in Detail",
		"time": "2010-05-24T15:44:42Z",
		"href": "http://www.orm.net/overview.html"
	},
	{
		"cluster": 10,
		"tags": [
			"marxism",
			"socialism",
			"zizek",
			"politics",
			"communism",
			"democracy",
			"liberty",
			"authoritarianism",
			"left"
		],
		"y": 3.0347707226013845,
		"x": 9.9274976875195,
		"extended": "",
		"description": "Dissent Magazine: Arguing the World The New Authoritarian Marxism (2): An Anti-Democratic Theory of Socialism",
		"time": "2010-05-24T15:05:39Z",
		"href": "http://www.dissentmagazine.org/atw.php?id=146"
	},
	{
		"cluster": 14,
		"tags": [
			"psychology",
			"ux",
			"usability",
			"design",
			"ui",
			"research",
			"interface",
			"web"
		],
		"y": 1.5384067800967274,
		"x": 1.005946216073811,
		"extended": "",
		"description": "The Psychologist’s View of UX Design | UX Magazine",
		"time": "2010-05-21T14:02:02Z",
		"href": "http://www.uxmag.com/design/the-psychologists-view-of-ux-design"
	},
	{
		"cluster": 2,
		"tags": [
			"rdf",
			"semantoc",
			"web",
			"reference",
			"tutorial",
			"semanticweb",
			"documentation",
			"ontology",
			"primer",
			"semweb"
		],
		"y": 1.9246966156611294,
		"x": 2.389526184945191,
		"extended": "",
		"description": "RDF Primer Primer",
		"time": "2010-05-20T16:53:38Z",
		"href": "http://notabug.com/2002/rdfprimer/"
	},
	{
		"cluster": 12,
		"tags": [
			"rdf",
			"semanticweb",
			"semantic",
			"web",
			"opengraph",
			"facebook",
			"data",
			"internet",
			"programming",
			"technology",
			"development"
		],
		"y": 2.174819719669584,
		"x": 2.2534419459123476,
		"extended": "",
		"description": "Thanks for the Semantic Web Facebook (I still don't like you though)",
		"time": "2010-05-20T16:48:05Z",
		"href": "http://cykod.com/blog/post/2010-05-thanks-for-the-semantic-web-facebook"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"airtunes",
			"airport",
			"audio",
			"howto",
			"ubuntu",
			"music",
			"computer",
			"technology",
			"raop"
		],
		"y": -8.346152028256991,
		"x": 4.00010561169308,
		"extended": "",
		"description": "ok, we don't have sugar, beaters or measuring cups - streaming to Airtunes (Airport Express) with PulseAudio",
		"time": "2010-05-20T09:46:57Z",
		"href": "http://dannipenguin.livejournal.com/284431.html"
	},
	{
		"cluster": 12,
		"tags": [
			"dojo",
			"javascript",
			"canvas",
			"graphics",
			"browser",
			"internet",
			"programming",
			"web",
			"gfx",
			"development",
			"visualization"
		],
		"y": 10.340833252001365,
		"x": -3.62512029480934,
		"extended": "",
		"description": "Dojo: The Definitive Guide » gfx",
		"time": "2010-05-19T13:17:01Z",
		"href": "http://dojotdg.zaffra.com/tag/gfx/"
	},
	{
		"cluster": 14,
		"tags": [
			"architecture",
			"technology",
			"design",
			"cities",
			"psychogeography",
			"interaction",
			"networks"
		],
		"y": -9.883513202427837,
		"x": -0.7251470568419707,
		"extended": "",
		"description": "People Are Walking Architecture, or making NearlyNets with MujiComp, January 2010",
		"time": "2010-05-19T08:23:52Z",
		"href": "http://www.scribd.com/doc/31533915/People-Are-Walking-Architecture-or-making-NearlyNets-with-MujiComp-January-2010"
	},
	{
		"cluster": 15,
		"tags": [
			"google",
			"mathematics",
			"computerscience",
			"pagerank",
			"search",
			"matrix",
			"multiplication",
			"linear",
			"algebra",
			"linearalgebra",
			"graphs",
			"probability",
			"discrecte",
			"DAG"
		],
		"y": -3.8138632552218583,
		"x": -5.574716202013187,
		"extended": "",
		"description": "the math behind Google",
		"time": "2010-05-19T08:03:18Z",
		"href": "http://www.math.nyu.edu/~neylon/googlemath/index.html"
	},
	{
		"cluster": 9,
		"tags": [
			"music",
			"linux",
			"software",
			"audio"
		],
		"y": -8.726747051957032,
		"x": 3.7925308284910373,
		"extended": "",
		"description": "SooperLooper - Live Looping Sampler",
		"time": "2010-05-18T12:00:57Z",
		"href": "http://sonosaurus.com/sooperlooper/"
	},
	{
		"cluster": 9,
		"tags": [
			"music",
			"linux",
			"software",
			"audio"
		],
		"y": -8.662151737518826,
		"x": 3.7917771559212827,
		"extended": "",
		"description": "Freewheeling",
		"time": "2010-05-18T12:00:45Z",
		"href": "http://freewheeling.sourceforge.net/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"society",
			"culture",
			"religion",
			"politics",
			"capitalism"
		],
		"y": 3.735916029662595,
		"x": 12.588267060114099,
		"extended": "",
		"description": "Brainfood: Are the markets our new religion? | Comment is free | The Guardian",
		"time": "2010-05-18T08:12:08Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/18/brain-food-markets-politics-religion"
	},
	{
		"cluster": 7,
		"tags": [
			"music",
			"ruby",
			"audio",
			"synthesizer",
			"library",
			"programming"
		],
		"y": 5.967652889847593,
		"x": -9.970562787460524,
		"extended": "",
		"description": "mental's bloopsaphone at master - GitHub",
		"time": "2010-05-17T11:01:23Z",
		"href": "http://github.com/mental/bloopsaphone"
	},
	{
		"cluster": 13,
		"tags": [
			"greece",
			"economics",
			"finance",
			"business",
			"stimuluspackage",
			"politics",
			"europe",
			"capitalism"
		],
		"y": 9.123629284357667,
		"x": 7.4175594151281405,
		"extended": "",
		"description": "Greece on Edge of the Abyss | openDemocracy",
		"time": "2010-05-17T10:40:59Z",
		"href": "http://www.opendemocracy.net/chronis-polychroniou/greece-on-edge-of-abyss"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"threading",
			"programming",
			"development",
			"parallelism",
			"parallel",
			"threads",
			"concurrency"
		],
		"y": 7.038885164733705,
		"x": -8.926396364836412,
		"extended": "",
		"description": "taw's blog: Very simple parallelization with Ruby",
		"time": "2010-05-17T10:36:21Z",
		"href": "http://t-a-w.blogspot.com/2010/05/very-simple-parallelization-with-ruby.html"
	},
	{
		"cluster": 6,
		"tags": [
			"music",
			"industry",
			"politics",
			"economics",
			"business",
			"law",
			"copyright"
		],
		"y": 5.4694099624092996,
		"x": 5.485716174658094,
		"extended": "Not only should the digital market be single, it should also be open and fair. Nobody can blame companies for trying to get the best deal they can, but even with the best intentions it is sometimes too easy to overstep the mark. The list of ways music rights owners can line their own pockets at the expense of artists, investors in and developers of music services, and other music stakeholders, is a long and unedifying one. It might temporarily be good for the company concerned, but it is bad for the market and bad for business.\n",
		"description": "Open Rights Group | The Music Industry Needs Fair and Open Markets, Not Regulation",
		"time": "2010-05-14T11:20:37Z",
		"href": "http://www.openrightsgroup.org/blog/2010/the-music-industry-needs-fair-and-open-markets-not-regulation"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"election",
			"coalition",
			"parliament",
			"2010",
			"uk",
			"government",
			"libdems",
			"labour",
			"conservatives"
		],
		"y": 4.354706714954613,
		"x": 9.790815418452768,
		"extended": "Liberal Democrat policies and our ideals getting far more of what they wanted than they ever expected. So why all the complaints from the outraged left? I can’t help feeling that it’s because those people who felt Labour had lost its way imprinted their vision of what the Labour Party should have been on the Lib Dems. They viewed, as many Labour MPs do, the Liberal Democrats as an extension of the Labour Party. The truth of the matter is that we were never Labour’s surrogate party.\n",
		"description": "Opinion: We do not belong to Labour!",
		"time": "2010-05-14T11:16:08Z",
		"href": "http://www.libdemvoice.org/opinion-we-do-not-belong-to-labour-19481.html"
	},
	{
		"cluster": 1,
		"tags": [
			"books",
			"history",
			"culture",
			"literature",
			"destruction",
			"society"
		],
		"y": -3.517707921215417,
		"x": 11.665450287961173,
		"extended": "",
		"description": "Blog All Dog-Eared Pages: A Universal History of the Destruction of Books | booktwo.org",
		"time": "2010-05-14T08:17:28Z",
		"href": "http://booktwo.org/notebook/a-universal-history-of-the-destruction-of-books/"
	},
	{
		"cluster": 14,
		"tags": [
			"textbooks",
			"reading",
			"hci",
			"interaction",
			"technology",
			"design",
			"resources",
			"learning",
			"interface",
			"usability",
			"books",
			"gui"
		],
		"y": -7.544640056362093,
		"x": -5.277653991799355,
		"extended": "",
		"description": "HCI Textbooks",
		"time": "2010-05-13T22:20:43Z",
		"href": "http://melody.syr.edu/pzhang/t_hci_bk97.cgi"
	},
	{
		"cluster": 10,
		"tags": [
			"election",
			"libdems",
			"conservatives",
			"2010",
			"uk",
			"politics",
			"parliament",
			"coalition",
			"government"
		],
		"y": 4.35014518409582,
		"x": 9.814344131249616,
		"extended": "I also hate to break it to Labourites, but many still don’t see Libdems as rational voters who might actually dislike large parts of the Labour agenda. Might be something to do with the whole Iraq war, ID cards, control orders, 42 days, 10p tax, little progress on the environment, wasting money on Trident etc. We still don’t know what concessions Labour offered, but it was pretty obvious many of them gave up trying after GB’s resignation.\n",
		"description": "Pickled Politics » How long will this ‘betrayal’ charge carry on for?",
		"time": "2010-05-13T18:44:51Z",
		"href": "http://www.pickledpolitics.com/archives/8622"
	},
	{
		"cluster": 10,
		"tags": [
			"thatcherism",
			"history",
			"politics",
			"uk",
			"election",
			"2010",
			"government",
			"libdem",
			"conservative",
			"coalition",
			"parliament"
		],
		"y": 4.353548305674864,
		"x": 9.65452101241865,
		"extended": "The centerpiece of what has happened, however, is the transformation of the Tory Party. All those cheap and lazy jibes about toffs taking us back to Thatcher-style polarisation have been shown to be so much vapour. On the contrary, what Cameron has done is to return Toryism to its one-nation Whig tradition. He has broken the spell that Thatcherism and its conviction politics has had over his party since the coup that ousted her in 1990. And his combining with Nick Clegg could break the grip of Thatcher’s wider political culture over British politics as a whole.\n",
		"description": "The End of Thatcherism | openDemocracy",
		"time": "2010-05-13T17:26:23Z",
		"href": "http://www.opendemocracy.net/anthony-barnett/end-of-thatcherism"
	},
	{
		"cluster": 10,
		"tags": [
			"behaviour",
			"behavioural",
			"psychology",
			"libdem",
			"conservative",
			"coalition",
			"politics",
			"election",
			"2010",
			"parliament",
			"uk",
			"government"
		],
		"y": 4.350360967321947,
		"x": 9.643891574084094,
		"extended": "Several on the Left are predicting that the Libservative coalition will break up nastily. Maybe. But I think Andrew makes a good point - there are powerful psychological mechanisms which might keep it together.\nOne of these is our desire to be consistent. Once we have embarked upon a course of action, however daft, we tend to stick with it. This could be because of an endowment effect; things become valuable once we have them. Or it might be because of the confirmation bias; having taken a decision, we look for evidence to suggest we were right.\n",
		"description": "Stumbling and Mumbling: Coalitions and commitment",
		"time": "2010-05-13T17:20:10Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2010/05/coalitions-and-commitment.html"
	},
	{
		"cluster": 10,
		"tags": [
			"libdem",
			"conservative",
			"coalition",
			"parliament",
			"election",
			"2010",
			"government",
			"politics",
			"uk"
		],
		"y": 4.3515102470547244,
		"x": 9.677684277381347,
		"extended": "The reality is the Lords are not the real obstacle to democracy in this country. The fundamental obstacle is the indelible link between money and politics in liberal capitalist democracies - a structural problem that needs to be brought urgently to the table to genuinely reform British politics.\n",
		"description": "The Samosa : Coalition of the willing - the 'new politics' of Clegg and Cameron",
		"time": "2010-05-13T17:16:29Z",
		"href": "http://www.thesamosa.co.uk/index.php/comment-and-analysis/politics/351-coalition-of-the-willing-the-new-politics-of-clegg-and-cameron.html"
	},
	{
		"cluster": 10,
		"tags": [
			"libdems",
			"politics",
			"government",
			"parliament",
			"diversity",
			"equality"
		],
		"y": 4.0782019515325105,
		"x": 10.751831459339108,
		"extended": "",
		"description": "The party’s diversity dilemma",
		"time": "2010-05-13T12:26:08Z",
		"href": "http://www.libdemvoice.org/the-partys-diversity-dilemma-19473.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"coalition",
			"government",
			"election",
			"2010",
			"parliament",
			"uk"
		],
		"y": 4.347930731988799,
		"x": 9.741649198619639,
		"extended": "Only one aspect of this period of change is entirely heartening. Labour now has the time and space to consider how the hell it ended up on the right of the Conservatives on civil liberties, and how the hell it managed to throw away all thoughts of Keynesianism until boom turned to bust, leaving Britain a hostage to the markets.\n",
		"description": "A coalition that holds out hope for all three parties | Comment is free | The Guardian",
		"time": "2010-05-13T12:23:48Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/13/coalition-government-clegg-cameron-labour"
	},
	{
		"cluster": 8,
		"tags": [
			"4ip",
			"business",
			"pitching",
			"proposals",
			"internet",
			"technology",
			"media"
		],
		"y": 4.949701734117894,
		"x": 4.351565902972577,
		"extended": "",
		"description": "The Seven Deadly Sins « 4iP",
		"time": "2010-05-13T12:15:56Z",
		"href": "http://www.4ip.org.uk/2010/05/the-seven-deadly-sins/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"mathematics",
			"gametheory",
			"politics",
			"negotiation",
			"libdems",
			"hunglarliament",
			"election"
		],
		"y": 8.132438051955157,
		"x": 9.458057104722462,
		"extended": "Senior Liberal Democrats will prepare for an \"auction for power\" in the event of a hung parliament by using applied mathematics to predict the future.\n\nIn the event of there being no clear election result, a small team plans to stage \"war game\" negotiations with the Conservatives and Labour, using scenario planning techniques honed by Vince Cable, deputy leader, when he was chief economist at Shell.\n",
		"description": "FT.com / UK - Senior Lib Dems plot 'auction for power' in hung parliament",
		"time": "2010-05-11T15:05:52Z",
		"href": "http://www.ft.com/cms/s/0/56394bc6-0c4a-11de-b87d-0000779fd2ac.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"reform",
			"election",
			"electoralreform",
			"uk",
			"parliament",
			"pr",
			"proportionalrepresentation"
		],
		"y": 4.577086147277835,
		"x": 9.92308423145523,
		"extended": "Had the Lib Dems gone first to Labour, they would have been acting in a manner that was neither liberal nor democratic, and they would also have been illustrating that hung parliaments, more common under proportional representation, were easily manipulated to achieve perverse and highly unstable results.\n",
		"description": "Election 2010: The Lib Dems can balance parliament | Deborah Orr | Comment is free | guardian.co.uk",
		"time": "2010-05-10T14:46:54Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/10/election-2010-lib-dems-balance-parliament"
	},
	{
		"cluster": 10,
		"tags": [
			"election",
			"proportionalrepresentation",
			"pr",
			"politics",
			"uk",
			"society",
			"libdems",
			"alliance",
			"conservatices",
			"parliament",
			"history",
			"democracy"
		],
		"y": 4.259278724012862,
		"x": 10.369013208392612,
		"extended": "",
		"description": "Could a Lib-Con alliance split the party? | Left Foot Forward",
		"time": "2010-05-10T14:43:49Z",
		"href": "http://www.leftfootforward.org/2010/05/could-a-lib-con-alliance-split-the-party/"
	},
	{
		"cluster": 2,
		"tags": [
			"cantor",
			"settheory",
			"hilbert",
			"infiinity",
			"diagonalisation"
		],
		"y": -3.058556172360225,
		"x": 4.128696805591054,
		"extended": "",
		"description": "The Hilbert Hotel - Opinionator Blog - NYTimes.com",
		"time": "2010-05-10T12:00:26Z",
		"href": "http://opinionator.blogs.nytimes.com/2010/05/09/the-hilbert-hotel/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"election",
			"pr",
			"proportionalrepresentation"
		],
		"y": 7.784905607097876,
		"x": 9.592852938887944,
		"extended": "",
		"description": "The people have spoken. Don't let the markets shout them down | Gary Younge | Comment is free | The Guardian",
		"time": "2010-05-10T10:46:40Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/10/people-markets-democracy-capitalism"
	},
	{
		"cluster": 10,
		"tags": [
			"pr",
			"politics",
			"uk",
			"election",
			"parliament",
			"reform",
			"electoralreform"
		],
		"y": 4.5503816368427765,
		"x": 9.910417650241294,
		"extended": "",
		"description": "Liberal Conspiracy » Politics of Persuasion on Proportional Representation",
		"time": "2010-05-10T10:08:59Z",
		"href": "http://liberalconspiracy.org/2010/05/09/politics-of-persuasion-on-proportional-representation/"
	},
	{
		"cluster": 17,
		"tags": [
			"funny",
			"programming",
			"computerscience",
			"languages",
			"history"
		],
		"y": 1.922120097526194,
		"x": -11.588227779087807,
		"extended": "2003 - A drunken Martin Odersky sees a Reese's Peanut Butter Cup ad featuring somebody's peanut butter getting on somebody else's chocolate and has an idea. He creates Scala, a language that unifies constructs from both object oriented and functional languages. This pisses off both groups and each promptly declares jihad.\n",
		"description": "One Div Zero: A Brief, Incomplete, and Mostly Wrong History of Programming Languages",
		"time": "2010-05-10T10:04:20Z",
		"href": "http://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html"
	},
	{
		"cluster": 10,
		"tags": [
			"pr",
			"voting",
			"election",
			"history",
			"electoralreform",
			"politics",
			"proportionalrepresentation"
		],
		"y": 7.1700908903149205,
		"x": 10.012166533672797,
		"extended": "\"Two hundred-odd years ago, you might have met a stout man of affairs, probably a Tory, who would have deplored the idea of extending voting rights and abolishing rotten boroughs: he was swiftly consigned to history by the Whigs and their Great Reform Act of 1832. A hundred years ago, you would have met the same type spluttering at the mention of votes for women; he was swept aside by the suffragettes.\n\nToday, that very same conservative voice will tell you that first past the post is the only system that can produce stable, decisive governments. But the view that says we have to tolerate an unfair voting system will go the way of all that self-serving opinion of the past.\"\n",
		"description": "Is this really the end of Punch and Judy politics? | Henry Porter | Comment is free | The Observer",
		"time": "2010-05-09T09:55:26Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/08/henry-porter-proportional-representation"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"hunngparliament",
			"liberaldemocrats",
			"election",
			"coalition"
		],
		"y": 8.306932736114268,
		"x": 9.174051655640413,
		"extended": "\"The Liberal Democrats have the opportunity to create a proper coalition government that can last for at least two or three years and transform the country. There can be fair voting, fair deficit reduction and fair capitalism\"\n",
		"description": "Forget the niceties, Nick, shun the Tories and join with Labour | Will Hutton | Comment is free | The Observer",
		"time": "2010-05-09T09:40:35Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/08/will-hutton-liberal-democrats-coalition"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"election",
			"uk",
			"society",
			"culture",
			"media"
		],
		"y": 1.0402777096091993,
		"x": 12.01498018500851,
		"extended": "\"The Tory press and all others who mourn the passing of the old order are missing a faint reason for hope. There is a chance that the break from the monarchical system could limit the horrible grovelling and self-censorship that disfigure British political culture\"\n",
		"description": "Now, at last, we may get over our sycophancy to power | Nick Cohen | Comment is free | The Observer",
		"time": "2010-05-09T09:35:43Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/may/09/david-cameron-proportional-representation"
	},
	{
		"cluster": 3,
		"tags": [
			"truth",
			"epistemology",
			"economics",
			"game",
			"incentive",
			"sociology",
			"society",
			"espionage",
			"politics",
			"warfare",
			"intelligence",
			"narrative",
			"criticism",
			"stories",
			"culture"
		],
		"y": 1.2826750609931425,
		"x": 13.439313810393799,
		"extended": "\"The proper function of spies is to remind those who rely on spies that the kinds of thing found out by spies can’t be trusted\"\n",
		"description": "Operation Mincemeat and spycraft in World War Two : The New Yorker",
		"time": "2010-05-07T15:56:45Z",
		"href": "http://www.newyorker.com/arts/critics/atlarge/2010/05/10/100510crat_atlarge_gladwell?currentPage=all"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"capitalism",
			"regulation",
			"markets",
			"politics",
			"adamsmith"
		],
		"y": 7.678424226185172,
		"x": 8.869201594064528,
		"extended": "",
		"description": "FT.com / Columnists / Samuel Brittan - A credo for a revived capitalism",
		"time": "2010-05-07T08:33:12Z",
		"href": "http://www.ft.com/cms/s/0/e6b9fd0e-593c-11df-adc3-00144feab49a.html?ftcamp=rss"
	},
	{
		"cluster": 4,
		"tags": [
			"monad",
			"haskell",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -5.458606659007999,
		"x": -9.621113525268745,
		"extended": "",
		"description": "A physical analogy for monads",
		"time": "2010-05-04T08:24:29Z",
		"href": "http://www.haskell.org/all_about_monads/html/analogy.html"
	},
	{
		"cluster": 5,
		"tags": [
			"machinelearning",
			"ai",
			"programming",
			"learning",
			"statistics",
			"mathematics",
			"development",
			"datamining",
			"algorithms",
			"tutorial",
			"r"
		],
		"y": -1.4416553752779573,
		"x": -6.792633162023389,
		"extended": "",
		"description": "Guide to Getting Started in Machine Learning | A Beautiful WWW",
		"time": "2010-05-04T08:21:00Z",
		"href": "http://abeautifulwww.com/2009/10/11/guide-to-getting-started-in-machine-learning/"
	},
	{
		"cluster": 5,
		"tags": [
			"data",
			"statistics",
			"ai",
			"reference",
			"datasets",
			"machinelearning",
			"computerscience",
			"programming"
		],
		"y": -1.150602740563695,
		"x": -6.648656275582319,
		"extended": "",
		"description": "UCI Machine Learning Repository",
		"time": "2010-05-04T08:20:05Z",
		"href": "http://archive.ics.uci.edu/ml/"
	},
	{
		"cluster": 15,
		"tags": [
			"godel",
			"mathematics",
			"logic",
			"reasoning",
			"learning",
			"education",
			"epistemology",
			"philosophy",
			"theology"
		],
		"y": -8.79986785722499,
		"x": -4.731399647498843,
		"extended": "A little bit of knowledge is a dangerous thing.\n\nThere's no shortage of stupidity in the world. And, alas, it comes in many, many different kinds. Among the ones that bug me, pretty much the worst is the stupidity that comes from believing that you know something that you don't.\n",
		"description": "The Danger When You Don't Know What You Don't Know : Good Math, Bad Math",
		"time": "2010-05-04T08:08:28Z",
		"href": "http://scienceblogs.com/goodmath/2010/05/the_danger_when_you_dont_know.php?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+scienceblogs%2FCyKN+(Good+Math%2C+Bad+Math)&utm_content=Google+Reader"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"macroeconomics",
			"politics",
			"finance",
			"recession",
			"debt",
			"policy",
			"society",
			"europe"
		],
		"y": 10.64520357929064,
		"x": 7.931913011744231,
		"extended": "",
		"description": "Cliches won't fix the financial crisis | Dean Baker | Comment is free | guardian.co.uk",
		"time": "2010-05-03T22:39:24Z",
		"href": "http://www.guardian.co.uk/commentisfree/cifamerica/2010/may/03/inflation-financial-crisis"
	},
	{
		"cluster": 7,
		"tags": [
			"steak",
			"cucumber",
			"ruby",
			"rails",
			"programming",
			"development",
			"testing",
			"test",
			"bdd",
			"acceptance",
			"features",
			"tdd"
		],
		"y": 8.38565735569696,
		"x": -5.391001796643979,
		"extended": "",
		"description": "Steak: because Cucumber is for vegetarians! - Jeff Kreeftmeijer",
		"time": "2010-05-03T15:28:31Z",
		"href": "http://jeffkreeftmeijer.com/2010/steak-because-cucumber-is-for-vegetarians/"
	},
	{
		"cluster": 2,
		"tags": [
			"xmonad",
			"gnome",
			"menubar",
			"ubuntu",
			"linuc",
			"configuration"
		],
		"y": -6.335098581682496,
		"x": 6.518581465339174,
		"extended": "",
		"description": "Installing xmonad log applet - HaskellWiki",
		"time": "2010-05-03T14:15:18Z",
		"href": "http://haskell.org/haskellwiki/Installing_xmonad_log_applet"
	},
	{
		"cluster": 9,
		"tags": [
			"xmonad",
			"gnome",
			"linux",
			"gnome-do",
			"configuration",
			"ubuntu",
			"windowmanager"
		],
		"y": -6.429347042638725,
		"x": 6.592397352500691,
		"extended": "",
		"description": "Tiling Window Manager (Xmonad) within Gnome with Gnome Do - Ubuntu Forums",
		"time": "2010-05-03T13:42:29Z",
		"href": "http://ubuntuforums.org/showthread.php?t=975329"
	},
	{
		"cluster": 9,
		"tags": [
			"firefox",
			"gnome",
			"gnome-do",
			"ubuntu",
			"linux",
			"windowmanager",
			"configuration"
		],
		"y": -6.444854601158046,
		"x": 6.607147987842137,
		"extended": "",
		"description": "Tiling Window Manager (Xmonad) within Gnome with Gnome Do - Ubuntu Forums",
		"time": "2010-05-03T13:34:16Z",
		"href": "http://swiss.ubuntuforums.org/showthread.php?t=975329"
	},
	{
		"cluster": 15,
		"tags": [
			"groups",
			"group",
			"theory",
			"symmetry",
			"mathematics",
			"bed",
			"mattress",
			"science"
		],
		"y": -7.110019030219965,
		"x": -2.3798495971399576,
		"extended": "",
		"description": "Group Think - Opinionator Blog - NYTimes.com",
		"time": "2010-05-02T22:09:31Z",
		"href": "http://opinionator.blogs.nytimes.com/2010/05/02/group-think/"
	},
	{
		"cluster": 9,
		"tags": [
			"iphone",
			"linux",
			"apple",
			"ipod",
			"software",
			"ubuntu"
		],
		"y": -6.1273410038656095,
		"x": 5.684928126376895,
		"extended": "",
		"description": "libimobiledevice - Teaching Penguins to talk to fruits",
		"time": "2010-05-02T12:16:54Z",
		"href": "http://libimobiledevice.org/"
	},
	{
		"cluster": 9,
		"tags": [
			"cd",
			"ubuntu",
			"linux",
			"howto",
			"livecd",
			"reference",
			"tutorial",
			"customization",
			"custom"
		],
		"y": -5.541300741844718,
		"x": 4.06963193804809,
		"extended": "",
		"description": "LiveCDCustomization - Community Ubuntu Documentation",
		"time": "2010-04-30T11:50:56Z",
		"href": "https://help.ubuntu.com/community/LiveCDCustomization"
	},
	{
		"cluster": 7,
		"tags": [
			"git",
			"bisect",
			"vcs",
			"dvcs",
			"development",
			"ruby",
			"rspec",
			"rails",
			"tdd",
			"testing",
			"programming",
			"debugging"
		],
		"y": 8.78434262307082,
		"x": -6.6835021960438965,
		"extended": "",
		"description": "Hunting bugs thru history",
		"time": "2010-04-29T10:39:16Z",
		"href": "http://phunkwork.com/post/460924983/hunting-bugs-thru-history#notes"
	},
	{
		"cluster": 5,
		"tags": [
			"nlp",
			"statistics",
			"ruby",
			"bayesian",
			"classification",
			"bayseanclassification",
			"bayes",
			"algorithms",
			"development",
			"programming",
			"mathematics",
			"computerscience"
		],
		"y": 2.7792294489312166,
		"x": -10.530208935065579,
		"extended": "",
		"description": "mperham's bayes_motel at master - GitHub",
		"time": "2010-04-29T10:36:21Z",
		"href": "http://github.com/mperham/bayes_motel"
	},
	{
		"cluster": 7,
		"tags": [
			"drx",
			"tk",
			"debug",
			"ruby",
			"gui",
			"object",
			"inspect",
			"development",
			"programming"
		],
		"y": 7.438428712480161,
		"x": -8.742894613508957,
		"extended": "",
		"description": "Visually Inspect Ruby Object Models with DrX",
		"time": "2010-04-29T10:35:40Z",
		"href": "http://www.rubyinside.com/drx-visually-inspect-ruby-objects-3233.html"
	},
	{
		"cluster": 8,
		"tags": [
			"iphone",
			"tether",
			"hack",
			"o2",
			"internet",
			"tethering",
			"connection",
			"settings"
		],
		"y": -4.360928185736858,
		"x": 4.354939627268759,
		"extended": "",
		"description": "Quickly Enable Internet Tethering with your iPhone (no jailbreak needed) | Free landscape SMS text message application for the iPhone, iPod Touch and Android",
		"time": "2010-04-28T15:55:48Z",
		"href": "http://www.jellysms.com/blog/enable-internet-tethering-with-your-iphone-in-2-minutes-on-o2-ireland-with-30-gm/"
	},
	{
		"cluster": 8,
		"tags": [
			"iphone",
			"linux",
			"usb",
			"internet",
			"driver",
			"kernel",
			"apple",
			"network",
			"ethernet",
			"tethering"
		],
		"y": -5.917391420250253,
		"x": 5.474224593996127,
		"extended": "",
		"description": "Diego Giagio :: Personal Website - iPhoneEthernetDriver",
		"time": "2010-04-28T15:10:53Z",
		"href": "http://giagio.com/wiki/moin.cgi/iPhoneEthernetDriver"
	},
	{
		"cluster": 9,
		"tags": [
			"ubuntu",
			"kernel",
			"linux",
			"howto",
			"sysadmin",
			"hack",
			"debian",
			"compile"
		],
		"y": -5.961472428962244,
		"x": 5.020328932422935,
		"extended": "",
		"description": "How to compile a kernel for Ubuntu Karmic | My Thoughts",
		"time": "2010-04-28T15:10:35Z",
		"href": "http://blog.avirtualhome.com/2009/11/03/how-to-compile-a-kernel-for-ubuntu-karmic/"
	},
	{
		"cluster": 9,
		"tags": [
			"rhythmbox",
			"opml",
			"import",
			"ubunutu",
			"script",
			"help",
			"linux",
			"podcasts"
		],
		"y": -4.672655271093039,
		"x": 5.115985792175856,
		"extended": "",
		"description": "My (Tech) User Stories: OPML import for Rhythmbox, kind of",
		"time": "2010-04-28T13:46:41Z",
		"href": "http://userstories.blogspot.com/2009/05/opml-import-for-rhythmbox-kind-of.html"
	},
	{
		"cluster": 10,
		"tags": [
			"feminism",
			"politics",
			"islamism",
			"humanrights",
			"rights",
			"activism",
			"islam",
			"amnesty",
			"gitasahgal",
			"gita",
			"sahgal",
			"women"
		],
		"y": 4.422659212703465,
		"x": 11.845776035111042,
		"extended": "",
		"description": "Gita Sahgal's dispute with Amnesty International puts human rights group in the dock | World news | The Observer",
		"time": "2010-04-27T11:10:02Z",
		"href": "http://www.guardian.co.uk/world/2010/apr/25/gita-sahgal-amnesty-international"
	},
	{
		"cluster": 13,
		"tags": [
			"clayshirky",
			"clay",
			"shirkey",
			"aargument",
			"jouirnalism",
			"economics",
			"sociology",
			"technology",
			"socialmedia",
			"gubbins",
			"idiocy",
			"writing",
			"communication",
			"theory",
			"shirky"
		],
		"y": 6.804795897446158,
		"x": 6.698678989147836,
		"extended": "",
		"description": "Wikibollocks: The Shirky Rules - Whimsley",
		"time": "2010-04-27T10:35:49Z",
		"href": "http://whimsley.typepad.com/whimsley/2010/04/wikibollocks-the-shirky-rules.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+Whimsley+(Whimsley)&utm_content=Google+Reader"
	},
	{
		"cluster": 9,
		"tags": [
			"simplenote",
			"sync",
			"iphone",
			"linux",
			"perl",
			"script",
			"productivity",
			"notes",
			"software"
		],
		"y": -7.3332448692593495,
		"x": 4.585622108522152,
		"extended": ".simplenotesyncrc\n",
		"description": "SimplenoteSync",
		"time": "2010-04-26T18:03:45Z",
		"href": "http://fletcherpenney.net/other_projects/simplenotesync/"
	},
	{
		"cluster": 15,
		"tags": [
			"invariants",
			"algorithms",
			"computerscience",
			"programming",
			"development",
			"methodolofgy",
			"search",
			"binarysearch",
			"mathematics",
			"tractability",
			"proof"
		],
		"y": -0.08958478009126254,
		"x": -11.565899675359601,
		"extended": "",
		"description": "Writing correct code, part 1: invariants (binary search part 4a) « The Reinvigorated Programmer",
		"time": "2010-04-26T12:45:18Z",
		"href": "http://reprog.wordpress.com/2010/04/25/writing-correct-code-part-1-invariants-binary-search-part-4a/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"hungparliament",
			"election",
			"libdems",
			"conservative",
			"coalition",
			"strategy",
			"conservatives"
		],
		"y": 4.392499652632946,
		"x": 10.140088142236378,
		"extended": "",
		"description": "A Conservative-Lib Dem coalition is most likely, but it's not sustainable | Jackie Ashley | Comment is free | The Guardian",
		"time": "2010-04-26T08:10:02Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/apr/25/cameron-clegg-conservatives-coalition-differences"
	},
	{
		"cluster": 15,
		"tags": [
			"fourfours",
			"mathematics",
			"puzzles",
			"fun",
			"education",
			"grandad"
		],
		"y": -8.702094321490684,
		"x": -4.42217866809447,
		"extended": "",
		"description": "Four Fours",
		"time": "2010-04-23T14:17:28Z",
		"href": "http://www.wheels.org/math/44s.html"
	},
	{
		"cluster": 9,
		"tags": [
			"screen",
			"linux",
			"pairing",
			"sysadmin",
			"howto",
			"sharing"
		],
		"y": -5.47667586317546,
		"x": 4.147486942542362,
		"extended": "",
		"description": "Linux.com :: Using screen for remote interaction",
		"time": "2010-04-23T14:17:11Z",
		"href": "http://www.linux.com/archive/feed/56443"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"history",
			"election",
			"parliament",
			"libdems"
		],
		"y": 4.280141710851826,
		"x": 10.408581922986016,
		"extended": "",
		"description": "FT.com / Comment / Opinion - Britain’s third party looks to history",
		"time": "2010-04-23T10:46:45Z",
		"href": "http://www.ft.com/cms/s/0/f17a2bfe-4caa-11df-9977-00144feab49a.html?ftcamp=rss"
	},
	{
		"cluster": 15,
		"tags": [
			"generatingfunctions",
			"generating",
			"mathematics",
			"learning",
			"books",
			"ebook",
			"combinatorics"
		],
		"y": -7.505513400871576,
		"x": -5.1288519175575775,
		"extended": "",
		"description": "Download generatingfunctionology",
		"time": "2010-04-22T14:11:00Z",
		"href": "http://www.math.upenn.edu/~wilf/DownldGF.html"
	},
	{
		"cluster": 9,
		"tags": [
			"ubuntu",
			"twitter",
			"tweetdeck",
			"64bit",
			"linux",
			"adobe",
			"adobeair",
			"install",
			"getlibrary"
		],
		"y": -6.077995113275775,
		"x": 5.953337562368732,
		"extended": "",
		"description": "Easy TweetDeck in Ubuntu 64 bit | OSS Ramblings",
		"time": "2010-04-19T15:43:46Z",
		"href": "http://www.ossramblings.com/tweetdeck_in_64_bit_ubuntu"
	},
	{
		"cluster": 9,
		"tags": [
			"gnome",
			"ubuntu",
			"kubunu",
			"xubuntu",
			"linux",
			"install",
			"kubuntu",
			"howto",
			"software",
			"uninstall"
		],
		"y": -6.1464133224326645,
		"x": 5.839631904414556,
		"extended": "",
		"description": "Getting Back to a Pure Gnome on Ubuntu",
		"time": "2010-04-16T22:53:05Z",
		"href": "http://www.psychocats.net/ubuntu/puregnome"
	},
	{
		"cluster": 10,
		"tags": [
			"housing",
			"politics",
			"society"
		],
		"y": 2.7241876295033634,
		"x": 12.140703401819545,
		"extended": "",
		"description": "The Samosa : ELECTION 2010: The bankrupt ideology of housing",
		"time": "2010-04-16T22:51:47Z",
		"href": "http://www.thesamosa.co.uk/index.php/comment-and-analysis/politics/319-election-2010-the-bankrupt-ideology-of-housing.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"rhetoric",
			"culture",
			"television",
			"clegg",
			"society"
		],
		"y": 0.7331817712857679,
		"x": 12.3845112357545,
		"extended": "",
		"description": "New Statesman - Nick Clegg and the art of dialectic",
		"time": "2010-04-16T13:31:27Z",
		"href": "http://www.newstatesman.com/blogs/cultural-capital/2010/04/debates-rhetoric-clegg"
	},
	{
		"cluster": 2,
		"tags": [
			"google",
			"search",
			"firefox",
			"tools",
			"browser",
			"hack"
		],
		"y": -2.7952799506824975,
		"x": 4.268838702728199,
		"extended": "",
		"description": "Search from the Address Bar in Firefox | Firefox Facts",
		"time": "2010-04-16T13:22:49Z",
		"href": "http://www.firefoxfacts.com/2008/09/10/search-from-the-address-bar-in-firefox/"
	},
	{
		"cluster": 6,
		"tags": [
			"internet",
			"copyright",
			"debill",
			"politics"
		],
		"y": 4.963074966873505,
		"x": 5.981247847029132,
		"extended": "",
		"description": "New Statesman - The Digital Economy Bill has betrayed the young",
		"time": "2010-04-15T10:55:00Z",
		"href": "http://www.newstatesman.com/blogs/the-staggers/2010/04/digital-generation-young"
	},
	{
		"cluster": 13,
		"tags": [
			"consumerism",
			"economics",
			"aspiration",
			"language",
			"linguistics",
			"society",
			"culture",
			"attitudes",
			"consumption",
			"politics"
		],
		"y": -0.6087932957376506,
		"x": 13.171424602286045,
		"extended": "",
		"description": "LRB · Stefan Collini · Blahspeak",
		"time": "2010-04-14T13:22:59Z",
		"href": "http://www.lrb.co.uk/v32/n07/stefan-collini/blahspeak#"
	},
	{
		"cluster": 11,
		"tags": [
			"unix",
			"linux",
			"osx",
			"dd",
			"usb",
			"disk",
			"drive",
			"format",
			"iso",
			"image",
			"burn",
			"stick",
			"apple",
			"mac",
			"boot",
			"shell",
			"terminal"
		],
		"y": -5.914340322022522,
		"x": 2.9578323934995625,
		"extended": "",
		"description": "Doc’s Tech Notes: Create bootable USB drive using the OS X terminal",
		"time": "2010-04-12T10:31:14Z",
		"href": "http://www.docstechnotes.com/2009/05/create-bootable-usb-drive-using-os-x.html"
	},
	{
		"cluster": 15,
		"tags": [
			"calculus",
			"mathematics",
			"education",
			"derivatives"
		],
		"y": -8.667548388880709,
		"x": -4.4841464206453265,
		"extended": "",
		"description": "Change We Can Believe In - Opinionator Blog - NYTimes.com",
		"time": "2010-04-11T22:30:27Z",
		"href": "http://opinionator.blogs.nytimes.com/2010/04/11/change-we-can-believe-in/"
	},
	{
		"cluster": 13,
		"tags": [
			"culture",
			"society",
			"rebellion",
			"commodification",
			"capitalism",
			"economics",
			"politics",
			"commerce",
			"business"
		],
		"y": 3.870615538655905,
		"x": 12.838394838969117,
		"extended": "Corporate America is not an oppressor but a sponsor of fun, provider of lifestyle accoutrements, facilitator of carnival, our slang-speaking partner in the quest for that ever-more apocalyptic orgasm. The countercultural idea has become capitalist orthodoxy, its hunger for transgression upon transgression now perfectly suited to an economic-cultural regime that runs on ever-faster cyclings of the new; its taste for self-fulfillment and its intolerance for the confines of tradition now permitting vast latitude in consuming practices and lifestyle experimentation.\n",
		"description": "Commodify Your Dissent",
		"time": "2010-04-11T13:12:10Z",
		"href": "http://www.nytimes.com/books/first/f/frank-dissent.html?_r=2#"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"finance",
			"lottery",
			"money",
			"poverty",
			"usa",
			"psychology",
			"behavioraleconomics",
			"debt",
			"saving",
			"savings",
			"credit",
			"community"
		],
		"y": 8.647385994039038,
		"x": 6.888806044780046,
		"extended": "",
		"description": "Credit unions launch a savings lottery, and everyone hits the jackpot - washingtonpost.com",
		"time": "2010-04-11T13:00:25Z",
		"href": "http://www.washingtonpost.com/wp-dyn/content/article/2010/02/05/AR2010020501447.html"
	},
	{
		"cluster": 13,
		"tags": [
			"mathematics",
			"politics",
			"election",
			"voting",
			"electoralreform",
			"arrowsimpossibilitytheorem",
			"ordering",
			"economics"
		],
		"y": 8.102617278853074,
		"x": 9.545978198395643,
		"extended": "",
		"description": "Electoral impossibilities",
		"time": "2010-04-11T12:56:12Z",
		"href": "http://plus.maths.org/latestnews/jan-apr10/election/index.html"
	},
	{
		"cluster": 6,
		"tags": [
			"ipad",
			"business",
			"economics",
			"copyright",
			"technology",
			"internet",
			"dtm"
		],
		"y": 5.243222472897853,
		"x": 4.6353739081543175,
		"extended": "",
		"description": "Publish and be damned | Alan Kohler | Commentary | Business Spectator",
		"time": "2010-04-11T12:38:16Z",
		"href": "http://www.businessspectator.com.au/bs.nsf/Article/Why-content-is-not-king-pd20100409-4BSZX?opendocument&src=rss#"
	},
	{
		"cluster": 9,
		"tags": [
			"pages",
			"pdf",
			"organisation",
			"linux",
			"software",
			"research"
		],
		"y": -8.18774158931304,
		"x": 3.5808055755053996,
		"extended": "",
		"description": "Download Mendeley Desktop - Manage and Share Research Papers | Mendeley",
		"time": "2010-04-11T12:27:35Z",
		"href": "http://www.mendeley.com/download-mendeley-desktop/linux/"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"music",
			"applications",
			"list",
			"MIDI",
			"media",
			"sound",
			"software",
			"recording",
			"opensource",
			"gpl",
			"free",
			"audio",
			"application",
			"tools"
		],
		"y": -8.445891356240782,
		"x": 3.6268965630108414,
		"extended": "",
		"description": "In the Jungle – 29 Music-making Apps for Linux",
		"time": "2010-04-11T11:44:16Z",
		"href": "http://blog.audiojungle.net/resources/29-music-making-apps-for-linux/"
	},
	{
		"cluster": 7,
		"tags": [
			"vim",
			"development",
			"textmate",
			"programming",
			"unix",
			"tools",
			"text",
			"editor"
		],
		"y": 9.028848386132465,
		"x": -2.380821029481973,
		"extended": "",
		"description": "Alex Young: Vim for TextMate Fans",
		"time": "2010-04-09T15:51:38Z",
		"href": "http://alexyoung.org/2006/10/22/vim-for-textmate-fans/"
	},
	{
		"cluster": 6,
		"tags": [
			"debill",
			"politics",
			"reform",
			"economy",
			"copyright",
			"technology",
			"internet"
		],
		"y": 4.97279277256245,
		"x": 5.946945971285395,
		"extended": "",
		"description": "Digital economy bill exposes broken system | James Graham | Comment is free | guardian.co.uk",
		"time": "2010-04-08T08:59:01Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/apr/08/digital-economy-bill-exposes-broken-system"
	},
	{
		"cluster": 15,
		"tags": [
			"hypercube",
			"tesseract",
			"mathematics",
			"geometry",
			"4d",
			"drawing"
		],
		"y": -6.312089587348985,
		"x": -2.5946428312813303,
		"extended": "",
		"description": "Like Scratches in the Sand - Tesseract Tutorial",
		"time": "2010-04-07T22:58:08Z",
		"href": "http://odditycollector.livejournal.com/173945.html"
	},
	{
		"cluster": 10,
		"tags": [
			"zizek",
			"bobbio",
			"politics",
			"philosophy",
			"sosciety",
			"marxism",
			"authoritarianism",
			"socialism",
			"democracy",
			"reformism"
		],
		"y": 3.082518742289325,
		"x": 9.925868874255757,
		"extended": "",
		"description": "Dissent Magazine",
		"time": "2010-04-06T14:30:54Z",
		"href": "http://www.dissentmagazine.org/atw.php?id=65"
	},
	{
		"cluster": 6,
		"tags": [
			"debill",
			"copyright",
			"culture",
			"production",
			"consumption",
			"art",
			"participation",
			"law",
			"politics",
			"economics",
			"legislation"
		],
		"y": -5.459897595868592,
		"x": 9.39908723159549,
		"extended": "",
		"description": "The Digital Economy Bill: Fred Figglehorn, won’t you please come home? – confused of calcutta",
		"time": "2010-04-05T13:42:24Z",
		"href": "http://confusedofcalcutta.com/2010/04/03/the-digital-economy-bill-fred-figglehorn-wont-you-please-come-home/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+ConfusedOfCalcutta+(Confused+of+Calcutta)&utm_content=Google+Reader"
	},
	{
		"cluster": 13,
		"tags": [
			"debill",
			"digital",
			"economics",
			"politics",
			"music",
			"business",
			"policy",
			"marketing",
			"copyright",
			"media",
			"piracy"
		],
		"y": 7.069536902404019,
		"x": 5.7983719829308775,
		"extended": "",
		"description": "The Digital Economy Bill: Be Careful What You Wish For – confused of calcutta",
		"time": "2010-04-05T13:41:14Z",
		"href": "http://confusedofcalcutta.com/2010/04/05/the-digital-economy-bill-be-careful-what-you-wish-for/"
	},
	{
		"cluster": 8,
		"tags": [
			"apple",
			"ipad",
			"business",
			"consumerism",
			"culture",
			"consumption",
			"media",
			"drm",
			"freedom",
			"hardware",
			"technology",
			"internet",
			"journalism",
			"news",
			"publishing",
			"participation",
			"computing",
			"creativity"
		],
		"y": -3.386724590821315,
		"x": 0.7975066914837412,
		"extended": "",
		"description": "Why I won't buy an iPad (and think you shouldn't, either) - Boing Boing",
		"time": "2010-04-05T13:40:30Z",
		"href": "http://www.boingboing.net/2010/04/02/why-i-wont-buy-an-ipad-and-think-you-shouldnt-either.html"
	},
	{
		"cluster": 10,
		"tags": [
			"marx",
			"socialism",
			"politics",
			"technology",
			"progress",
			"equality",
			"society"
		],
		"y": 2.638358775589049,
		"x": 11.23380592332589,
		"extended": "",
		"description": "normblog: Marx right and wrong",
		"time": "2010-04-03T14:24:04Z",
		"href": "http://normblog.typepad.com/normblog/2010/03/marx-right-and-wrong.html"
	},
	{
		"cluster": 10,
		"tags": [
			"israel",
			"settlements",
			"politics",
			"middleeast",
			"palestine",
			"gaza",
			"usa",
			"internationalrelations",
			"international"
		],
		"y": 3.1063255306089674,
		"x": 7.283850525273636,
		"extended": "",
		"description": "normblog: Obama, Israel and the settlements",
		"time": "2010-04-03T14:00:45Z",
		"href": "http://normblog.typepad.com/normblog/2010/04/obama-israel-and-the-settlements.html"
	},
	{
		"cluster": 10,
		"tags": [
			"law",
			"libel",
			"reform",
			"politics",
			"uk"
		],
		"y": 4.241599879922788,
		"x": 8.42405192955021,
		"extended": "",
		"description": "Liberal Conspiracy » Why I opposed Libel costs reform yesterday",
		"time": "2010-04-01T09:10:06Z",
		"href": "http://liberalconspiracy.org/2010/03/31/why-i-opposed-libel-costs-reform-yesterday/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"business",
			"film",
			"economics",
			"criticism",
			"media",
			"cinema",
			"3d"
		],
		"y": 7.754852594409049,
		"x": 5.79952744858449,
		"extended": "",
		"description": "Why economics condemns 3D to be no more than a blockbuster gimmick | Technology | The Guardian",
		"time": "2010-03-31T09:22:31Z",
		"href": "http://www.guardian.co.uk/technology/2009/sep/15/cory-doctorow-3d-movies"
	},
	{
		"cluster": 13,
		"tags": [
			"business",
			"commerce",
			"digital",
			"media",
			"music",
			"publishing",
			"economics"
		],
		"y": 7.105441327243294,
		"x": 5.473903668013169,
		"extended": "",
		"description": "Shirky: The Music Business and the Big Flip",
		"time": "2010-03-31T09:17:37Z",
		"href": "http://shirky.com/writings/music_flip.html"
	},
	{
		"cluster": 10,
		"tags": [
			"britain",
			"debill",
			"democracy",
			"election",
			"legislation",
			"uk",
			"reform",
			"politics",
			"parliament",
			"washup",
			"transparency",
			"accountability"
		],
		"y": 4.427499944764293,
		"x": 9.945130763563387,
		"extended": "",
		"description": "Parliament's wash-up's a stitch-up | Martin Bell | Comment is free | The Guardian",
		"time": "2010-03-31T09:13:43Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/mar/28/pre-election-parliamentary-wash-up"
	},
	{
		"cluster": 13,
		"tags": [
			"data",
			"visualization",
			"visualisation",
			"ideology",
			"politics",
			"statistics",
			"economics",
			"mathematics",
			"society",
			"datamining",
			"psychology",
			"dating",
			"culture"
		],
		"y": 3.3809656225939424,
		"x": 13.729858331628165,
		"extended": "",
		"description": "The Democrats Are Doomed, or How A ‘Big Tent’ Can Be Too Big « OkTrends",
		"time": "2010-03-31T09:02:51Z",
		"href": "http://blog.okcupid.com/index.php/2010/03/30/the-democrats-are-doomed-or-how-a-big-tent-can-be-too-big/"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"debill",
			"economics",
			"internet",
			"regulation",
			"music",
			"politics"
		],
		"y": 5.180407888615527,
		"x": 5.819250435301408,
		"extended": "",
		"description": "The Digital Economy Bill: A taxation on salt – confused of calcutta",
		"time": "2010-03-30T12:25:16Z",
		"href": "http://confusedofcalcutta.com/2010/03/29/the-digital-economy-bill-a-taxation-on-salt/"
	},
	{
		"cluster": 8,
		"tags": [
			"politcs",
			"wikileaks",
			"activism",
			"censorship",
			"freedom",
			"government",
			"internet",
			"journalism",
			"liberty",
			"media",
			"politics"
		],
		"y": 5.646640685087218,
		"x": 11.598432152185246,
		"extended": "",
		"description": "The war on WikiLeaks and why it matters - Glenn Greenwald - Salon.com",
		"time": "2010-03-30T11:30:31Z",
		"href": "http://www.salon.com/news/opinion/glenn_greenwald/2010/03/27/wikileaks"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"functions",
			"relations",
			"settheory",
			"sets",
			"categories",
			"categorytheory",
			"philosophy",
			"determinism"
		],
		"y": -7.103864413054048,
		"x": -2.9335079442911107,
		"extended": "",
		"description": "The definition of a function « Annoying Precision",
		"time": "2010-03-30T11:24:08Z",
		"href": "http://qchu.wordpress.com/2010/03/25/the-definition-of-a-function/"
	},
	{
		"cluster": 10,
		"tags": [
			"israel",
			"palestine",
			"middleeast",
			"international",
			"politics",
			"conflict",
			"settlements",
			"refugees",
			"rightofreturn"
		],
		"y": 3.098709674988413,
		"x": 7.287375082658506,
		"extended": "",
		"description": "FT.com / Comment / Opinion - Refugees for settlers is the way forward for Israel",
		"time": "2010-03-30T11:21:41Z",
		"href": "http://www.ft.com/cms/s/0/6c03b0be-3a8d-11df-b6d5-00144feabdc0.html?ftcamp=rss"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"learning",
			"pedagogy",
			"computerscience",
			"education",
			"development",
			"personaldevelopment"
		],
		"y": 0.08437663440763754,
		"x": -12.630156048406493,
		"extended": "",
		"description": "What is “simplicity” in programming?, redux « The Reinvigorated Programmer",
		"time": "2010-03-30T11:17:55Z",
		"href": "http://reprog.wordpress.com/2010/03/28/what-is-simplicity-in-programming-redux/"
	},
	{
		"cluster": 16,
		"tags": [
			"walmart",
			"retail",
			"data",
			"datamining",
			"commerce",
			"economics",
			"business",
			"analysis",
			"computing",
			"technology"
		],
		"y": 6.179566178980684,
		"x": 4.625589591717545,
		"extended": "",
		"description": "The New York Times > Business > Your Money > What Wal-Mart Knows About Customers' Habits",
		"time": "2010-03-30T10:17:02Z",
		"href": "http://www.nytimes.com/2004/11/14/business/yourmoney/14wal.html?pagewanted=1"
	},
	{
		"cluster": 10,
		"tags": [
			"law",
			"libel",
			"politics"
		],
		"y": 4.243736588248051,
		"x": 8.403684799994439,
		"extended": "",
		"description": "London: the capital of libel tourism? | Gavin Phillipson | Comment is free | guardian.co.uk",
		"time": "2010-03-29T09:16:07Z",
		"href": "http://www.guardian.co.uk/commentisfree/libertycentral/2010/mar/29/london-libel-capital-freedom-of-speech#"
	},
	{
		"cluster": 13,
		"tags": [
			"banking",
			"crime",
			"finance",
			"economics",
			"politics",
			"law",
			"regulation",
			"society",
			"socialjustice"
		],
		"y": 9.890413764785292,
		"x": 7.204629081828932,
		"extended": "",
		"description": "Shock! City slickers are arrested | Nick Cohen | Comment is free | The Observer",
		"time": "2010-03-28T19:46:49Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/mar/28/nick-cohen-finance-fraud"
	},
	{
		"cluster": 10,
		"tags": [
			"obama",
			"us",
			"politics",
			"healthcare",
			"israel",
			"policy"
		],
		"y": 8.53430060092407,
		"x": 12.084524371004873,
		"extended": "",
		"description": "Principled and passionate: how Obama sealed his place in history | Henry Porter | Comment is free | The Observer",
		"time": "2010-03-28T10:51:25Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/mar/28/barack-obama-healthcare-israel"
	},
	{
		"cluster": 17,
		"tags": [
			"architecture",
			"database",
			"databases",
			"mysql",
			"nosql",
			"scalability",
			"scaling",
			"sql",
			"performance",
			"relational",
			"programming"
		],
		"y": 2.6042217322418577,
		"x": -2.1205836674208776,
		"extended": "",
		"description": "I Can't Wait for NoSQL to Die - Ted Dziuba",
		"time": "2010-03-28T10:45:02Z",
		"href": "http://teddziuba.com/2010/03/i-cant-wait-for-nosql-to-die.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"children",
			"education",
			"language",
			"learning",
			"teaching",
			"psychology"
		],
		"y": -8.772386063252545,
		"x": -5.413834730221832,
		"extended": "",
		"description": "The chloroformed mind: the case against teaching math | The League of Ordinary Gentlemen",
		"time": "2010-03-28T10:42:36Z",
		"href": "http://www.ordinary-gentlemen.com/2010/03/the-chloroformed-mind-the-case-against-teaching-math/"
	},
	{
		"cluster": 1,
		"tags": [
			"feminism",
			"music",
			"criticism",
			"history",
			"women",
			"society"
		],
		"y": -6.545863387355869,
		"x": 9.577708588563619,
		"extended": "",
		"description": "What happened to angry female music stars? | Music | The Guardian",
		"time": "2010-03-26T10:13:38Z",
		"href": "http://www.guardian.co.uk/music/2010/mar/25/joan-jett-kathleen-hanna-angry-women"
	},
	{
		"cluster": 17,
		"tags": [
			"cassandra",
			"mysql",
			"nosql",
			"computerscience",
			"relational",
			"rdbms",
			"scalability",
			"performance",
			"architecture",
			"sql",
			"database",
			"programming"
		],
		"y": 2.5614884446758968,
		"x": -2.2060045782872124,
		"extended": "",
		"description": "Dennis Forbes on Software and Technology - The Impact of SSDs on Database Performance and the Performance Paradox of Data Explodification",
		"time": "2010-03-25T10:45:07Z",
		"href": "http://www.yafla.com/dforbes/The_Impact_of_SSDs_on_Database_Performance_and_the_Performance_Paradox_of_Data_Explodification/"
	},
	{
		"cluster": 13,
		"tags": [
			"business",
			"experimentation",
			"strategy",
			"economics",
			"empirical",
			"testing"
		],
		"y": 8.544537510994365,
		"x": 7.0130548110654845,
		"extended": "",
		"description": "Column: Why Businesses Don't Experiment - Harvard Business Review",
		"time": "2010-03-25T10:43:49Z",
		"href": "http://hbr.org/2010/04/column-why-businesses-dont-experiment/ar/1"
	},
	{
		"cluster": 10,
		"tags": [
			"cider",
			"law",
			"alcohol",
			"politics",
			"licensing"
		],
		"y": 4.266651514335333,
		"x": 8.358339469415691,
		"extended": "",
		"description": "James Crowden - The murky world of white cider",
		"time": "2010-03-24T18:58:06Z",
		"href": "http://www.james-crowden.co.uk/index.php?option=com_content&task=view&id=102&Itemid=30"
	},
	{
		"cluster": 15,
		"tags": [
			"game",
			"lambda",
			"calculus",
			"alligator",
			"cs",
			"fun",
			"lambda-calculus",
			"children",
			"education",
			"computing",
			"functional",
			"games",
			"language",
			"learning",
			"mathematics",
			"programming",
			"teaching",
			"logic",
			"combinatorylogic",
			"computerscience"
		],
		"y": -4.512262964713511,
		"x": -12.45128619519657,
		"extended": "",
		"description": "Alligator Eggs!",
		"time": "2010-03-24T10:29:52Z",
		"href": "http://worrydream.com/AlligatorEggs/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"computerscience",
			"books",
			"free",
			"logic",
			"reading",
			"reference"
		],
		"y": -2.379539547531254,
		"x": -12.33477918469855,
		"extended": "",
		"description": "Free logic books « Words and Other Things",
		"time": "2010-03-24T09:49:28Z",
		"href": "http://inferential.wordpress.com/2009/08/03/free-logic-books/"
	},
	{
		"cluster": 10,
		"tags": [
			"science",
			"politics",
			"medicine",
			"greens",
			"greenparty",
			"policy",
			"gmo",
			"research",
			"stemcells"
		],
		"y": 3.5266546048448206,
		"x": 8.877855438048531,
		"extended": "",
		"description": "Liberal Conspiracy » Is the Green Party anti-science?",
		"time": "2010-03-24T09:39:23Z",
		"href": "http://liberalconspiracy.org/2009/06/09/is-the-green-party-anti-science/"
	},
	{
		"cluster": 10,
		"tags": [
			"abortion",
			"women",
			"america",
			"us",
			"religion",
			"politics",
			"healthcare",
			"insurance"
		],
		"y": 5.365425548859477,
		"x": 10.873237347969432,
		"extended": "",
		"description": "Bart Stupak is no healthcare hero | Megan Carpentier | Comment is free | guardian.co.uk",
		"time": "2010-03-24T08:55:18Z",
		"href": "http://www.guardian.co.uk/commentisfree/cifamerica/2010/mar/22/bart-stupak-healthcare-abortion"
	},
	{
		"cluster": 10,
		"tags": [
			"healthcare",
			"reform",
			"america",
			"politics",
			"democrats",
			"history",
			"ideology",
			"obama",
			"culture",
			"society"
		],
		"y": 0.5236662166701829,
		"x": 12.722125757915423,
		"extended": "",
		"description": "normblog: Obama's Victory (by Sean Coleman)",
		"time": "2010-03-24T08:40:05Z",
		"href": "http://normblog.typepad.com/normblog/2010/03/obamas-victory-by-sean-coleman.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"programming",
			"computerscience",
			"learning",
			"education",
			"development",
			"career"
		],
		"y": -0.15720071632576726,
		"x": -12.459728759825232,
		"extended": "",
		"description": "You Don’t Need Math Skills To Be A Good Developer But You Do Need Them To Be A Great One",
		"time": "2010-03-23T15:45:37Z",
		"href": "http://www.skorks.com/2010/03/you-dont-need-math-skills-to-be-a-good-developer-but-you-do-need-them-to-be-a-great-one/#"
	},
	{
		"cluster": 10,
		"tags": [
			"government",
			"policy",
			"politics",
			"research",
			"stats",
			"teaching",
			"society",
			"social",
			"science",
			"trials"
		],
		"y": 4.375497334427839,
		"x": 13.692435857671517,
		"extended": "",
		"description": "FT.com / Comment / Opinion - Political ideas need proper testing",
		"time": "2010-03-22T10:54:19Z",
		"href": "http://www.ft.com/cms/s/0/fcce2ba6-3204-11df-a8d1-00144feabdc0.html"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"ip",
			"law",
			"politics",
			"global",
			"south",
			"international"
		],
		"y": -3.6244816865195286,
		"x": 9.31929331025786,
		"extended": "",
		"description": "An alternative primer on national and international copyright law in the global South: eighteen questions and answers | <CopySouth Research Group and Network>",
		"time": "2010-03-22T10:46:35Z",
		"href": "http://copysouth.org/portal/copyright-primer"
	},
	{
		"cluster": 10,
		"tags": [
			"gita",
			"sahgal",
			"politics",
			"amnesty",
			"humanrights",
			"society"
		],
		"y": 3.4507478961669302,
		"x": 12.04886393435163,
		"extended": "",
		"description": "Harry's Place » Gita Sahgal on NDTV",
		"time": "2010-03-17T16:27:36Z",
		"href": "http://www.hurryupharry.org/2010/03/16/gita-sahgal-on-ndtv/#"
	},
	{
		"cluster": 18,
		"tags": [
			"art",
			"generative",
			"contextfreegrammar",
			"programming",
			"language",
			"visualization",
			"software",
			"mathematics",
			"math",
			"graphics",
			"design",
			"development",
			"algorithm",
			"computerscience"
		],
		"y": 1.8948804075785965,
		"x": -5.077269778207782,
		"extended": "",
		"description": "Context Free Art",
		"time": "2010-03-17T14:20:24Z",
		"href": "http://www.contextfreeart.org/index.html"
	},
	{
		"cluster": 16,
		"tags": [
			"relational",
			"database",
			"sql",
			"heirarchical",
			"data",
			"graph"
		],
		"y": 2.5426497812834534,
		"x": -1.8148750607681141,
		"extended": "",
		"description": "ANSI SQL Hierarchical Data Processing Basics — DatabaseJournal.com",
		"time": "2010-03-17T14:16:52Z",
		"href": "http://www.databasejournal.com/features/mssql/article.php/3870451/ANSI-SQL-Hierarchical-Data-Processing-Basics.htm#"
	},
	{
		"cluster": 10,
		"tags": [
			"multiculturalism",
			"politics",
			"culture",
			"society",
			"identity",
			"identitypolitics"
		],
		"y": 0.7828183458913973,
		"x": 12.014867252251252,
		"extended": "",
		"description": "Multiculturalism undermines diversity | Kenan Malik | Comment is free | guardian.co.uk",
		"time": "2010-03-17T10:31:06Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/mar/17/multiculturalism-diversity-political-policy#"
	},
	{
		"cluster": 17,
		"tags": [
			"javascript",
			"programming",
			"semantics",
			"falsiness",
			"false",
			"language",
			"null",
			"nullvalues"
		],
		"y": 3.2315394195159834,
		"x": -5.296852828640546,
		"extended": "",
		"description": "Why JavaScript is not my favourite programming language « The Reinvigorated Programmer",
		"time": "2010-03-17T10:18:16Z",
		"href": "http://reprog.wordpress.com/2010/03/16/why-javascript-is-not-my-favourite-programming-language/"
	},
	{
		"cluster": 10,
		"tags": [
			"balochistan",
			"pakistan",
			"settlement",
			"humanrights",
			"politics",
			"islam",
			"international",
			"invasion",
			"occupation"
		],
		"y": 5.723912639732259,
		"x": 10.738677321834144,
		"extended": "",
		"description": "Harry's Place » The Baloch people have a right to self-determination",
		"time": "2010-03-17T10:17:07Z",
		"href": "http://www.hurryupharry.org/2010/03/17/the-baloch-people-have-a-right-to-self-determination/"
	},
	{
		"cluster": 15,
		"tags": [
			"algebra",
			"book",
			"books",
			"computer",
			"mathematics",
			"reference",
			"resource",
			"textbooks",
			"bibliography",
			"algorithms",
			"list",
			"learning",
			"education"
		],
		"y": -8.869040014140825,
		"x": -5.83955882390188,
		"extended": "",
		"description": "Mathematics Books | Math-Blog",
		"time": "2010-03-16T11:32:43Z",
		"href": "http://math-blog.com/mathematics-books/"
	},
	{
		"cluster": 7,
		"tags": [
			"ipad",
			"apple",
			"control",
			"appstore",
			"computing",
			"business",
			"development",
			"programming"
		],
		"y": 8.880401918213593,
		"x": -1.5005655400788556,
		"extended": "",
		"description": "writing | ben fry » On needing approval for what we create, and losing control over how it’s distributed",
		"time": "2010-03-15T12:27:36Z",
		"href": "http://benfry.com/writing/archives/608"
	},
	{
		"cluster": 13,
		"tags": [
			"socialism",
			"politics",
			"economics",
			"society",
			"einstein",
			"marxism"
		],
		"y": 3.8471281126646075,
		"x": 11.580223940916705,
		"extended": "",
		"description": "Why Socialism? Albert Einstein - Monthly Review",
		"time": "2010-03-12T14:10:28Z",
		"href": "http://www.monthlyreview.org/598einstein.php#"
	},
	{
		"cluster": 17,
		"tags": [
			"lambdacalculus",
			"lambda",
			"computerscience",
			"programming",
			"functional",
			"mathematics",
			"church",
			"alonsochurch",
			"smulyan",
			"mockingbirds"
		],
		"y": -4.722314094629958,
		"x": -12.3317527578086,
		"extended": "",
		"description": "To Dissect a Mockingbird: A Graphical Notation for the Lambda Calculus with Animated Reduction",
		"time": "2010-03-12T13:46:10Z",
		"href": "http://dkeenan.com/Lambda/index.htm#"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"literature",
			"aliceinwonderland",
			"lewiscarrol",
			"metaphor",
			"algebra",
			"history"
		],
		"y": -6.940973037642353,
		"x": -3.9477714197529155,
		"extended": "",
		"description": "Op-Ed Contributor - Algebra in Wonderland - NYTimes.com",
		"time": "2010-03-12T12:15:59Z",
		"href": "http://www.nytimes.com/2010/03/07/opinion/07bayley.html?pagewanted=1&sq=bayley&st=cse&scp=1"
	},
	{
		"cluster": 17,
		"tags": [
			"google",
			"library",
			"re2",
			"regexp",
			"regularexpressions",
			"computerscience",
			"programming",
			"c++"
		],
		"y": 0.42483520628468074,
		"x": -10.893374216022394,
		"extended": "",
		"description": "RE2: a principled approach to regular expression matching - Google Open Source Blog",
		"time": "2010-03-12T11:09:03Z",
		"href": "http://google-opensource.blogspot.com/2010/03/re2-principled-approach-to-regular.html"
	},
	{
		"cluster": 2,
		"tags": [
			"genetics",
			"science",
			"biology",
			"reproduction"
		],
		"y": -7.359890075904554,
		"x": 0.08609248572957615,
		"extended": "",
		"description": "Sexual Reproduction for Same Sex Couples | The Chromosome Chronicles",
		"time": "2010-03-11T23:43:14Z",
		"href": "http://www.chromosomechronicles.com/2009/07/29/sexual-reproduction-for-same-sex-couples/"
	},
	{
		"cluster": 10,
		"tags": [
			"gametheory",
			"politics",
			"healthcare",
			"america",
			"usability"
		],
		"y": 5.432859892927455,
		"x": 10.827675046525519,
		"extended": "",
		"description": "Health Reform: A Prisoner’s Dilemma - Swampland - TIME.com",
		"time": "2010-03-11T16:20:49Z",
		"href": "http://swampland.blogs.time.com/2010/03/04/health-reform-prisoners-dilemma/"
	},
	{
		"cluster": 13,
		"tags": [
			"science",
			"funding",
			"education",
			"politics",
			"economics",
			"recovery"
		],
		"y": 8.025234287163508,
		"x": 9.638757065582213,
		"extended": "",
		"description": "Science must be a major election issue | Adam Rutherford | Comment is free | guardian.co.uk",
		"time": "2010-03-11T15:42:30Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/mar/11/science-major-election-issue"
	},
	{
		"cluster": 10,
		"tags": [
			"gametheory",
			"mathematics",
			"politics",
			"palestine",
			"israel",
			"world",
			"news",
			"settlements",
			"conflict",
			"war",
			"middleeast"
		],
		"y": 3.089374998886611,
		"x": 7.224784145639007,
		"extended": "",
		"description": "Applying game theory to the Israeli-Palestinian war. - By Robert Wright - Slate Magazine",
		"time": "2010-03-11T15:36:50Z",
		"href": "http://www.slate.com/?id=2065830"
	},
	{
		"cluster": 10,
		"tags": [
			"israel",
			"palestine",
			"peace",
			"talks",
			"conflict",
			"settlements",
			"politics",
			"middleeast"
		],
		"y": 3.0930547553466856,
		"x": 7.270067225970761,
		"extended": "",
		"description": "The Israel-Palestine peace process: More than just a charade? | The Economist",
		"time": "2010-03-11T15:23:37Z",
		"href": "http://www.economist.com/world/middle-east/displaystory.cfm?story_id=15659990&fsrc=rss"
	},
	{
		"cluster": 13,
		"tags": [
			"gametheory",
			"economics",
			"mathematics",
			"bailout",
			"credit",
			"crunch",
			"finance",
			"business"
		],
		"y": 9.568875826732475,
		"x": 5.216106738476183,
		"extended": "",
		"description": "Game Theory and the Bailout | TPM",
		"time": "2010-03-11T11:52:08Z",
		"href": "http://www.talkingpointsmemo.com/archives/2009/03/game_theory_and_the_bailout.php"
	},
	{
		"cluster": 13,
		"tags": [
			"gametheory",
			"economics",
			"mathematics",
			"bailout",
			"credit",
			"crunch",
			"finance",
			"business",
			"prisonersdilemma"
		],
		"y": 9.567401114005474,
		"x": 5.219116440963545,
		"extended": "",
		"description": "EconomPic: Game Theory: Why the Bailout Won’t Work",
		"time": "2010-03-11T11:51:52Z",
		"href": "http://econompicdata.blogspot.com/2008/09/game-theory-why-bailout-wont-work.html"
	},
	{
		"cluster": 13,
		"tags": [
			"gametheory",
			"economics",
			"mathematics",
			"bailout",
			"credit",
			"crunch",
			"finance",
			"business"
		],
		"y": 9.556781960738975,
		"x": 5.235924223192978,
		"extended": "",
		"description": "Chuck Prince Dances, Banks Play Chicken: Game Theory for Crisis - Bloomberg.com",
		"time": "2010-03-11T11:51:43Z",
		"href": "http://www.bloomberg.com/apps/news?pid=20601081&sid=aS1BYl_brhk4&refer=australia"
	},
	{
		"cluster": 4,
		"tags": [
			"esr",
			"haskell",
			"functional",
			"programming"
		],
		"y": -5.136056266673477,
		"x": -8.374476223420865,
		"extended": "",
		"description": "Armed and Dangerous » Blog Archive » On Learning Haskell",
		"time": "2010-03-10T21:56:59Z",
		"href": "http://esr.ibiblio.org/?p=1796"
	},
	{
		"cluster": 13,
		"tags": [
			"collectivism",
			"communism",
			"cooperatives",
			"coop",
			"economics",
			"politics"
		],
		"y": 8.267597506269516,
		"x": 8.774251296574807,
		"extended": "",
		"description": "The accidental communist | Huw Lemmey | Comment is free | guardian.co.uk",
		"time": "2010-03-10T21:51:54Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/mar/10/accidental-communist-cooperatives#"
	},
	{
		"cluster": 1,
		"tags": [
			"livecoding",
			"music",
			"art",
			"criticism",
			"programming",
			"algorithms",
			"video",
			"generative",
			"impromptu",
			"toplap",
			"livecode"
		],
		"y": -11.49519383204524,
		"x": -1.9471899823923027,
		"extended": "",
		"description": "Algorithms are Thoughts, Chainsaws are Tools - Pirata Sum",
		"time": "2010-03-10T18:34:11Z",
		"href": "http://piratasum.com/algorithms-are-thoughts-chainsaws-are-tools?c=1"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"policy",
			"libdems",
			"uk",
			"debill"
		],
		"y": 4.711511182665235,
		"x": 5.960613748407033,
		"extended": "",
		"description": "That emergency motion in full… « Bridget's Blog",
		"time": "2010-03-10T15:16:21Z",
		"href": "http://bridgetfox.wordpress.com/2010/03/09/that-emergency-motion-in-full/"
	},
	{
		"cluster": 12,
		"tags": [
			"rails",
			"activerecord",
			"named_scope",
			"rails3",
			"arel",
			"programming",
			"development",
			"web"
		],
		"y": 10.040571269652068,
		"x": -6.8980545926209125,
		"extended": "",
		"description": "Named Scopes Are Dead | railway",
		"time": "2010-03-10T10:37:03Z",
		"href": "http://www.railway.at/2010/03/09/named-scopes-are-dead/"
	},
	{
		"cluster": 17,
		"tags": [
			"database",
			"materializedviews",
			"relational",
			"optimisation",
			"sql",
			"programming",
			"computerscience"
		],
		"y": 2.6056756505990784,
		"x": -2.376637541231775,
		"extended": "",
		"description": "Dennis Forbes on Software and Technology - Getting Real about NoSQL and the SQL Performance Lie",
		"time": "2010-03-10T10:26:33Z",
		"href": "http://www.yafla.com/dforbes/Getting_Real_about_NoSQL_and_the_SQL_Performance_Lie/"
	},
	{
		"cluster": 15,
		"tags": [
			"mmathematics",
			"ai",
			"comics",
			"mathematics",
			"linguistics",
			"computationallinguistics",
			"computerscience",
			"markovchain"
		],
		"y": -0.8996243509838484,
		"x": -11.587432710326322,
		"extended": "poloassassin\n",
		"description": "Awesome Dinosaur Comics that my COMPUTER wrote - Brad's blog",
		"time": "2010-03-10T10:24:01Z",
		"href": "http://poloassassin.typepad.com/blog/2010/03/awesome-dinosaur-comics-that-my-computer-wrote.html"
	},
	{
		"cluster": 17,
		"tags": [
			"relational",
			"database",
			"programming",
			"computerscience",
			"technology",
			"performance",
			"optimisation"
		],
		"y": 2.5621938165197187,
		"x": -2.4764429708736784,
		"extended": "",
		"description": "NoSQL doesn’t mean non-relational at Xaprb",
		"time": "2010-03-10T10:15:33Z",
		"href": "http://www.xaprb.com/blog/2010/03/08/nosql-doesnt-mean-non-relational/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"capitalism",
			"socialism",
			"progress",
			"social",
			"innovation",
			"future"
		],
		"y": 7.024131958881095,
		"x": 9.01864211808018,
		"extended": "",
		"description": "FT.com / Comment / Opinion - A social vision for the world after socialism",
		"time": "2010-03-09T23:56:01Z",
		"href": "http://www.ft.com/cms/s/0/4b33ffea-2aef-11df-886b-00144feabdc0.html?ftcamp=rss#"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"functional",
			"state",
			"computerscience",
			"clojure",
			"haskell"
		],
		"y": -5.654782596985714,
		"x": -9.449949960247482,
		"extended": "",
		"description": "a page of tumbling madness / on functional programming",
		"time": "2010-03-08T19:34:28Z",
		"href": "http://jrheard.tumblr.com/post/434828204/on-functional-programming"
	},
	{
		"cluster": 17,
		"tags": [
			"mandelbrot",
			"mathematics",
			"scala",
			"programming",
			"tutorial",
			"functional",
			"fractal",
			"graphics",
			"visualization"
		],
		"y": 3.293419776459105,
		"x": -9.6274830427114,
		"extended": "",
		"description": "Mandelbrot in Scala « Justin Domke’s Weblog",
		"time": "2010-03-08T15:12:23Z",
		"href": "http://justindomke.wordpress.com/2008/11/29/mandelbrot-in-scala/"
	},
	{
		"cluster": 2,
		"tags": [
			"biology",
			"neurology",
			"ethics",
			"philosophy",
			"science",
			"cognition",
			"neuroscience",
			"consciousness",
			"psychology"
		],
		"y": -0.11134203887413299,
		"x": 6.396399755114929,
		"extended": "",
		"description": "Free will is an illusion, biologist says",
		"time": "2010-03-05T15:47:35Z",
		"href": "http://www.physorg.com/news186830615.html"
	},
	{
		"cluster": 2,
		"tags": [
			"databases",
			"relational",
			"scalability",
			"complexity",
			"computation",
			"computationalcomplexity",
			"computerscience",
			"database"
		],
		"y": -1.8711812407078792,
		"x": -13.070220966044403,
		"extended": "",
		"description": "RethinkDB - The database for solid state drives.",
		"time": "2010-03-05T15:30:28Z",
		"href": "http://www.rethinkdb.com/blog/2010/03/high-scalability-sql-and-computational-complexity/"
	},
	{
		"cluster": 13,
		"tags": [
			"society",
			"politics",
			"economics",
			"environment",
			"psychology",
			"protest"
		],
		"y": 3.851058613224425,
		"x": 12.41552607085308,
		"extended": "",
		"description": "Social Boycotts and British protest",
		"time": "2010-03-05T15:22:42Z",
		"href": "http://felixcohen.co.uk/2010/social-boycott/#comment-12"
	},
	{
		"cluster": 8,
		"tags": [
			"fashion",
			"technology",
			"news",
			"internet",
			"business",
			"web"
		],
		"y": 4.88665339218525,
		"x": 4.376175187654112,
		"extended": "",
		"description": "#wearethefuture: How technology takes fashion to the next level | Media | guardian.co.uk",
		"time": "2010-03-05T15:12:26Z",
		"href": "http://www.guardian.co.uk/media/pda/2010/feb/19/fashion-startups"
	},
	{
		"cluster": 15,
		"tags": [
			"constraint",
			"programming",
			"ruby",
			"computerscience",
			"mathematics"
		],
		"y": 3.203849544663194,
		"x": -11.020161935129751,
		"extended": "",
		"description": "Getting Started with Gecode/R, a Ruby Interface to Gecode",
		"time": "2010-03-05T14:14:08Z",
		"href": "http://gecoder.rubyforge.org/documentation/index.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"haskell",
			"programming",
			"mandelbrot",
			"fractal",
			"graphics",
			"mathematics"
		],
		"y": 3.4339356065345665,
		"x": -9.89482234810654,
		"extended": "",
		"description": "Drawing the Mandelbrot set in Ruby and Haskell",
		"time": "2010-03-05T14:13:50Z",
		"href": "http://blog.mostof.it/mandelbrot-set-in-ruby-and-haskell"
	},
	{
		"cluster": 6,
		"tags": [
			"politics",
			"internet",
			"technology",
			"debill",
			"censorshipp",
			"copyright"
		],
		"y": 4.971375561603525,
		"x": 5.938560868429723,
		"extended": "",
		"description": "Liberal Conspiracy » Digital Economy Bill: Why Amendment 120a isn’t our enemy",
		"time": "2010-03-05T13:44:06Z",
		"href": "http://liberalconspiracy.org/2010/03/04/digital-economy-bill-why-amendment-12a-isnt-our-enemy/"
	},
	{
		"cluster": 10,
		"tags": [
			"homophobia",
			"islam",
			"elm",
			"fascism",
			"religion",
			"politics"
		],
		"y": 4.808554799618279,
		"x": 8.403278023774261,
		"extended": "",
		"description": "Harry's Place » The video someone doesn’t want you to see",
		"time": "2010-03-05T13:30:46Z",
		"href": "http://www.hurryupharry.org/2010/03/05/the-video-someone-doesnt-want-you-to-see/#"
	},
	{
		"cluster": 10,
		"tags": [
			"obama",
			"cameron",
			"conservatives",
			"politics",
			"uk",
			"election",
			"campaigning"
		],
		"y": 4.245859466073139,
		"x": 10.418814454983101,
		"extended": "",
		"description": "New Statesman - Leader: Mr Cameron, you’re no Barack Obama",
		"time": "2010-03-04T09:46:21Z",
		"href": "http://www.newstatesman.com/uk-politics/2010/03/barack-obama-change-cameron"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"osbourne",
			"conservatives",
			"election",
			"recession",
			"monetary",
			"policy"
		],
		"y": 9.913689221454486,
		"x": 9.170143164375355,
		"extended": "",
		"description": "New Statesman - Why Slasher Osborne scares me",
		"time": "2010-03-04T09:31:34Z",
		"href": "http://www.newstatesman.com/economy/2010/03/slasher-growth-economic#"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"development",
			"setup",
			"testing",
			"ruby",
			"rspec",
			"cucumber",
			"osx",
			"bdd",
			"webrat",
			"autotest"
		],
		"y": 8.766313422218982,
		"x": -6.214129825116516,
		"extended": "",
		"description": "How To: Setup RSpec, Cucumber, Webrat, RCov and Autotest on Leopard | Clayton Lengel-Zigich",
		"time": "2010-03-03T12:01:50Z",
		"href": "http://www.claytonlz.com/index.php/2009/04/how-to-setup-rspec-cucumber-webrat-rcov-and-autotest-on-leopard/"
	},
	{
		"cluster": 2,
		"tags": [
			"postgres",
			"mysql",
			"database",
			"relational",
			"reference",
			"tutorial"
		],
		"y": -0.9341662270504685,
		"x": 1.3579890513676427,
		"extended": "",
		"description": "PostgreSQL for MySQL users | Coderholic",
		"time": "2010-03-03T12:01:29Z",
		"href": "http://www.coderholic.com/postgresql-for-mysql-users/"
	},
	{
		"cluster": 2,
		"tags": [
			"no",
			"nosql",
			"mapreduce",
			"sql",
			"presentation",
			"database",
			"video"
		],
		"y": -0.7246412366071384,
		"x": 2.38901126355034,
		"extended": "",
		"description": "YouTube - NoSQL",
		"time": "2010-03-03T11:16:12Z",
		"href": "http://www.youtube.com/watch?v=LhnGarRsKnA"
	},
	{
		"cluster": 17,
		"tags": [
			"mysql",
			"nosql",
			"rdbms",
			"relational",
			"database",
			"computerscience",
			"programming",
			"sql"
		],
		"y": 2.5785206167120847,
		"x": -2.2305039372993765,
		"extended": "",
		"description": "Dennis Forbes on Software and Technology - Getting Real about NoSQL and the SQL-Isn't-Scalable Lie",
		"time": "2010-03-03T10:59:31Z",
		"href": "http://www.yafla.com/dforbes/Getting_Real_about_NoSQL_and_the_SQL_Isnt_Scalable_Lie/"
	},
	{
		"cluster": 15,
		"tags": [
			"pi",
			"maths",
			"geometry",
			"triginometry",
			"mathematics"
		],
		"y": -6.123417308890697,
		"x": -2.5198621313104286,
		"extended": "",
		"description": "The Story of π",
		"time": "2010-03-02T18:26:16Z",
		"href": "http://video.google.com/videoplay?docid=-6200593424291031420#"
	},
	{
		"cluster": 15,
		"tags": [
			"medicine",
			"imaging",
			"signalprocessing",
			"signal",
			"processing",
			"mathematics",
			"images",
			"image",
			"graphics",
			"compression",
			"algorithms",
			"mri"
		],
		"y": -6.379001188774004,
		"x": -2.9111779579034183,
		"extended": "",
		"description": "Fill in the Blanks: Using Math to Turn Lo-Res Datasets Into Hi-Res Samples | Magazine",
		"time": "2010-03-02T14:32:05Z",
		"href": "http://www.wired.com/magazine/2010/02/ff_algorithm/all/1"
	},
	{
		"cluster": 2,
		"tags": [
			"privacy",
			"crime",
			"law",
			"dna"
		],
		"y": 2.0266499729936687,
		"x": 6.803380971359607,
		"extended": "",
		"description": "Giving innocent people back their DNA helps rapists, says Gordon Brown | openDemocracy",
		"time": "2010-03-02T13:08:21Z",
		"href": "http://www.opendemocracy.net/ourkingdom/guy-aitchison/giving-innocent-people-back-their-dna-helps-rapists-says-gordon-brown"
	},
	{
		"cluster": 7,
		"tags": [
			"enumerators",
			"laziness",
			"programming",
			"enumerator",
			"lazy",
			"development",
			"ruby",
			"evaluation"
		],
		"y": 7.409775682117095,
		"x": -8.748333461586746,
		"extended": "",
		"description": "Lazy Enumerators in Ruby « Autodidact",
		"time": "2010-03-02T11:13:08Z",
		"href": "http://www.michaelharrison.ws/weblog/?p=163"
	},
	{
		"cluster": 17,
		"tags": [
			"calculus",
			"derivative",
			"ruby",
			"programming",
			"functional",
			"higherorderfunctions",
			"infinitessimal",
			"limits"
		],
		"y": 5.326123637486208,
		"x": -10.151992106399627,
		"extended": "",
		"description": "the seventh seal: Limits and Derivatives and Ruby",
		"time": "2010-03-02T10:10:58Z",
		"href": "http://seal-7.blogspot.com/2009/03/limits-and-derivatives-and-ruby.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"interview",
			"mathpunk",
			"learning",
			"teaching",
			"education",
			"gametheory",
			"game",
			"theory",
			"philosophy"
		],
		"y": -8.802556046704561,
		"x": -5.473199338954174,
		"extended": "",
		"description": "The Philosophy of Punk Rock Mathematics – Technoccult interviews Tom Henderson | Technoccult",
		"time": "2010-03-01T18:47:50Z",
		"href": "http://technoccult.net/archives/2010/02/25/the-punk-rock-philosophy-of-mathematics-technoccult-interviews-tom-henderson/"
	},
	{
		"cluster": 10,
		"tags": [
			"security",
			"politics",
			"israel",
			"espionage",
			"police",
			"dubai",
			"schneier",
			"rfid"
		],
		"y": 4.289703406261103,
		"x": 8.604189349691358,
		"extended": "",
		"description": "Schneier on Security: Al-Mabhouh Assassination",
		"time": "2010-02-21T00:52:04Z",
		"href": "http://www.schneier.com/blog/archives/2010/02/al-mabhouh_assa.html"
	},
	{
		"cluster": 15,
		"tags": [
			"film",
			"psychology",
			"math",
			"science",
			"cinema",
			"attention",
			"research",
			"mathematics"
		],
		"y": -7.278503446925356,
		"x": -2.1427683982597556,
		"extended": "",
		"description": "Solved: The mathematics of the Hollywood blockbuster - physics-math - 18 February 2010 - New Scientist",
		"time": "2010-02-21T00:49:12Z",
		"href": "http://www.newscientist.com/article/mg20527483.900-solved-the-mathematics-of-the-hollywood-blockbuster.html"
	},
	{
		"cluster": 4,
		"tags": [
			"ruby",
			"functional",
			"programming",
			"haskell",
			"style",
			"development",
			"sorting",
			"algorithms",
			"quicksort"
		],
		"y": -5.073011164754291,
		"x": -7.14854954641765,
		"extended": "x, *xs = items\n",
		"description": "Functional ruby – a simple example | implements Developer {",
		"time": "2010-02-18T18:04:29Z",
		"href": "http://blog.mostof.it/functional-ruby-a-simple-example"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"science",
			"ghhardy",
			"hardy",
			"discussion"
		],
		"y": -7.099363179002305,
		"x": -2.2529372091240716,
		"extended": "",
		"description": "BBC - BBC Radio 4 Programmes - In Our Time, Unintended Consequences of Mathematics",
		"time": "2010-02-18T15:16:38Z",
		"href": "http://www.bbc.co.uk/programmes/b00qj2nq"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"money",
			"business",
			"economy",
			"pensions",
			"welfare",
			"wealth"
		],
		"y": 8.95094034836996,
		"x": 7.637678952066599,
		"extended": "",
		"description": "FT.com / UK - Young generations face wealth deficit",
		"time": "2010-02-18T14:59:58Z",
		"href": "http://www.ft.com/cms/s/0/0d616a54-1b63-11df-838f-00144feab49a.html?nclick_check=1"
	},
	{
		"cluster": 10,
		"tags": [
			"libdems",
			"politics",
			"parliament",
			"election",
			"uk"
		],
		"y": 4.232599745756009,
		"x": 10.291095009155631,
		"extended": "",
		"description": "Clever Clegg's third way | Stephen Tall | Comment is free | guardian.co.uk",
		"time": "2010-02-18T10:56:30Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/feb/15/clever-clegg-third-way#"
	},
	{
		"cluster": 15,
		"tags": [
			"logic",
			"mathematics",
			"philosophy",
			"sentential",
			"predicate",
			"modal",
			"learning",
			"reference"
		],
		"y": -8.873936682472026,
		"x": -5.037217647972179,
		"extended": "",
		"description": "gist: 267942 - GitHub",
		"time": "2010-02-12T19:45:54Z",
		"href": "http://gist.github.com/267942"
	},
	{
		"cluster": 7,
		"tags": [
			"processing",
			"iphone",
			"framework",
			"programming",
			"development",
			"visualization",
			"opensource"
		],
		"y": 7.897616060593146,
		"x": -2.606789441827113,
		"extended": "",
		"description": "iProcessing",
		"time": "2010-02-11T16:14:05Z",
		"href": "http://luckybite.com/iprocessing/"
	},
	{
		"cluster": 10,
		"tags": [
			"sunni",
			"shia",
			"history",
			"religion",
			"politics",
			"islam"
		],
		"y": 4.980495589095978,
		"x": 8.537013489504956,
		"extended": "",
		"description": "New Statesman - The great divide",
		"time": "2010-02-11T13:34:02Z",
		"href": "http://www.newstatesman.com/religion/2010/02/mehdi-hasan-sunni-shia-iraq"
	},
	{
		"cluster": 2,
		"tags": [
			"chaos",
			"science",
			"meteorology",
			"conspiracy"
		],
		"y": -3.3388612382786356,
		"x": 2.696937817917159,
		"extended": "",
		"description": "HAARP, Crop Circles and Giant Weather Rings? | forgetomori",
		"time": "2010-02-11T09:25:16Z",
		"href": "http://forgetomori.com/2010/ufos/haarp-crop-circles-and-giant-weather-rings/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"art",
			"nature",
			"pattern"
		],
		"y": -8.732806649245825,
		"x": 0.3233008554680251,
		"extended": "(z = y^2 -x^2)\n",
		"description": "Mathematics and Art - O'Reilly Radar",
		"time": "2010-02-10T16:44:57Z",
		"href": "http://radar.oreilly.com/2010/02/mathematics-and-art.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"osborne",
			"conservatives",
			"libdems",
			"cable",
			"chancellor",
			"election",
			"cabinet"
		],
		"y": 8.12726941619627,
		"x": 9.447452303219869,
		"extended": "",
		"description": "George Osborne's lack of experience rattles City | Politics | The Guardian",
		"time": "2010-02-10T14:06:43Z",
		"href": "http://www.guardian.co.uk/politics/2010/feb/09/george-osborne-vince-cable-chancellor"
	},
	{
		"cluster": 10,
		"tags": [
			"israel",
			"palestine",
			"refugees",
			"politics"
		],
		"y": 3.1236571971989786,
		"x": 7.666586761628126,
		"extended": "",
		"description": "The Samosa : Netanyahu invites the refugees to vote",
		"time": "2010-02-10T13:52:31Z",
		"href": "http://www.thesamosa.co.uk/index.php/comment-and-analysis/politics/241-netanyahu-invites-the-refugees-to-vote.html#"
	},
	{
		"cluster": 17,
		"tags": [
			"java",
			"designpatterns",
			"functional",
			"programming",
			"oop",
			"objects",
			"scala",
			"computersciece",
			"dependencyinjection"
		],
		"y": 5.612605129195439,
		"x": -2.7645255937664763,
		"extended": "",
		"description": "Why I love everything you hate about Java « Magic Scaling Sprinkles",
		"time": "2010-02-09T14:59:06Z",
		"href": "http://magicscalingsprinkles.wordpress.com/2010/02/08/why-i-love-everything-you-hate-about-java/"
	},
	{
		"cluster": 10,
		"tags": [
			"amnesty",
			"moazzambegg",
			"gitasahgal",
			"humanrights",
			"politics"
		],
		"y": 4.687660724253201,
		"x": 11.537114116218712,
		"extended": "",
		"description": "How Amnesty chose the wrong poster-boy - Human Rights For All",
		"time": "2010-02-09T14:20:17Z",
		"href": "http://www.human-rights-for-all.org/spip.php?article8"
	},
	{
		"cluster": 12,
		"tags": [
			"ui",
			"ux",
			"passwords",
			"accessibility",
			"javascript",
			"web",
			"design",
			"development"
		],
		"y": 9.63982921595627,
		"x": 0.1334405653760059,
		"extended": "",
		"description": "A List Apart: Articles: The Problem with Passwords",
		"time": "2010-02-09T10:24:54Z",
		"href": "http://www.alistapart.com/articles/the-problem-with-passwords/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"closures",
			"lambdas",
			"programming",
			"computerscience",
			"development"
		],
		"y": 4.349714348376193,
		"x": -10.708473156229616,
		"extended": "",
		"description": "The Building Blocks of Ruby « Katz Got Your Tongue?",
		"time": "2010-02-08T10:13:12Z",
		"href": "http://yehudakatz.com/2010/02/07/the-building-blocks-of-ruby/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+KatzGotYourTongue+(Katz+Got+Your+Tongue%3F)"
	},
	{
		"cluster": 2,
		"tags": [
			"brewing",
			"yeast",
			"beer",
			"homebrew"
		],
		"y": -4.4892945014952765,
		"x": 0.0745882022278537,
		"extended": "",
		"description": "Brew Your Own: The How-To Homebrew Beer Magazine - Techniques - Harvesting Yeast: Techniques",
		"time": "2010-02-08T10:02:13Z",
		"href": "http://www.byo.com/stories/techniques/article/indices/19-brewing-tips/743-harvesting-yeast-techniques"
	},
	{
		"cluster": 2,
		"tags": [
			"hops",
			"brewing",
			"firstgold",
			"supplies",
			"ingredients",
			"beer"
		],
		"y": -4.45208130884853,
		"x": 0.07911356209254183,
		"extended": "",
		"description": "Hops - Hops, Supplier, UK, Produce, brew your own Beer",
		"time": "2010-02-08T09:16:36Z",
		"href": "http://www.hops2brew.co.uk/catalog/Hops-5-1.html"
	},
	{
		"cluster": 15,
		"tags": [
			"fractal",
			"video",
			"mathematics",
			"chaos",
			"mandelbrot"
		],
		"y": -3.3798122890700237,
		"x": 3.2323503649284393,
		"extended": "",
		"description": "Fractals - The Colors Of Infinity (By Arthur Clarke)",
		"time": "2010-02-05T14:48:13Z",
		"href": "http://video.google.com/videoplay?docid=8570098277666323857&hl=en#"
	},
	{
		"cluster": 15,
		"tags": [
			"chaos",
			"mathematics",
			"ai",
			"engineering",
			"neorology",
			"life",
			"science",
			"biology",
			"stochastics"
		],
		"y": -7.0340496419172265,
		"x": -1.9396582467740582,
		"extended": "",
		"description": "Controlling cockroach chaos",
		"time": "2010-02-04T14:42:53Z",
		"href": "http://plus.maths.org/latestnews/jan-apr10/roboroach/index.html"
	},
	{
		"cluster": 10,
		"tags": [
			"china",
			"humanrights",
			"politics",
			"democracy",
			"freedom",
			"government",
			"reform",
			"development",
			"censorship",
			"charter08",
			"human-rights"
		],
		"y": 5.681298255386183,
		"x": 10.66196799664904,
		"extended": "",
		"description": "China's Charter 08 - The New York Review of Books",
		"time": "2010-02-03T13:42:04Z",
		"href": "http://www.nybooks.com/articles/22210"
	},
	{
		"cluster": 15,
		"tags": [
			"maths",
			"education",
			"politics",
			"mathematics"
		],
		"y": -8.699575928266965,
		"x": -3.8239908043394837,
		"extended": "",
		"description": "Is Math a Socialist Plot?",
		"time": "2010-02-02T17:43:31Z",
		"href": "http://www.maa.org/devlin/devlin_02_10.html"
	},
	{
		"cluster": 2,
		"tags": [
			"arel",
			"relationalalgebra",
			"relationaltheory",
			"relational",
			"sql",
			"database",
			"activerecord",
			"rails",
			"ruby"
		],
		"y": 2.557751679777275,
		"x": -1.869296625480599,
		"extended": "",
		"description": "Why Arel? « Magic Scaling Sprinkles",
		"time": "2010-01-29T13:18:48Z",
		"href": "http://magicscalingsprinkles.wordpress.com/2010/01/28/why-i-wrote-arel/"
	},
	{
		"cluster": 10,
		"tags": [
			"press",
			"journalism",
			"politics",
			"iraq",
			"chilcot",
			"parliament"
		],
		"y": 4.851397743883682,
		"x": 10.838367940131603,
		"extended": "",
		"description": "Denis MacShane: Objections I never heard in 2003 - Commentators, Opinion - The Independent",
		"time": "2010-01-29T11:26:18Z",
		"href": "http://www.independent.co.uk/opinion/commentators/denis-macshane-objections-i-never-heard-in-2003-1873072.html"
	},
	{
		"cluster": 10,
		"tags": [
			"iraq",
			"blix",
			"uk",
			"us",
			"war",
			"politics",
			"chilcot",
			"blair"
		],
		"y": 8.23762878474541,
		"x": 12.700377651314042,
		"extended": "",
		"description": "Hans Blix | Blair's blind faith in intelligence | Comment is free | guardian.co.uk",
		"time": "2010-01-29T10:45:07Z",
		"href": "http://www.guardian.co.uk/commentisfree/2010/jan/28/hans-blix-tony-blair-iraq"
	},
	{
		"cluster": 10,
		"tags": [
			"chilcot",
			"blair",
			"war",
			"iraq",
			"politics",
			"uk",
			"US",
			"international"
		],
		"y": 8.23762880981853,
		"x": 12.700377641345737,
		"extended": "",
		"description": "The real problem was Blair's policy to America, not Iraq | Martin Kettle | Comment is free | The Guardian",
		"time": "2010-01-29T10:39:41Z",
		"href": "http://www.guardian.co.uk/commentisfree/cifamerica/2010/jan/28/blair-america-iraq-intervention-chilcot"
	},
	{
		"cluster": 11,
		"tags": [
			"haskell",
			"snowleopard",
			"fix",
			"bug",
			"break",
			"64bit",
			"development",
			"programming",
			"osx",
			"mac"
		],
		"y": -4.742188567636866,
		"x": -6.507537092345134,
		"extended": "",
		"description": "Obvious Hints: Running Haskell GHC on Snow Leopard",
		"time": "2010-01-28T13:23:26Z",
		"href": "http://obvioushints.blogspot.com/2009/09/running-haskell-ghc-on-snow-leopard.html"
	},
	{
		"cluster": 5,
		"tags": [
			"bayseanclassification",
			"baysean",
			"classification",
			"ai",
			"nlp",
			"computationallinguistics",
			"linguistics",
			"computation",
			"computerscience",
			"bayesian",
			"bayes",
			"ruby",
			"rails",
			"datamining",
			"tutorial",
			"statistics"
		],
		"y": 2.715197354625221,
		"x": -10.451639916591223,
		"extended": "",
		"description": "Bayesian Classification on Rails | Logan Koester",
		"time": "2010-01-27T10:04:20Z",
		"href": "http://blog.logankoester.com/bayesian-classification-on-rails"
	},
	{
		"cluster": 10,
		"tags": [
			"foreignpolicy",
			"politics",
			"policy",
			"society",
			"britain",
			"liberal",
			"progressive",
			"climate",
			"trident",
			"nucleardeterrent",
			"climatechange",
			"armstrade",
			"war",
			"occupation",
			"israel",
			"finance",
			"business"
		],
		"y": 3.9823088644901548,
		"x": 7.63096866068841,
		"extended": "",
		"description": "A Genuinely Progressive Foreign Policy | Left Foot Forward",
		"time": "2010-01-26T14:32:32Z",
		"href": "http://www.leftfootforward.org/2010/01/a-genuinely-progressive-foreign-policy/"
	},
	{
		"cluster": 14,
		"tags": [
			"matz",
			"sadekdrogbi",
			"interview",
			"ruby",
			"programmig",
			"languages",
			"design",
			"plt",
			"computerscience",
			"functional",
			"lazy",
			"actors"
		],
		"y": 4.694513772053987,
		"x": -11.9237667843202,
		"extended": "",
		"description": "InfoQ: Ruby Creator Yukihiro \"Matz\" about Ruby, Functional Programming and Programming Languages Design",
		"time": "2010-01-26T11:05:16Z",
		"href": "http://www.infoq.com/interviews/yukihiro-matz-language-design"
	},
	{
		"cluster": 13,
		"tags": [
			"law",
			"america",
			"lobbying",
			"politics",
			"business",
			"finance",
			"economics",
			"corruption"
		],
		"y": 9.25413360067998,
		"x": 7.23142614224638,
		"extended": "",
		"description": "FT.com / Comment / Opinion - More corporate lobbying is bad business",
		"time": "2010-01-25T14:42:43Z",
		"href": "http://www.ft.com/cms/s/0/bd03f92e-09aa-11df-b91f-00144feabdc0.html"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"development",
			"web",
			"business",
			"usability",
			"ux",
			"ui"
		],
		"y": 1.740638707170137,
		"x": 1.010209538398732,
		"extended": "",
		"description": "The blurring distinction between graphic design and software development « Keeping it brief – Pietro Polsinelli’s blog",
		"time": "2010-01-25T13:20:40Z",
		"href": "http://pietro.open-lab.com/2010/01/18/the-blurring-distinction-between-graphic-design-and-software-development/"
	},
	{
		"cluster": 4,
		"tags": [
			"monad",
			"haskell",
			"mathematics",
			"programming",
			"functional",
			"computerscience",
			"IO",
			"tutorial"
		],
		"y": -5.326813839642159,
		"x": -9.708987241985346,
		"extended": "",
		"description": "Strong Typed: A monad non-tutorial",
		"time": "2010-01-25T11:13:19Z",
		"href": "http://strongtyped.blogspot.com/2010/01/monad-non-tutorial.html"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"railties",
			"ruby",
			"configureation",
			"plugin",
			"architecture",
			"rails3",
			"web",
			"development",
			"programming"
		],
		"y": 9.560829771780442,
		"x": -7.355705561908471,
		"extended": "",
		"description": "Rails and Merb Merge: Rails Core (Part 4 of 6) | Engine Yard Blog",
		"time": "2010-01-25T11:12:43Z",
		"href": "http://www.engineyard.com/blog/2010/rails-and-merb-merge-rails-core-part-4-of-6/"
	},
	{
		"cluster": 7,
		"tags": [
			"activerecord",
			"arel",
			"rails3",
			"rails",
			"ruby",
			"web",
			"development",
			"api",
			"interface",
			"programming"
		],
		"y": 10.03006177026465,
		"x": -7.010642725746315,
		"extended": "",
		"description": "has_many :bugs, :through => :rails: Active Record Query Interface 3.0",
		"time": "2010-01-25T11:12:12Z",
		"href": "http://m.onkey.org/2010/1/22/active-record-query-interface"
	},
	{
		"cluster": 10,
		"tags": [
			"rbs",
			"politics",
			"climate",
			"business",
			"finance",
			"corruption",
			"tarsands",
			"pollution",
			"society",
			"banking",
			"bailout"
		],
		"y": 8.837401248666549,
		"x": 6.054063247481122,
		"extended": "",
		"description": "Liberal Conspiracy » There is more on RBS to get angry about",
		"time": "2010-01-25T11:09:05Z",
		"href": "http://liberalconspiracy.org/2010/01/23/there-is-more-on-rbs-to-get-angry-about/"
	},
	{
		"cluster": 2,
		"tags": [
			"weather",
			"climate",
			"modelling",
			"business",
			"science",
			"forecasting",
			"economy"
		],
		"y": 0.9506230635138961,
		"x": 4.086485872286152,
		"extended": "",
		"description": "Director Magazine— The weather obsessive",
		"time": "2010-01-22T17:51:48Z",
		"href": "http://www.director.co.uk/ONLINE/2010/01_10_MetOffice.html"
	},
	{
		"cluster": 13,
		"tags": [
			"finance",
			"business",
			"legislation",
			"politics",
			"economics"
		],
		"y": 9.167496207110672,
		"x": 7.240850533951504,
		"extended": "",
		"description": "Towards a 21st Century Glass-Steagall « Rortybomb",
		"time": "2010-01-22T17:14:33Z",
		"href": "http://rortybomb.wordpress.com/2010/01/21/towards-a-21st-century-glass-steagall/"
	},
	{
		"cluster": 17,
		"tags": [
			"javascript",
			"programming",
			"development",
			"algorithms",
			"computerscience",
			"datastructures",
			"reference",
			"learning"
		],
		"y": 1.1046666238609373,
		"x": -12.873081312252134,
		"extended": "",
		"description": "nzakas's computer-science-in-javascript at master - GitHub",
		"time": "2010-01-22T13:38:51Z",
		"href": "http://github.com/nzakas/computer-science-in-javascript"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"papers",
			"filesharing",
			"online",
			"intellectualproperty",
			"business"
		],
		"y": 8.62645438216228,
		"x": 7.1431979033687485,
		"extended": "",
		"description": "Yannis and Brynjolfsson - Google Scholar",
		"time": "2010-01-22T10:30:18Z",
		"href": "http://scholar.google.co.uk/scholar?q=Yannis%20and%20Brynjolfsson&oe=utf-8&rls=org.mozilla:en-US:official&client=firefox-a&um=1&ie=UTF-8&sa=N&hl=en&tab=ws"
	},
	{
		"cluster": 17,
		"tags": [
			"scala",
			"functional",
			"programming",
			"language",
			"design",
			"postfunctional"
		],
		"y": 2.489039824139433,
		"x": -7.451698551258223,
		"extended": "",
		"description": "A Postfunctional Language | The Scala Programming Language",
		"time": "2010-01-22T10:28:30Z",
		"href": "http://www.scala-lang.org/node/4960"
	},
	{
		"cluster": 6,
		"tags": [
			"filesharing",
			"p2p",
			"music",
			"business",
			"internet",
			"law",
			"copyright",
			"politics",
			"economics"
		],
		"y": 5.34467370715679,
		"x": 5.434777491731214,
		"extended": "",
		"description": "Why Bono is wrong about filesharing • The Register",
		"time": "2010-01-22T09:46:13Z",
		"href": "http://www.theregister.co.uk/2010/01/20/sanders_bono_no/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"education",
			"learning",
			"child",
			"development",
			"primary",
			"earlyyears"
		],
		"y": -8.73628559819406,
		"x": -5.599476253876168,
		"extended": "The teacher in this grade 1 class was wonderful. Friendly, supportive, with as challenging activities for each group as she could find or devise. She taught them reading, writing, arithmetic, geography, social studies, science and who knows what esle.\n\nYet how could this excellent teacher deal individually in mathematics – grade 1 mathematics – with Tom who could not yet confidently and reliably count to 10, and the top set boys who were pondering infinities?\n",
		"description": "How about infinity plus one? « Republic of Mathematics",
		"time": "2010-01-21T15:21:03Z",
		"href": "http://republicofmath.wordpress.com/2010/01/21/how-about-infinity-plus-one/#"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"lift",
			"liftweb",
			"web",
			"development",
			"framework",
			"review",
			"comparison",
			"programming"
		],
		"y": 7.382494462959939,
		"x": -2.13330291543168,
		"extended": "",
		"description": "Scala and Lift – Status after six months « Tales from the classpath – Jeppe Nejsum Madsen",
		"time": "2010-01-20T13:55:42Z",
		"href": "http://jeppenejsum.wordpress.com/2010/01/18/scala-and-lift-status-after-six-months/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"left",
			"marxism",
			"socialism",
			"identity",
			"identitypolitics",
			"history"
		],
		"y": 2.6553345725471686,
		"x": 9.583582267428232,
		"extended": "",
		"description": "Stumbling and Mumbling: I blame the 80s",
		"time": "2010-01-20T13:46:53Z",
		"href": "http://stumblingandmumbling.typepad.com/stumbling_and_mumbling/2010/01/i-blame-the-80s.html#"
	},
	{
		"cluster": 14,
		"tags": [
			"usability",
			"ux",
			"ui",
			"ucd",
			"design",
			"development",
			"presentation",
			"video",
			"web"
		],
		"y": 1.749562857763879,
		"x": 0.995000766968675,
		"extended": "",
		"description": "Video: I can't think of a better intro to the essential - (37signals)",
		"time": "2010-01-20T11:24:32Z",
		"href": "http://37signals.com/svn/posts/2092-i-cant-think-of-a-better-intro-to-the-essential"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"debugging",
			"console",
			"exception",
			"programming",
			"development",
			"tools"
		],
		"y": 7.442947294384815,
		"x": -8.869262521364695,
		"extended": "",
		"description": "Hammertime: An interactive error console for Ruby | Virtuous Code",
		"time": "2010-01-20T10:18:40Z",
		"href": "http://avdi.org/devblog/2010/01/18/hammertime/"
	},
	{
		"cluster": 15,
		"tags": [
			"learning",
			"mathematics",
			"history",
			"education",
			"reference",
			"science",
			"biography"
		],
		"y": -8.907387089438389,
		"x": -5.709418572607654,
		"extended": "",
		"description": "MacTutor History of Mathematics",
		"time": "2010-01-19T18:04:31Z",
		"href": "http://www-history.mcs.st-and.ac.uk/"
	},
	{
		"cluster": 8,
		"tags": [
			"language",
			"linguistics",
			"internet",
			"creole",
			"culture",
			"online"
		],
		"y": -7.212364787006234,
		"x": 7.87751578354841,
		"extended": "",
		"description": "Sliced Bread - the Sequel?: Do you speak digital pidgin or digital creole?",
		"time": "2010-01-18T16:19:35Z",
		"href": "http://technowaffle.blogspot.com/2010/01/do-you-speak-digital-pidgin-or-digital.html"
	},
	{
		"cluster": 7,
		"tags": [
			"component",
			"ui",
			"cells",
			"rails",
			"plugin",
			"oo",
			"presentation",
			"development",
			"ruby",
			"components",
			"web"
		],
		"y": 9.6225890607678,
		"x": -8.124184335913395,
		"extended": "",
		"description": "Cells - Components For Rails",
		"time": "2010-01-18T10:36:26Z",
		"href": "http://cells.rubyforge.org/"
	},
	{
		"cluster": 15,
		"tags": [
			"learning",
			"mathematics",
			"algebra",
			"calculus",
			"resources",
			"education",
			"videos"
		],
		"y": -8.459606472373181,
		"x": -5.414549225914136,
		"extended": "",
		"description": "Khan Academy",
		"time": "2010-01-17T13:16:35Z",
		"href": "http://www.khanacademy.org/#Linear%20Algebra"
	},
	{
		"cluster": 12,
		"tags": [
			"ux",
			"web",
			"business",
			"development",
			"incentives"
		],
		"y": 8.814989293959643,
		"x": 0.26784045906907816,
		"extended": "",
		"description": "Make Your Web Applications Addictive: 5 Lessons to Learn from Foursquare « Area Studios Blog :: Covering as Much As We Can",
		"time": "2010-01-15T10:22:18Z",
		"href": "http://blog.areastudios.com/2010/01/14/make-your-web-applications-addictive-5-lessons-to-learn-from-foursquare/comment-page-1/"
	},
	{
		"cluster": 17,
		"tags": [
			"zipper",
			"datastructure",
			"functional",
			"tree",
			"graph",
			"data",
			"structure",
			"programming",
			"computerscience"
		],
		"y": -4.340868464549727,
		"x": -8.957095740309162,
		"extended": "",
		"description": "Zippers: Making Functional \"Updates\" Efficient : Good Math, Bad Math",
		"time": "2010-01-14T10:46:00Z",
		"href": "http://scienceblogs.com/goodmath/2010/01/zippers_making_functional_upda.php"
	},
	{
		"cluster": 10,
		"tags": [
			"climatechange",
			"climate",
			"politics",
			"science",
			"environment"
		],
		"y": 4.582073878419735,
		"x": 7.666609271316086,
		"extended": "",
		"description": "The Lippard Blog: Who are the climate change skeptics?",
		"time": "2010-01-13T16:29:18Z",
		"href": "http://lippard.blogspot.com/2009/12/who-are-climate-change-skeptics.html"
	},
	{
		"cluster": 13,
		"tags": [
			"environment",
			"economics",
			"consumerism",
			"commerce",
			"politics"
		],
		"y": 9.06785563455604,
		"x": 9.243855507556304,
		"extended": "",
		"description": "Consumption and Consumerism — Global Issues",
		"time": "2010-01-13T16:21:22Z",
		"href": "http://www.globalissues.org/issue/235/consumption-and-consumerism#"
	},
	{
		"cluster": 2,
		"tags": [
			"maths",
			"education",
			"textbooks",
			"resources",
			"learning",
			"books",
			"online",
			"free"
		],
		"y": -8.161420359716493,
		"x": -5.6270143345148185,
		"extended": "",
		"description": "Online texts",
		"time": "2010-01-13T09:31:12Z",
		"href": "http://people.math.gatech.edu/~cain/textbooks/onlinebooks.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"urbanism",
			"development",
			"creativity",
			"richardflorida",
			"cities",
			"planning",
			"politics"
		],
		"y": 7.65912280687808,
		"x": 6.731280439551305,
		"extended": "",
		"description": "The Ruse of the Creative Class | The American Prospect",
		"time": "2010-01-13T08:50:34Z",
		"href": "http://www.prospect.org/cs/articles?article=the_ruse_of_the_creative_class"
	},
	{
		"cluster": 7,
		"tags": [
			"scala",
			"processing",
			"java",
			"visualization",
			"graphics",
			"programming",
			"development",
			"spde"
		],
		"y": 7.313151144635698,
		"x": -2.555827014221965,
		"extended": "",
		"description": "Spde → About",
		"time": "2010-01-11T15:18:27Z",
		"href": "http://technically.us/spde/About"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"empireDB",
			"sql",
			"orm",
			"programming",
			"lift",
			"web",
			"development",
			"database",
			"relational",
			"rdbms",
			"persistence",
			"model"
		],
		"y": 3.4256337977649483,
		"x": -2.1184490330202568,
		"extended": "",
		"description": "Using Scala with Empire DB",
		"time": "2010-01-11T15:11:54Z",
		"href": "http://www.acooke.org/cute/UsingScala0.html"
	},
	{
		"cluster": 12,
		"tags": [
			"scala",
			"step",
			"web",
			"framework",
			"programming",
			"development",
			"sinatra",
			"rest"
		],
		"y": 7.400853823148169,
		"x": -2.164896460985517,
		"extended": "",
		"description": "alandipert's step at master - GitHub",
		"time": "2010-01-11T15:11:07Z",
		"href": "http://github.com/alandipert/step"
	},
	{
		"cluster": 17,
		"tags": [
			"plt",
			"computerscience",
			"sql",
			"database",
			"normalization",
			"languages",
			"programming",
			"relations",
			"relationaltheory"
		],
		"y": 1.0056361229648392,
		"x": -8.263158687631464,
		"extended": "",
		"description": "Why Normalization Failed to Become the Ultimate Guide for Database Designers? | Lambda the Ultimate",
		"time": "2010-01-11T13:30:55Z",
		"href": "http://lambda-the-ultimate.org/node/3762"
	},
	{
		"cluster": 18,
		"tags": [
			"statistics",
			"mathematics",
			"programming",
			"metrics",
			"software",
			"optimization",
			"performance",
			"development"
		],
		"y": 6.39729691421292,
		"x": -7.744642236858624,
		"extended": "",
		"description": "Programmers Need To Learn Statistics Or I Will Kill Them All",
		"time": "2010-01-11T09:56:46Z",
		"href": "http://zedshaw.com/essays/programmer_stats.html"
	},
	{
		"cluster": 2,
		"tags": [
			"glasgow",
			"holiday",
			"travel",
			"guide"
		],
		"y": -0.7938810222168065,
		"x": 4.810920054454436,
		"extended": "",
		"description": "glasgow - indietravelguide.com -a city by city guide to the best indie clubs, bars, record shops and local bands",
		"time": "2010-01-09T14:34:21Z",
		"href": "http://www.howdoesitfeel.co.uk/glasgow.html"
	},
	{
		"cluster": 2,
		"tags": [
			"brewing",
			"homebrew",
			"howto",
			"beer",
			"reference",
			"guide",
			"food",
			"drink"
		],
		"y": -4.595053911237573,
		"x": -0.043566721557788984,
		"extended": "",
		"description": "All Grain Brewing -Basic Guide",
		"time": "2010-01-09T14:10:23Z",
		"href": "http://www.donosborn.com/homebrew/all_grain_how_to.htm"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"brewing",
			"reference",
			"homebrew",
			"drink",
			"food"
		],
		"y": -4.578581746479334,
		"x": -0.02960115604666378,
		"extended": "",
		"description": "How To Brew Your First All Grain Beer",
		"time": "2010-01-09T14:08:33Z",
		"href": "http://www.beerdude.com/howto_brew_allgrain.shtml"
	},
	{
		"cluster": 2,
		"tags": [
			"brewing",
			"homebrew",
			"beer",
			"guide",
			"food",
			"drink"
		],
		"y": -4.583139260586321,
		"x": -0.037318025605198146,
		"extended": "",
		"description": "The beginner's guide to advanced and all-grain brewing",
		"time": "2010-01-09T14:08:14Z",
		"href": "http://home1.gte.net/richwebb/guide_do.htm"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"brewing",
			"homebrew",
			"howto",
			"reference",
			"guide",
			"drink",
			"food"
		],
		"y": -4.604315741994253,
		"x": -0.055545314619058615,
		"extended": "",
		"description": "How to Brew - By John Palmer - Introduction",
		"time": "2010-01-09T14:08:01Z",
		"href": "http://www.howtobrew.com/intro.html"
	},
	{
		"cluster": 7,
		"tags": [
			"average",
			"statistics",
			"ration",
			"algorithm",
			"mathematics",
			"programming",
			"development",
			"ranking",
			"sorting",
			"ruby"
		],
		"y": 7.6559563450445305,
		"x": -9.55674510966965,
		"extended": "",
		"description": "How Not To Sort By Average Rating",
		"time": "2010-01-07T18:04:28Z",
		"href": "http://www.evanmiller.org/how-not-to-sort-by-average-rating.html"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"activerecord",
			"ruby",
			"programming",
			"web",
			"development",
			"errormessages",
			"error",
			"message",
			"UI"
		],
		"y": 9.585048826537726,
		"x": -7.583282115444553,
		"extended": "",
		"description": "Custom field names in Rails error messages - A Noted Path by Theodore Nguyen-Cao",
		"time": "2010-01-07T18:03:56Z",
		"href": "http://www.theodorenguyen-cao.com/2009/04/06/custom-field-names-in-rails-error-messages/"
	},
	{
		"cluster": 3,
		"tags": [
			"criticism",
			"theory",
			"essays",
			"photography",
			"art",
			"culture",
			"list"
		],
		"y": -11.64053694669755,
		"x": 2.859468523232273,
		"extended": "",
		"description": "A Photo Student › Photo Writings",
		"time": "2010-01-05T15:07:48Z",
		"href": "http://www.aphotostudent.com/photo-readings/?utm_source=Photojojo+Newsletter&utm_campaign=5790e2ad9b-Photo_Philosophy1_5_2010&utm_medium=email"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"tips",
			"reference",
			"variables",
			"globals",
			"development",
			"software",
			"programming"
		],
		"y": 7.452229657815992,
		"x": -8.489037892314958,
		"extended": "",
		"description": "Cryptic Ruby Global Variables and Their Meanings | Purify Blog",
		"time": "2010-01-05T10:27:41Z",
		"href": "http://blog.purifyapp.com/2010/01/04/cryptic-ruby-global-variables-and-their-meanings/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"neuroscience",
			"symmetry",
			"geometry",
			"abstractalgebra",
			"topology",
			"perception",
			"hallucination",
			"science"
		],
		"y": -7.042039890588716,
		"x": -2.2756238512310523,
		"extended": "",
		"description": "Uncoiling the spiral: Maths and hallucinations",
		"time": "2010-01-03T13:23:53Z",
		"href": "http://plus.maths.org/issue53/features/hallucinations/index.html"
	},
	{
		"cluster": 6,
		"tags": [
			"gpl",
			"copyleft",
			"opensource",
			"freesoftware",
			"copyright",
			"software",
			"business",
			"development"
		],
		"y": 8.538721534748843,
		"x": -0.6282073068889066,
		"extended": "",
		"description": "I Love the GPL (Except When it Applies to Me) - Ted Dziuba",
		"time": "2010-01-03T11:48:23Z",
		"href": "http://teddziuba.com/2010/01/i-love-the-gpl-except-when-it.html#"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"education",
			"learning",
			"resource"
		],
		"y": -8.682665370641885,
		"x": -5.443335683526549,
		"extended": "",
		"description": "Interactive Mathematics Miscellany and Puzzles, Index",
		"time": "2010-01-02T11:13:02Z",
		"href": "http://cut-the-knot.org/"
	},
	{
		"cluster": 11,
		"tags": [
			"grapher",
			"mac",
			"osx",
			"mathematics",
			"help",
			"howto",
			"complexnumbers"
		],
		"y": -6.07452407788555,
		"x": -0.8350618386173925,
		"extended": "",
		"description": "Taming complex numbers in Grapher.app | Steven Wittens - Acko.net",
		"time": "2010-01-02T11:03:41Z",
		"href": "http://acko.net/blog/taming-complex-numbers-in-grapher-app"
	},
	{
		"cluster": 15,
		"tags": [
			"knowledge",
			"mathematics",
			"logic",
			"philosophy",
			"epistemology"
		],
		"y": -8.632942024416742,
		"x": -4.4359255612891255,
		"extended": "",
		"description": "BBC News - Today - What we will never know: Marcus du Sautoy",
		"time": "2010-01-01T19:35:05Z",
		"href": "http://news.bbc.co.uk/today/hi/today/newsid_8432000/8432160.stm"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"web",
			"OCR",
			"interface",
			"mathml",
			"latex",
			"transcription"
		],
		"y": -6.866262451692136,
		"x": -2.8479957942930842,
		"extended": "",
		"description": "The Natural Log: Demonstration",
		"time": "2009-12-30T14:51:51Z",
		"href": "http://www.ai.mit.edu/projects/natural-log/demo/"
	},
	{
		"cluster": 7,
		"tags": [
			"api",
			"rest",
			"programming",
			"design",
			"architecture",
			"rails",
			"facebook",
			"ruby"
		],
		"y": 6.328063354098179,
		"x": -6.91571907739402,
		"extended": "",
		"description": "ChadFowler.com Writing APIs to Wrap APIs",
		"time": "2009-12-30T14:51:32Z",
		"href": "http://chadfowler.com/2007/9/5/writing-apis-to-wrap-apis"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"html",
			"email",
			"rails",
			"ruby",
			"plugin",
			"web",
			"development",
			"mail"
		],
		"y": 9.931941683167539,
		"x": -7.8911467739452315,
		"extended": "",
		"description": "Shemail: A HTML Email Plugin for Ruby on Rails | Purify Blog",
		"time": "2009-12-30T14:51:09Z",
		"href": "http://blog.purifyapp.com/2009/12/30/shemail-a-html-email-plugin-for-ruby-on-rails/"
	},
	{
		"cluster": 5,
		"tags": [
			"games",
			"statistics",
			"darts",
			"mathematics",
			"probability"
		],
		"y": -4.8234424398799325,
		"x": -4.52129366675203,
		"extended": "",
		"description": "Darts for Geeks: Statistician Cracks the Game’s Secrets | Magazine",
		"time": "2009-12-27T08:02:03Z",
		"href": "http://www.wired.com/magazine/2009/11/st_darts?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+wired%2Findex+(Wired%3A+Index+3+(Top+Stories+2))&utm_content=My+Yahoo"
	},
	{
		"cluster": 18,
		"tags": [
			"lisp",
			"business",
			"programming",
			"development",
			"work",
			"software",
			"engineering"
		],
		"y": 8.700087657012592,
		"x": -1.4901283145671222,
		"extended": "",
		"description": "Loper OS » Where Lisp Fails: at Turning People into Fungible Cogs.",
		"time": "2009-12-27T07:49:41Z",
		"href": "http://www.loper-os.org/?p=69"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"OU",
			"MST121",
			"population",
			"sequences",
			"modelling",
			"recurrence",
			"relations",
			"logistic",
			"learning",
			"discrete",
			"education"
		],
		"y": -8.768504633903838,
		"x": -5.540780561254227,
		"extended": "",
		"description": "Models with one variable in discrete time: population growth and decay",
		"time": "2009-12-26T12:07:16Z",
		"href": "http://bscd.bsd.uchicago.edu/~dkon/chapter1_v2.pdf"
	},
	{
		"cluster": 2,
		"tags": [
			"timekeeping",
			"education",
			"work",
			"productivity",
			"efficiency",
			"studying",
			"management",
			"time",
			"gtd"
		],
		"y": 2.23333731313553,
		"x": 4.4011484312293305,
		"extended": "",
		"description": "Study Hacks » Blog Archive » Fixed-Schedule Productivity: How I Accomplish a Large Amount of Work in a Small Number of Work Hours",
		"time": "2009-12-24T23:19:32Z",
		"href": "http://calnewport.com/blog/2008/02/15/fixed-schedule-productivity-how-i-accomplish-a-large-amount-of-work-in-a-small-number-of-work-hours/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"database",
			"graph",
			"relation",
			"prolog",
			"semanticweb",
			"mql",
			"freebase",
			"constraints",
			"querying",
			"data",
			"computerscience"
		],
		"y": 2.878107455465246,
		"x": -0.8898152953205026,
		"extended": "",
		"description": "» MQL, Prolog, and the future of Semantic Web databases Augury",
		"time": "2009-12-24T23:17:22Z",
		"href": "http://www.wellnowwhat.net/blog/?p=353"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"algebra",
			"arithmetic",
			"exponentiation",
			"abstractalgebra",
			"ring",
			"set",
			"commutativity"
		],
		"y": -7.004074979071881,
		"x": -3.986982856759001,
		"extended": "",
		"description": "AskMathit: Why isn't exponentiation commutative? : math",
		"time": "2009-12-24T23:12:46Z",
		"href": "http://www.reddit.com/r/math/comments/ahwlg/askmathit_why_isnt_exponentiation_commutative/"
	},
	{
		"cluster": 11,
		"tags": [
			"snowleopard",
			"tmobile",
			"internet",
			"mobile",
			"hardware",
			"mac",
			"osx"
		],
		"y": -6.464596834860497,
		"x": 0.6739988855127204,
		"extended": "",
		"description": "T-Mobile USB stick 120 (ZTE MF626) on Snow Leopard \" David Glover",
		"time": "2009-12-23T19:12:41Z",
		"href": "http://www.davidglover.org/2009/09/t-mobile-usb-stick-120-zte-mf626-on-snow-leopard.html"
	},
	{
		"cluster": 11,
		"tags": [
			"tmobile",
			"modem",
			"internet",
			"mobile",
			"3g",
			"hardware",
			"osx",
			"mac",
			"snowleopard"
		],
		"y": -6.469629906854126,
		"x": 0.6947061488717936,
		"extended": "",
		"description": "Spice World! \" Blog Archive \" Life with T-Mobile, a 3G Modem, and a G1",
		"time": "2009-12-23T19:11:55Z",
		"href": "http://www.cyberspice.org.uk/blog/2009/10/19/life-with-t-mobile-a-3g-modem-and-a-g1/"
	},
	{
		"cluster": 7,
		"tags": [
			"websockets",
			"development",
			"html5",
			"socketserver",
			"networking",
			"push",
			"asynchronous",
			"communication",
			"http",
			"html",
			"ruby",
			"eventmachine",
			"javascript"
		],
		"y": 8.15231531367225,
		"x": -8.601302381270001,
		"extended": "",
		"description": "Ruby & WebSockets: TCP for the Browser - igvita.com",
		"time": "2009-12-22T19:02:46Z",
		"href": "http://www.igvita.com/2009/12/22/ruby-websockets-tcp-for-the-browser/"
	},
	{
		"cluster": 15,
		"tags": [
			"logarithm",
			"identity",
			"root",
			"power",
			"exponent",
			"mathematics",
			"reference",
			"learning"
		],
		"y": -9.011100591811276,
		"x": -5.791023540843229,
		"extended": "",
		"description": "List of logarithmic identities - Wikipedia, the free encyclopedia",
		"time": "2009-12-22T14:31:55Z",
		"href": "http://en.wikipedia.org/wiki/Logarithmic_identities"
	},
	{
		"cluster": 3,
		"tags": [
			"race",
			"",
			"sociology",
			"culture",
			"film",
			"criticism",
			"orientalism",
			"essay",
			"scifi",
			"privilege"
		],
		"y": -6.104422030292743,
		"x": 8.196662302618867,
		"extended": "",
		"description": "When Will White People Stop Making Movies Like \"Avatar\"? - Avatar - io9",
		"time": "2009-12-22T13:25:54Z",
		"href": "http://io9.com/5422666/when-will-white-people-stop-making-movies-like-avatar"
	},
	{
		"cluster": 15,
		"tags": [
			"gelfand",
			"mathematics",
			"algebra",
			"course",
			"education",
			"learning",
			"trigonometry"
		],
		"y": -8.665736462941547,
		"x": -5.490467338566634,
		"extended": "",
		"description": "Gelfand Correspondence Program in Mathematics",
		"time": "2009-12-22T10:30:00Z",
		"href": "http://gcpm.rutgers.edu/"
	},
	{
		"cluster": 2,
		"tags": [
			"training",
			"education",
			"information",
			"computerscience",
			"it",
			"business",
			"for:vickyholland"
		],
		"y": -2.7348032202409533,
		"x": -6.940135264852095,
		"extended": "",
		"description": "Developing CIOs | Features | IT Training Magazine | Training | Qualifications, Training, Careers | BCS - The Chartered Institute for IT",
		"time": "2009-12-22T08:22:35Z",
		"href": "http://www.bcs.org/server.php?show=ConWebDoc.33377"
	},
	{
		"cluster": 15,
		"tags": [
			"symetry",
			"algebra",
			"abstractalgebra",
			"galouis",
			"mathematics",
			"deSautoy"
		],
		"y": -7.021920157905705,
		"x": -3.938223612800982,
		"extended": "",
		"description": "Have a symmetrical object named after you » Fun Math Blog",
		"time": "2009-12-21T17:54:35Z",
		"href": "http://wildaboutmath.com/2009/12/20/have-a-symmetrical-object-named-after-you/#more-248"
	},
	{
		"cluster": 17,
		"tags": [
			"functional",
			"ruby",
			"programming",
			"OOP",
			"computerscience",
			"architecture",
			"concurrency"
		],
		"y": 4.704848536143685,
		"x": -11.136881771076094,
		"extended": "",
		"description": "Better Ruby through Functional Programming by Dean Wampler on Vimeo",
		"time": "2009-12-21T17:32:10Z",
		"href": "http://vimeo.com/6701329"
	},
	{
		"cluster": 4,
		"tags": [
			"ruby",
			"monad",
			"sexpression",
			"haskell",
			"functional",
			"programming"
		],
		"y": -5.070494822512348,
		"x": -9.390115794693337,
		"extended": "",
		"description": "#137859 - Pastie",
		"time": "2009-12-21T10:13:00Z",
		"href": "http://pastie.org/137859"
	},
	{
		"cluster": 2,
		"tags": [
			"ruby",
			"macro",
			"parser",
			"lisp",
			"functioal",
			"ruby2ruby",
			"parse_tree",
			"computerscience",
			"language",
			"semantics",
			"sexpression"
		],
		"y": 3.971532913051699,
		"x": -11.254078014900443,
		"extended": "",
		"description": "Forbidden Fruit: A Taste of Ruby's ParseTree",
		"time": "2009-12-21T09:40:47Z",
		"href": "http://www.slideshare.net/err/goruco"
	},
	{
		"cluster": 2,
		"tags": [
			"geography",
			"atlas",
			"travel",
			"ephemera"
		],
		"y": -1.3133311925427658,
		"x": 4.917000569623718,
		"extended": "",
		"description": "Atlas Obscura | Wondrous, curious, and bizarre locations around the world",
		"time": "2009-12-18T16:49:44Z",
		"href": "http://atlasobscura.com/#"
	},
	{
		"cluster": 2,
		"tags": [
			"ruby",
			"scaling",
			"performance",
			"ree",
			"kernel",
			"memorymanagement",
			"threading",
			"concurrency",
			"memory",
			"interpreter",
			"phusion"
		],
		"y": 5.914118264183407,
		"x": -11.397322518754471,
		"extended": "",
		"description": "How Phusion Built A More Efficient Ruby 1.8 Interpreter",
		"time": "2009-12-18T15:58:32Z",
		"href": "http://www.rubyinside.com/how-phusion-built-a-more-efficient-ruby-1-8-interpreter-2906.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+RubyInside+(Ruby+Inside)&utm_content=Google+Reader"
	},
	{
		"cluster": 7,
		"tags": [
			"multipledispatch",
			"multiple",
			"dispatch",
			"programming",
			"computerscience",
			"development",
			"ruby",
			"gem"
		],
		"y": 7.668911453348648,
		"x": -9.887985297461244,
		"extended": "",
		"description": "Marc Abramowitz » Multiple dispatch in Ruby",
		"time": "2009-12-18T13:52:20Z",
		"href": "http://marc-abramowitz.com/archives/2006/03/30/multiple-dispatch-in-ruby/"
	},
	{
		"cluster": 15,
		"tags": [
			"programming",
			"algorithms",
			"mathematics",
			"reference",
			"code",
			"development",
			"learning",
			"computerscience",
			"language",
			"software",
			"education"
		],
		"y": 0.09362652192787185,
		"x": -12.956085978635524,
		"extended": "",
		"description": "Rosetta Code",
		"time": "2009-12-18T12:08:06Z",
		"href": "http://rosettacode.org/wiki/Main_Page"
	},
	{
		"cluster": 7,
		"tags": [
			"rubyamp",
			"ruby",
			"textmate",
			"bundle",
			"rails",
			"osx",
			"development",
			"environment",
			"setup"
		],
		"y": 2.630109960199882,
		"x": -4.231106330774143,
		"extended": "",
		"description": "code [dot] leadmediapartners.com",
		"time": "2009-12-18T10:51:44Z",
		"href": "http://code.leadmediapartners.com/"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"ruby",
			"textmate",
			"setup",
			"development",
			"environment"
		],
		"y": 2.6401694313590864,
		"x": -4.234923456120454,
		"extended": "",
		"description": "Show Ticket",
		"time": "2009-12-18T10:46:01Z",
		"href": "http://ticket.macromates.com/show?ticket_id=F4DA8B03"
	},
	{
		"cluster": 11,
		"tags": [
			"texmate",
			"ruby",
			"mac",
			"osx",
			"setup",
			"development",
			"environment",
			"rails"
		],
		"y": 2.623949814259017,
		"x": -4.225361136018251,
		"extended": "",
		"description": "Panasonic Youth - Fixing Textmate Test Issues – `blank_slate_method_added’: stack level too deep (SystemStackError)",
		"time": "2009-12-18T10:45:45Z",
		"href": "http://209.85.229.132/search?q=cache:u3roLcyE5_MJ:robsanheim.com/2007/12/07/fixing-textmate-test-issues-blank_slate_method_added-stack-level-too-deep-systemstackerror/+http://robsanheim.com/2007/12/07/fixing-textmate-test-issues-blank_slate_method_added-stack-level-too-deep-systemstackerror/&cd=1&hl=en&ct=clnk&gl=uk&client=firefox-a"
	},
	{
		"cluster": 11,
		"tags": [
			"cucumber",
			"textmate",
			"development",
			"environment",
			"setup",
			"mac",
			"osx",
			"ruby",
			"rails"
		],
		"y": 2.6373830133633764,
		"x": -4.2313458494416905,
		"extended": "Some tweaks towards running cucumber features individually in texmate (if using GetBundles, you can add the Cucumber bundle to Textmate..) and then you'll want to edit mate ~/Library/Application\\ Support/TextMate/Pristine\\ Copy/Bundles/Cucumber.tmbundle/Support/lib/cucumber/mate/runner.rb so that line 28 reads puts `./script/cucumber #{argv.join(' ')}` #puts `./script/cucumber.rake #{argv.join(' ')}` And that should be all you'd need to be able to run cmd+R for individual feature files\n",
		"description": "Some tweaks towards running cucumber features individually in texmate",
		"time": "2009-12-18T10:37:59Z",
		"href": "https://gist.github.com/raw/230111/58bec8f7605833d5ffbcdd03beb040746658999e/Snow%20Leopard%20clean%20install%20guide"
	},
	{
		"cluster": 15,
		"tags": [
			"logarithm",
			"arithmetic",
			"mathematics",
			"exponentiation",
			"roots",
			"powers"
		],
		"y": -6.931003129297515,
		"x": -3.947650215813993,
		"extended": "",
		"description": "Logarithm Concepts -- The logarithm explained by analogy to roots",
		"time": "2009-12-17T22:37:32Z",
		"href": "http://cnx.org/content/m18236/latest/"
	},
	{
		"cluster": 12,
		"tags": [
			"design",
			"development",
			"web",
			"programming",
			"it",
			"work",
			"management"
		],
		"y": 9.320955841784341,
		"x": -0.5990700535872114,
		"extended": "",
		"description": "Designer/Programmer Harmony: Not Just a Myth | factor[e] design initiative",
		"time": "2009-12-17T20:22:46Z",
		"href": "http://factore.ca/on-the-floor/22-designer-programmer-harmony-not-just-a-myth"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rvm",
			"textmate",
			"osx",
			"fix",
			"integration",
			"development",
			"environment"
		],
		"y": 2.6165538241225743,
		"x": -4.236343154825072,
		"extended": "",
		"description": "paperplanes. Making TextMate And rvm Play Nice",
		"time": "2009-12-17T11:28:25Z",
		"href": "http://www.paperplanes.de/2009/12/3/making_textmate_and_rvm_play_nice.html"
	},
	{
		"cluster": 15,
		"tags": [
			"math",
			"visualization",
			"geometry",
			"moebius",
			"transformation",
			"algebra",
			"topology",
			"mathematics",
			"video"
		],
		"y": -3.76246533688448,
		"x": 2.602005451331101,
		"extended": "",
		"description": "YouTube - Moebius Transformations Revealed",
		"time": "2009-12-17T09:35:21Z",
		"href": "http://www.youtube.com/watch?v=JX3VmDgiFnY"
	},
	{
		"cluster": 14,
		"tags": [
			"ux",
			"pagination",
			"usability",
			"webdesign",
			"design",
			"ia",
			"web",
			"layout"
		],
		"y": 1.6994146070379668,
		"x": 1.0962706020808144,
		"extended": "",
		"description": "In the Arms of Strangers » Improving the experience of pagination",
		"time": "2009-12-16T16:31:35Z",
		"href": "http://csensedesign.co.uk/blog/?p=374"
	},
	{
		"cluster": 7,
		"tags": [
			"passenger",
			"rvm",
			"osx",
			"ruby",
			"development",
			"environment",
			"apache"
		],
		"y": 2.610394694763802,
		"x": -4.233241524668311,
		"extended": "",
		"description": "rvm: Ruby Version Manager - Passenger - Come on, ride the train, hey, ride it, woo woo...",
		"time": "2009-12-16T16:17:19Z",
		"href": "http://rvm.beginrescueend.com/passenger/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"textmate",
			"patch",
			"rvm",
			"osx",
			"system",
			"programming",
			"development",
			"environment"
		],
		"y": 2.640663872571971,
		"x": -4.2556693420178595,
		"extended": "Textmate and RVM: The fix to make it all \"just work\":\n\n/Applications/TextMate.app/Contents/SharedSupport/Support/lib/tm/process.rb\nLine 125 becomes: exec(\"bash -lc '\" + cmd.compact.join(\" \") + \"'\")\n\n/Applications/TextMate.app/Contents/SharedSupport/Bundles/Ruby.tmbundle/Support/RubyMate/run_script.rb\nAdd a line before line 37 with: ENV['TM_RUBY'] = nil if ENV['TM_RUBY'] == '/usr/bin/ruby'\n\nThe latter line is to override a bizarre TextMate default that people were complaining about way back in 2006... :P\n",
		"description": "Ruby Version Manager: Easily Use Multiple Ruby Versions At Once",
		"time": "2009-12-16T16:16:48Z",
		"href": "http://www.rubyinside.com/rvm-ruby-version-manager-2347.html#comment-39480"
	},
	{
		"cluster": 2,
		"tags": [
			"harddisk",
			"drive",
			"storage",
			"hardware",
			"disk",
			"NAS",
			"network"
		],
		"y": -3.073586484582464,
		"x": 4.992185390173647,
		"extended": "WDH1NC20000\n",
		"description": "dabs.com - Western Digital 2TB My Book World Edition (WDH1NC20000E)",
		"time": "2009-12-16T11:02:49Z",
		"href": "http://www.dabs.com/products/western-digital-2tb-my-book-world-edition-5GTY.html?refs=52120000-47200000"
	},
	{
		"cluster": 7,
		"tags": [
			"data",
			"visualisation",
			"mathematics",
			"statistics",
			"ruby",
			"programming",
			"development",
			"graphing"
		],
		"y": 7.597418211282417,
		"x": -9.496014070335177,
		"extended": "",
		"description": "chrislo's data_visualisation_ruby at master - GitHub",
		"time": "2009-12-16T10:58:46Z",
		"href": "http://github.com/chrislo/data_visualisation_ruby"
	},
	{
		"cluster": 17,
		"tags": [
			"database",
			"orm",
			"programming",
			"abstraction",
			"relational",
			"mapping",
			"object",
			"persistance",
			"computerscience",
			"sql"
		],
		"y": 2.637408026517417,
		"x": -2.3937183326815195,
		"extended": "",
		"description": "cortesi - A Farewell to ORMs",
		"time": "2009-12-15T08:37:40Z",
		"href": "http://corte.si/posts/code/farewell-to-orms.html"
	},
	{
		"cluster": 9,
		"tags": [
			"ubuntu",
			"netbook",
			"touchpad",
			"setup",
			"karmic",
			"linux",
			"howto"
		],
		"y": -6.012815050519737,
		"x": 5.687324067096016,
		"extended": "",
		"description": "Ubuntu Karmic Notes",
		"time": "2009-12-11T11:42:23Z",
		"href": "http://runpaint.org/karmic"
	},
	{
		"cluster": 2,
		"tags": [
			"work",
			"business",
			"productivity",
			"startups",
			"entrepreneurship",
			"health",
			"life"
		],
		"y": 2.0210682291469912,
		"x": 4.199608380827945,
		"extended": "",
		"description": "Step one is admitting you have a problem - (37signals)",
		"time": "2009-12-09T15:08:37Z",
		"href": "http://37signals.com/svn/posts/2051-step-one-is-admitting-you-have-a-problem"
	},
	{
		"cluster": 15,
		"tags": [
			"catastrophetheory",
			"mathematics",
			"sailing",
			"physics",
			"boats",
			"engineering",
			"design",
			"velocity",
			"drag",
			"power",
			"catastrophe",
			"bifurcation"
		],
		"y": -6.847847019450587,
		"x": -1.8645318545185792,
		"extended": "",
		"description": "Catastrophe",
		"time": "2009-12-09T13:53:56Z",
		"href": "http://www.penzba.co.uk/Catastrophe/"
	},
	{
		"cluster": 15,
		"tags": [
			"math",
			"visualization",
			"mathematics",
			"science",
			"data",
			"algebra",
			"polynomials",
			"number",
			"numbertheory"
		],
		"y": -6.844012123335465,
		"x": -3.7558935252810888,
		"extended": "",
		"description": "roots",
		"time": "2009-12-07T16:39:12Z",
		"href": "http://math.ucr.edu/home/baez/roots/"
	},
	{
		"cluster": 11,
		"tags": [
			"osx",
			"administration",
			"bash",
			"shell",
			"hasks",
			"path",
			"unix",
			"leopard",
			"mac"
		],
		"y": -2.913992416690167,
		"x": 5.925921191925922,
		"extended": "",
		"description": "Mastering the path_helper utility of MacOSX",
		"time": "2009-12-02T16:31:25Z",
		"href": "http://www.softec.st/en/OpenSource/DevelopersCorner/MasteringThePathHelper.html"
	},
	{
		"cluster": 15,
		"tags": [
			"primes",
			"mathematics",
			"primality",
			"numbertheory",
			"number"
		],
		"y": -6.895330902660385,
		"x": -3.989846512597209,
		"extended": "",
		"description": "Primes, Primality and Pseudoprimes - chronicles of leto",
		"time": "2009-12-02T16:16:49Z",
		"href": "http://leto.net/x/2009/01/primes-primality-and-psuedopri.html"
	},
	{
		"cluster": 4,
		"tags": [
			"helium",
			"haskell",
			"education",
			"programming",
			"functional",
			"language",
			"development"
		],
		"y": -4.964694413700859,
		"x": -7.315732156643917,
		"extended": "",
		"description": "WebHome < Helium < TWiki",
		"time": "2009-12-01T09:52:24Z",
		"href": "http://www.cs.uu.nl/wiki/Helium"
	},
	{
		"cluster": 18,
		"tags": [
			"scheme",
			"lisp",
			"mit",
			"programming",
			"software",
			"development",
			"gnu",
			"language"
		],
		"y": 8.502739991981393,
		"x": -1.8539891642681599,
		"extended": "",
		"description": "MIT/GNU Scheme - GNU Project - Free Software Foundation (FSF)",
		"time": "2009-12-01T09:52:04Z",
		"href": "http://www.gnu.org/software/mit-scheme/"
	},
	{
		"cluster": 2,
		"tags": [
			"tumblr",
			"comments",
			"blog",
			"blogging",
			"integration",
			"disqus"
		],
		"y": -1.7128609103993138,
		"x": 5.399779967286984,
		"extended": "",
		"description": "Tumblr Hacks",
		"time": "2009-12-01T09:51:42Z",
		"href": "http://hacks.tumblr.com/post/22981935/add-comments-to-tumblr-with-disqus"
	},
	{
		"cluster": 7,
		"tags": [
			"rip",
			"packagemanagement",
			"rails",
			"system",
			"sysadmin",
			"installation",
			"packaging",
			"ruby",
			"development",
			"gem"
		],
		"y": 8.372911108585066,
		"x": -9.52875032533214,
		"extended": "",
		"description": "About Rip",
		"time": "2009-12-01T09:51:22Z",
		"href": "http://hellorip.com/about.html"
	},
	{
		"cluster": 17,
		"tags": [
			"go",
			"functional",
			"programming",
			"computerscience",
			"development",
			"languages",
			"closures"
		],
		"y": -2.3221287615100206,
		"x": -9.951801905892985,
		"extended": "",
		"description": "Living Code » Blog Archive » Go Language and Functional Programming",
		"time": "2009-11-28T13:34:13Z",
		"href": "http://livingcode.org/2009/11/13/go-language-and-functional-programming#respond"
	},
	{
		"cluster": 11,
		"tags": [
			"ruby",
			"mysql",
			"rails",
			"snowleopard",
			"macports",
			"mac",
			"osx"
		],
		"y": -5.993203944695131,
		"x": -0.5006006546432401,
		"extended": "",
		"description": "Fixing Uninitialized Constant MysqlCompat::MysqlRes Error on Snow Leopard : Accidental Technologist",
		"time": "2009-11-27T13:55:42Z",
		"href": "http://accidentaltechnologist.com/apple/fixing-uninitialized-constant-error-on-snow-leopard/"
	},
	{
		"cluster": 2,
		"tags": [
			"publishing",
			"books",
			"RIPA",
			"privacy",
			"encryption",
			"police",
			"society",
			"controversy"
		],
		"y": -1.3778830531160828,
		"x": 7.270746274717245,
		"extended": "A great summary of the case of the first person to be prosecuted under the new RIPA provisions that make it a criminal offense to refuse to provide encryption keys and passwords to the police when requested, and their implications, alongside a short history of Abbie Hoffman's 'Steal this Book'.\n",
		"description": "No place for a paranoid: RIPA, Abbie Hoffman, and other books of bomb-making — Bookkake",
		"time": "2009-11-27T10:32:15Z",
		"href": "http://bookkake.com/2009/11/24/no-place-for-a-paranoid/#comments"
	},
	{
		"cluster": 6,
		"tags": [
			"science",
			"ip",
			"copyright",
			"law",
			"society",
			"innovation",
			"politics"
		],
		"y": -3.55985922863668,
		"x": 9.412775168953821,
		"extended": "\"For science to continue to flourish, it is necessary that the knowledge it generates be made freely and widely available. IP rights have the tendency to stifle access to knowledge and the free exchange of ideas that is essential to science.\"\n",
		"description": "Science in shackles | John Sulston | Comment is free | The Guardian",
		"time": "2009-11-26T14:07:46Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/nov/26/science-shackles-intellectual-property"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"web",
			"development",
			"ux",
			"ui",
			"research",
			"testing",
			"usability",
			"pagefold",
			"fold",
			"scrolling"
		],
		"y": 1.7173061891757397,
		"x": 0.9756681623534866,
		"extended": "",
		"description": "The myth of the page fold: evidence from user testing | cxpartners",
		"time": "2009-11-26T13:37:52Z",
		"href": "http://www.cxpartners.co.uk/thoughts/the_myth_of_the_page_fold_evidence_from_user_testing.htm"
	},
	{
		"cluster": 8,
		"tags": [
			"censorship",
			"internet",
			"social",
			"media",
			"publishing",
			"news",
			"society",
			"politics"
		],
		"y": 1.7782966231830881,
		"x": 13.880925682496704,
		"extended": "Whether they are communists in China, mullahs in Tehran or censorious libel judges in London, all opponents of freedom of expression must be grateful for the cover such empty-headed determinism provides. They can carry on as before, while their deluded citizens believe that the mere fact that they can blog and tweet is enough to free them from the long, grinding and often dangerous tasks of political reform.\n",
		"description": "Is the Internet a Tool of Tyranny? | Standpoint",
		"time": "2009-11-26T13:32:20Z",
		"href": "http://www.standpointmag.co.uk/node/2421/full"
	},
	{
		"cluster": 16,
		"tags": [
			"sql",
			"nosql",
			"persistence",
			"databases",
			"mapreduce",
			"analysis",
			"data",
			"programming",
			"computerscience",
			"relational",
			"object",
			"database"
		],
		"y": 2.5343184303079664,
		"x": -2.0163153691901954,
		"extended": "",
		"description": "SQL is Dead. Long Live SQL! : Dataspora Blog",
		"time": "2009-11-26T09:52:59Z",
		"href": "http://dataspora.com/blog/sql-is-dead-long-live-sql/"
	},
	{
		"cluster": 7,
		"tags": [
			"work",
			"business",
			"programming",
			"development"
		],
		"y": 8.818075147614312,
		"x": -1.4442968753407162,
		"extended": "",
		"description": "There is no place like 127.0.0.1: The Ten Commandments of Egoless Programming",
		"time": "2009-11-26T09:48:12Z",
		"href": "http://gala4th.blogspot.com/2009/11/ten-commandments-of-egoless-programming.html"
	},
	{
		"cluster": 2,
		"tags": [
			"psychology",
			"performance",
			"learning",
			"education",
			"motivation",
			"games",
			"gaming",
			"research"
		],
		"y": -9.318627473784563,
		"x": -5.07449665389827,
		"extended": "",
		"description": "Pixel Poppers: Awesome By Proxy: Addicted to Fake Achievement",
		"time": "2009-11-26T09:37:13Z",
		"href": "http://www.pixelpoppers.com/2009/11/awesome-by-proxy-addicted-to-fake.html"
	},
	{
		"cluster": 15,
		"tags": [
			"computerscience",
			"p=np",
			"mathematics",
			"godel",
			"complexity"
		],
		"y": -1.7430442946545346,
		"x": -12.894837615687008,
		"extended": "",
		"description": "What Will Happen When P≠NP Is Proved? « Gödel’s Lost Letter and P=NP",
		"time": "2009-11-25T22:45:20Z",
		"href": "http://rjlipton.wordpress.com/2009/08/20/what-will-happen-when-pnp-is-proved/"
	},
	{
		"cluster": 4,
		"tags": [
			"quine",
			"haskell",
			"combinatorylogic",
			"combinators",
			"programming",
			"computerscience",
			"functional"
		],
		"y": -4.755811458621076,
		"x": -10.958799148837752,
		"extended": "",
		"description": "A Haskell Quine",
		"time": "2009-11-25T13:25:47Z",
		"href": "http://www.iis.sinica.edu.tw/~scm/2007/a-haskell-quine/"
	},
	{
		"cluster": 17,
		"tags": [
			"sicp",
			"solutions",
			"education",
			"learning",
			"programming",
			"computerscience",
			"scheme",
			"lisp",
			"functional"
		],
		"y": -7.811292345297462,
		"x": -12.18099507936286,
		"extended": "",
		"description": "SICP-Solutions",
		"time": "2009-11-24T17:34:21Z",
		"href": "http://community.schemewiki.org/?SICP-Solutions"
	},
	{
		"cluster": 4,
		"tags": [
			"sicp",
			"solutions",
			"programming",
			"education",
			"fucntional",
			"resources",
			"scheme",
			"haskell",
			"lisp"
		],
		"y": -7.848425671809334,
		"x": -12.142739670416915,
		"extended": "",
		"description": "FrontPage - SICP Wiki",
		"time": "2009-11-24T17:34:02Z",
		"href": "http://sicp.org.ua/sicp"
	},
	{
		"cluster": 15,
		"tags": [
			"programming",
			"learning",
			"logic",
			"mathematics",
			"puzzles",
			"education",
			"resources"
		],
		"y": -8.216263498120522,
		"x": -5.7546322735210715,
		"extended": "",
		"description": "Bill the Lizard: Programming and Logic Puzzles",
		"time": "2009-11-24T10:43:33Z",
		"href": "http://www.billthelizard.com/2009/06/programming-and-logic-puzzles.html"
	},
	{
		"cluster": 10,
		"tags": [
			"climate",
			"environment",
			"technology",
			"politics",
			"science"
		],
		"y": 4.592341961578085,
		"x": 7.674635322725627,
		"extended": "",
		"description": "Climate sceptics claim leaked emails are evidence of collusion among scientists | Environment | The Guardian",
		"time": "2009-11-24T10:42:20Z",
		"href": "http://www.guardian.co.uk/environment/2009/nov/20/climate-sceptics-hackers-leaked-emails"
	},
	{
		"cluster": 6,
		"tags": [
			"music",
			"threestrikes",
			"copyright",
			"technology",
			"law",
			"politics"
		],
		"y": -4.436385561549667,
		"x": 9.483819753721125,
		"extended": "",
		"description": "Peter Mandelson wants to turn off your internet | openDemocracy",
		"time": "2009-11-24T10:38:43Z",
		"href": "http://www.opendemocracy.net/ourkingdom/felix-cohen/peter-mandelson-wants-to-turn-off-your-internet"
	},
	{
		"cluster": 10,
		"tags": [
			"israel",
			"palestine",
			"middleeast",
			"conflict",
			"war",
			"iran",
			"america",
			"international",
			"politics"
		],
		"y": 3.0932465463016836,
		"x": 7.260336073587331,
		"extended": "",
		"description": "FT.com / Comment / Analysis - Obama still has leverage over Israel",
		"time": "2009-11-24T10:35:18Z",
		"href": "http://www.ft.com/cms/s/0/38382d4a-d869-11de-b63a-00144feabdc0.html?nclick_check=1"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"node",
			"programming",
			"evented",
			"concurrency",
			"server",
			"web",
			"development",
			"event",
			"functional",
			"node.js"
		],
		"y": 10.27336040784219,
		"x": -3.934011215855444,
		"extended": "",
		"description": "Node.js is genuinely exciting",
		"time": "2009-11-24T10:33:27Z",
		"href": "http://simonwillison.net/2009/Nov/23/node/"
	},
	{
		"cluster": 13,
		"tags": [
			"piracy",
			"copyright",
			"threestrikes",
			"economics",
			"politics",
			"business"
		],
		"y": 8.8069786593629,
		"x": 7.569538278083359,
		"extended": "",
		"description": "When piracy isn't theft | Alexandros Stavrakas | Comment is free | guardian.co.uk",
		"time": "2009-11-24T10:28:47Z",
		"href": "http://www.guardian.co.uk/commentisfree/libertycentral/2009/nov/24/file-sharing-free-piracy"
	},
	{
		"cluster": 17,
		"tags": [
			"combinatorylogic",
			"combinator",
			"ycombinator",
			"y",
			"programming",
			"dev",
			"functional",
			"mathematics",
			"lambda",
			"lambdacalculus",
			"computerscience",
			"ruby"
		],
		"y": -4.866427524454574,
		"x": -12.261008351241754,
		"extended": "end\n",
		"description": "Fun With the Y Combinator in Ruby : Nex3",
		"time": "2009-11-23T17:43:57Z",
		"href": "http://nex-3.com/posts/43-fun-with-the-y-combinator-in-ruby"
	},
	{
		"cluster": 7,
		"tags": [
			"vcs",
			"ruby",
			"mercurial",
			"programming",
			"development",
			"git",
			"darcs",
			"cvs",
			"software",
			"versioncontrol",
			"versioning"
		],
		"y": 7.7276034587727835,
		"x": -8.324676291042325,
		"extended": "",
		"description": "Amp | Version Control Revolution | About Amp",
		"time": "2009-11-23T16:53:57Z",
		"href": "http://amp.carboni.ca/about/"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"abtesting",
			"usability",
			"testing",
			"ab",
			"ruby",
			"programming",
			"development",
			"plugins",
			"statistics",
			"ux",
			"ui"
		],
		"y": 9.433489243758128,
		"x": -8.465270105623175,
		"extended": "",
		"description": "assaf's vanity at master - GitHub",
		"time": "2009-11-23T16:28:06Z",
		"href": "http://github.com/assaf/vanity"
	},
	{
		"cluster": 17,
		"tags": [
			"philosophy",
			"computerscience",
			"programming",
			"technology"
		],
		"y": 1.2493741568727048,
		"x": -11.383167660058449,
		"extended": "",
		"description": "Paul Stadig: The Programming of Philosophy",
		"time": "2009-11-23T13:56:18Z",
		"href": "http://paul.stadig.name/2009/11/programming-of-philosophy.html"
	},
	{
		"cluster": 10,
		"tags": [
			"sociology",
			"society",
			"consumption",
			"culture",
			"advertising",
			"capotalism",
			"politics",
			"identity",
			"hipsters",
			"internet"
		],
		"y": 0.48978685198589506,
		"x": 12.31857720774263,
		"extended": "",
		"description": "Specters of Marx: Immaterial Labor and the Primitive Accumulation of Cool « Generation Bubble",
		"time": "2009-11-23T13:55:02Z",
		"href": "http://generationbubble.com/2009/11/09/specters-of-marx-immaterial-labor-and-the-primitive-accumulation-of-cool/"
	},
	{
		"cluster": 2,
		"tags": [
			"flickr",
			"tumblr",
			"rss",
			"pipes",
			"tips",
			"yahoo",
			"api",
			"howto"
		],
		"y": -2.454285635969052,
		"x": 3.935986731394758,
		"extended": "${y:published.utime}\n",
		"description": "How to import flickr photos into tumblr - Jon García / Blog",
		"time": "2009-11-19T17:58:40Z",
		"href": "http://jongarcia.info/blog/how-to-import-flickr-photos-into-tumblr.html"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"brewing",
			"howto",
			"ale",
			"reference"
		],
		"y": -4.525352596784564,
		"x": 0.074445532680189,
		"extended": "",
		"description": "How to Brew Your Own Beer In 7 Simple Steps",
		"time": "2009-11-19T16:00:18Z",
		"href": "http://www.mahalo.com/how-to-brew-your-own-beer-in-7-simple-steps"
	},
	{
		"cluster": 2,
		"tags": [
			"beer",
			"brewing",
			"homebrew",
			"recipes",
			"ale",
			"reference",
			"recipe"
		],
		"y": -4.522968492472092,
		"x": 0.043036812428202835,
		"extended": "",
		"description": "Beer Recipes and Resources for Homebrewers. All-Grain, Extract, and Partial Mash Recipes",
		"time": "2009-11-19T15:59:29Z",
		"href": "http://beerrecipes.org/"
	},
	{
		"cluster": 8,
		"tags": [
			"google",
			"law",
			"technology",
			"internet",
			"scholar",
			"information",
			"access",
			"legal",
			"caselaw"
		],
		"y": -8.005077608885262,
		"x": 2.3407769963640828,
		"extended": "",
		"description": "News You Can Use: On Google’s Adding Caselaw to ‘Scholar’ - Law Blog - WSJ",
		"time": "2009-11-19T11:11:42Z",
		"href": "http://blogs.wsj.com/law/2009/11/18/news-you-can-use-on-googles-adding-caselaw-to-scholar/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+wsj%2Flaw%2Ffeed+(WSJ.com%3A+Law+Blog)&utm_content=Google+Reader"
	},
	{
		"cluster": 17,
		"tags": [
			"assignment",
			"programming",
			"closures",
			"lexicalscope",
			"variables",
			"computerscience",
			"functional"
		],
		"y": -3.338962392589383,
		"x": -10.505513506623545,
		"extended": "",
		"description": "Fabulous Adventures In Coding : Closing over the loop variable considered harmful",
		"time": "2009-11-13T14:09:25Z",
		"href": "http://blogs.msdn.com/ericlippert/archive/2009/11/12/closing-over-the-loop-variable-considered-harmful.aspx"
	},
	{
		"cluster": 7,
		"tags": [
			"sql",
			"nosql",
			"databases",
			"programming",
			"development",
			"relational",
			"storage",
			"persistance"
		],
		"y": 3.061318252220328,
		"x": -2.076974049619867,
		"extended": "",
		"description": "NoSQL meet SQL",
		"time": "2009-11-12T10:36:04Z",
		"href": "http://legitimatesounding.com/blog/NoSQL_meet_SQL.html"
	},
	{
		"cluster": 17,
		"tags": [
			"mit",
			"algorithms",
			"computerscience",
			"programming",
			"education",
			"learning",
			"resource"
		],
		"y": 0.12396138545425783,
		"x": -12.706500666600373,
		"extended": "",
		"description": "Summary of all the MIT Introduction to Algorithms lectures - good coders code, great reuse",
		"time": "2009-11-12T10:36:04Z",
		"href": "http://www.catonmat.net/blog/summary-of-mit-introduction-to-algorithms/"
	},
	{
		"cluster": 11,
		"tags": [
			"cocoa",
			"apple",
			"programming",
			"objective-c",
			"tutorial",
			"osx",
			"mac",
			"development"
		],
		"y": 7.853725518001087,
		"x": -6.274696399885154,
		"extended": "",
		"description": "Cocoa for Scientists | MacResearch",
		"time": "2009-11-11T17:12:59Z",
		"href": "http://www.macresearch.org/cocoa_for_scientists"
	},
	{
		"cluster": 11,
		"tags": [
			"objective-c",
			"programming",
			"mac",
			"apple",
			"development",
			"iphone",
			"cocoa"
		],
		"y": 7.884844193197746,
		"x": -6.2103986228521775,
		"extended": "",
		"description": "Mac Dev Center: The Objective-C Programming Language: Introduction to The Objective-C Programming Language",
		"time": "2009-11-11T17:12:10Z",
		"href": "http://developer.apple.com/mac/library/documentation/cocoa/Conceptual/ObjectiveC/Introduction/introObjectiveC.html"
	},
	{
		"cluster": 11,
		"tags": [
			"objective-c",
			"programming",
			"tutorial",
			"cocoa",
			"mac",
			"development",
			"osx",
			"apple",
			"iphone"
		],
		"y": 7.8690369485167775,
		"x": -6.241859835728864,
		"extended": "",
		"description": "Objective-C Beginner's Guide",
		"time": "2009-11-11T17:11:51Z",
		"href": "http://www.otierney.net/objective-c.html"
	},
	{
		"cluster": 7,
		"tags": [
			"iphone",
			"objective-c",
			"programming",
			"tutorial",
			"development",
			"cocoa",
			"tutorials",
			"reference"
		],
		"y": 7.894197521177211,
		"x": -6.186769096849221,
		"extended": "",
		"description": "CS193P - Cocoa Programming | Announcements",
		"time": "2009-11-11T17:11:23Z",
		"href": "http://www.stanford.edu/class/cs193p/cgi-bin/index.php"
	},
	{
		"cluster": 7,
		"tags": [
			"analyser",
			"debugging",
			"analsysis",
			"mac",
			"iphone",
			"objective-c",
			"tools",
			"memory",
			"programming",
			"allocation",
			"development"
		],
		"y": 7.9258870288084164,
		"x": -6.169491860594785,
		"extended": "",
		"description": "Clang Static Analyzer",
		"time": "2009-11-11T17:10:50Z",
		"href": "http://clang-analyzer.llvm.org/"
	},
	{
		"cluster": 2,
		"tags": [
			"management",
			"business",
			"charlatanism",
			"consulting"
		],
		"y": 1.8261225349019858,
		"x": 4.139335591633198,
		"extended": "",
		"description": "The three habits... | The Economist",
		"time": "2009-11-11T14:12:27Z",
		"href": "http://www.economist.com/node/14698784"
	},
	{
		"cluster": 15,
		"tags": [
			"penrose",
			"physics",
			"science",
			"mathematics",
			"consciousness",
			"neuroscience"
		],
		"y": -7.152894911482027,
		"x": -2.0972050718394497,
		"extended": "",
		"description": "Discover Interview: Roger Penrose Says Physics Is Wrong, From String Theory to Quantum Mechanics | Cosmology | DISCOVER Magazine",
		"time": "2009-11-11T08:38:49Z",
		"href": "http://discovermagazine.com/2009/sep/06-discover-interview-roger-penrose-says-physics-is-wrong-string-theory-quantum-mechanics/article_view?b_start:int=0&-C="
	},
	{
		"cluster": 4,
		"tags": [
			"testing",
			"haskell",
			"typesystem",
			"tdd",
			"types",
			"programming",
			"computerscience",
			"functional",
			"pure",
			"purefunctionl",
			"development",
			"software"
		],
		"y": -4.077934549294923,
		"x": -7.749574759035543,
		"extended": "",
		"description": "Is static type checking a redundant testing mechanism? « All Unkept",
		"time": "2009-11-09T19:01:42Z",
		"href": "http://lukeplant.me.uk/blog/posts/is-static-type-checking-a-redundant-testing-mechanism/"
	},
	{
		"cluster": 13,
		"tags": [
			"madoff",
			"finance",
			"systems",
			"technology",
			"economics",
			"business"
		],
		"y": 8.384724867949915,
		"x": 5.5480680056708245,
		"extended": "",
		"description": "The Technology Behind the Scam",
		"time": "2009-11-09T15:56:58Z",
		"href": "http://www.iddmagazine.com/issues/2009_42/the-technology-behind-the-scam-199529-1.html?partner=thestreet"
	},
	{
		"cluster": 11,
		"tags": [
			"google",
			"software",
			"update",
			"mac",
			"uninstall",
			"apple",
			"osx",
			"howto"
		],
		"y": -3.558497141127915,
		"x": 7.437580266034528,
		"extended": "",
		"description": "HOWTO: Remove Google Software Update on Mac OS X",
		"time": "2009-11-09T15:41:33Z",
		"href": "http://blog.raamdev.com/2008/12/19/howto-remove-google-software-update-on-mac-os-x"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"web",
			"framework",
			"programming",
			"development",
			"ella",
			"functional"
		],
		"y": -4.48254908217322,
		"x": -6.818862878271516,
		"extended": "",
		"description": "http://lukeplant.me.uk/resources/ella/",
		"time": "2009-11-09T14:37:58Z",
		"href": "http://lukeplant.me.uk/resources/ella/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"jaml",
			"templating",
			"programming",
			"web",
			"development"
		],
		"y": 10.204686106964527,
		"x": -3.5922412848747585,
		"extended": "",
		"description": "DailyJS: Jaml - Javascript HTML Generation",
		"time": "2009-11-09T14:18:17Z",
		"href": "http://dailyjs.com/2009/11/09/jaml-javascript-html-generation/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"io",
			"programming",
			"lazy",
			"functional",
			"laziness",
			"lazyevaluation",
			"purefunctional",
			"development",
			"computerscience"
		],
		"y": -5.161382176422217,
		"x": -9.163913058238883,
		"extended": "",
		"description": "Haskell IO for Imperative Programmers - HaskellWiki",
		"time": "2009-11-09T09:37:21Z",
		"href": "http://www.haskell.org/haskellwiki/Haskell_IO_for_Imperative_Programmers"
	},
	{
		"cluster": 12,
		"tags": [
			"lean",
			"development",
			"programming",
			"business",
			"strategy",
			"projectmanagement",
			"management",
			"software",
			"web"
		],
		"y": 8.575380128474025,
		"x": -0.6471983315143207,
		"extended": "",
		"description": "How Experienced Developers Can Handicap a Lean Startup",
		"time": "2009-11-06T14:24:29Z",
		"href": "http://kevindewalt.com/blog/2009/11/06/how-experienced-developers-can-handicap-a-lean-startup/"
	},
	{
		"cluster": 11,
		"tags": [
			"passenger",
			"prefpane",
			"snowleopard",
			"apache",
			"ruby",
			"rails",
			"mac",
			"osx",
			"installation"
		],
		"y": -6.016059276256938,
		"x": -0.5121595338025247,
		"extended": "",
		"description": "New OS, more pane! (Passenger preference pane v1.3) · Fingertips",
		"time": "2009-11-05T12:14:06Z",
		"href": "http://www.fngtps.com/2009/09/new-os-more-pane-passenger-preference-pane-v1-3"
	},
	{
		"cluster": 2,
		"tags": [
			"snowleopard",
			"macosx",
			"ruby",
			"macports",
			"apache",
			"passenger",
			"installation"
		],
		"y": -6.030073867887002,
		"x": -0.501550247030667,
		"extended": "",
		"description": "A Workable Ruby Development Environment on OS X Snow Leopard - plainprogrammer",
		"time": "2009-11-05T12:13:35Z",
		"href": "http://blog.plainprograms.com/a-workable-ruby-development-environment-on-os"
	},
	{
		"cluster": 4,
		"tags": [
			"typetheory",
			"programming",
			"types",
			"functional",
			"haskell",
			"computerscience",
			"mathematics",
			"lambdacalculus",
			"lambda"
		],
		"y": -5.001262886304306,
		"x": -12.07733147002154,
		"extended": "",
		"description": "Type Theory and Functional Programming",
		"time": "2009-11-05T12:09:08Z",
		"href": "http://www.cs.kent.ac.uk/people/staff/sjt/TTFP/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"books",
			"recommendations"
		],
		"y": -7.245692749414188,
		"x": -4.71254089667825,
		"extended": "",
		"description": "Hacker News | I want some recommendations on good math books on: calculus, discrete math, prob...",
		"time": "2009-11-04T14:47:18Z",
		"href": "http://news.ycombinator.com/item?id=665304"
	},
	{
		"cluster": 15,
		"tags": [
			"discretemathematics",
			"mathematics",
			"reading",
			"books",
			"recomendations",
			"learning",
			"computerscience",
			"programming"
		],
		"y": -0.22211145522887393,
		"x": -11.964495341399738,
		"extended": "",
		"description": "discrete-maths.md at master from ionfish's notes - GitHub",
		"time": "2009-11-04T14:46:57Z",
		"href": "http://github.com/ionfish/notes/blob/master/discrete-maths.md"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"learning",
			"programming",
			"computerscience",
			"education",
			"maths"
		],
		"y": -0.20393272952506483,
		"x": -12.336049108212057,
		"extended": "",
		"description": "Stevey's Blog Rants: Math For Programmers",
		"time": "2009-11-04T14:21:30Z",
		"href": "http://steve-yegge.blogspot.com/2006/03/math-for-programmers.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"programming",
			"computerscience",
			"learning",
			"education",
			"resources",
			"discussion"
		],
		"y": -0.29524891019518257,
		"x": -12.280745522469845,
		"extended": "",
		"description": "Hacker News | Ask HN: the road to learning useful math",
		"time": "2009-11-04T14:17:13Z",
		"href": "http://news.ycombinator.com/item?id=921592"
	},
	{
		"cluster": 15,
		"tags": [
			"gauss",
			"triangularnumbers",
			"proof",
			"induction",
			"mathematics",
			"algebra"
		],
		"y": -8.248992610877313,
		"x": -3.9984057826525823,
		"extended": "",
		"description": "Closed Form for Triangular Numbers - ProofWiki",
		"time": "2009-11-04T14:15:25Z",
		"href": "http://www.proofwiki.org/wiki/Closed_Form_for_Triangular_Numbers"
	},
	{
		"cluster": 4,
		"tags": [
			"towersofhanoi",
			"haskell",
			"programming",
			"development",
			"functional",
			"computerscieence",
			"mathematics",
			"recurrencerelation",
			"sequence",
			"recursion"
		],
		"y": -5.0429387720450585,
		"x": -7.285343780799904,
		"extended": "",
		"description": "Towers of Hanoi in Haskell - yogiblog",
		"time": "2009-11-04T13:40:38Z",
		"href": "http://journal.batard.info/post/2009/11/04/towers-of-hanoi-in-haskell"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"wiki",
			"proof",
			"proofs",
			"reference",
			"logic",
			"maths",
			"learning",
			"resource"
		],
		"y": -8.599584892248986,
		"x": -4.421993020456203,
		"extended": "",
		"description": "ProofWiki",
		"time": "2009-11-04T12:35:44Z",
		"href": "http://www.proofwiki.org/wiki/Main_Page"
	},
	{
		"cluster": 2,
		"tags": [
			"pivotaltracker",
			"projectmanagement",
			"development",
			"agile",
			"process",
			"tools",
			"business"
		],
		"y": 8.03982275137629,
		"x": -0.6889877960019569,
		"extended": "",
		"description": "Our Project Dashboard with Pivotal Tracker - NOOP.NL",
		"time": "2009-11-04T10:53:08Z",
		"href": "http://www.noop.nl/2009/10/our-project-dashboard-with-pivotal-tracker.html"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"print",
			"government",
			"uk",
			"visualisation",
			"local",
			"design",
			"technology",
			"newspaper"
		],
		"y": -3.0320642139154934,
		"x": 0.029522585365259132,
		"extended": "",
		"description": "Data.gov.uk Newspaper | Newspaper Club",
		"time": "2009-11-04T09:43:46Z",
		"href": "http://blog.newspaperclub.co.uk/2009/10/16/data-gov-uk-newspaper/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"helper",
			"web",
			"development",
			"views",
			"helpers",
			"block",
			"blocks",
			"programming"
		],
		"y": 9.375545494191732,
		"x": -7.53523781336206,
		"extended": "",
		"description": "Bamboo Blog - Block Helpers in Rails Views",
		"time": "2009-11-02T14:29:45Z",
		"href": "http://blog.new-bamboo.co.uk/2009/8/14/block-helpers"
	},
	{
		"cluster": 15,
		"tags": [
			"complexity",
			"scale",
			"machinelearning",
			"computing",
			"computers",
			"history",
			"play",
			"games",
			"playfulness",
			"literature",
			"go",
			"babbage",
			"noughts",
			"and",
			"crosses",
			"mathematics"
		],
		"y": -6.453047239104917,
		"x": -1.7303493037132074,
		"extended": "",
		"description": "A New Theory of Awesomeness and Miracles, by James Bridle, concerning Charles Babbage, Heath Robinson, MENACE and MAGE",
		"time": "2009-11-02T13:41:14Z",
		"href": "http://shorttermmemoryloss.com/menace/"
	},
	{
		"cluster": 17,
		"tags": [
			"video",
			"learning",
			"documentary",
			"computerscience",
			"programming",
			"technology",
			"computers"
		],
		"y": 0.7849466506547711,
		"x": -11.75785782947405,
		"extended": "",
		"description": "CosmoLearning | Computer Science Documentaries",
		"time": "2009-10-30T15:47:28Z",
		"href": "http://www.cosmolearning.com/computer-science/documentaries?sort=views"
	},
	{
		"cluster": 7,
		"tags": [
			"gruff",
			"ruby",
			"graphs",
			"charts",
			"visualization",
			"mathematics",
			"library",
			"gem",
			"graphics",
			"graph",
			"data",
			"programming"
		],
		"y": 7.273802709324157,
		"x": -10.284075927324816,
		"extended": "",
		"description": "Gruff Graphs for Ruby | Ruby on Rails for Newbies",
		"time": "2009-10-29T14:48:56Z",
		"href": "http://nubyonrails.com/pages/gruff"
	},
	{
		"cluster": 15,
		"tags": [
			"learning",
			"education",
			"video",
			"resources",
			"lectures",
			"mathematics"
		],
		"y": -8.352412047299696,
		"x": -5.561519514319756,
		"extended": "",
		"description": "100 Incredible Open Lectures for Math Geeks | Online College Tips - Online Colleges",
		"time": "2009-10-28T16:35:41Z",
		"href": "http://www.onlinecollege.org/2009/10/19/100-incredible-open-lectures-for-math-geeks/"
	},
	{
		"cluster": 12,
		"tags": [
			"jquery",
			"javascript",
			"programming",
			"library",
			"web",
			"functional",
			"lambdacalculus"
		],
		"y": 3.4121419030368427,
		"x": -7.592199315689486,
		"extended": "",
		"description": "Underscore.js",
		"time": "2009-10-28T14:26:17Z",
		"href": "http://documentcloud.github.com/underscore/"
	},
	{
		"cluster": 7,
		"tags": [
			"json",
			"javascript",
			"testing",
			"mocking",
			"programming",
			"development",
			"mock",
			"stub",
			"stubbing"
		],
		"y": 9.524894685739119,
		"x": -3.789710076792469,
		"extended": "",
		"description": "Mu Dynamics Research Labs » Blog Archive » Popcorn - Data Driven Testing with JSON",
		"time": "2009-10-28T10:17:09Z",
		"href": "http://labs.mudynamics.com/2009/10/26/popcorn-data-driven-testing-with-json/"
	},
	{
		"cluster": 18,
		"tags": [
			"textmate",
			"development",
			"git",
			"search",
			"software",
			"programming",
			"find"
		],
		"y": 8.061428415747528,
		"x": -1.7009863921186432,
		"extended": "",
		"description": "briancollins's nice_find at master - GitHub",
		"time": "2009-10-28T10:12:20Z",
		"href": "http://github.com/briancollins/nice_find"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"introspection",
			"performance",
			"optimization",
			"programming",
			"development"
		],
		"y": 6.601565345146125,
		"x": -8.064277672261115,
		"extended": "",
		"description": "bmizerany's onis at master - GitHub",
		"time": "2009-10-28T10:06:35Z",
		"href": "http://github.com/bmizerany/onis#readme"
	},
	{
		"cluster": 17,
		"tags": [
			"logstructured",
			"storage",
			"efficiency",
			"database",
			"data",
			"computerscience",
			"programming"
		],
		"y": 2.7699277690015354,
		"x": -1.05109364297134,
		"extended": "",
		"description": "Antony's MySQL bits: Opinion and Speculation: Log Structured vs Traditional Block",
		"time": "2009-10-27T14:27:01Z",
		"href": "http://antbits.blogspot.com/2009/03/opinion-and-speculation-log-structured.html"
	},
	{
		"cluster": 15,
		"tags": [
			"pi",
			"calculation",
			"computation",
			"mathematics",
			"history",
			"programming",
			"trigonometry",
			"geometry"
		],
		"y": -4.027444905199385,
		"x": -5.68363693383414,
		"extended": "",
		"description": "Calculating Pi | PC Plus",
		"time": "2009-10-26T12:58:20Z",
		"href": "http://pcplus.techradar.com/node/3106/"
	},
	{
		"cluster": 17,
		"tags": [
			"sql",
			"database",
			"graphs",
			"relational",
			"modelling",
			"programming",
			"computerscience",
			"development"
		],
		"y": 2.8565672921757574,
		"x": -2.213075728951735,
		"extended": "",
		"description": "Graphs in the database: SQL meets social networks – techPortal",
		"time": "2009-10-26T12:45:39Z",
		"href": "http://techportal.ibuildings.com/2009/09/07/graphs-in-the-database-sql-meets-social-networks/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"processing",
			"visualization",
			"graphics",
			"programming",
			"art",
			"design"
		],
		"y": 1.7962106792371324,
		"x": -4.811872193230636,
		"extended": "",
		"description": "Home - ruby-processing - GitHub",
		"time": "2009-10-26T12:37:43Z",
		"href": "http://wiki.github.com/jashkenas/ruby-processing"
	},
	{
		"cluster": 2,
		"tags": [
			"git",
			"wiki",
			"haskell",
			"web",
			"application"
		],
		"y": -2.126303480454839,
		"x": 3.3582467655920514,
		"extended": "",
		"description": "jgm's gitit at master - GitHub",
		"time": "2009-10-26T12:30:32Z",
		"href": "http://github.com/jgm/gitit"
	},
	{
		"cluster": 2,
		"tags": [
			"speedreading",
			"reading",
			"productivity",
			"howto",
			"learning",
			"lifehacks",
			"skills"
		],
		"y": -4.208716869838603,
		"x": 3.09544810031792,
		"extended": "",
		"description": "How to Speed Read | The Art of Manliness",
		"time": "2009-10-26T12:05:14Z",
		"href": "http://artofmanliness.com/2009/10/18/how-to-speed-read-like-theodore-roosevelt/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"library",
			"mathematics",
			"web",
			"html",
			"notation",
			"development"
		],
		"y": 10.669755099126267,
		"x": -0.47688256439755233,
		"extended": "",
		"description": "jsMath: jsMath Home Page",
		"time": "2009-10-26T11:42:45Z",
		"href": "http://www.math.union.edu/~dpvc/jsMath/"
	},
	{
		"cluster": 7,
		"tags": [
			"patron",
			"ruby",
			"http",
			"client",
			"library",
			"gem",
			"programming",
			"curl",
			"libcurl",
			"development"
		],
		"y": 8.068895944647629,
		"x": -9.72258432912976,
		"extended": "",
		"description": "Announcing Patron: a Ruby HTTP client library at Fiat Developmentum",
		"time": "2009-10-24T15:59:06Z",
		"href": "http://fiatdev.com/2009/07/03/announcing-patron-a-ruby-http-client-library"
	},
	{
		"cluster": 2,
		"tags": [
			"github",
			"multiple",
			"accounts",
			"help",
			"readme",
			"howto",
			"multipleaccounts",
			"git",
			"ssh"
		],
		"y": -2.4819026734007985,
		"x": 3.808644365010067,
		"extended": "",
		"description": "Multiple GitHub Accounts - Guides - GitHub",
		"time": "2009-10-23T16:42:18Z",
		"href": "http://github.com/guides/multiple-github-accounts"
	},
	{
		"cluster": 2,
		"tags": [
			"boson",
			"ruby",
			"rake",
			"make",
			"tool",
			"library"
		],
		"y": -1.893568458635875,
		"x": 2.2629712509971758,
		"extended": "",
		"description": "Boson: A Next Generation Task Framework for Ruby",
		"time": "2009-10-23T09:57:32Z",
		"href": "http://www.rubyinside.com/boson-a-next-generation-task-framework-for-ruby-2657.html"
	},
	{
		"cluster": 18,
		"tags": [
			"playdar",
			"erlang",
			"c++",
			"programming",
			"development",
			"performance",
			"functional",
			"software",
			"comparison"
		],
		"y": 4.748500780387381,
		"x": -8.382981750204685,
		"extended": "",
		"description": "Richard Jones | Rewriting Playdar: C++ to Erlang, massive savings | Richard Jones, Esq.",
		"time": "2009-10-22T16:42:28Z",
		"href": "http://www.metabrew.com/article/rewriting-playdar-c-to-erlang-massive-savings/"
	},
	{
		"cluster": 0,
		"tags": [
			"architecture",
			"scalability",
			"performance",
			"git",
			"sysadmin",
			"rails",
			"infrastructure",
			"ruby",
			"github",
			"optimization",
			"systems"
		],
		"y": 4.540659749465754,
		"x": -4.8372956772823015,
		"extended": "",
		"description": "How We Made GitHub Fast - GitHub",
		"time": "2009-10-22T16:39:43Z",
		"href": "http://github.com/blog/530-how-we-made-github-fast"
	},
	{
		"cluster": 15,
		"tags": [
			"books",
			"studying",
			"resources",
			"mathematics",
			"computerscience",
			"online",
			"free",
			"download",
			"programming",
			"education"
		],
		"y": -0.4457840157935517,
		"x": -12.246527007576173,
		"extended": "",
		"description": "Download free textbooks online",
		"time": "2009-10-22T10:12:25Z",
		"href": "http://bookboon.com/uk/student"
	},
	{
		"cluster": 2,
		"tags": [
			"ruby",
			"dataflow",
			"threading",
			"concurrency",
			"gem",
			"library",
			"unification"
		],
		"y": 7.191004812833185,
		"x": -10.647401812292399,
		"extended": "",
		"description": "InfoQ: Declarative Concurrency For Ruby With Dataflow",
		"time": "2009-10-21T15:32:20Z",
		"href": "http://www.infoq.com/news/2009/05/ruby-dataflow"
	},
	{
		"cluster": 4,
		"tags": [
			"pointfreestyke",
			"lambdacalculus",
			"haskell",
			"computerscience",
			"functional",
			"programming",
			"combinator",
			"pointfree",
			"language",
			"lambda"
		],
		"y": -5.064630356017779,
		"x": -12.031709122750524,
		"extended": "",
		"description": "Pointfree - HaskellWiki",
		"time": "2009-10-21T14:23:21Z",
		"href": "http://www.haskell.org/haskellwiki/Pointfree"
	},
	{
		"cluster": 4,
		"tags": [
			"fibonacci",
			"haskell",
			"programming",
			"functional",
			"computerscience",
			"humour",
			"funny",
			"language",
			"code"
		],
		"y": -6.116665045860865,
		"x": -9.354417865002523,
		"extended": "",
		"description": "The Evolution of a Haskell Programmer",
		"time": "2009-10-21T13:36:06Z",
		"href": "http://www.willamette.edu/~fruehr/haskell/evolution.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"partialfractions",
			"algebra",
			"methodofpartialfractions",
			"sum",
			"sequences",
			"fraction"
		],
		"y": -6.939167185643655,
		"x": -3.9488629817728444,
		"extended": "",
		"description": "High School Mathematics Extensions/Supplementary/Partial Fractions - Wikibooks, collection of open-content textbooks",
		"time": "2009-10-21T13:32:17Z",
		"href": "http://en.wikibooks.org/wiki/HSE_Partial_Fractions"
	},
	{
		"cluster": 15,
		"tags": [
			"community",
			"forum",
			"mathematics",
			"learning",
			"discussion",
			"help"
		],
		"y": -9.550304262331709,
		"x": -5.986971994831267,
		"extended": "",
		"description": "Math Overflow",
		"time": "2009-10-21T13:03:09Z",
		"href": "http://mathoverflow.net/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"help",
			"community",
			"tutorial",
			"learning",
			"reference",
			"forum"
		],
		"y": -9.466450046606756,
		"x": -5.961694528635012,
		"extended": "",
		"description": "Topics - Ask NRICH",
		"time": "2009-10-21T13:02:30Z",
		"href": "http://nrich.maths.org/discus/messages/board-topics.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"books",
			"learning",
			"education",
			"book",
			"tutorial",
			"reference",
			"resources"
		],
		"y": -8.803812562093562,
		"x": -5.729340519737609,
		"extended": "",
		"description": "Subject:Mathematics - Wikibooks, collection of open-content textbooks",
		"time": "2009-10-21T13:01:02Z",
		"href": "http://en.wikibooks.org/wiki/Subject:Mathematics"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"statemachine",
			"library",
			"gem",
			"programming",
			"development"
		],
		"y": 7.885796397446082,
		"x": -9.662523945451094,
		"extended": "",
		"description": "Statemachine Example 1",
		"time": "2009-10-21T13:00:17Z",
		"href": "http://statemachine.rubyforge.org/example1.html"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"papers",
			"reading",
			"reference",
			"functional",
			"academic",
			"language",
			"programming",
			"development",
			"computerscience",
			"research"
		],
		"y": -6.7340049505762085,
		"x": -8.550849954241743,
		"extended": "",
		"description": "Research papers - HaskellWiki",
		"time": "2009-10-21T13:00:01Z",
		"href": "http://haskell.org/haskellwiki/Research_papers"
	},
	{
		"cluster": 16,
		"tags": [
			"neo4j",
			"database",
			"nosql",
			"graph",
			"persistence",
			"object",
			"data",
			"ruby",
			"gem",
			"library"
		],
		"y": 2.8180931645298735,
		"x": -0.6287222870476658,
		"extended": "",
		"description": "andreasronge's neo4j at master - GitHub",
		"time": "2009-10-21T12:59:26Z",
		"href": "http://github.com/andreasronge/neo4j"
	},
	{
		"cluster": 7,
		"tags": [
			"amazon",
			"ruby",
			"library",
			"programming",
			"gem",
			"book",
			"metadata",
			"publication"
		],
		"y": 7.527986432041547,
		"x": -10.26965536462288,
		"extended": "",
		"description": "dpickett's ramazon_advertising at master - GitHub",
		"time": "2009-10-21T12:59:07Z",
		"href": "http://github.com/dpickett/ramazon_advertising"
	},
	{
		"cluster": 14,
		"tags": [
			"webdesign",
			"development",
			"usability",
			"testing",
			"ux",
			"ui",
			"design"
		],
		"y": 1.66873015211835,
		"x": 1.0127152651338538,
		"extended": "",
		"description": "A List Apart: Articles: The Myth of Usability Testing",
		"time": "2009-10-21T10:25:26Z",
		"href": "http://www.alistapart.com/articles/the-myth-of-usability-testing/"
	},
	{
		"cluster": 12,
		"tags": [
			"business",
			"web",
			"development",
			"management",
			"projects"
		],
		"y": 8.7937840822975,
		"x": 0.21258970665474422,
		"extended": "",
		"description": "A List Apart: Articles: Getting to No",
		"time": "2009-10-21T10:10:51Z",
		"href": "http://www.alistapart.com/articles/getting-to-no/"
	},
	{
		"cluster": 12,
		"tags": [
			"lightbox",
			"UI",
			"accessibility",
			"modal",
			"dialog",
			"javascript",
			"html",
			"ux",
			"usability",
			"development",
			"web"
		],
		"y": 9.607435166362816,
		"x": -0.0002781744995477931,
		"extended": "",
		"description": "Lightboxes and keyboard accessibility | 456 Berea Street",
		"time": "2009-10-21T10:10:29Z",
		"href": "http://www.456bereastreet.com/archive/200910/lightboxes_and_keyboard_accessibility/"
	},
	{
		"cluster": 2,
		"tags": [
			"writing",
			"english",
			"language",
			"simplicity",
			"style",
			"bullshit",
			"business"
		],
		"y": 0.4503428511093768,
		"x": 4.410540134277888,
		"extended": "",
		"description": "kung fu grippe : For Immediate Relief: Speaking Like a Human",
		"time": "2009-10-21T10:05:10Z",
		"href": "http://www.kungfugrippe.com/post/217529969/humans"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"books",
			"reference",
			"education",
			"list",
			"bibliography",
			"textbooks",
			"learning"
		],
		"y": -8.832690599415542,
		"x": -5.800989820693481,
		"extended": "",
		"description": "Chicago undergraduate mathematics bibliography",
		"time": "2009-10-21T08:04:26Z",
		"href": "http://www.ocf.berkeley.edu/~abhishek/chicmath.htm"
	},
	{
		"cluster": 7,
		"tags": [
			"programming",
			"development",
			"business",
			"career",
			"code",
			"culture",
			"work"
		],
		"y": 8.875704010574019,
		"x": -1.3892714056902071,
		"extended": "",
		"description": "I Don't Code in my Free Time - Ted Dziuba",
		"time": "2009-10-21T07:10:06Z",
		"href": "http://teddziuba.com/2009/10/i-dont-code-in-my-free-time.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"learning",
			"education",
			"reference",
			"tutorial"
		],
		"y": -8.904747229126473,
		"x": -5.694314338354934,
		"extended": "",
		"description": "High School Mathematics Extensions - Wikibooks, collection of open-content textbooks",
		"time": "2009-10-20T21:25:26Z",
		"href": "http://en.wikibooks.org/wiki/High_School_Mathematics_Extensions"
	},
	{
		"cluster": 5,
		"tags": [
			"gender",
			"mathematics",
			"computerscience",
			"society",
			"statistics"
		],
		"y": -3.6383615178470343,
		"x": -5.21704466536295,
		"extended": "",
		"description": "How does biology explain the low numbers of women in computer science? Hint: it doesn't.",
		"time": "2009-10-18T11:10:48Z",
		"href": "http://www.slideshare.net/terriko/how-does-biology-explain-the-low-numbers-of-women-in-cs-hint-it-doesnt"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"language",
			"semantics",
			"compiler",
			"tricks",
			"computerscience",
			"programming"
		],
		"y": 4.089551119297586,
		"x": -11.237923026775126,
		"extended": "",
		"description": "3 Ruby Quirks You Have to Love | Engine Yard Blog",
		"time": "2009-10-16T13:24:13Z",
		"href": "http://www.engineyard.com/blog/2009/3-ruby-quirks-you-have-to-love/"
	},
	{
		"cluster": 17,
		"tags": [
			"mathematics",
			"lambdacalculus",
			"lambda",
			"programming",
			"functional",
			"computerscience"
		],
		"y": -4.784121482072712,
		"x": -12.249665558467903,
		"extended": "",
		"description": "Lambda Calculus (at Safalra's Website)",
		"time": "2009-10-16T12:59:43Z",
		"href": "http://safalra.com/science/lambda-calculus/"
	},
	{
		"cluster": 2,
		"tags": [
			"logic",
			"science",
			"psychology",
			"fallacies",
			"thinking",
			"philosophy",
			"eplistemology"
		],
		"y": -3.19561908711638,
		"x": 2.30077145066109,
		"extended": "",
		"description": "How Thinking Goes Wrong",
		"time": "2009-10-16T12:58:09Z",
		"href": "http://www.positiveatheism.org/writ/sherm3.htm"
	},
	{
		"cluster": 2,
		"tags": [
			"cocktail",
			"recipe",
			"drinking",
			"drinks"
		],
		"y": -3.0352447238490536,
		"x": 3.726340355536403,
		"extended": "",
		"description": "Classic Cocktails for Everyone | The Art of Manliness",
		"time": "2009-10-16T12:55:32Z",
		"href": "http://artofmanliness.com/2009/06/01/5-classic-cocktails-every-man-should-know/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"learning",
			"computerscience",
			"programming"
		],
		"y": -0.21447172859558836,
		"x": -11.756799157924492,
		"extended": "",
		"description": "With little formal math training, how can I jump directly into high-level math (if possible?) : programming",
		"time": "2009-10-16T12:55:08Z",
		"href": "http://www.reddit.com/r/programming/comments/9ss83/with_little_formal_math_training_how_can_i_jump/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"blogs",
			"list",
			"resources",
			"learning"
		],
		"y": -7.609209894207575,
		"x": -5.439667496819572,
		"extended": "",
		"description": "Mathematics/Statistics - AcademicBlogs",
		"time": "2009-10-16T12:54:50Z",
		"href": "http://wiki.henryfarrell.net/wiki/index.php/Mathematics/Statistics"
	},
	{
		"cluster": 15,
		"tags": [
			"computerscience",
			"blogs",
			"resources",
			"learning"
		],
		"y": -7.534453270890927,
		"x": -5.479911405776978,
		"extended": "",
		"description": "Computer Science - AcademicBlogs",
		"time": "2009-10-16T12:54:22Z",
		"href": "http://wiki.henryfarrell.net/wiki/index.php/Computer_Science"
	},
	{
		"cluster": 8,
		"tags": [
			"javascript",
			"search",
			"bookmarklet",
			"tool",
			"web",
			"internet"
		],
		"y": 3.801311272418694,
		"x": 2.686108753818826,
		"extended": "",
		"description": "Shortwave ~ an extensible quick-search and shortcut bookmark",
		"time": "2009-10-16T12:53:52Z",
		"href": "http://shortwaveapp.com/"
	},
	{
		"cluster": 7,
		"tags": [
			"activerecord",
			"translation",
			"i18n",
			"internationalisation",
			"rails",
			"web",
			"development",
			"localisation",
			"ruby"
		],
		"y": 9.658554121106064,
		"x": -7.453999640995564,
		"extended": "",
		"description": "iain.nl » Translating ActiveRecord",
		"time": "2009-10-16T12:34:18Z",
		"href": "http://iain.nl/2008/09/translating-activerecord/"
	},
	{
		"cluster": 18,
		"tags": [
			"git",
			"app",
			"scm",
			"server",
			"programming",
			"dvcs",
			"vcs",
			"software"
		],
		"y": 6.94031307081007,
		"x": 0.3558884225888803,
		"extended": "",
		"description": "toolmantim's bananajour at master - GitHub",
		"time": "2009-10-16T12:33:42Z",
		"href": "http://github.com/toolmantim/bananajour"
	},
	{
		"cluster": 12,
		"tags": [
			"iphone",
			"mobile",
			"web",
			"development",
			"UI",
			"javascript",
			"html",
			"css"
		],
		"y": 10.57714543125175,
		"x": 0.026883144042394,
		"extended": "",
		"description": "iui - Project Hosting on Google Code",
		"time": "2009-10-16T12:33:23Z",
		"href": "http://code.google.com/p/iui/"
	},
	{
		"cluster": 15,
		"tags": [
			"finance",
			"completxity",
			"p=np",
			"mathematics",
			"computerscience",
			"derivatives"
		],
		"y": -2.046947541900273,
		"x": -13.417409003921504,
		"extended": "",
		"description": "Michael Trick’s Operations Research Blog : Hey Buddy, Can I Sell You an NP Hard Problem?",
		"time": "2009-10-16T12:26:49Z",
		"href": "http://mat.tepper.cmu.edu/blog/?p=906"
	},
	{
		"cluster": 15,
		"tags": [
			"p=np",
			"computation",
			"computerscience",
			"complexity",
			"mathematics"
		],
		"y": -1.7020430320014193,
		"x": -12.89899220957726,
		"extended": "",
		"description": "Solving the P-NP Puzzler - NYTimes.com",
		"time": "2009-10-16T12:10:05Z",
		"href": "http://www.nytimes.com/2009/10/08/science/Wpolynom.html?_r=2&ref=science"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"html",
			"forms",
			"file",
			"upload",
			"hack",
			"web",
			"development",
			"design",
			"javascript",
			"input"
		],
		"y": 10.601890682782267,
		"x": 0.2546595553714547,
		"extended": "",
		"description": "CSS2/DOM - Styling an input type=\"file\"",
		"time": "2009-10-16T10:55:12Z",
		"href": "http://www.quirksmode.org/dom/inputfile.html"
	},
	{
		"cluster": 17,
		"tags": [
			"arduino",
			"electronics",
			"programming",
			"physicalcomputing",
			"diy",
			"tutorial"
		],
		"y": 1.335688494609219,
		"x": -3.614442773032254,
		"extended": "",
		"description": "Arduino Tutorial - Learn electronics and microcontrollers using Arduino!",
		"time": "2009-10-14T08:49:13Z",
		"href": "http://www.ladyada.net/learn/arduino/index.html"
	},
	{
		"cluster": 17,
		"tags": [
			"arduino",
			"electronics",
			"physicalcomputing",
			"computing",
			"hardware",
			"diy",
			"programming"
		],
		"y": 1.3140846484352433,
		"x": -3.6091904812964315,
		"extended": "",
		"description": "Physical Computing",
		"time": "2009-10-14T08:48:51Z",
		"href": "http://tigoe.net/pcomp/"
	},
	{
		"cluster": 7,
		"tags": [
			"unix",
			"ruby",
			"unicorn",
			"http",
			"serer",
			"threading",
			"concurrency",
			"programming",
			"development",
			"computerscience"
		],
		"y": 5.23523756731789,
		"x": -11.179900868369568,
		"extended": "",
		"description": "I like Unicorn because it's Unix",
		"time": "2009-10-14T08:47:41Z",
		"href": "http://tomayko.com/writings/unicorn-is-unix"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"learning",
			"education",
			"tutorial",
			"functional",
			"programming",
			"computerscience"
		],
		"y": -6.52000737754499,
		"x": -8.957260191893852,
		"extended": "",
		"description": "My life is virtual… DOT COM » Fake World Haskell, Part 1",
		"time": "2009-10-14T08:47:18Z",
		"href": "http://my.life-is-virtual.com/2009/10/07/fake-world-haskell-part-1/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"programming",
			"computerscience",
			"learning",
			"education"
		],
		"y": -0.20928097987426236,
		"x": -12.289223288683889,
		"extended": "",
		"description": "Stevey's Home Page - Math Every Day ",
		"time": "2009-10-14T08:46:38Z",
		"href": "http://steve.yegge.googlepages.com/math-every-day"
	},
	{
		"cluster": 8,
		"tags": [
			"seo",
			"communities",
			"marketing",
			"internet",
			"web",
			"google"
		],
		"y": 3.413150292651299,
		"x": 2.8453162405909715,
		"extended": "",
		"description": "Derek Powazek - Spammers, Evildoers, and Opportunists",
		"time": "2009-10-14T07:02:28Z",
		"href": "http://powazek.com/posts/2090"
	},
	{
		"cluster": 17,
		"tags": [
			"audio",
			"music",
			"programming",
			"computerscience",
			"sound",
			"art",
			"code",
			"computers"
		],
		"y": -11.52747953420386,
		"x": -2.750515436573076,
		"extended": "",
		"description": "Cessu's blog: Have You Listened to Your Program Today?",
		"time": "2009-10-09T12:26:22Z",
		"href": "http://cessu.blogspot.com/2008/09/have-you-listened-to-your-program-today.html"
	},
	{
		"cluster": 15,
		"tags": [
			"haskell",
			"mathematics",
			"calculation",
			"numbertheory",
			"number",
			"programming",
			"computerscience"
		],
		"y": -0.784246595819185,
		"x": -11.230060116726548,
		"extended": "",
		"description": "Basic Number Theory in Haskell",
		"time": "2009-10-05T16:27:37Z",
		"href": "http://www.polyomino.f2s.com/david/haskell/numbertheory.html"
	},
	{
		"cluster": 7,
		"tags": [
			"nfc",
			"rfid",
			"ruby",
			"library",
			"programming",
			"gem"
		],
		"y": 7.489707624646055,
		"x": -10.201537810029917,
		"extended": "",
		"description": "Tender Lovemaking",
		"time": "2009-10-05T16:27:10Z",
		"href": "http://tenderlovemaking.com/"
	},
	{
		"cluster": 7,
		"tags": [
			"rad",
			"ruby",
			"arduino",
			"gem",
			"programming",
			"development"
		],
		"y": 7.808003855697549,
		"x": -9.518452520937712,
		"extended": "",
		"description": "madrona's rad at master - GitHub",
		"time": "2009-10-05T15:21:56Z",
		"href": "http://github.com/madrona/rad"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"gem",
			"library",
			"serialport",
			"serial",
			"comms",
			"programming",
			"development"
		],
		"y": 7.951348612698731,
		"x": -9.713016099701122,
		"extended": "",
		"description": "toholio's ruby-serialport at master - GitHub",
		"time": "2009-10-05T15:21:01Z",
		"href": "http://github.com/toholio/ruby-serialport"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"algebra",
			"numbertheory",
			"arithmetic"
		],
		"y": -6.959048735298616,
		"x": -4.0008255449997465,
		"extended": "",
		"description": "Fundamental theorem of arithmetic - Wikipedia, the free encyclopedia",
		"time": "2009-10-03T17:44:23Z",
		"href": "http://en.wikipedia.org/wiki/Fundamental_theorem_of_arithmetic"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"console",
			"networking",
			"programming",
			"development",
			"socket",
			"remote",
			"debugging",
			"library",
			"irb"
		],
		"y": 7.572407451744063,
		"x": -9.111485214544864,
		"extended": "",
		"description": "Debu.gs: LiveConsole",
		"time": "2009-10-02T13:54:08Z",
		"href": "http://debu.gs/live-console"
	},
	{
		"cluster": 2,
		"tags": [
			"argument",
			"online",
			"society",
			"psychology",
			"discussion"
		],
		"y": -1.0202058414240818,
		"x": 7.477852727301418,
		"extended": "",
		"description": "Danny O’Brien’s Oblomovka » Blog Archive » you know who i blame? the lurkers",
		"time": "2009-10-02T08:10:58Z",
		"href": "http://www.oblomovka.com/wp/2009/09/22/you-know-who-i-blame-the-lurkers/"
	},
	{
		"cluster": 12,
		"tags": [
			"business",
			"pricing",
			"web",
			"development",
			"design",
			"freelancing",
			"money"
		],
		"y": 9.551975131447854,
		"x": 0.601781955427449,
		"extended": "",
		"description": "Pricing A Project | Blue Flavor",
		"time": "2009-10-02T08:07:58Z",
		"href": "http://www.blueflavor.com/blog/2006/apr/25/pricing-project/"
	},
	{
		"cluster": 14,
		"tags": [
			"google",
			"wave",
			"review",
			"email",
			"technology",
			"design",
			"web"
		],
		"y": 6.1696010328460185,
		"x": 2.0694220847080342,
		"extended": "",
		"description": "Tom Morris: 2009-08-08",
		"time": "2009-10-02T08:07:02Z",
		"href": "http://tommorris.org/blog/2009/08/08#When:15:50:47"
	},
	{
		"cluster": 7,
		"tags": [
			"authlogic",
			"rspec",
			"rails",
			"tdd",
			"authentication",
			"web",
			"development",
			"programming",
			"bug",
			"ruby",
			"factory_girl"
		],
		"y": 9.384482460876546,
		"x": -7.479095968286628,
		"extended": "",
		"description": "TDD on Rails #4: RSpec, Authlogic, Factory_girl and resource_controller « Rails Thoughts",
		"time": "2009-10-02T08:06:40Z",
		"href": "http://rails.anyware-technologies.com.br/2009/04/21/tdd-on-rails-4-rspec-authlogic-factory_girl-and-resource_controller/"
	},
	{
		"cluster": 15,
		"tags": [
			"visualization",
			"maths",
			"computation",
			"lambdacalculus",
			"churchnumerals",
			"computerscience",
			"mathematics"
		],
		"y": -1.5162190446586739,
		"x": -12.57051583477265,
		"extended": "",
		"description": "Untyped Lambda Calculus Interpretations v1 :: ClaudiusMaximus",
		"time": "2009-10-02T08:05:12Z",
		"href": "http://claudiusmaximus.goto10.org/cm/2009-06-19_untyped_lambda_calculus_interpretations_v1.html"
	},
	{
		"cluster": 2,
		"tags": [
			"iphone",
			"google",
			"sync",
			"calendar",
			"pim",
			"mail",
			"contacts"
		],
		"y": 6.833743817122808,
		"x": 3.528196281740074,
		"extended": "",
		"description": "Google Sync : Set Up Your iPhone or iPod Touch - Mobile Help",
		"time": "2009-10-02T08:04:28Z",
		"href": "http://www.google.com/support/mobile/bin/answer.py?answer=138740&topic=14252"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"html",
			"dom",
			"templating",
			"dsl",
			"programming",
			"web"
		],
		"y": 10.43977718639394,
		"x": -3.543418710759945,
		"extended": "",
		"description": "NonBlocking.io - Malte Ubl's Asynchronous Identity Disorder: A DSL for generating HTML with JS",
		"time": "2009-10-02T07:59:47Z",
		"href": "http://www.nonblocking.io/2009/09/dsl-for-generating-html-with-js.html"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"algrebra",
			"graph",
			"linear",
			"equation"
		],
		"y": -6.208138782478093,
		"x": -3.1601628030878457,
		"extended": "",
		"description": "How do I find the equation from two points on a graph? - Yahoo! Answers",
		"time": "2009-10-02T07:59:21Z",
		"href": "http://answers.yahoo.com/question/index?qid=20080809021135AAc1i8o"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"quine",
			"programming",
			"computerscience"
		],
		"y": 3.833735654275378,
		"x": -11.283694517203132,
		"extended": "",
		"description": "ruby quine _slightly_ smaller than python quine - Polishing Ruby",
		"time": "2009-10-02T07:55:29Z",
		"href": "http://blog.zenspider.com/2006/09/ruby-quine--slightly--smaller.html"
	},
	{
		"cluster": 14,
		"tags": [
			"msc",
			"education",
			"masters",
			"course",
			"hci",
			"design",
			"computing"
		],
		"y": -8.527286002493168,
		"x": -1.5867970453368003,
		"extended": "",
		"description": "MSc Human-Centred Systems - Postgraduate Courses - City University London - England",
		"time": "2009-10-02T07:55:13Z",
		"href": "http://www.soi.city.ac.uk/pgcourses/hcs/index.html"
	},
	{
		"cluster": 17,
		"tags": [
			"sicp",
			"scheme",
			"python",
			"education",
			"lisp",
			"mit",
			"programming",
			"computerscience"
		],
		"y": -7.832376555214675,
		"x": -12.223877162340468,
		"extended": "",
		"description": "Why MIT now uses python instead of scheme for its undergraduate CS program - Chas Emerick - Muck and Brass",
		"time": "2009-09-29T14:57:30Z",
		"href": "http://muckandbrass.com/web/pages/viewpage.action?pageId=2752716"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"taxation",
			"property",
			"libdems"
		],
		"y": 8.101445364768761,
		"x": 9.432787637751504,
		"extended": "",
		"description": "FT.com / Columnists / Martin Wolf - Why Cable’s mansions tax is right",
		"time": "2009-09-25T16:36:11Z",
		"href": "http://www.ft.com/cms/s/0/69351f18-a941-11de-9b7f-00144feabdc0.html?nclick_check=1"
	},
	{
		"cluster": 5,
		"tags": [
			"recommendation",
			"crowdsource",
			"netflix",
			"maths",
			"statistics",
			"programming",
			"algorithms"
		],
		"y": 1.4130442364179339,
		"x": -13.07065468568712,
		"extended": "",
		"description": "How the Netflix Prize Was Won | Epicenter | Wired.com",
		"time": "2009-09-23T15:11:51Z",
		"href": "http://www.wired.com/epicenter/2009/09/how-the-netflix-prize-was-won/"
	},
	{
		"cluster": 12,
		"tags": [
			"chrome",
			"ie",
			"browser",
			"plugin",
			"development",
			"compatibilty",
			"js",
			"html",
			"html5",
			"webkit",
			"web",
			"google"
		],
		"y": 10.842658033031142,
		"x": -1.1464067070775417,
		"extended": "",
		"description": "Chromium Blog: Introducing Google Chrome Frame",
		"time": "2009-09-22T22:23:01Z",
		"href": "http://blog.chromium.org/2009/09/introducing-google-chrome-frame.html"
	},
	{
		"cluster": 7,
		"tags": [
			"git",
			"ruby",
			"history",
			"programming",
			"library",
			"versioning",
			"dev",
			"web"
		],
		"y": 8.654070296240178,
		"x": -8.567530202496483,
		"extended": "",
		"description": "Gibbler: Git-like hashes for Ruby objects",
		"time": "2009-09-22T11:38:08Z",
		"href": "http://delano.github.com/gibbler/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"sculpture",
			"environment",
			"space",
			"culture",
			"sound"
		],
		"y": -10.380269504486005,
		"x": 2.095591478420396,
		"extended": "",
		"description": "(Un)Inhabitable? - Art of Extreme Environments - we make money not art",
		"time": "2009-09-22T11:30:39Z",
		"href": "http://www.we-make-money-not-art.com/archives/2009/09/maison-europeenne-de-la-photog.php"
	},
	{
		"cluster": 1,
		"tags": [
			"narrative",
			"art",
			"culture",
			"interactivity",
			"social",
			"authorship",
			"fiction",
			"games",
			"technology"
		],
		"y": -11.531676510120164,
		"x": 0.9774802177701455,
		"extended": "",
		"description": "Rhizome | Speaking in Third Person: On \"Third Person: Authoring and Exploring Vast Narratives\"",
		"time": "2009-09-22T11:05:30Z",
		"href": "http://rhizome.org/editorial/2945"
	},
	{
		"cluster": 16,
		"tags": [
			"data",
			"visualization",
			"design",
			"information"
		],
		"y": -2.816377572459103,
		"x": 0.1857773990211772,
		"extended": "",
		"description": "Gallery - Visions of data - Image 1 - New Scientist",
		"time": "2009-09-22T10:41:57Z",
		"href": "http://www.newscientist.com/gallery/dn17746-visions-of-data#"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"development",
			"tips"
		],
		"y": 7.451852744942769,
		"x": -8.716956513441742,
		"extended": "",
		"description": "21 Ruby Tricks You Should Be Using In Your Own Code",
		"time": "2009-09-21T15:11:17Z",
		"href": "http://www.rubyinside.com/21-ruby-tricks-902.html"
	},
	{
		"cluster": 16,
		"tags": [
			"gender",
			"sexuality",
			"statistics",
			"privacy",
			"ethics",
			"data",
			"computerscience",
			"datamining",
			"socialNetwork",
			"socialmedia",
			"research"
		],
		"y": -2.019411502553925,
		"x": -6.123748822286899,
		"extended": "",
		"description": "Project ‘Gaydar’: An MIT experiment raises new questions about online privacy - The Boston Globe",
		"time": "2009-09-21T09:23:57Z",
		"href": "http://www.boston.com/bostonglobe/ideas/articles/2009/09/20/project_gaydar_an_mit_experiment_raises_new_questions_about_online_privacy/?page=full"
	},
	{
		"cluster": 2,
		"tags": [
			"psychology",
			"neurology",
			"consciousness",
			"cognition",
			"science",
			"biology",
			"brain",
			"godelescherbach",
			"hofstadter",
			"metacognition",
			"strangeloop"
		],
		"y": -0.047716960066674904,
		"x": 6.44633435288319,
		"extended": "",
		"description": "Evidence Points To Conscious 'Metacognition' In Some Nonhuman Animals",
		"time": "2009-09-18T16:03:42Z",
		"href": "http://www.sciencedaily.com/releases/2009/09/090914172644.htm"
	},
	{
		"cluster": 8,
		"tags": [
			"cartography",
			"maps",
			"internet",
			"technology",
			"art"
		],
		"y": -10.243157622175447,
		"x": 0.05336489990567875,
		"extended": "",
		"description": "Rhizome | The Internet Mapping Project (2009) - Kevin Kelley",
		"time": "2009-09-16T15:51:40Z",
		"href": "http://rhizome.org/editorial/2946"
	},
	{
		"cluster": 7,
		"tags": [
			"javascript",
			"svg",
			"library",
			"graphics",
			"visualization",
			"development",
			"programming",
			"vector"
		],
		"y": 9.476473260523457,
		"x": -2.9581354905819355,
		"extended": "",
		"description": "Raphaël—JavaScript Library",
		"time": "2009-09-16T15:44:33Z",
		"href": "http://raphaeljs.com/"
	},
	{
		"cluster": 4,
		"tags": [
			"maybe",
			"monad",
			"ruby",
			"haskell",
			"programming",
			"computerscience"
		],
		"y": -4.885097117949233,
		"x": -9.829183322588662,
		"extended": "",
		"description": "The Scariest Fun : notes from a web startup: The Maybe Monad in Ruby",
		"time": "2009-09-15T16:57:01Z",
		"href": "http://blog.pretheory.com/arch/2008/02/the_maybe_monad_in_ruby.php"
	},
	{
		"cluster": 7,
		"tags": [
			"activerecord",
			"rails",
			"nonpersistentmodels",
			"validation",
			"programming",
			"ruby"
		],
		"y": 5.944321490858634,
		"x": -9.888921152534108,
		"extended": "",
		"description": "Pervasive Code » Non-persistent Rails model classes, for easier validation",
		"time": "2009-09-15T11:52:27Z",
		"href": "http://www.pervasivecode.com/blog/2007/06/08/non-persistent-rails-model-classes-for-easier-validation/"
	},
	{
		"cluster": 2,
		"tags": [
			"mySQL",
			"database",
			"performance",
			"materializedviews",
			"views",
			"scaling",
			"denormalisation",
			"sql",
			"relational",
			"db"
		],
		"y": 2.5758394576681005,
		"x": -2.057796167210122,
		"extended": "",
		"description": "Materialized Views (MV) with MySQL",
		"time": "2009-09-15T11:11:57Z",
		"href": "http://www.shinguz.ch/MySQL/mysql_mv.html"
	},
	{
		"cluster": 2,
		"tags": [
			"mySQL",
			"nosql",
			"normalisation",
			"database",
			"scaling",
			"persistence"
		],
		"y": 3.1308041106310336,
		"x": -0.04226665561009919,
		"extended": "",
		"description": "Essential storage tradeoff: Simple Reads vs. Simple Writes | Code Monkeyism",
		"time": "2009-09-15T11:02:50Z",
		"href": "http://codemonkeyism.com/essential-storage-tradeoff-simple-reads-simple-writes/"
	},
	{
		"cluster": 17,
		"tags": [
			"lambdacalculus",
			"churchnotation",
			"functional",
			"programming",
			"javascript"
		],
		"y": 3.2953777564373343,
		"x": -7.563643338788598,
		"extended": "",
		"description": "DANKOGAI::Blog: Lambda Calculus in Javascript",
		"time": "2009-09-15T10:22:08Z",
		"href": "http://dankogai.typepad.com/blog/2006/03/lambda_calculus.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"linrary",
			"functional",
			"monads",
			"maybe",
			"programming",
			"library",
			"development"
		],
		"y": 6.473966486719289,
		"x": -9.866305760597495,
		"extended": "The Generalized Greenspun Rule: Any sufficiently complicated platform contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of a functional programming language.\n\nWhile Ruby provides an ad hoc, informally-specified, bug-ridden, slow implementation of half of higher-order functional programming, it lacks an ad hoc, informally-specified, bug-ridden, slow implementation of half of Monads.\n",
		"description": "Invocation Construction Kit",
		"time": "2009-09-15T10:19:57Z",
		"href": "http://ick.rubyforge.org/"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"art",
			"society",
			"culture",
			"ip",
			"economics",
			"business"
		],
		"y": -5.986796968914582,
		"x": 10.378677418438334,
		"extended": "if Madonna is your model, you aren't rooting for artists; you are rooting for monopolists. If your mechanism for \"compensating\" artists requires them to become monopolists and to grow and position their monopolies as monopolists do, then you are championing monopolies, not Art.\n",
		"description": "\"Artists Should Be Compensated For Their Work\" | QuestionCopyright.org",
		"time": "2009-09-11T11:10:16Z",
		"href": "http://questioncopyright.org/compensation"
	},
	{
		"cluster": 7,
		"tags": [
			"cells",
			"presenter",
			"designpattern",
			"pattern",
			"html",
			"view",
			"ruby",
			"rails",
			"templates",
			"development",
			"programming"
		],
		"y": 9.354161358609337,
		"x": -8.436991273555408,
		"extended": "",
		"description": "Simplifying your Ruby on Rails code: Presenter pattern, cells plugin | Dmytro Shteflyuk's Home",
		"time": "2009-09-11T11:05:22Z",
		"href": "http://kpumuk.info/ruby-on-rails/simplifying-your-ruby-on-rails-code/"
	},
	{
		"cluster": 12,
		"tags": [
			"persistence",
			"scaling",
			"programming",
			"web",
			"development",
			"database",
			"relational",
			"nosql",
			"keyvaluestore"
		],
		"y": 3.3801793874570456,
		"x": -0.8886223835328197,
		"extended": "",
		"description": "Dare Obasanjo aka Carnage4Life - Building Scalable Databases: Denormalization, the NoSQL Movement and Digg",
		"time": "2009-09-11T11:00:55Z",
		"href": "http://www.25hoursaday.com/weblog/2009/09/10/BuildingScalableDatabasesDenormalizationTheNoSQLMovementAndDigg.aspx"
	},
	{
		"cluster": 2,
		"tags": [
			"bittorrent",
			"google",
			"tracker",
			"torrent",
			"app",
			"filesharing",
			"p2p"
		],
		"y": -3.680777276432212,
		"x": 4.070491914667961,
		"extended": "",
		"description": "Run a Free BitTorrent Tracker on Google | TorrentFreak",
		"time": "2009-09-11T09:36:17Z",
		"href": "http://torrentfreak.com/run-a-free-bittorrent-tracker-on-google-090910/"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"googlebooks",
			"google",
			"books",
			"law",
			"politics",
			"culture",
			"society",
			"publishing",
			"internet"
		],
		"y": -2.166564515634179,
		"x": 12.562316387987556,
		"extended": "",
		"description": "FT.com / Comment / Opinion - A copyright black hole swallows our culture",
		"time": "2009-09-08T13:17:14Z",
		"href": "http://www.ft.com/cms/s/0/6811a9d4-9b0f-11de-a3a1-00144feabdc0.html"
	},
	{
		"cluster": 2,
		"tags": [
			"googlebooks",
			"taxonomy",
			"metadata",
			"informationscience",
			"information",
			"books"
		],
		"y": -1.7720372900199792,
		"x": 5.216670400533926,
		"extended": "",
		"description": "Language Log » Google Books: A Metadata Train Wreck",
		"time": "2009-09-08T12:30:54Z",
		"href": "http://languagelog.ldc.upenn.edu/nll/?p=1701#"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"learning",
			"books",
			"resources",
			"reading"
		],
		"y": -7.5748412565890515,
		"x": -5.294557089675016,
		"extended": "",
		"description": "Free, legal mathematics books",
		"time": "2009-09-08T11:35:25Z",
		"href": "http://www.reddit.com/r/mathbooks"
	},
	{
		"cluster": 2,
		"tags": [
			"publishing",
			"iphone",
			"ebook",
			"reading",
			"book"
		],
		"y": -3.5420023341316873,
		"x": 4.120677955549109,
		"extended": "",
		"description": "Enhanced Editions: Bunny Munro and eBooks for the iPhone | booktwo.org",
		"time": "2009-09-08T10:37:14Z",
		"href": "http://booktwo.org/notebook/enhanced-editions/#"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"algorithm",
			"text",
			"composition",
			"theory",
			"code",
			"audio",
			"art",
			"programming",
			"ruby"
		],
		"y": -11.519951244121486,
		"x": -2.7838916886401206,
		"extended": "",
		"description": "Algorithmic Composition using an extension of Guido D'Arezzo's Method | Francisco Tufró",
		"time": "2009-09-08T07:59:29Z",
		"href": "http://www.franciscotufro.com.ar/2009/09/06/algorithmic-composition-using-an-extension-of-guido-darezzos-method/"
	},
	{
		"cluster": 3,
		"tags": [
			"usic",
			"culture",
			"art",
			"criticism",
			"history",
			"society",
			"technology",
			"law",
			"business"
		],
		"y": -8.796652841004308,
		"x": 2.1833018721535136,
		"extended": "",
		"description": "Bill Drummond: Music Recording Industry Collapse is a Good Thing - PSFK",
		"time": "2009-09-08T07:31:56Z",
		"href": "http://www.psfk.com/2009/08/bill-drummond-music-recording-industry-collapse-is-a-good-thing.html"
	},
	{
		"cluster": 15,
		"tags": [
			"books",
			"computerscience",
			"programming",
			"computer",
			"science",
			"learning",
			"book",
			"mathematics"
		],
		"y": -0.04764163470663413,
		"x": -11.958933963828866,
		"extended": "",
		"description": "Free, legal textbooks related to computer science",
		"time": "2009-09-07T21:46:07Z",
		"href": "http://www.reddit.com/r/csbooks/"
	},
	{
		"cluster": 2,
		"tags": [
			"stackoverflow",
			"web",
			"application",
			"opensource",
			"community",
			"knowledgemanagement",
			"knowledge",
			"question",
			"answer"
		],
		"y": -2.0194089662873425,
		"x": 3.324683162789826,
		"extended": "",
		"description": "Plurk Solace Released » Armin Ronacher",
		"time": "2009-09-04T11:04:39Z",
		"href": "http://lucumr.pocoo.org/2009/9/2/plurk-solace-released"
	},
	{
		"cluster": 2,
		"tags": [
			"psychology",
			"depression",
			"health",
			"mental",
			"psychiatry",
			"medicine"
		],
		"y": 0.8162363428888093,
		"x": 6.9667107581696595,
		"extended": "",
		"description": "Response: Psychiatry may be imprecise – but don't call it astrology | Comment is free | The Guardian",
		"time": "2009-09-03T10:18:33Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/sep/03/response-mental-health"
	},
	{
		"cluster": 2,
		"tags": [
			"rails",
			"rest",
			"resoure",
			"plugin"
		],
		"y": -2.597446775109542,
		"x": 4.872420124102598,
		"extended": "",
		"description": "Home - inherited_resources - GitHub",
		"time": "2009-09-03T08:07:53Z",
		"href": "http://wiki.github.com/josevalim/inherited_resources"
	},
	{
		"cluster": 7,
		"tags": [
			"database",
			"storage",
			"persistance",
			"store",
			"nosql",
			"keyvalue",
			"db",
			"programming",
			"ruby",
			"library"
		],
		"y": 3.476668735586578,
		"x": -0.6278095945403719,
		"extended": "",
		"description": "Tokyo Cabinet: a modern implementation of DBM",
		"time": "2009-09-03T08:07:37Z",
		"href": "http://tokyocabinet.sourceforge.net/"
	},
	{
		"cluster": 16,
		"tags": [
			"geography",
			"cartography",
			"cycling",
			"gps",
			"animation",
			"maps",
			"data",
			"visualisation",
			"dataviz",
			"art"
		],
		"y": -9.655751175520244,
		"x": -0.08918041440564517,
		"extended": "",
		"description": "YouTube - Rides 2004-2009 (with labels)",
		"time": "2009-09-03T08:06:49Z",
		"href": "http://www.youtube.com/watch?v=iC56P-Ro4PY&eurl=http%3A%2F%2Fwww.videosift.com%2Fvideo%2FCyclist-rides-around-using-GPS-for-5-years-draws-Toronto&feature=player_embedded"
	},
	{
		"cluster": 1,
		"tags": [
			"merz",
			"sculpture",
			"foundobjects",
			"bricolage",
			"collage",
			"art",
			"painting",
			"ephemera",
			"culture"
		],
		"y": -10.260940060021719,
		"x": 2.1186325250862383,
		"extended": "",
		"description": "Art Fag City » A Brief History of Combining Crap with Crap",
		"time": "2009-09-02T13:46:00Z",
		"href": "http://www.artfagcity.com/2009/08/26/a-brief-history-of-combining-crap-with-crap/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"typesystems",
			"typing",
			"return",
			"types",
			"design",
			"software",
			"programming",
			"development",
			"computerscience"
		],
		"y": 4.080167529868752,
		"x": -9.247918776283964,
		"extended": "",
		"description": "Introducing Pedant, a tiny Ruby library that will annoy the hell out of you · SuperJared.com",
		"time": "2009-09-02T13:45:00Z",
		"href": "http://superjared.com/entry/introducing-pedant-ruby-library-will-annoy-you/"
	},
	{
		"cluster": 3,
		"tags": [
			"geography",
			"politics",
			"secrecy",
			"art",
			"military",
			"government",
			"psychogeography",
			"culture",
			"society"
		],
		"y": -0.17284388022623015,
		"x": 13.45670456202431,
		"extended": "",
		"description": "YouTube - Authors@Google: Trevor Paglen",
		"time": "2009-09-02T11:15:27Z",
		"href": "http://www.youtube.com/watch?v=mApBa2qKVDM"
	},
	{
		"cluster": 10,
		"tags": [
			"book",
			"geography",
			"psychogeography",
			"politics",
			"US",
			"secrecy",
			"war",
			"art"
		],
		"y": -0.1808478535127163,
		"x": 13.784542851345943,
		"extended": "",
		"description": "Book Review - Blank Spots on the Map: The Dark Geography of the Pentagon's Secret - we make money not art",
		"time": "2009-09-01T15:27:45Z",
		"href": "http://www.we-make-money-not-art.com/archives/2009/09/book-review-blank-spots-on-the.php"
	},
	{
		"cluster": 2,
		"tags": [
			"depression",
			"illness",
			"psychology",
			"medicine",
			"science",
			"mental",
			"health"
		],
		"y": 0.7983725357032669,
		"x": 6.959906724022329,
		"extended": "",
		"description": "Pyjamas in Bananas: Tedious psychological turf wars",
		"time": "2009-09-01T13:13:39Z",
		"href": "http://pyjamasinbananas.blogspot.com/2009/09/richard-bentall-has-new-book-out-so-it.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"graph",
			"library",
			"programming",
			"development",
			"dataviz",
			"visualisation",
			"database",
			"chart",
			"plot"
		],
		"y": 8.070384794319251,
		"x": -9.869816047708214,
		"extended": "",
		"description": "The Ruby Toolbox: Graphing",
		"time": "2009-09-01T11:41:45Z",
		"href": "http://ruby-toolbox.com/categories/graphing.html"
	},
	{
		"cluster": 2,
		"tags": [
			"depression",
			"psychology",
			"science",
			"evolution",
			"health",
			"brain",
			"neurology",
			"biology"
		],
		"y": 0.23953778771504283,
		"x": 6.660829032078249,
		"extended": "",
		"description": "Depression's Evolutionary Roots: Scientific American",
		"time": "2009-09-01T11:39:43Z",
		"href": "http://www.scientificamerican.com/article.cfm?id=depressions-evolutionary"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"ruby",
			"programming",
			"development",
			"erb",
			"blockhelpers"
		],
		"y": 9.08960767694397,
		"x": -7.96323689006919,
		"extended": "",
		"description": "Simplifying Rails Block Helpers (With a Side of Rubinius) « Katz Got Your Tongue?",
		"time": "2009-09-01T11:32:07Z",
		"href": "http://yehudakatz.com/2009/08/31/simplifying-rails-block-helpers-with-a-side-of-rubinius/"
	},
	{
		"cluster": 2,
		"tags": [
			"book",
			"pdf",
			"download",
			"parsers",
			"parsing",
			"algorithms",
			"compilers",
			"computerscience",
			"progrgramming",
			"parser"
		],
		"y": 0.6286608711794208,
		"x": -10.984088477434884,
		"extended": "",
		"description": "Parsing Techniques - A Practical Guide",
		"time": "2009-09-01T09:21:36Z",
		"href": "http://www.cs.vu.nl/~dick/PTAPG.html"
	},
	{
		"cluster": 2,
		"tags": [
			"ruby",
			"cassandra",
			"persistance",
			"objscstore",
			"bigtable",
			"database",
			"nosql",
			"distributed",
			"key-value",
			"tutorial"
		],
		"y": 3.246416845545633,
		"x": -0.23360380568513436,
		"extended": "",
		"description": "Cassandra and Ruby: A Love Affair? | Engine Yard Blog",
		"time": "2009-09-01T09:20:58Z",
		"href": "http://www.engineyard.com/blog/2009/cassandra-and-ruby-a-love-affair/"
	},
	{
		"cluster": 2,
		"tags": [
			"psychiatry",
			"psychology",
			"medicine",
			"mental",
			"illness",
			"policy",
			"society",
			"health"
		],
		"y": 1.0094335667627885,
		"x": 7.1444246641663876,
		"extended": "",
		"description": "Diagnoses are psychiatry's star signs. Let's listen more and drug people less | Richard Bentall | Comment is free | The Guardian",
		"time": "2009-09-01T09:16:48Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/aug/31/psychiatry-psychosis-schizophrenia-drug-treatments"
	},
	{
		"cluster": 17,
		"tags": [
			"shoes",
			"ruby",
			"education",
			"pedagogy",
			"programming",
			"teaching",
			"children",
			"computerscience"
		],
		"y": 0.46815363767974905,
		"x": -12.7753494747116,
		"extended": "",
		"description": "RailsBridge : Teaching Kids Project : Blog : Teaching Ruby to High School Girls",
		"time": "2009-08-27T16:21:37Z",
		"href": "http://teachingkids.railsbridge.org/2009/08/15/teaching-ruby-to-high-school-girls.html"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"ruby",
			"web",
			"development",
			"programming",
			"activerecord",
			"polymorphic",
			"associations",
			"STI",
			"single",
			"table",
			"inheritance",
			"orm"
		],
		"y": 9.740099866444506,
		"x": -7.443277732956477,
		"extended": "",
		"description": "Wrestling with polymorphic through associations and single table inheritance",
		"time": "2009-08-26T09:39:56Z",
		"href": "http://blog.johnwyles.com/articles/2009/01/10/wrestling-with-polymorphic-through-associations-and-single-table-inheritance/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"visualization",
			"library",
			"graphics",
			"graph",
			"design",
			"data",
			"infoviz",
			"information",
			"programming",
			"web",
			"development"
		],
		"y": 9.87397906340857,
		"x": -2.826849057571688,
		"extended": "",
		"description": "JavaScript InfoVis Toolkit - Interactive Data Visualizations for the Web",
		"time": "2009-08-24T19:29:31Z",
		"href": "http://thejit.org/"
	},
	{
		"cluster": 1,
		"tags": [
			"cartography",
			"art",
			"information",
			"visualisation",
			"anthropology",
			"sexuality",
			"maps",
			"culture",
			"geography"
		],
		"y": -9.881045552753928,
		"x": 0.2647519231206912,
		"extended": "",
		"description": "Sotadic and Other Zones: The Cartography of Human Sexuality — Bookkake",
		"time": "2009-08-24T09:31:44Z",
		"href": "http://bookkake.com/2009/08/21/sotadic-zones/"
	},
	{
		"cluster": 7,
		"tags": [
			"git",
			"rebase",
			"sc",
			"m",
			"merge",
			"development",
			"programming",
			"dvcs"
		],
		"y": 7.100380812854258,
		"x": 0.3669153315444202,
		"extended": "",
		"description": "JarrodSpillers.com » Blog Archive » git merge vs git rebase: avoiding rebase hell",
		"time": "2009-08-24T09:31:15Z",
		"href": "http://jarrodspillers.com/articles/git-merge-vs-git-rebase-avoiding-rebase-hell"
	},
	{
		"cluster": 2,
		"tags": [
			"semanticweb",
			"knowledge",
			"informationscience",
			"information",
			"knowledgemanagement",
			"taxonomy",
			"folksonomy",
			"tagging",
			"relationaltheory",
			"relation"
		],
		"y": -4.697887187564775,
		"x": 7.090786847623655,
		"extended": "",
		"description": "SKOS + DC + Linked Data = Semantic Tagging? - benjamin nowack's blog",
		"time": "2009-08-19T14:04:16Z",
		"href": "http://bnode.org/blog/2009/08/19/skos-dc-linked-data-semantic-tagging"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"reference",
			"tips",
			"tricks",
			"development"
		],
		"y": 7.469534642152643,
		"x": -8.57694572315341,
		"extended": "",
		"description": "stupid ruby tricks - GIANT ROBOTS SMASHING INTO OTHER GIANT ROBOTS",
		"time": "2009-08-18T10:00:52Z",
		"href": "http://robots.thoughtbot.com/post/162185884/stupid-ruby-tricks"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"typography",
			"css",
			"web",
			"grid",
			"framework"
		],
		"y": 10.299182257145327,
		"x": 0.629116392730816,
		"extended": "",
		"description": "Baseline - a designer framework by ProjetUrbain.com",
		"time": "2009-08-18T09:59:48Z",
		"href": "http://baselinecss.com/"
	},
	{
		"cluster": 7,
		"tags": [
			"timemanagement",
			"work",
			"management",
			"development",
			"programming",
			"business",
			"time",
			"productivity"
		],
		"y": 8.846703428653917,
		"x": -1.2628745841564757,
		"extended": "",
		"description": "Context Switches are Bad, but Stack Traces are Worse - Ted Dziuba",
		"time": "2009-08-18T08:54:54Z",
		"href": "http://teddziuba.com/2009/08/context-switches-are-bad-but-s.html"
	},
	{
		"cluster": 16,
		"tags": [
			"sql",
			"graphics",
			"data",
			"visualisation",
			"database",
			"chart",
			"programming"
		],
		"y": 1.5904849937037944,
		"x": -2.55005289842345,
		"extended": "",
		"description": "SQL pie chart | code.openark.org",
		"time": "2009-08-13T14:06:45Z",
		"href": "http://code.openark.org/blog/mysql/sql-pie-chart"
	},
	{
		"cluster": 16,
		"tags": [
			"sql",
			"graphics",
			"data",
			"visualisation",
			"database",
			"chart",
			"programming"
		],
		"y": 1.5904850023920782,
		"x": -2.5500528927289494,
		"extended": "",
		"description": "SQL graphics | code.openark.org",
		"time": "2009-08-13T14:06:40Z",
		"href": "http://code.openark.org/blog/mysql/sql-graphics"
	},
	{
		"cluster": 16,
		"tags": [
			"sql",
			"graphics",
			"data",
			"visualisation",
			"database",
			"chart",
			"programming"
		],
		"y": 1.5754381283876284,
		"x": -2.556845595782687,
		"extended": "",
		"description": "Draw Bar Charts with raw SQL",
		"time": "2009-08-13T14:06:33Z",
		"href": "http://www.tobinharris.com/past/2008/2/28/draw-bar-charts-in-sql/"
	},
	{
		"cluster": 4,
		"tags": [
			"ruby",
			"haskell",
			"bridge",
			"programming",
			"library",
			"gem",
			"functional"
		],
		"y": 6.760082818897027,
		"x": -10.601934505540909,
		"extended": "",
		"description": "mwotton's Hubris at master - GitHub",
		"time": "2009-08-13T14:01:00Z",
		"href": "http://github.com/mwotton/Hubris/tree/master"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"signup",
			"social",
			"web",
			"marketing"
		],
		"y": 5.044959742797651,
		"x": 2.5238516468859986,
		"extended": "",
		"description": "Designing for Social Traction (slide deck) - Bokardo",
		"time": "2009-08-12T13:48:27Z",
		"href": "http://bokardo.com/archives/designing-for-social-traction-slide-deck/"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"audio",
			"art",
			"chess",
			"generative",
			"composition",
			"computer",
			"programming",
			"development"
		],
		"y": -11.497269555935787,
		"x": -2.0888780631169563,
		"extended": "",
		"description": "KrazyDad » Blog Archive » Musical Chess",
		"time": "2009-08-12T11:32:36Z",
		"href": "http://www.krazydad.com/blog/2009/05/21/musical-chess/"
	},
	{
		"cluster": 17,
		"tags": [
			"sorting",
			"algorithm",
			"sound",
			"programming",
			"computerscience",
			"music",
			"art"
		],
		"y": -11.527404680259755,
		"x": -2.7360179885750435,
		"extended": "",
		"description": "pillow blog » but what does it SOUND like?",
		"time": "2009-08-12T10:19:24Z",
		"href": "http://www.pillowsopher.com/blog/?p=116"
	},
	{
		"cluster": 1,
		"tags": [
			"nature",
			"illustration",
			"graphics",
			"generative",
			"computer",
			"art",
			"darwin",
			"taxonomy"
		],
		"y": -8.959441223288458,
		"x": 0.25362719656434923,
		"extended": "",
		"description": "Macoto Murayama’s Flower Illustrations - PSFK",
		"time": "2009-08-12T09:31:15Z",
		"href": "http://www.psfk.com/2009/08/macoto-murayamas-flower-illustrations.html"
	},
	{
		"cluster": 3,
		"tags": [
			"criticism",
			"evolution",
			"writing",
			"fiction",
			"authorship",
			"darwin",
			"culture",
			"theory"
		],
		"y": -12.00854217461413,
		"x": 3.3983469205563073,
		"extended": "",
		"description": "Reading fiction with Darwin's eyes - life - 03 March 2007 - New Scientist",
		"time": "2009-08-10T12:31:35Z",
		"href": "http://www.newscientist.com/article/mg19325931.500-reading-fiction-with-darwins-eyes.html"
	},
	{
		"cluster": 8,
		"tags": [
			"serendipity",
			"randomness",
			"technology",
			"recommendation",
			"curation",
			"internet",
			"social",
			"media"
		],
		"y": 4.655191722045282,
		"x": 3.701046807816782,
		"extended": "",
		"description": "Ping - The Digital Age Is Stamping Out Serendipity - NYTimes.com",
		"time": "2009-08-10T11:53:51Z",
		"href": "http://www.nytimes.com/2009/08/02/business/02ping.html?_r=3"
	},
	{
		"cluster": 3,
		"tags": [
			"narrative",
			"criticism",
			"science",
			"evolution",
			"cognition",
			"theory",
			"storytelling",
			"culture",
			"fiction"
		],
		"y": -12.071016723675548,
		"x": 3.499939234240592,
		"extended": "",
		"description": "Review: How storytelling shaped humanity - opinion - 25 May 2009 - New Scientist",
		"time": "2009-08-10T11:48:37Z",
		"href": "http://www.newscientist.com/article/mg20227091.900-review-how-storytelling-shaped-humanity.html"
	},
	{
		"cluster": 7,
		"tags": [
			"python",
			"ruby",
			"decorator",
			"pattern",
			"decorators",
			"language",
			"programming",
			"development"
		],
		"y": 6.827692486513408,
		"x": -9.333219185059045,
		"extended": "",
		"description": "Python Decorators in Ruby « Katz Got Your Tongue?",
		"time": "2009-08-08T15:23:01Z",
		"href": "http://yehudakatz.com/2009/07/11/python-decorators-in-ruby/"
	},
	{
		"cluster": 14,
		"tags": [
			"cognition",
			"aestheticspsychology",
			"design",
			"ux",
			"UI",
			"interface",
			"gui",
			"corners",
			"shape"
		],
		"y": -4.660586290318732,
		"x": 1.326894268327629,
		"extended": "",
		"description": "Realizations of Rounded Rectangles | UI and us",
		"time": "2009-08-06T16:20:44Z",
		"href": "http://www.uiandus.com/2009/07/27/theories/realizations-of-rounded-rectangles/"
	},
	{
		"cluster": 7,
		"tags": [
			"observer",
			"rails",
			"ruby",
			"plugin",
			"designpatterns",
			"programming",
			"development",
			"web"
		],
		"y": 9.492796694960536,
		"x": -7.568961417378567,
		"extended": "",
		"description": "James on Software | Observational: Better Observers for ActiveRecord",
		"time": "2009-08-06T16:05:40Z",
		"href": "http://jamesgolick.com/2009/8/5/observational-better-observers-for-activerecord.html"
	},
	{
		"cluster": 2,
		"tags": [
			"language",
			"idioms",
			"linguistics"
		],
		"y": -0.07455026837114975,
		"x": 7.966177299891589,
		"extended": "",
		"description": "The idiotic joys of idioms | Books | guardian.co.uk",
		"time": "2009-08-06T16:05:01Z",
		"href": "http://www.guardian.co.uk/books/booksblog/2009/aug/05/idiotic-joys-idioms"
	},
	{
		"cluster": 2,
		"tags": [
			"helvetireader",
			"google",
			"gears",
			"fluid",
			"rss",
			"web",
			"app",
			"hack",
			"greasemonkey",
			"reader"
		],
		"y": -1.7777500454683657,
		"x": 4.081078130684967,
		"extended": "",
		"description": "Offline Gmail, Google Docs, Helvetireader, etc. using Fluid | Josef Richter",
		"time": "2009-08-06T14:19:00Z",
		"href": "http://www.josefrichter.com/blog/offline-gmail-google-docs-helvetireader-etc-using-fluid/"
	},
	{
		"cluster": 8,
		"tags": [
			"news",
			"payment",
			"internet",
			"online",
			"economics",
			"business",
			"murdoch",
			"newsinternational",
			"journalism",
			"content",
			"medi"
		],
		"y": 5.21061323553903,
		"x": 4.309891606433266,
		"extended": "",
		"description": "Charlie Beckett, POLIS Director » Blog Archive » Is Rupert Murdoch an asset stripper, gambler or genius?",
		"time": "2009-08-06T10:16:41Z",
		"href": "http://www.charliebeckett.org/?p=1762"
	},
	{
		"cluster": 10,
		"tags": [
			"education",
			"socialpolicy",
			"society",
			"politics",
			"inequality"
		],
		"y": 3.161923484062945,
		"x": 12.82920905961627,
		"extended": "",
		"description": "To unlock millions of children's lives, Britain must look to the Harlem miracle | Jenni Russell | Comment is free | The Guardian",
		"time": "2009-08-06T09:36:47Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/aug/05/harlem-poverty-children-schools"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"criticism",
			"culture",
			"facebook",
			"internet",
			"netart",
			"Benjamin",
			"walterbenjamin",
			"theory",
			"installation"
		],
		"y": -10.06010684424674,
		"x": 1.0799480123953442,
		"extended": "",
		"description": "kanonmedia / quoting Walter Benjamin",
		"time": "2009-08-05T15:46:04Z",
		"href": "http://www.kanonmedia.com/portfolio/concepts/benjamin_paris/benjamin_paris.html"
	},
	{
		"cluster": 12,
		"tags": [
			"inline-block",
			"browser",
			"layout",
			"design",
			"development",
			"web",
			"css",
			"html",
			"markup"
		],
		"y": 10.593016860962281,
		"x": 0.5072862698239755,
		"extended": "",
		"description": "Mozilla Webdev » Blog Archive » Cross-Browser Inline-Block",
		"time": "2009-08-05T15:33:57Z",
		"href": "http://blog.mozilla.com/webdev/2009/02/20/cross-browser-inline-block/"
	},
	{
		"cluster": 5,
		"tags": [
			"probability",
			"video",
			"maths",
			"statistics",
			"montyhallproblem",
			"monty",
			"hall",
			"problem"
		],
		"y": -2.824040366280803,
		"x": 1.6104508018836123,
		"extended": "",
		"description": "YouTube - The Monty Hall Problem",
		"time": "2009-07-24T08:39:28Z",
		"href": "http://www.youtube.com/watch?v=mhlc7peGlGg&feature=related"
	},
	{
		"cluster": 13,
		"tags": [
			"business",
			"software",
			"economics",
			"startup",
			"management",
			"consultancy"
		],
		"y": 2.0987792780066066,
		"x": 4.151208427734191,
		"extended": "",
		"description": "Joel Spolsky: The Day My Industry Died, Technology Planning Article - Inc. Article",
		"time": "2009-07-24T08:18:56Z",
		"href": "http://www.inc.com/magazine/20090701/joel-spolsky-the-day-my-industry-died.html?partner=fogcreek"
	},
	{
		"cluster": 18,
		"tags": [
			"programming",
			"software",
			"design",
			"magic",
			"rails",
			"python",
			"metaprogramming",
			"development"
		],
		"y": 6.159757154282222,
		"x": -5.557996475581479,
		"extended": "",
		"description": "Dispel the magic by defining the semantics",
		"time": "2009-07-24T08:18:14Z",
		"href": "http://blog.moertel.com/articles/2009/07/23/dispel-the-magic-by-defining-the-semantics"
	},
	{
		"cluster": 16,
		"tags": [
			"art",
			"geodata",
			"design",
			"map",
			"data",
			"programming",
			"visualization",
			"geo"
		],
		"y": -2.6121140792008832,
		"x": 0.14905138482469424,
		"extended": "",
		"description": "Aaron Koblin - Flight Patterns",
		"time": "2009-07-24T08:17:34Z",
		"href": "http://www.aaronkoblin.com/work/flightpatterns/index.html"
	},
	{
		"cluster": 17,
		"tags": [
			"clojure",
			"tutorial",
			"lisp",
			"java",
			"programming",
			"functional"
		],
		"y": 2.303476455918827,
		"x": -6.570627372361123,
		"extended": "",
		"description": "Object Computing, Inc. — Java News Brief — March 2009",
		"time": "2009-07-23T12:37:52Z",
		"href": "http://jnb.ociweb.com/jnb/jnbMar2009.html#Intro"
	},
	{
		"cluster": 7,
		"tags": [
			"objectivec",
			"apple",
			"iphone",
			"development",
			"programming",
			"guide",
			"tutorial"
		],
		"y": 7.878936698485392,
		"x": -6.188288201925167,
		"extended": "",
		"description": "Matt Legend Gemmell – iPhone Development Emergency Guide",
		"time": "2009-07-23T12:37:26Z",
		"href": "http://mattgemmell.com/2009/07/14/iphone-development-emergency-guide"
	},
	{
		"cluster": 15,
		"tags": [
			"sql",
			"database",
			"relational",
			"model",
			"mathematics",
			"computerscience",
			"programming",
			"nosql",
			"couchdb",
			"distributed",
			"objectstore",
			"orm"
		],
		"y": 2.350769635253646,
		"x": -2.5632610235373137,
		"extended": "",
		"description": "NoSQL and the Relational Model: don’t throw the baby out with the bathwater | matthewcode",
		"time": "2009-07-23T08:46:51Z",
		"href": "http://matthew.yumptious.com/2009/07/databases/nosql-and-the-relational-model-dont-throw-the-baby-out-with-the-bathwater/"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"development",
			"markup",
			"usability",
			"accessibility"
		],
		"y": 9.346809534515817,
		"x": 0.5357699136598354,
		"extended": "",
		"description": "WebAIM: WebAIM Quick Reference: Web Accessibility Principles",
		"time": "2009-07-22T13:46:33Z",
		"href": "http://webaim.org/resources/quickref/"
	},
	{
		"cluster": 4,
		"tags": [
			"jquery",
			"monads",
			"javascript",
			"functional",
			"programming",
			"haskell",
			"development"
		],
		"y": -4.986755451843176,
		"x": -7.048901538497126,
		"extended": "",
		"description": "jQuery is a Monad « Important Shock",
		"time": "2009-07-22T13:33:26Z",
		"href": "http://importantshock.wordpress.com/2009/01/18/jquery-is-a-monad/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"programming",
			"development",
			"web",
			"functional"
		],
		"y": 10.019660342035184,
		"x": -3.7339395743003894,
		"extended": "",
		"description": "Debouncing Javascript Methods | Unscriptable.com",
		"time": "2009-07-22T13:22:38Z",
		"href": "http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/"
	},
	{
		"cluster": 2,
		"tags": [
			"free",
			"ip",
			"geolocation",
			"api",
			"library",
			"networking",
			"geocoding",
			"database"
		],
		"y": -1.6530374405947732,
		"x": 4.758755112257301,
		"extended": "",
		"description": "MaxMind - GeoLite City | Free Geolocation Database",
		"time": "2009-07-22T07:41:45Z",
		"href": "http://www.maxmind.com/app/geolitecity"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"politics",
			"publicart",
			"culture",
			"criticism",
			"society",
			"theory",
			"aesthetics"
		],
		"y": -0.5702786832585202,
		"x": 13.228618413039102,
		"extended": "A default view may be that art in public places is simply the outcome of a succession of funding regimes designed to bring culture to a mass public (hence a public deemed by those responsible for the nation's taste to lack culture).\n",
		"description": "Mute magazine - Culture and politics after the net",
		"time": "2009-07-22T07:41:01Z",
		"href": "http://www.metamute.org/en/content/airing_dirty_laundry_in_public_art"
	},
	{
		"cluster": 3,
		"tags": [
			"amateur",
			"culture",
			"art",
			"criticism",
			"theory",
			"defaults",
			"aesthetics",
			"technology",
			"venacular",
			"authorship"
		],
		"y": -11.690654048663761,
		"x": 0.05091045215272943,
		"extended": "",
		"description": "Rhizome | After the Amateur: Notes",
		"time": "2009-07-22T07:26:51Z",
		"href": "http://www.rhizome.org/editorial/2566"
	},
	{
		"cluster": 2,
		"tags": [
			"graph",
			"database",
			"computerscience",
			"indexes",
			"algorithms",
			"b-trees",
			"performance",
			"optimisation",
			"datastructures",
			"trees",
			"sql"
		],
		"y": 2.1142280860987057,
		"x": -2.6250755375900163,
		"extended": "",
		"description": "How b-tree database indexes work and how to tell if they are efficient (100' level) | mattfleming.com",
		"time": "2009-07-22T07:24:45Z",
		"href": "http://mattfleming.com/node/192"
	},
	{
		"cluster": 1,
		"tags": [
			"creativity",
			"cognition",
			"computing",
			"art",
			"music",
			"psychology"
		],
		"y": -10.05947000262462,
		"x": 2.990184226130422,
		"extended": "",
		"description": "Questions of creativity « Alex McLean",
		"time": "2009-07-22T06:56:08Z",
		"href": "http://yaxu.org/questions-of-creativity/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"concurrency",
			"threading",
			"webworkers",
			"workers",
			"web",
			"development",
			"actors",
			"programming"
		],
		"y": 10.182607725467477,
		"x": -3.6735077414636583,
		"extended": "",
		"description": "John Resig - Computing with JavaScript Web Workers",
		"time": "2009-07-22T06:41:47Z",
		"href": "http://ejohn.org/blog/web-workers/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"decorators",
			"functional",
			"programming",
			"development"
		],
		"y": 6.641560991694741,
		"x": -9.43303276435002,
		"extended": "",
		"description": "Decorators In Ruby « Alexey Tarasevich's Blog",
		"time": "2009-07-21T22:23:33Z",
		"href": "http://tarasevich.wordpress.com/2009/07/15/decorators-in-ruby/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"promise",
			"programming",
			"AJAX",
			"web",
			"deferred",
			"monad",
			"maybe",
			"lazy",
			"functional"
		],
		"y": 10.346069443265378,
		"x": -4.00773285010192,
		"extended": "",
		"description": "swannodette's Promises at master - GitHub",
		"time": "2009-07-21T22:18:17Z",
		"href": "http://github.com/swannodette/Promises/tree/master"
	},
	{
		"cluster": 17,
		"tags": [
			"decorators",
			"python",
			"programming",
			"closures",
			"functional",
			"syntax",
			"macros"
		],
		"y": 2.427304961311794,
		"x": -7.010768040806769,
		"extended": "",
		"description": "Decorators I: Introduction to Python Decorators",
		"time": "2009-07-21T22:10:43Z",
		"href": "http://www.artima.com/weblogs/viewpost.jsp?thread=240808"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"wikipedia",
			"iprs",
			"internet",
			"law",
			"web",
			"nationalgallery"
		],
		"y": 6.242301736785323,
		"x": 2.7684200144026487,
		"extended": "",
		"description": "LawClanger",
		"time": "2009-07-21T21:04:40Z",
		"href": "http://lawclanger.blogspot.com/"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"wikipedia",
			"iprs",
			"internet",
			"law",
			"web",
			"nationalgallery",
			"contract",
			"art",
			"clickwrap",
			"licences"
		],
		"y": 6.255130292152101,
		"x": 2.761066611400899,
		"extended": "",
		"description": "TechnoLlama » National Portrait Gallery copyright row",
		"time": "2009-07-21T21:02:35Z",
		"href": "http://www.technollama.co.uk/national-portrait-gallery-copyright-row"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"wikipedia",
			"iprs",
			"internet",
			"law",
			"web",
			"nationalgallery"
		],
		"y": 6.250568889898782,
		"x": 2.7659851075597675,
		"extended": "",
		"description": "Francis Davey: National Portrait Gallery: photographs of paintings",
		"time": "2009-07-21T20:59:33Z",
		"href": "http://www.francisdavey.co.uk/2009/07/national-portrait-gallery-photographs.html"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"wikipedia",
			"iprs",
			"internet",
			"law",
			"web",
			"nationalgallery"
		],
		"y": 6.242742054051884,
		"x": 2.76821409845147,
		"extended": "",
		"description": "NEWSgrist - where spin is art: God Save the Queen! Long Live the Public Domain!",
		"time": "2009-07-21T20:53:04Z",
		"href": "http://newsgrist.typepad.com/underbelly/2009/07/viahttpcommonswikimediaorgwikifileelizabeth_i_in_coronation_robesjpgvia-the-independentdrawing-up-battle-lines.html"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"wikipedia",
			"iprs",
			"internet",
			"law",
			"web",
			"nationalgallery"
		],
		"y": 6.242645991490966,
		"x": 2.7682093018229685,
		"extended": "",
		"description": "The Open Rights Group : Blog Archive » National Portrait Gallery vs Wikipedia",
		"time": "2009-07-21T20:51:46Z",
		"href": "http://www.openrightsgroup.org/2009/07/national-portrait-gallery-vs-wikipedia/"
	},
	{
		"cluster": 7,
		"tags": [
			"rack",
			"rest",
			"framework",
			"ruby",
			"api",
			"library",
			"gem",
			"programming",
			"web",
			"development"
		],
		"y": 8.889686965112793,
		"x": -9.018479943078841,
		"extended": "",
		"description": "mjwillson's rest_on_rack at master - GitHub",
		"time": "2009-07-21T15:45:42Z",
		"href": "http://github.com/mjwillson/rest_on_rack/tree/master"
	},
	{
		"cluster": 11,
		"tags": [
			"mac",
			"osx",
			"tcpflow",
			"gotcha",
			"security",
			"networking",
			"tools",
			"unix"
		],
		"y": -2.981387976275236,
		"x": 6.0174459757980125,
		"extended": "sudo tcpdump -s 0 -A -i en0 port 80\n",
		"description": "Information Gift: tcpflow for MacIntel",
		"time": "2009-07-21T15:45:16Z",
		"href": "http://informationgift.com/2007/03/tcpflow_for_macintel.html"
	},
	{
		"cluster": 12,
		"tags": [
			"webapp",
			"xss",
			"javascript",
			"AJAX",
			"security",
			"http",
			"web",
			"development"
		],
		"y": 10.517913998745962,
		"x": -2.0173877994722824,
		"extended": "Access-Control-Allow-Headers:\n",
		"description": "Cross Domain XHR in FireFox 3 5 with jQuery and Preflighted requests",
		"time": "2009-07-21T14:41:41Z",
		"href": "http://www.houseoffusion.com/groups/cf-talk/thread.cfm/threadid:59715"
	},
	{
		"cluster": 12,
		"tags": [
			"mozilla",
			"xss",
			"AJAX",
			"http",
			"request",
			"access",
			"control",
			"security",
			"web",
			"development"
		],
		"y": 10.532909051498418,
		"x": -1.89784514809418,
		"extended": "",
		"description": "HTTP access control - MDC",
		"time": "2009-07-21T14:41:09Z",
		"href": "https://developer.mozilla.org/En/HTTP_access_control#Access-Control-Allow-Origin"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rack",
			"http",
			"rest",
			"library",
			"web",
			"development",
			"programming"
		],
		"y": 8.871890826973322,
		"x": -8.80572205106616,
		"extended": "",
		"description": "Make any Ruby object Rack-friendly with Rackable",
		"time": "2009-07-21T10:46:51Z",
		"href": "http://www.rubyinside.com/make-any-ruby-object-rack-friendly-with-rackable-2088.html"
	},
	{
		"cluster": 10,
		"tags": [
			"iran",
			"history",
			"politics",
			"war",
			"islam",
			"coflict",
			"middleast",
			"amis",
			"culture"
		],
		"y": 0.9418321939470387,
		"x": 10.621666568580283,
		"extended": "",
		"description": "Martin Amis on the beginning of the end for Iran's ayatollahs | World news | The Guardian",
		"time": "2009-07-17T08:57:45Z",
		"href": "http://www.guardian.co.uk/world/2009/jul/17/martin-amis-iran"
	},
	{
		"cluster": 1,
		"tags": [
			"dorkbot",
			"bbc",
			"video",
			"london",
			"art",
			"technology",
			"electricity"
		],
		"y": -11.058265258517942,
		"x": -0.10022515778539727,
		"extended": "",
		"description": "BBC NEWS | Technology | Tech Know - The power and the dorky",
		"time": "2009-07-17T06:02:24Z",
		"href": "http://news.bbc.co.uk/1/hi/technology/8125259.stm"
	},
	{
		"cluster": 2,
		"tags": [
			"finder",
			"osx",
			"terminal",
			"path",
			"tip",
			"help",
			"shortccut"
		],
		"y": -3.0386793630813957,
		"x": 6.735172894505473,
		"extended": "",
		"description": "Jump to path in OS X finder « Ramblings",
		"time": "2009-07-17T05:41:21Z",
		"href": "http://michaelangela.wordpress.com/2008/04/24/jump-to-path-in-os-x-finder/"
	},
	{
		"cluster": 3,
		"tags": [
			"performance",
			"art",
			"macayo",
			"behaviour",
			"criticism",
			"theory",
			"culture",
			"oneandother"
		],
		"y": -11.679895445699172,
		"x": 2.927656598807885,
		"extended": "",
		"description": "Art Fag City » We’re All Performance Artists Now",
		"time": "2009-07-16T21:06:29Z",
		"href": "http://www.artfagcity.com/2009/07/16/were-all-performance-artists-now/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"ruby",
			"web",
			"development",
			"library",
			"less",
			"plugin",
			"gem",
			"rails",
			"markup"
		],
		"y": 9.951365908991018,
		"x": -8.10618568244813,
		"extended": "",
		"description": "LESS - Leaner CSS",
		"time": "2009-07-16T11:47:21Z",
		"href": "http://lesscss.org/"
	},
	{
		"cluster": 2,
		"tags": [
			"computing",
			"history",
			"video",
			"documentary"
		],
		"y": -2.3391571564729663,
		"x": 6.002270119511201,
		"extended": "",
		"description": "The Machine that Changed the World | CosmoLearning Computer Science",
		"time": "2009-07-16T07:16:10Z",
		"href": "http://www.cosmolearning.com/computer-science/documentaries/the-machine-that-changed-the-world/"
	},
	{
		"cluster": 9,
		"tags": [
			"bash",
			"linux",
			"cheatsheet",
			"referenceh",
			"terminal",
			"shotcuts",
			"sysadmin",
			"commands",
			"tips",
			"shell"
		],
		"y": -5.968501754035244,
		"x": 2.91813222110138,
		"extended": "",
		"description": "Mastering The Linux Shell - Bash Shortcuts Explained (Now With Cheat Sheets) | beer planet",
		"time": "2009-07-16T07:15:06Z",
		"href": "http://beerpla.net/2008/12/22/mastering-the-linux-shell-bash-shortcuts-explained/"
	},
	{
		"cluster": 12,
		"tags": [
			"sql",
			"database",
			"persistence",
			"performance",
			"architecture",
			"distributed",
			"web",
			"technology",
			"development",
			"scaling"
		],
		"y": 3.50038738490747,
		"x": -1.9420817015962026,
		"extended": "",
		"description": "Nati Shalom's Blog: No to SQL? Anti-database movement gains steam My Take",
		"time": "2009-07-15T16:07:56Z",
		"href": "http://natishalom.typepad.com/nati_shaloms_blog/2009/07/no-to-sql-anti-database-movement-gains-steam-my-take.html"
	},
	{
		"cluster": 2,
		"tags": [
			"police",
			"photography",
			"advice",
			"london",
			"law",
			"rights",
			"photo"
		],
		"y": -1.2583837251219194,
		"x": 6.460354662491174,
		"extended": "",
		"description": "Metropolitan Police Service - About the Met - Photography advice",
		"time": "2009-07-14T16:58:18Z",
		"href": "http://www.met.police.uk/about/photography.htm"
	},
	{
		"cluster": 7,
		"tags": [
			"rspec",
			"mixins",
			"ruby",
			"bdd",
			"tdd",
			"testing",
			"development",
			"programming",
			"inheritance"
		],
		"y": 8.126569496801904,
		"x": -5.07566079188812,
		"extended": "",
		"description": "[rspec-users] Specifying mixins",
		"time": "2009-07-14T15:07:05Z",
		"href": "http://www.mail-archive.com/rspec-users@rubyforge.org/msg02057.html"
	},
	{
		"cluster": 8,
		"tags": [
			"oneandother",
			"art",
			"performance",
			"gormley",
			"internet",
			"communication",
			"twitter"
		],
		"y": -9.617602052310083,
		"x": 0.897535850209998,
		"extended": "",
		"description": "Fourth Plinth | Furtherfield Blog",
		"time": "2009-07-13T11:18:44Z",
		"href": "http://blog.furtherfield.org/?q=node/285"
	},
	{
		"cluster": 9,
		"tags": [
			"mySQL",
			"database",
			"tip",
			"csv",
			"report",
			"linux",
			"admin",
			"export"
		],
		"y": -4.687518575595804,
		"x": 4.861593669551716,
		"extended": "",
		"description": "Export from MySQL to CSV | Townsville Linux Users Group",
		"time": "2009-07-13T09:40:41Z",
		"href": "http://tlug.dnho.net/?q=node/209"
	},
	{
		"cluster": 2,
		"tags": [
			"enuroscience",
			"brain",
			"chaos",
			"probability",
			"stochastics",
			"intelligence",
			"biology",
			"health"
		],
		"y": -1.765794319596047,
		"x": 4.485630822918457,
		"extended": "",
		"description": "Disorderly genius: How chaos drives the brain - life - 29 June 2009 - New Scientist",
		"time": "2009-07-10T06:46:56Z",
		"href": "http://www.newscientist.com/article/mg20227141.200-disorderly-genius-how-chaos-drives-the-brain.html?full=true"
	},
	{
		"cluster": 8,
		"tags": [
			"webhooks",
			"asynchronous",
			"mesaging",
			"internet",
			"architecture",
			"pubsu",
			"pubsubhubbub",
			"xmpp",
			"activeMQ"
		],
		"y": -3.797350414683913,
		"x": 3.4275108119117395,
		"extended": "",
		"description": "HTTP PubSub: Webhooks & PubSubHubbub - igvita.com",
		"time": "2009-07-10T05:26:11Z",
		"href": "http://www.igvita.com/2009/06/29/http-pubsub-webhooks-pubsubhubbub/"
	},
	{
		"cluster": 2,
		"tags": [
			"git",
			"scm",
			"vcs",
			"dvcs",
			"merge",
			"rebase",
			"development"
		],
		"y": 7.063685033908484,
		"x": 0.40232497409772394,
		"extended": "",
		"description": "experimentalworks » Blog Archive » Merge vs. Rebase – A deep dive into the mysteries of revision control",
		"time": "2009-07-10T05:18:09Z",
		"href": "http://blog.experimentalworks.net/2009/03/merge-vs-rebase-a-deep-dive-into-the-mysteries-of-revision-control/"
	},
	{
		"cluster": 13,
		"tags": [
			"jsmill",
			"philosophy",
			"politics",
			"economics",
			"left",
			"socialism",
			"liberalism"
		],
		"y": 5.432540668501734,
		"x": 8.204263192849583,
		"extended": "",
		"description": "New Statesman - Power to the people",
		"time": "2009-07-10T05:12:51Z",
		"href": "http://www.newstatesman.com/books/2009/07/state-mill-labour-british"
	},
	{
		"cluster": 7,
		"tags": [
			"haskell",
			"music",
			"programming",
			"development",
			"synthesis"
		],
		"y": -4.790724638958484,
		"x": -6.510752923868435,
		"extended": "",
		"description": "Synthesizer - HaskellWiki",
		"time": "2009-07-09T16:49:33Z",
		"href": "http://www.haskell.org/haskellwiki/Synthesizer"
	},
	{
		"cluster": 10,
		"tags": [
			"stonewall",
			"politics",
			"gay",
			"queer",
			"equality",
			"lgbt",
			"news"
		],
		"y": 3.5995747379450767,
		"x": 8.609825728729948,
		"extended": "",
		"description": "Our lost gay radicalism | Peter Tatchell | Comment is free | The Guardian",
		"time": "2009-07-09T16:48:34Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jun/26/gay-lgbt-victimhood-stonewall"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"development",
			"algorithms",
			"functional"
		],
		"y": -4.962947737244802,
		"x": -7.369496355224217,
		"extended": "",
		"description": "decorate-sort-undecorate in Haskell « absolute regularity",
		"time": "2009-07-09T16:48:15Z",
		"href": "http://llaisdy.wordpress.com/2009/06/24/decorate-sort-undecorate-in-haskell/"
	},
	{
		"cluster": 4,
		"tags": [
			"monad",
			"haskell",
			"functional",
			"video",
			"programming",
			"development"
		],
		"y": -5.077243854598561,
		"x": -7.933977722652207,
		"extended": "",
		"description": "Brian Beckman: Don't fear the Monads | Going Deep | Channel 9",
		"time": "2009-07-09T16:47:54Z",
		"href": "http://channel9.msdn.com/shows/Going+Deep/Brian-Beckman-Dont-fear-the-Monads/"
	},
	{
		"cluster": 17,
		"tags": [
			"git",
			"scm",
			"vcs",
			"developmetn",
			"programming",
			"subtree",
			"submodule"
		],
		"y": 6.868184969005649,
		"x": 0.35181014485239187,
		"extended": "",
		"description": "apenwarr - Business is Programming",
		"time": "2009-07-09T16:47:09Z",
		"href": "http://alumnit.ca/~apenwarr/log/?m=200904#30"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"culture",
			"media",
			"literature",
			"translation",
			"language"
		],
		"y": -0.07051806275676384,
		"x": 8.971207860664727,
		"extended": "",
		"description": "How the Market Influences What Language You Read In - Freakonomics Blog - NYTimes.com",
		"time": "2009-07-09T16:23:19Z",
		"href": "http://freakonomics.blogs.nytimes.com/2009/07/02/how-the-market-influences-what-language-you-read-in/"
	},
	{
		"cluster": 4,
		"tags": [
			"football",
			"haskell",
			"functional",
			"dsl",
			"education",
			"teaching",
			"programming",
			"computerscience"
		],
		"y": -6.381465584573728,
		"x": -9.319038092866785,
		"extended": "",
		"description": "Soccer-Fun: Teaching Functional Programming | Lambda the Ultimate",
		"time": "2009-07-09T16:18:35Z",
		"href": "http://lambda-the-ultimate.org/node/3483"
	},
	{
		"cluster": 13,
		"tags": [
			"privacy",
			"computing",
			"politics",
			"freedom",
			"p2p",
			"technolgoy",
			"trust",
			"economics",
			"internet",
			"open",
			"standards"
		],
		"y": 8.448329409474178,
		"x": 8.851300312254866,
		"extended": "",
		"description": "Advogato: Sovereign Computing",
		"time": "2009-07-09T12:30:24Z",
		"href": "http://www.advogato.org/article/808.html"
	},
	{
		"cluster": 2,
		"tags": [
			"trends",
			"socialmedia",
			"js",
			"graphing",
			"prototype",
			"bbc",
			"tv",
			"marketing",
			"radio"
		],
		"y": -5.621899916268977,
		"x": 6.982920466162385,
		"extended": "",
		"description": "Shownar",
		"time": "2009-07-08T15:25:01Z",
		"href": "http://www.shownar.com/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"selfportrait",
			"technology",
			"machine",
			"process",
			"perception",
			"automation",
			"drawing"
		],
		"y": -10.597157609247281,
		"x": -0.2796607693505645,
		"extended": "",
		"description": "Self-Portrait Machine - we make money not art",
		"time": "2009-07-07T20:55:37Z",
		"href": "http://www.we-make-money-not-art.com/archives/2009/07/selfportrait-machine.php"
	},
	{
		"cluster": 18,
		"tags": [
			"design",
			"development",
			"programming",
			"process",
			"software",
			"architecture",
			"ux"
		],
		"y": 6.02418153003065,
		"x": -5.399983159939953,
		"extended": "",
		"description": "bitquabit - The One in Which I Call Out Hacker News",
		"time": "2009-07-07T12:21:24Z",
		"href": "http://blog.bitquabit.com/2009/07/01/one-which-i-call-out-hacker-news/"
	},
	{
		"cluster": 14,
		"tags": [
			"ux",
			"design",
			"development",
			"processes",
			"software",
			"agile"
		],
		"y": 6.162080938017702,
		"x": -5.108251483183884,
		"extended": "",
		"description": "Front to back » Blog Archive » Completed UX project: Desktop design tool for antenna engineers",
		"time": "2009-07-07T12:20:16Z",
		"href": "http://fronttoback.org/2009/07/03/completed-ux-project-desktop-design-tool-for-antenna-engineers/"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"fashion",
			"economics",
			"palestine",
			"middleeast"
		],
		"y": 8.358964908249009,
		"x": 8.889536437220965,
		"extended": "",
		"description": "Your Intifada: Now Made in China! | Mother Jones",
		"time": "2009-07-07T07:56:12Z",
		"href": "http://www.motherjones.com/riff/2009/06/your-intifada-made-china"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"browser",
			"viewport",
			"reference",
			"web",
			"development",
			"dimensions"
		],
		"y": 10.570334589949214,
		"x": -2.7181722972077624,
		"extended": "",
		"description": "Get viewport size (width and height) with javascript - Javascript - Blog / Andy Langton's Website",
		"time": "2009-06-29T14:55:01Z",
		"href": "http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/"
	},
	{
		"cluster": 8,
		"tags": [
			"twitter",
			"sociology",
			"socialmedia",
			"theory",
			"media",
			"software",
			"technology",
			"internet",
			"social"
		],
		"y": 4.412792940472519,
		"x": 3.3036703345778182,
		"extended": "",
		"description": "Twitter FAQ for Sociologists… « Community. Identity. Stability.",
		"time": "2009-06-29T14:38:17Z",
		"href": "http://charlenecroft.wordpress.com/2009/06/15/twitter-faq-for-sociologists/"
	},
	{
		"cluster": 8,
		"tags": [
			"technology",
			"economics",
			"business",
			"internet",
			"journalism",
			"media",
			"social"
		],
		"y": 4.988072181502533,
		"x": 4.230072729517554,
		"extended": "",
		"description": "Saturday Post: If You Are In The Path Of A Disruptive Technology You Are Toast - Goodbye Newspaper Companies - SiliconValleyWatcher",
		"time": "2009-06-29T10:53:42Z",
		"href": "http://www.siliconvalleywatcher.com/mt/archives/2009/06/saturday_post_i.php"
	},
	{
		"cluster": 1,
		"tags": [
			"goldsmiths",
			"interactive",
			"media",
			"art",
			"exhibition",
			"technology"
		],
		"y": -11.174223626878524,
		"x": -0.20902440790722907,
		"extended": "",
		"description": "MAIM EXPO 2009 | Goldsmiths",
		"time": "2009-06-29T09:04:14Z",
		"href": "http://wordpress.imiant.org.uk/expo2009/"
	},
	{
		"cluster": 10,
		"tags": [
			"libdems",
			"politics",
			"parliament",
			"society"
		],
		"y": 3.699474453462672,
		"x": 11.108778123605935,
		"extended": "",
		"description": "FT.com / Comment / Editorial - The third wheel",
		"time": "2009-06-29T09:03:38Z",
		"href": "http://www.ft.com/cms/s/0/4de77f4a-60f2-11de-aa12-00144feabdc0.html?nclick_check=1"
	},
	{
		"cluster": 1,
		"tags": [
			"grandad",
			"nigelwalters",
			"rothschild",
			"obituary",
			"craft",
			"art",
			"culture"
		],
		"y": -10.25170489115636,
		"x": 2.255445529189326,
		"extended": "",
		"description": "Obituary: Henry Rothschild | Life and style | The Guardian",
		"time": "2009-06-29T09:02:17Z",
		"href": "http://www.guardian.co.uk/artanddesign/2009/jun/10/obituary-henry-rothschild"
	},
	{
		"cluster": 2,
		"tags": [
			"javascript",
			"regularexpression",
			"regexp",
			"library"
		],
		"y": -2.3761962517715176,
		"x": 4.485229769805332,
		"extended": "",
		"description": "XRegExp: JavaScript regex library",
		"time": "2009-06-24T08:51:46Z",
		"href": "http://xregexp.com/"
	},
	{
		"cluster": 2,
		"tags": [
			"socialmedia",
			"twitter",
			"communities",
			"social",
			"reallife"
		],
		"y": -0.11006644835732676,
		"x": 5.805793110669312,
		"extended": "",
		"description": "Putting The “Social” Back Into Social Media Tasting Sessions - PSFK.com",
		"time": "2009-06-24T06:57:43Z",
		"href": "http://www.psfk.com/2009/06/putting-the-social-back-into-social-media-tasting-sessions.html"
	},
	{
		"cluster": 6,
		"tags": [
			"music",
			"technology",
			"internet",
			"p2p",
			"filesharing",
			"politics",
			"copyright",
			"economics"
		],
		"y": 5.2527634201910915,
		"x": 5.459858409679792,
		"extended": "",
		"description": "Response: Free downloads damage Britain's musical diversity and creativity | Comment is free | The Guardian",
		"time": "2009-06-24T06:57:17Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jun/24/response-free-downloades"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"dsl",
			"sexpression",
			"lisp",
			"programming",
			"computerscience",
			"patternmatching"
		],
		"y": 3.8930175097014486,
		"x": -11.192616801812894,
		"extended": "",
		"description": "SexpPath « End of Line",
		"time": "2009-06-24T06:54:16Z",
		"href": "http://endofline.wordpress.com/2009/06/22/sexp_path/"
	},
	{
		"cluster": 10,
		"tags": [
			"Participation",
			"crowdsourcing",
			"socialmedia",
			"journalism",
			"politics",
			"social",
			"mpexpenses"
		],
		"y": 5.875775035326086,
		"x": 11.324463268670925,
		"extended": "",
		"description": "Four crowdsourcing lessons from the Guardian’s (spectacular) expenses-scandal experiment » Nieman Journalism Lab",
		"time": "2009-06-24T06:53:27Z",
		"href": "http://www.niemanlab.org/2009/06/four-crowdsourcing-lessons-from-the-guardians-spectacular-expenses-scandal-experiment/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"philosophy",
			"freedom",
			"islam",
			"women"
		],
		"y": 5.485109641899028,
		"x": 12.467674532080776,
		"extended": "",
		"description": "Brush up your Hegel, Sarko | Stuart Jeffries | Comment is free | The Guardian",
		"time": "2009-06-24T06:46:52Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jun/23/sarkozy-burka-french-parliament"
	},
	{
		"cluster": 12,
		"tags": [
			"rest",
			"rails",
			"architecture",
			"web",
			"development",
			"programming"
		],
		"y": 9.575452071543333,
		"x": -6.683395423125358,
		"extended": "",
		"description": "The Rails Way: Taking Things Too Far: REST",
		"time": "2009-06-24T06:46:31Z",
		"href": "http://www.therailsway.com/2009/6/22/taking-things-too-far-rest"
	},
	{
		"cluster": 15,
		"tags": [
			"programming",
			"life",
			"mathematics",
			"distance",
			"culture",
			"optimisation",
			"psychology",
			"efficiency"
		],
		"y": -6.621084621546603,
		"x": 8.14736429487432,
		"extended": "",
		"description": "Do Programmers Optimize... Life?",
		"time": "2009-06-24T06:46:03Z",
		"href": "http://www.cforcoding.com/2009/06/do-programmers-optimize-life.html"
	},
	{
		"cluster": 2,
		"tags": [
			"rails",
			"voice",
			"telephony",
			"ruby",
			"api",
			"library"
		],
		"y": 0.6843041368269912,
		"x": -3.0564824428626594,
		"extended": "",
		"description": "Hello, This is Your Rails App Calling You | Webficient",
		"time": "2009-06-24T06:45:40Z",
		"href": "http://www.webficient.com/2009/06/22/hello-this-is-your-rails-app-calling-you"
	},
	{
		"cluster": 2,
		"tags": [
			"Deafness",
			"perception",
			"neurology",
			"psychology"
		],
		"y": -1.6449095139290346,
		"x": 3.2063315976959954,
		"extended": "",
		"description": "Exploring the perceptual characteristics of voice-hallucinations in deaf people - Cognitive Neuropsychiatry",
		"time": "2009-06-22T16:38:57Z",
		"href": "http://www.informaworld.com/smpp/content~db=all?content=10.1080/13546800701238229"
	},
	{
		"cluster": 10,
		"tags": [
			"business",
			"politics",
			"socialmedia",
			"reform",
			"society",
			"communication",
			"media",
			"policy",
			"social",
			"technology"
		],
		"y": 3.0558409012050496,
		"x": 13.252968008148148,
		"extended": "",
		"description": "Lee Bryant: People power can reboot Britain - Commentators, Opinion - The Independent",
		"time": "2009-06-22T13:56:05Z",
		"href": "http://www.independent.co.uk/opinion/commentators/lee-bryant-people-power-can-reboot-britain-1713007.html"
	},
	{
		"cluster": 10,
		"tags": [
			"iran",
			"news",
			"politics",
			"media",
			"twitter",
			"socialmedia",
			"social",
			"blogging",
			"protest"
		],
		"y": 0.21476961019583074,
		"x": 6.054356308587464,
		"extended": "",
		"description": "NEWSgrist - where spin is art: Gaurav Mishra on The Irony of Iran’s ‘Twitter Revolution’",
		"time": "2009-06-22T08:42:37Z",
		"href": "http://newsgrist.typepad.com/underbelly/2009/06/glo_title.html"
	},
	{
		"cluster": 6,
		"tags": [
			"lessig",
			"economics",
			"socialism",
			"kevinkelly",
			"smackdown",
			"politics",
			"culture",
			"copyright",
			"internet",
			"freedom"
		],
		"y": 5.075532050942664,
		"x": 6.3348170513894475,
		"extended": "",
		"description": "Et tu, KK? (aka, No, Kevin, this is not \"socialism\") (Lessig Blog)",
		"time": "2009-06-19T11:36:43Z",
		"href": "http://www.lessig.org/blog/2009/05/et_tu_kk_aka_no_kevin_this_is.html"
	},
	{
		"cluster": 11,
		"tags": [
			"mac",
			"osx",
			"terminal",
			"utility",
			"finder"
		],
		"y": -3.0714145280452247,
		"x": 6.713170465996409,
		"extended": "",
		"description": "Enhanced Open Terminal Here, for Leopard at Maururu",
		"time": "2009-06-18T16:41:55Z",
		"href": "http://maururu.net/2007/enhanced-open-terminal-here-for-leopard/"
	},
	{
		"cluster": 15,
		"tags": [
			"computation",
			"theory",
			"computerscience",
			"mathematics",
			"introduction",
			"tutorial",
			"learning",
			"complexity"
		],
		"y": -1.5062310300713886,
		"x": -12.912192974522705,
		"extended": "",
		"description": "Introduction to Computation Theory - Part One — Paper Trail",
		"time": "2009-06-18T13:33:12Z",
		"href": "http://hnr.dnsalias.net/wordpress/2009/06/introduction-to-computation-theory-part-one/"
	},
	{
		"cluster": 15,
		"tags": [
			"GEB",
			"course",
			"godel",
			"escher",
			"bach",
			"philosophy",
			"mathematics",
			"computerscience",
			"learning",
			"video",
			"lecture",
			"it"
		],
		"y": -0.9416446911115687,
		"x": -12.41283794522366,
		"extended": "",
		"description": "Free Online Course Materials | Godel, Escher, Bach: A Mental Space Odyssey | Highlights for High School",
		"time": "2009-06-18T13:32:48Z",
		"href": "http://ocw.mit.edu/OcwWeb/hs/geb/VideoLectures/"
	},
	{
		"cluster": 2,
		"tags": [
			"helenfisher",
			"love",
			"relationships",
			"anthropology",
			"sociology",
			"ssris",
			"mentalhealth"
		],
		"y": -3.6522206490283766,
		"x": 6.10150344675337,
		"extended": "",
		"description": "Articles by Helen Fisher",
		"time": "2009-06-18T13:31:55Z",
		"href": "http://www.helenfisher.com/articles.html"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"vertical-align",
			"web",
			"design",
			"development"
		],
		"y": 10.34268682430584,
		"x": 0.5318682107969308,
		"extended": "",
		"description": "Understanding vertical-align, or \"How (Not) To Vertically Center Content\"",
		"time": "2009-06-18T13:31:29Z",
		"href": "http://phrogz.net/CSS/vertical-align/index.html"
	},
	{
		"cluster": 8,
		"tags": [
			"iphone",
			"tether",
			"02",
			"hack",
			"apple",
			"laptop",
			"internet",
			"connectivity"
		],
		"y": -4.356240713888019,
		"x": 4.369142495782085,
		"extended": "",
		"description": "Enable tethering on iPhone 3.0 - Too easy... (WORLDWIDE carriers) | richardlai's Xanga Site - Weblog",
		"time": "2009-06-18T13:31:13Z",
		"href": "http://richardlai.xanga.com/704930537/enable-tethering-on-iphone-30---too-easy-worldwide-carriers/"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"history",
			"culture",
			"society",
			"law",
			"internet",
			"technology"
		],
		"y": -8.43903170116918,
		"x": 2.3196475218144625,
		"extended": "",
		"description": "The Surprising History of Copyright and The Promise of a Post-Copyright World | QuestionCopyright.org | eyebeam.org",
		"time": "2009-06-15T09:20:19Z",
		"href": "http://eyebeam.org/reblog/09-06-07/the-surprising-history-of-copyright-and-the-promise-of-a-post-copyright-world-questi"
	},
	{
		"cluster": 1,
		"tags": [
			"video",
			"art",
			"installation"
		],
		"y": -10.103050514372185,
		"x": 0.32012402603574125,
		"extended": "",
		"description": "DVblog » Rafael Lozano-Hemmer: 1993-2007 Compilation",
		"time": "2009-06-15T09:19:35Z",
		"href": "http://dvblog.org/?p=3645"
	},
	{
		"cluster": 4,
		"tags": [
			"monad",
			"haskell",
			"functional",
			"programming",
			"computerscience",
			"mathemtics"
		],
		"y": -5.436401011976979,
		"x": -9.654923546585026,
		"extended": "",
		"description": "Functors and Monads (containers) « The Snoyblog",
		"time": "2009-06-15T09:19:17Z",
		"href": "http://blog.snoyman.com/2009/06/02/functors-and-monads-containers/"
	},
	{
		"cluster": 8,
		"tags": [
			"mtaa",
			"art",
			"installation",
			"technology",
			"internet"
		],
		"y": -10.345655364602006,
		"x": -0.0007601721552921065,
		"extended": "",
		"description": "MTAA-RR [ news/twhid/data_center_as_art_and_architecture.html ]",
		"time": "2009-06-15T09:18:37Z",
		"href": "http://www.mtaa.net/mtaaRR/news/twhid/data_center_as_art_and_architecture.html"
	},
	{
		"cluster": 15,
		"tags": [
			"algorithms",
			"computerscience",
			"learning",
			"education",
			"mathematics",
			"computation"
		],
		"y": -0.6046694251478509,
		"x": -12.586686644408275,
		"extended": "",
		"description": "CS 3510X (Honors Algorithms), Spring 2006",
		"time": "2009-06-15T09:17:27Z",
		"href": "http://people.math.gatech.edu/~randall/algs06.html"
	},
	{
		"cluster": 2,
		"tags": [
			"database",
			"ruby",
			"persistence",
			"mongo",
			"relational",
			"object",
			"store",
			"document"
		],
		"y": 2.2454612894975696,
		"x": -0.36218860476332876,
		"extended": "",
		"description": "What If A Key/Value Store Mated With A Relational Database System? // RailsTips by John Nunemaker",
		"time": "2009-06-15T08:56:00Z",
		"href": "http://railstips.org/2009/6/3/what-if-a-key-value-store-mated-with-a-relational-database-system"
	},
	{
		"cluster": 17,
		"tags": [
			"orm",
			"mySQL",
			"database",
			"relational",
			"oop",
			"programming"
		],
		"y": 3.064430668566775,
		"x": -2.102351585901974,
		"extended": "",
		"description": "In laymen terms why would I want to use sqlalchemy or any other sort of ORM as apposed to doing straight SQL queries? : programming",
		"time": "2009-06-05T07:50:52Z",
		"href": "http://www.reddit.com/r/programming/comments/8p7j0/in_laymen_terms_why_would_i_want_to_use/"
	},
	{
		"cluster": 17,
		"tags": [
			"emacs",
			"editing",
			"tips",
			"programming"
		],
		"y": 8.367626113093637,
		"x": -3.223137083675171,
		"extended": "",
		"description": "What emacs commands to use to browse around a large code base : programming",
		"time": "2009-06-05T07:50:30Z",
		"href": "http://www.reddit.com/r/programming/comments/8pjwf/what_emacs_commands_to_use_to_browse_around_a/"
	},
	{
		"cluster": 3,
		"tags": [
			"internet",
			"politics",
			"economics",
			"socialism",
			"marxism",
			"criticism",
			"technology",
			"culture"
		],
		"y": 4.040271686513994,
		"x": 11.27857505606186,
		"extended": "",
		"description": "Rhizome | Wired Misses the Marx",
		"time": "2009-06-05T07:48:40Z",
		"href": "http://rhizome.org/editorial/2675"
	},
	{
		"cluster": 15,
		"tags": [
			"sensation",
			"mathematics",
			"AI",
			"geometry",
			"neutalnetworks",
			"highdimensionalspaces",
			"computation",
			"perception"
		],
		"y": -6.244681215029708,
		"x": -2.691241166904827,
		"extended": "",
		"description": "Sensation, perception and computation « Alex McLean",
		"time": "2009-06-04T12:55:50Z",
		"href": "http://yaxu.org/sensation-perception-computation/"
	},
	{
		"cluster": 15,
		"tags": [
			"music",
			"rhythm",
			"echonest",
			"audio",
			"mathematics",
			"computation",
			"programming"
		],
		"y": -5.636172188186552,
		"x": -5.703933899657924,
		"extended": "",
		"description": "strange things/cosas raras » Archives » rotational energy",
		"time": "2009-06-04T12:54:25Z",
		"href": "http://music.columbia.edu/~douglas/strange_things/?p=78"
	},
	{
		"cluster": 1,
		"tags": [
			"namjunepaik",
			"art",
			"history",
			"sculpture",
			"video"
		],
		"y": -8.192927275600201,
		"x": 0.8494719457662294,
		"extended": "",
		"description": "Rhizome | The Cybernetic Pioneer of Video Art: Nam June Paik",
		"time": "2009-05-31T11:40:49Z",
		"href": "http://rhizome.org/editorial/2586"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"epistemology",
			"ontology",
			"subjectivism",
			"philosophy",
			"criticism"
		],
		"y": -4.160958285867927,
		"x": 2.832050585617789,
		"extended": "",
		"description": "Jon Hung » Blog Archive » are you being subjective?",
		"time": "2009-05-31T11:38:34Z",
		"href": "http://jonhung.com/blog/?p=577"
	},
	{
		"cluster": 8,
		"tags": [
			"wikipedia",
			"art",
			"guide",
			"tutorial",
			"wiki",
			"internet",
			"social",
			"media"
		],
		"y": -9.707048394250775,
		"x": 0.5078397124352934,
		"extended": "",
		"description": "furtherfield review - An Artist's Guide for Editing Wikipedia",
		"time": "2009-05-31T11:26:36Z",
		"href": "http://www.furtherfield.org/displayreview.php?review_id=350"
	},
	{
		"cluster": 14,
		"tags": [
			"programming",
			"education",
			"pedagogy",
			"art",
			"design",
			"creativity",
			"code",
			"computing"
		],
		"y": -6.273222755888303,
		"x": -6.057774588312161,
		"extended": "",
		"description": "The Creative Act of Coding: A Conversation with Ian Curry — School of Visual Arts — MFA in Interaction Design",
		"time": "2009-05-31T11:25:25Z",
		"href": "http://interactiondesign.sva.edu/blog/entry/the_creative_act_of_coding/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"social",
			"media",
			"collectivism",
			"individualism",
			"mcluhan",
			"editorial",
			"production",
			"distribution",
			"psychology",
			"society",
			"culture"
		],
		"y": 0.8367177577826135,
		"x": 12.509438512855265,
		"extended": "",
		"description": "Enterprise 2.0 Blog » Blog Archive » The Unsociable, Radically-Individualist Soul of Social Media",
		"time": "2009-05-31T11:18:26Z",
		"href": "http://enterprise2blog.com/2009/02/the-unsociable-radically-individualist-soul-of-social-media/"
	},
	{
		"cluster": 3,
		"tags": [
			"curation",
			"art",
			"culture",
			"floss",
			"production",
			"politics",
			"society",
			"opensource"
		],
		"y": 0.21217996066269545,
		"x": 12.873106123193008,
		"extended": "",
		"description": "Positions in Flux - Panel 3: Open Source - A scheme for art production and curating? - we make money not art",
		"time": "2009-05-31T11:12:16Z",
		"href": "http://www.we-make-money-not-art.com/archives/2009/05/positions-in-flux-panel-3-open.php"
	},
	{
		"cluster": 3,
		"tags": [
			"criticism",
			"culture",
			"venacular",
			"amateur",
			"photography",
			"film",
			"society",
			"art"
		],
		"y": -9.35331821722789,
		"x": 1.3110754796157174,
		"extended": "",
		"description": "Rhizome | After the Amateur: Notes",
		"time": "2009-05-31T11:05:54Z",
		"href": "http://rhizome.org/editorial/2566"
	},
	{
		"cluster": 10,
		"tags": [
			"art",
			"publicart",
			"society",
			"politics"
		],
		"y": 1.9229893404480152,
		"x": 12.359917029104395,
		"extended": "",
		"description": "Frieze Magazine | Archive | The Art of the Matter",
		"time": "2009-05-31T10:59:55Z",
		"href": "http://www.frieze.com/issue/article/the_art_of_the_matter/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"authorship",
			"barthes",
			"theory",
			"copyright",
			"technology",
			"culture",
			"publication"
		],
		"y": -11.415755360959144,
		"x": 0.8651625029186483,
		"extended": "",
		"description": "Why Artists Share | QuestionCopyright.org",
		"time": "2009-05-31T10:59:45Z",
		"href": "http://questioncopyright.org/node/320"
	},
	{
		"cluster": 17,
		"tags": [
			"functional",
			"programming",
			"computerscience",
			"pedagogy",
			"education"
		],
		"y": 0.13467176065195238,
		"x": -12.534212192624928,
		"extended": "http://www.lilyapp.org/about/\n",
		"description": "Jack Cough on Software: Teaching Functional Programming To Kids",
		"time": "2009-05-31T10:59:44Z",
		"href": "http://jackcoughonsoftware.blogspot.com/2009/05/teaching-functional-programming-to-kids.html"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"social",
			"media",
			"web",
			"culture",
			"theory",
			"control",
			"surveilance",
			"panopticon",
			"foucault",
			"poststructuralism"
		],
		"y": 4.143572366637889,
		"x": 3.1370296285997123,
		"extended": "",
		"description": "twopointouch | Surrender! Foucault and Twitter",
		"time": "2009-05-31T10:44:02Z",
		"href": "http://twopointouch.com/2009/05/27/surrender-foucault-and-twitter/"
	},
	{
		"cluster": 13,
		"tags": [
			"art",
			"economics",
			"digital",
			"business",
			"curation"
		],
		"y": 7.7995088948698115,
		"x": 5.9470527737922625,
		"extended": "",
		"description": "A conversation about exhibiting and selling digital fine art - we make money not art",
		"time": "2009-05-26T22:27:36Z",
		"href": "http://www.we-make-money-not-art.com/archives/2007/03/a-couple-of-wee.php"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"monad",
			"IO",
			"programming",
			"functional",
			"syntax",
			"languages",
			"computerscience"
		],
		"y": -5.299025984019792,
		"x": -9.751882964461904,
		"extended": "",
		"description": "Do-notation considered harmful « Data.Syntaxfree",
		"time": "2009-05-26T22:27:02Z",
		"href": "http://syntaxfree.wordpress.com/2006/12/12/do-notation-considered-harmful/"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"monad",
			"programming",
			"functional",
			"computerscience"
		],
		"y": -5.460427682904121,
		"x": -9.616805808941162,
		"extended": "",
		"description": "http://www.lisperati.com/haskell/ht2.html",
		"time": "2009-05-26T22:26:04Z",
		"href": "http://www.lisperati.com/haskell/ht2.html"
	},
	{
		"cluster": 3,
		"tags": [
			"altermodern",
			"art",
			"criticism",
			"bourriaud",
			"review",
			"theory",
			"postmodernism"
		],
		"y": -11.566267121376802,
		"x": 3.19665340829411,
		"extended": "",
		"description": "Mute magazine - Culture and politics after the net",
		"time": "2009-05-26T22:25:39Z",
		"href": "http://www.metamute.org/en/content/altermodern_marketing_or_movement"
	},
	{
		"cluster": 17,
		"tags": [
			"processing",
			"javascript",
			"programming",
			"graphics",
			"generative",
			"computational",
			"art"
		],
		"y": 1.7502711824082864,
		"x": -4.76850408238693,
		"extended": "",
		"description": "Home / HasCanvas",
		"time": "2009-05-26T22:25:11Z",
		"href": "http://www.hascanvas.com/"
	},
	{
		"cluster": 17,
		"tags": [
			"processing",
			"javascript",
			"programming",
			"graphics",
			"art",
			"computuation"
		],
		"y": 1.7693181006873917,
		"x": -4.7782077894784925,
		"extended": "",
		"description": "Processing.js",
		"time": "2009-05-26T22:24:50Z",
		"href": "http://processingjs.org/download"
	},
	{
		"cluster": 8,
		"tags": [
			"nlp",
			"postagging",
			"brilltagging",
			"linguistics",
			"computational",
			"programming",
			"internet",
			"api"
		],
		"y": 3.416493902183231,
		"x": -5.568177448961247,
		"extended": "",
		"description": "Term Extraction Documentation for Yahoo! Search Web Services",
		"time": "2009-05-26T22:24:16Z",
		"href": "http://developer.yahoo.com/search/content/V1/termExtraction.html"
	},
	{
		"cluster": 1,
		"tags": [
			"fluxus",
			"scheme",
			"lisp",
			"livecoding",
			"programming",
			"art",
			"music",
			"tutorials",
			"code"
		],
		"y": -10.093627660212617,
		"x": 2.9775947813983765,
		"extended": "",
		"description": "Pawfal :: FluxusSecrets",
		"time": "2009-05-26T22:23:08Z",
		"href": "http://www.pawfal.org/index.php?page=FluxusSecrets"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"art",
			"technology",
			"research"
		],
		"y": -9.495498376093085,
		"x": 0.14234147528147895,
		"extended": "",
		"description": "haque :: design + research",
		"time": "2009-05-26T22:22:43Z",
		"href": "http://www.haque.co.uk/"
	},
	{
		"cluster": 8,
		"tags": [
			"socialism",
			"web",
			"social",
			"media",
			"internet",
			"collaboration",
			"politics",
			"total",
			"unadulterated",
			"bollocks",
			"anarchism"
		],
		"y": 4.474190328869582,
		"x": 3.299769798035025,
		"extended": "",
		"description": "The New Socialism: Global Collectivist Society Is Coming Online",
		"time": "2009-05-26T22:22:16Z",
		"href": "http://www.wired.com/culture/culturereviews/magazine/17-06/nep_newsocialism"
	},
	{
		"cluster": 18,
		"tags": [
			"software",
			"development",
			"design",
			"programming",
			"agile",
			"pragmatism"
		],
		"y": 6.121643685858038,
		"x": -5.220176627057026,
		"extended": "",
		"description": "The Rise of ``Worse is Better''",
		"time": "2009-05-26T22:21:33Z",
		"href": "http://www.jwz.org/doc/worse-is-better.html"
	},
	{
		"cluster": 17,
		"tags": [
			"database",
			"relational",
			"programming",
			"orm",
			"oo",
			"computer",
			"science",
			"information",
			"theory"
		],
		"y": 3.132873040537078,
		"x": -2.139913789229236,
		"extended": "",
		"description": "Database heresies",
		"time": "2009-05-26T22:21:08Z",
		"href": "http://www.b-list.org/weblog/2008/aug/04/orm/"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"internet",
			"media",
			"social",
			"society",
			"Participation",
			"socialmedia",
			"relationalaesthetics"
		],
		"y": -9.849030969652526,
		"x": -0.0017083761201681087,
		"extended": "",
		"description": "Why is Cornerhouse interested in We-think? | Actually...",
		"time": "2009-05-11T12:45:55Z",
		"href": "http://writetoreply.org/actually/2009/04/29/why-is-cornerhouse-interested-in-we-think/"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"haskell",
			"functional",
			"web",
			"development",
			"computerscience"
		],
		"y": -4.557528725057335,
		"x": -7.214234969065306,
		"extended": "",
		"description": "Is Haskell a Good Choice for Web Applications?",
		"time": "2009-05-06T13:18:11Z",
		"href": "http://jekor.com/article/is-haskell-a-good-choice-for-web-applications"
	},
	{
		"cluster": 14,
		"tags": [
			"anthropology",
			"web",
			"social",
			"software",
			"media",
			"design",
			"architecture"
		],
		"y": 4.60814636661612,
		"x": 2.9031965153037396,
		"extended": "",
		"description": "Anthropology: The Art of Building a Successful Social Site - ReadWriteWeb",
		"time": "2009-05-06T11:32:43Z",
		"href": "http://www.readwriteweb.com/archives/anthropology_the_art_of_building_a_successful_soci.php"
	},
	{
		"cluster": 17,
		"tags": [
			"processing",
			"java",
			"closures",
			"functional",
			"programming",
			"anonymousinnerclass",
			"computerscience"
		],
		"y": -3.32951619786697,
		"x": -10.500404401567938,
		"extended": "",
		"description": "Higher-Order Functions and Function Composition, with Processing « Invisible Blocks",
		"time": "2009-05-06T11:24:57Z",
		"href": "http://invisibleblocks.wordpress.com/2009/05/04/higher-order-functions-and-function-composition-with-processing/#2"
	},
	{
		"cluster": 4,
		"tags": [
			"maths",
			"programming",
			"explanation",
			"computerscience",
			"monad",
			"functional",
			"haskell",
			"categorytheory"
		],
		"y": -5.367399280523988,
		"x": -9.821643448204899,
		"extended": "",
		"description": "808140 comments on Monads, in Python, in production code! -- \"you can and should use monads in your code\"",
		"time": "2009-05-05T07:34:00Z",
		"href": "http://www.reddit.com/r/programming/comments/64th1/monads_in_python_in_production_code_you_can_and/c02u9mb"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"programming",
			"tail",
			"computerscience",
			"optimisation",
			"recursion",
			"interpreter",
			"tailrecursion",
			"call"
		],
		"y": 3.846936017355429,
		"x": -11.712433537919882,
		"extended": "",
		"description": "Magnus Holm - Tailin' Ruby",
		"time": "2009-05-03T11:19:57Z",
		"href": "http://judofyr.net/posts/tailin-ruby.html"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"technology",
			"interaction",
			"exhibition",
			"goldsmiths",
			"iankirk"
		],
		"y": -11.335218276874324,
		"x": 0.3837569078599874,
		"extended": "",
		"description": "How do digital machines make you \"feel\"? - we make money not art",
		"time": "2009-05-03T11:18:45Z",
		"href": "http://www.we-make-money-not-art.com/archives/2006/07/i-read-on-the-w.php"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"reference",
			"computerscience",
			"algorithms",
			"learning"
		],
		"y": 1.0223640736063262,
		"x": -12.7094633024518,
		"extended": "",
		"description": "Dictionary of Algorithms and Data Structures",
		"time": "2009-05-03T11:16:02Z",
		"href": "http://www.itl.nist.gov/div897/sqg/dads/"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"functional",
			"haskell",
			"lambda",
			"combinator",
			"ycombinator",
			"combinatorylogic",
			"lambdacalculus",
			"computerscience"
		],
		"y": -4.988503172954893,
		"x": -12.128015787706818,
		"extended": "",
		"description": "How I finally understood the Y Combinator (and blew my damn mind) « noeit",
		"time": "2009-04-30T21:26:54Z",
		"href": "http://noeit.wordpress.com/2009/04/28/how-i-finally-understood-the-y-combinator-and-blew-my-damn-mind/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"binding",
			"scope",
			"functional",
			"programming",
			"closure",
			"development",
			"web"
		],
		"y": 10.09590861300427,
		"x": -3.7940395101059066,
		"extended": "",
		"description": "Robert Sosinski » Binding Scope in JavaScript",
		"time": "2009-04-30T21:23:18Z",
		"href": "http://www.robertsosinski.com/2009/04/28/binding-scope-in-javascript/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"culture",
			"criticism",
			"writing",
			"journalism",
			"theory"
		],
		"y": -11.678287715584561,
		"x": 2.9670347332016616,
		"extended": "",
		"description": "Frieze Magazine | Archive | Who do You Think You’re Talking To?",
		"time": "2009-04-30T19:46:15Z",
		"href": "http://www.frieze.com/issue/article/who_do_you_think_youre_talking_to/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"internet",
			"media",
			"culture",
			"theory",
			"philosophy",
			"video",
			"politics",
			"religion"
		],
		"y": -7.200884746423782,
		"x": 10.370748064504724,
		"extended": "",
		"description": "Boris Groys, Religion in the Age of Digital Reproduction / Journal / e-flux",
		"time": "2009-04-29T22:30:33Z",
		"href": "http://www.e-flux.com/journal/view/49"
	},
	{
		"cluster": 15,
		"tags": [
			"art",
			"design",
			"programming",
			"graphics",
			"generative",
			"python",
			"mathematics",
			"fractal"
		],
		"y": 1.7829380529521186,
		"x": -4.891632598184231,
		"extended": "",
		"description": "Python Fractals",
		"time": "2009-04-28T21:50:10Z",
		"href": "http://natesoares.com/projects/python-fractals/"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"programming",
			"web",
			"hack",
			"javascript",
			"browser",
			"html",
			"security",
			"xss",
			"iframe",
			"crossdomain"
		],
		"y": 10.45929435029966,
		"x": -3.4758167129636237,
		"extended": "",
		"description": "Julien Lecomte’s Blog » Introducing CrossFrame, a Safe Communication Mechanism Across Documents and Across Domains",
		"time": "2009-04-28T21:48:56Z",
		"href": "http://www.julienlecomte.net/blog/2007/11/31/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"lambda",
			"computerscience",
			"functional",
			"lisp",
			"scheme",
			"mathematics",
			"lambdacalculus"
		],
		"y": -4.818549392831642,
		"x": -12.338130041242362,
		"extended": "",
		"description": "An Introduction to Lambda Calculus and Scheme",
		"time": "2009-04-26T19:56:21Z",
		"href": "http://www.jetcafe.org/jim/lambda.html"
	},
	{
		"cluster": 15,
		"tags": [
			"programming",
			"mathematics",
			"recommendation",
			"suggestion",
			"ai",
			"algorithm",
			"computerscience"
		],
		"y": -0.1608847418038693,
		"x": -11.460044746402865,
		"extended": "",
		"description": "\"We think you'd also like...\" and the Math of Suggestion – Teil 1 | Gründerszene",
		"time": "2009-04-19T13:29:33Z",
		"href": "http://www.gruenderszene.de/it/we-think-youd-also-like-and-the-math-of-suggestion-%E2%80%93-teil-1/"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"design",
			"development",
			"css",
			"xhtml",
			"presentation",
			"center",
			"align",
			"vertical",
			"horizontal",
			"html"
		],
		"y": 10.502697862620783,
		"x": 0.49738359205057064,
		"extended": "",
		"description": "SiteCrafting > Blog > How to Center a Div",
		"time": "2009-04-19T13:28:52Z",
		"href": "http://www.sitecrafting.com/blog/to-center-div"
	},
	{
		"cluster": 1,
		"tags": [
			"sonicyouth",
			"music",
			"art",
			"authorship",
			"appropriation",
			"pop",
			"history",
			"consumption"
		],
		"y": -10.130903502142203,
		"x": 3.047727165565094,
		"extended": "",
		"description": "Frieze Magazine | Editors' Blog | Self-portrait of the artist as consumer",
		"time": "2009-04-19T13:26:06Z",
		"href": "http://www.frieze.com/blog/entry/self_portrait_of_the_artist_as_consumer/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"music",
			"culture",
			"celebrity",
			"pop"
		],
		"y": -10.29831186518492,
		"x": 2.770756283476401,
		"extended": "",
		"description": "Paul Morley on pop music and art | Music | The Observer",
		"time": "2009-04-19T13:23:48Z",
		"href": "http://www.guardian.co.uk/music/2009/apr/19/paul-morley-pop-music-art"
	},
	{
		"cluster": 2,
		"tags": [
			"programmung",
			"ruby",
			"computerscience",
			"metaprogramming",
			"technology"
		],
		"y": 3.7218256097357596,
		"x": -11.118962384339634,
		"extended": "",
		"description": "2009-04-08/sick.md at master from raganwald's homoiconic - GitHub",
		"time": "2009-04-19T13:20:05Z",
		"href": "http://github.com/raganwald/homoiconic/blob/master/2009-04-08/sick.md#readme"
	},
	{
		"cluster": 10,
		"tags": [
			"law",
			"activism",
			"london",
			"video",
			"uk",
			"politics",
			"protest",
			"police",
			"g20",
			"riot",
			"brutality",
			"democracy"
		],
		"y": 2.169490607987336,
		"x": 12.949525318782301,
		"extended": "",
		"description": "G20 protest videos: Growing catalogue of evidence against police | UK news | guardian.co.uk",
		"time": "2009-04-17T07:46:39Z",
		"href": "http://www.guardian.co.uk/uk/2009/apr/15/g20-protest-police-videos-catalogue"
	},
	{
		"cluster": 2,
		"tags": [
			"law",
			"uk",
			"rights",
			"property",
			"legal",
			"rental",
			"housing"
		],
		"y": 1.7227373008403164,
		"x": 6.639183039874086,
		"extended": "",
		"description": "Rental Rights",
		"time": "2009-04-17T07:46:11Z",
		"href": "http://rentalrights.org.uk/"
	},
	{
		"cluster": 16,
		"tags": [
			"art",
			"technology",
			"programming",
			"web",
			"data",
			"api",
			"brooklynmuseum",
			"museum"
		],
		"y": -10.170894670289254,
		"x": -0.5735202901073998,
		"extended": "",
		"description": "The Brooklyn Museum API - Q&A with Shelley Bernstein and Paul Beaudoin « electronic museum",
		"time": "2009-04-17T07:45:52Z",
		"href": "http://electronicmuseum.org.uk/2009/04/16/the-brooklyn-museum-api-qa-with-shelley-bernstein-and-paul-beaudoin/"
	},
	{
		"cluster": 15,
		"tags": [
			"theory",
			"free",
			"computerscience",
			"reading",
			"book",
			"learning",
			"computation"
		],
		"y": -0.8008440534962714,
		"x": -13.106113979154786,
		"extended": "",
		"description": "theory-bk.html",
		"time": "2009-04-06T17:02:17Z",
		"href": "http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk.html"
	},
	{
		"cluster": 15,
		"tags": [
			"education",
			"free",
			"download",
			"reference",
			"books",
			"learning",
			"mathematics"
		],
		"y": -8.76052226639291,
		"x": -5.747036290399222,
		"extended": "",
		"description": "Free Mathematics Books",
		"time": "2009-04-06T17:01:02Z",
		"href": "http://www.e-booksdirectory.com/mathematics.php"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"theory",
			"technology",
			"programming",
			"criticism",
			"reading",
			"aesthetics"
		],
		"y": -11.32591700354725,
		"x": -0.2703246068318358,
		"extended": "",
		"description": "An Aesthetics Reading List for Programmers - Ideas For Dozens",
		"time": "2009-04-06T17:00:36Z",
		"href": "http://www.urbanhonking.com/ideasfordozens/2009/04/an_aesthetics_reading_list_for.html"
	},
	{
		"cluster": 2,
		"tags": [
			"ruby",
			"twitter",
			"systems",
			"scaling",
			"messaging",
			"IO",
			"garbagecollection"
		],
		"y": -1.391770163051014,
		"x": 2.133668511752168,
		"extended": "",
		"description": "Unlimited Novelty: Twitter: blaming Ruby for their mistakes?",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://unlimitednovelty.com/2009/04/twitter-blaming-ruby-for-their-mistakes.html"
	},
	{
		"cluster": 10,
		"tags": [
			"media",
			"society",
			"politics",
			"identity",
			"protest",
			"g20"
		],
		"y": 2.25994456853326,
		"x": 12.419812596869932,
		"extended": "",
		"description": "Harry’s Place » Will smash windows to order",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://www.hurryupharry.org/2009/04/03/if-a-tree-falls-in-the-forest-and-no-one-sees-it-does-it-make-a-noise/"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"law",
			"criticism",
			"academia",
			"access",
			"iprs",
			"crime",
			"derrida"
		],
		"y": -3.6739710413136955,
		"x": 8.978514328639141,
		"extended": "",
		"description": "NEWSgrist - where spin is art: Argentinean professor charged criminally for promoting access to knowledge",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://newsgrist.typepad.com/underbelly/2009/04/via-nettime---nettime-copysouth-report-on-horacio-potel------------to-nettime-l-at-keinorg--subject-nettime-copysout.html"
	},
	{
		"cluster": 2,
		"tags": [
			"london",
			"literature",
			"review",
			"hackney",
			"psychogeography"
		],
		"y": -1.9001203479781739,
		"x": 6.322664061527734,
		"extended": "",
		"description": "Frieze Magazine | Archive | Hackney, That Rose-Red Empire",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://www.frieze.com/issue/article/hackney_that_rose_red_empire/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"technology",
			"twitter",
			"criticism",
			"relationalaesthetics",
			"jennyholzer"
		],
		"y": -10.775590761240577,
		"x": -0.2671463538624118,
		"extended": "",
		"description": "tom moody » Jenny Holzer's Truisms vs Twitter",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://www.tommoody.us/archives/2009/04/01/jenny-holzers-truisms-vs-twitter/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"film",
			"anthonymccall"
		],
		"y": -9.277391150390589,
		"x": 0.9986791843106104,
		"extended": "",
		"description": "U B U W E B - Film & Video: Anthony McCall - Conversions (1971)",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://www.ubu.com/film/mccall_argument.html"
	},
	{
		"cluster": 10,
		"tags": [
			"education",
			"society",
			"learning",
			"politics",
			"privilige"
		],
		"y": 3.157301981924056,
		"x": 12.810110418422406,
		"extended": "",
		"description": "The Disadvantages of an Elite Education: an article by William Deresiewicz about how universities should exist to make minds, not careers | The American Scholar",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://www.theamericanscholar.org/the-disadvantages-of-an-elite-education/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"development",
			"programming",
			"apache",
			"tool",
			"passenger",
			"debug"
		],
		"y": 9.23570597837699,
		"x": -8.108214850574461,
		"extended": "",
		"description": "duck_punching » Passenger (mod_rails) for development. Now with debugger!",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://duckpunching.com/passenger-mod_rails-for-development-now-with-debugger"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"theory",
			"economics",
			"criticism",
			"society",
			"aesthetics",
			"politics",
			"recession",
			"artworld"
		],
		"y": -0.6427828822537844,
		"x": 13.536889572923801,
		"extended": "",
		"description": "Frieze Magazine | Comment | Recessional Aesthetics",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://www.frieze.com/comment/article/recessional_aesthetics/"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"politics",
			"protest",
			"g20"
		],
		"y": 2.3624117187529325,
		"x": 12.360851516822835,
		"extended": "",
		"description": "Sam Leith: Political protest should be about more than having a nice day out and fighting some bankers | Comment is free | The Guardian",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/apr/02/g20-protest"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"politics",
			"identity",
			"judaism",
			"middleeast",
			"palestine",
			"israel",
			"conflict",
			"race",
			"arabic"
		],
		"y": 3.042661042085109,
		"x": 7.323356471529113,
		"extended": "",
		"description": "Khaled Diab: Like the Palestinians, Middle Eastern Jews have fallen victim to political forces beyond their control | Comment is free | guardian.co.uk",
		"time": "2009-04-06T16:56:42Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/apr/01/middle-east-israel-mizrahi"
	},
	{
		"cluster": 10,
		"tags": [
			"law",
			"news",
			"society",
			"uk",
			"politics",
			"protest",
			"police",
			"civil",
			"humanrights",
			"liberties",
			"g20"
		],
		"y": 2.315373928906192,
		"x": 12.529012070869127,
		"extended": "",
		"description": "Louise Christian: At the G2 protests yesterday, police used the controversial tactic of 'kettling', ruled in January to be lawful – but is it right? | Comment is free | guardian.co.uk",
		"time": "2009-04-03T14:28:40Z",
		"href": "http://www.guardian.co.uk/commentisfree/libertycentral/2009/apr/02/g20-protest-kettling"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"technology",
			"research",
			"identity",
			"history",
			"process",
			"photocopy"
		],
		"y": -11.436106476496638,
		"x": 0.8163392738836139,
		"extended": "",
		"description": "Rhizome | Real-Time Legend",
		"time": "2009-04-01T07:13:08Z",
		"href": "http://rhizome.org/editorial/2457"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"culture",
			"theory",
			"philosophy",
			"society",
			"video",
			"research"
		],
		"y": -7.062992598740262,
		"x": 10.301667083789422,
		"extended": "",
		"description": "Examined Life",
		"time": "2009-04-01T07:12:30Z",
		"href": "http://www3.nfb.ca/webextension/examined-life/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"media",
			"culture",
			"theory",
			"research",
			"academia",
			"journal"
		],
		"y": -7.253011344840725,
		"x": 10.31931398195369,
		"extended": "",
		"description": "Transformative Works and Cultures",
		"time": "2009-04-01T07:11:52Z",
		"href": "http://journal.transformativeworks.org/index.php/twc/index"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"technology",
			"society",
			"science",
			"language",
			"nerds"
		],
		"y": -6.017459370845499,
		"x": 8.26985519788364,
		"extended": "",
		"description": "Rant: Nerd and Anti-Nerd",
		"time": "2009-04-01T07:11:23Z",
		"href": "http://io9.com/5186501/nerd-and-anti+nerd"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"authorship",
			"anonymity",
			"design",
			"law",
			"branding",
			"drugs",
			"crime"
		],
		"y": -9.990401481991466,
		"x": 2.0119143130860904,
		"extended": "",
		"description": "512 Logos From Ecstasy Pills - PSFK.com",
		"time": "2009-03-31T18:42:23Z",
		"href": "http://www.psfk.com/2009/03/512-logos-from-ecstasy-pills.html"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"interpreter",
			"internals",
			"objectmodel",
			"mri",
			"semantics",
			"structure",
			"architecture",
			"computerscience",
			"programming",
			"benchmark",
			"performance"
		],
		"y": 4.216194320202801,
		"x": -11.240947561716618,
		"extended": "",
		"description": "The Ruby Object Model - Structure and Semantics",
		"time": "2009-03-31T18:39:50Z",
		"href": "http://www.hokstad.com/ruby-object-model.html"
	},
	{
		"cluster": 7,
		"tags": [
			"python",
			"audio",
			"music",
			"programming",
			"library",
			"api",
			"echonest",
			"development"
		],
		"y": 8.193229705542228,
		"x": -3.045921482816276,
		"extended": "",
		"description": "echo-nest-remix - Google Code",
		"time": "2009-03-27T12:13:28Z",
		"href": "http://code.google.com/p/echo-nest-remix/"
	},
	{
		"cluster": 17,
		"tags": [
			"art",
			"programming",
			"algorithm",
			"graphics",
			"generative",
			"image",
			"AI",
			"genetic"
		],
		"y": 4.6788096439008315,
		"x": -8.73848599927654,
		"extended": "",
		"description": "Juris Galang: Breeding Images",
		"time": "2009-03-25T19:36:48Z",
		"href": "http://www.jurisgalang.com/articles/show/Breeding%20Images"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"tutorial",
			"algorithm",
			"generative",
			"AI",
			"genetic",
			"computerscicence"
		],
		"y": 4.860324083828974,
		"x": -8.885660177928207,
		"extended": "",
		"description": "Juris Galang: Breeding Strings",
		"time": "2009-03-25T19:36:06Z",
		"href": "http://www.jurisgalang.com/articles/show/Breeding%20Strings"
	},
	{
		"cluster": 8,
		"tags": [
			"business",
			"internet",
			"culture",
			"memetics"
		],
		"y": 1.6444439046975847,
		"x": 4.295201778869543,
		"extended": "",
		"description": "Lol-ing All the Way to the Bank - PSFK.com",
		"time": "2009-03-25T17:55:11Z",
		"href": "http://www.psfk.com/2009/03/lol-ing-all-the-way-to-the-bank.html"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"computerscience",
			"functional",
			"haskell",
			"efficiency",
			"lazy",
			"evalutation"
		],
		"y": -5.575839346859211,
		"x": -9.534189863006606,
		"extended": "",
		"description": "Ruminations of a Programmer: Learning Haskell - Laziness makes you think differently",
		"time": "2009-03-25T17:54:54Z",
		"href": "http://debasishg.blogspot.com/2009/03/learning-haskell-laziness-makes-you.html"
	},
	{
		"cluster": 14,
		"tags": [
			"communication",
			"design",
			"network",
			"visualisation",
			"wireless"
		],
		"y": -2.968541804066626,
		"x": 0.519088602804025,
		"extended": "",
		"description": "Visualizing Wireless Signals - PSFK.com",
		"time": "2009-03-25T17:51:37Z",
		"href": "http://www.psfk.com/2009/03/visualizing-wireless-signals.html"
	},
	{
		"cluster": 12,
		"tags": [
			"internet",
			"development",
			"programming",
			"network",
			"web",
			"reference",
			"http",
			"diagram",
			"graph",
			"protocol",
			"flowchart"
		],
		"y": 11.357292827245608,
		"x": -5.319056226723165,
		"extended": "",
		"description": "http-headers-status.gif (GIF Image, 3138×2184 pixels) - Scaled (25%)",
		"time": "2009-03-25T17:51:17Z",
		"href": "http://thoughtpad.net/alan-dean/http-headers-status.gif?"
	},
	{
		"cluster": 13,
		"tags": [
			"society",
			"politics",
			"",
			"economics",
			"history",
			"recession",
			"finance",
			"us",
			"europe",
			"policy"
		],
		"y": 10.68075296031421,
		"x": 7.914019104899213,
		"extended": "",
		"description": "Continental Drift: Financial Page: The New Yorker",
		"time": "2009-03-25T17:50:26Z",
		"href": "http://www.newyorker.com/talk/financial/2009/03/30/090330ta_talk_surowiecki"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"culture",
			"criticism",
			"internet",
			"wikipedia",
			"authorship",
			"online",
			"intent",
			"epistemology"
		],
		"y": -9.96064139832294,
		"x": 1.3571817781030555,
		"extended": "",
		"description": "Akahele | In the eye of the beholder",
		"time": "2009-03-23T18:02:53Z",
		"href": "http://akahele.org/2009/03/in-the-eye-of-the-beholder/"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"art",
			"",
			"economics",
			"society",
			"recession"
		],
		"y": -5.900131940024512,
		"x": 10.497184448091103,
		"extended": "",
		"description": "Art Fag City » Recessionary Art World Posting",
		"time": "2009-03-23T15:35:09Z",
		"href": "http://www.artfagcity.com/2009/03/23/recessionary-art-world-posting/"
	},
	{
		"cluster": 2,
		"tags": [
			"ruby",
			"sql",
			"rails",
			"reference",
			"search",
			"howto",
			"fulltext",
			"activerecord",
			"sphinx"
		],
		"y": 7.417349333218048,
		"x": -10.996054038113844,
		"extended": "",
		"description": "Implementing Search | Next Update",
		"time": "2009-03-23T15:00:26Z",
		"href": "http://nextupdate.com/blog/archives/2009/03/implementing-search/"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"technology",
			"generative",
			"internet",
			"maths",
			"johnfsimon"
		],
		"y": -10.274125026637588,
		"x": -0.034077395753113145,
		"extended": "",
		"description": "Welcome to Numeral",
		"time": "2009-03-23T14:15:48Z",
		"href": "http://numeral.com/"
	},
	{
		"cluster": 2,
		"tags": [
			"academic",
			"research",
			"tool",
			"reference",
			"software",
			"citation",
			"bibliography"
		],
		"y": -8.759203357748353,
		"x": -1.6119224809044455,
		"extended": "",
		"description": "Zotero: The Next-Generation Research Tool",
		"time": "2009-03-23T14:13:59Z",
		"href": "http://www.zotero.org/"
	},
	{
		"cluster": 2,
		"tags": [
			"academic",
			"research",
			"tool",
			"reference",
			"software",
			"citation",
			"bibliography"
		],
		"y": -8.571899569314537,
		"x": -1.60920290163205,
		"extended": "",
		"description": "CiteULike: Everyone's library",
		"time": "2009-03-23T14:13:46Z",
		"href": "http://www.citeulike.org/"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"culture",
			"technology",
			"internet",
			"computing",
			"interview",
			"rhizome",
			"tommoody"
		],
		"y": -11.206864701017743,
		"x": 1.020343403380657,
		"extended": "",
		"description": "Art Fag City » Geeks in the Gallery",
		"time": "2009-03-23T14:13:13Z",
		"href": "http://www.artfagcity.com/geeks-in-gallery/"
	},
	{
		"cluster": 14,
		"tags": [
			"development",
			"web",
			"design",
			"technology",
			"ux",
			"strategy",
			"architecture",
			"messaging",
			"scaling"
		],
		"y": 9.509629759411395,
		"x": 0.7436065348778423,
		"extended": "",
		"description": "Streams, affordances, Facebook, and rounding errors - Laughing Meme",
		"time": "2009-03-19T15:08:05Z",
		"href": "http://laughingmeme.org/2009/03/18/streams-affordances-facebook-and-rounding-errors/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"careers",
			"success",
			"technology",
			"society"
		],
		"y": -11.380007929529306,
		"x": 0.9954886849627709,
		"extended": "",
		"description": "What is success? (My post from Jon Coffelt's blog) | Furtherfield Blog",
		"time": "2009-03-19T13:57:17Z",
		"href": "http://blog.furtherfield.org/?q=node/271"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"education",
			"computerscience",
			"learning",
			"pedagogy"
		],
		"y": 0.11194132769187173,
		"x": -12.565569578466011,
		"extended": "",
		"description": "hackety org » Goodbye, Cruel Hello World",
		"time": "2009-03-19T11:29:04Z",
		"href": "http://hackety.org/2009/03/18/goodbyeCruelHelloWorld.html"
	},
	{
		"cluster": 8,
		"tags": [
			"appropriation",
			"sampling",
			"art",
			"culture",
			"internet",
			"technology",
			"authorhship"
		],
		"y": -10.618062749693156,
		"x": 1.094695441258202,
		"extended": "",
		"description": "Frieze Magazine - Blog: Cut and Paste",
		"time": "2009-03-18T17:19:36Z",
		"href": "http://www.frieze.com/blog/entry/cut_and_paste/"
	},
	{
		"cluster": 10,
		"tags": [
			"sex",
			"politics",
			"society",
			"culture",
			"queer",
			"homosexuality",
			"equality",
			"discrimination",
			"stereotypes"
		],
		"y": 0.8069061526429031,
		"x": 13.151415902525137,
		"extended": "",
		"description": "Harvey Milk and the Politics of Normalization",
		"time": "2009-03-18T17:10:02Z",
		"href": "http://www.hurryupharry.org/2009/03/18/harvey-milk-and-the-politics-of-normalization/"
	},
	{
		"cluster": 14,
		"tags": [
			"art",
			"design",
			"fabrica",
			"residency"
		],
		"y": -8.951364941469963,
		"x": 0.5894269217600653,
		"extended": "",
		"description": "Apply to Fabrica Interactive | Fabrica",
		"time": "2009-03-18T10:35:47Z",
		"href": "http://www.fabrica.it/apply_interactive"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"culture",
			"p2p",
			"criticism",
			"society",
			"Participation",
			"altermodern",
			"bourriand"
		],
		"y": -12.333686612028787,
		"x": 2.949029851516099,
		"extended": "",
		"description": "sebastian mary » where is the P2P in ‘altermodern’?",
		"time": "2009-03-18T10:33:24Z",
		"href": "http://sebastianmary.com/wordpress/2009/03/02/altermodern-bottoms-up/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"culture",
			"theory",
			"criticism",
			"society",
			"altermodern",
			"bourriand",
			"globalisation"
		],
		"y": -12.277963221452138,
		"x": 2.9683268098713764,
		"extended": "",
		"description": "The Death of Postmodernism and Emergence of Altermodernism - PSFK.com",
		"time": "2009-03-18T10:28:52Z",
		"href": "http://www.psfk.com/2009/02/the-death-of-postmodernism-and-emergence-of-altermodernism.html"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"internet",
			"theory",
			"technology",
			"criticism",
			"gallery",
			"space",
			"curation",
			"translation"
		],
		"y": -10.764428327704733,
		"x": -0.1957032475897886,
		"extended": "",
		"description": "3RD INCLUSIVA-NET MEETING: TRANS.FORM.WORK INTERNET-BASED ART IN THE REAL SPACE | CONT3XT.NET — MEDIA/NET/ART",
		"time": "2009-03-17T19:37:15Z",
		"href": "http://cont3xt.net/blog/?p=1270"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"economics",
			"copying",
			"reproduction",
			"image",
			"originality",
			"authenticity"
		],
		"y": -10.832803128600663,
		"x": 6.697202605135934,
		"extended": "",
		"description": "Freize Magazine - Front: Think Rich",
		"time": "2009-03-17T15:27:41Z",
		"href": "http://www.frieze.com/issue/article/think_rich/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"development",
			"programming",
			"web",
			"compatibility",
			"deployment",
			"ruby1.9",
			"1.9"
		],
		"y": 8.7436784852655,
		"x": -7.9572729619538,
		"extended": "",
		"description": "The Exciter - Why You Should Deploy Your Next Application on Ruby 1.9 and a Rant in General",
		"time": "2009-03-17T13:56:42Z",
		"href": "http://theexciter.com/articles/why-you-should-deploy-your-next-application-on-ruby-1.html"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"news",
			"internet",
			"culture",
			"online",
			"search",
			"resource"
		],
		"y": -9.961083696634958,
		"x": 1.4071498532240503,
		"extended": "",
		"description": "ArsRss",
		"time": "2009-03-17T13:56:13Z",
		"href": "http://net18reaching.org/artrss/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"music",
			"computer",
			"distributed",
			"technology"
		],
		"y": -11.099429736872183,
		"x": 2.049040386751826,
		"extended": "",
		"description": "Bicycle Built for Two Thousand",
		"time": "2009-03-17T13:51:37Z",
		"href": "http://www.bicyclebuiltfortwothousand.com/"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"bash",
			"reference",
			"tips",
			"sysadmin",
			"unix",
			"shell",
			"terminal"
		],
		"y": -5.9297387215112085,
		"x": 2.961137481105274,
		"extended": "",
		"description": "Josh Staiger: .bash_profile vs. .bashrc",
		"time": "2009-03-17T13:50:44Z",
		"href": "http://joshstaiger.org/archives/2005/07/bash_profile_vs.html"
	},
	{
		"cluster": 1,
		"tags": [
			"nationality",
			"culture",
			"racism",
			"stereotypes",
			"society",
			"tourism"
		],
		"y": -3.658895471848979,
		"x": 11.54850299604393,
		"extended": "",
		"description": "Harry’s Place » Happy St Patrick’s Day",
		"time": "2009-03-17T13:49:44Z",
		"href": "http://www.hurryupharry.org/2009/03/17/happy-st-patricks-day/"
	},
	{
		"cluster": 16,
		"tags": [
			"technology",
			"science",
			"computing",
			"data",
			"theory",
			"statistics"
		],
		"y": -3.18579661745213,
		"x": -1.414096055220654,
		"extended": "",
		"description": "The End of Theory: The Data Deluge Makes the Scientific Method Obsolete",
		"time": "2009-03-13T12:11:08Z",
		"href": "http://www.wired.com/science/discoveries/magazine/16-07/pb_theory"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"technology",
			"music",
			"audio",
			"perception"
		],
		"y": -8.589207801657366,
		"x": 5.9649221624874285,
		"extended": "",
		"description": "The Sizzling Sound of Music - O'Reilly Radar",
		"time": "2009-03-12T11:39:42Z",
		"href": "http://radar.oreilly.com/2009/03/the-sizzling-sound-of-music.html"
	},
	{
		"cluster": 14,
		"tags": [
			"art",
			"maths",
			"design",
			"programming",
			"tutorial",
			"code",
			"graphics",
			"generative",
			"computer",
			"science",
			"processing"
		],
		"y": 1.7436528799090218,
		"x": -4.7746577104885075,
		"extended": "",
		"description": "The Nature of Code at daniel shiffman",
		"time": "2009-03-12T09:10:00Z",
		"href": "http://www.shiffman.net/teaching/nature/"
	},
	{
		"cluster": 2,
		"tags": [
			"theory",
			"london",
			"psychogeography",
			"crticicism",
			"cultulre",
			"situationism"
		],
		"y": -1.9175512672618198,
		"x": 6.275233764936466,
		"extended": "",
		"description": "LPA Home Page",
		"time": "2009-03-12T08:49:09Z",
		"href": "http://www.unpopular.demon.co.uk/lpa/organisations/lpa.html"
	},
	{
		"cluster": 3,
		"tags": [
			"culture",
			"online",
			"facebook",
			"photography",
			"privacy",
			"essay",
			"criticism",
			"socialNetwork",
			"self",
			"identity"
		],
		"y": -9.67492329235719,
		"x": 6.558451135536763,
		"extended": "",
		"description": "Design Observer: My Facebook, My Self",
		"time": "2009-03-12T08:45:14Z",
		"href": "http://designobserver.com/archives/entry.html?id=39107"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"tutorial",
			"computer",
			"computerscience",
			"algorithms",
			"learning",
			"science",
			"courses"
		],
		"y": 1.3323068279656032,
		"x": -12.345925422805287,
		"extended": "",
		"description": "Advanced Computer Science Courses at Paper Trail",
		"time": "2009-03-12T08:42:09Z",
		"href": "http://hnr.dnsalias.net/wordpress/?page_id=152"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"tutorial",
			"computer",
			"computerscience",
			"science",
			"languages",
			"course"
		],
		"y": 1.8617158256441833,
		"x": -11.845739940623591,
		"extended": "",
		"description": "COMP 411 Semantics of Programming Languages (Spring 2004)",
		"time": "2009-03-12T08:41:36Z",
		"href": "http://www.cs.rice.edu/~taha/teaching/05S/411/"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"tutorial",
			"reference",
			"computerscience",
			"language",
			"functional",
			"haskell",
			"monads"
		],
		"y": -6.663747839579785,
		"x": -8.85509942894647,
		"extended": "",
		"description": "All About Monads",
		"time": "2009-03-12T08:41:06Z",
		"href": "http://www.haskell.org/all_about_monads/html/index.html?"
	},
	{
		"cluster": 14,
		"tags": [
			"art",
			"education",
			"design",
			"application",
			"tips",
			"studying"
		],
		"y": -8.611641486021881,
		"x": 0.32638468133796755,
		"extended": "",
		"description": "Core77 - Assembling a Competitive Application for Design Graduate Studies",
		"time": "2009-03-12T08:40:36Z",
		"href": "http://www.core77.com/design.edu/09.04_application.asp"
	},
	{
		"cluster": 14,
		"tags": [
			"art",
			"education",
			"design",
			"portfolio",
			"academia",
			"studying",
			"resources"
		],
		"y": -8.579481033398546,
		"x": 0.3095627088187862,
		"extended": "",
		"description": "Core77 - Design Portfolio Preparation Tips and Suggestions",
		"time": "2009-03-12T08:40:20Z",
		"href": "http://www.core77.com/design.edu/portfolio_tips.asp"
	},
	{
		"cluster": 2,
		"tags": [
			"architecture",
			"environment",
			"urban",
			"psychogeography",
			"city"
		],
		"y": 0.5895348985469518,
		"x": 5.274717442236278,
		"extended": "",
		"description": "Eyebeam reBlog: Manhole covers from the 21st century?",
		"time": "2009-03-12T08:39:43Z",
		"href": "http://www.eyebeam.org/reblog/archives/2009/03/manhole_covers_from_the_21st_cen.html"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"politics",
			"war",
			"israel",
			"conflict",
			"gaza"
		],
		"y": 3.059528028759531,
		"x": 7.3765502005782375,
		"extended": "",
		"description": "Carlo Strenger: Israel's new rightwing government is blind to the country's deteriorating status in the western world | Comment is free | guardian.co.uk",
		"time": "2009-03-12T08:39:16Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/mar/11/israel-palestine-netanyahu-lieberman"
	},
	{
		"cluster": 10,
		"tags": [
			"media",
			"society",
			"politics",
			"religion",
			"conflict"
		],
		"y": 2.363558212177969,
		"x": 12.249145891673658,
		"extended": "",
		"description": "Inayat Bunglawala: The media should not reward the extremists protesting in Luton with publicity | Comment is free | guardian.co.uk",
		"time": "2009-03-12T08:38:55Z",
		"href": "http://www.guardian.co.uk/commentisfree/belief/2009/mar/11/protest-islam-mujahiroun-luton"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"psychology",
			"politics",
			"health",
			"medicine",
			"policy"
		],
		"y": 1.266771923354598,
		"x": 7.357118578260882,
		"extended": "",
		"description": "Zoe Williams: Can't fix it till you feel it | Comment is free | The Guardian",
		"time": "2009-03-12T08:38:39Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/mar/11/redundancy-therapy-cbt"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"internet",
			"netart"
		],
		"y": -9.893661798506233,
		"x": 0.8316687658036419,
		"extended": "",
		"description": "Constant Dullaart Re-codes the Readymade - Finer Things - News",
		"time": "2009-03-07T12:09:21Z",
		"href": "http://www.artinamericamagazine.com/news-opinion/finer-things/2009-03-04/dullaart-new-media-readymade/"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"design",
			"grid",
			"browser",
			"css",
			"development",
			"html",
			"layout",
			"standards"
		],
		"y": 10.589614858521156,
		"x": 0.4770320184303765,
		"extended": "",
		"description": "A List Apart: Articles: Fluid Grids",
		"time": "2009-03-07T11:45:59Z",
		"href": "http://www.alistapart.com/articles/fluidgrids"
	},
	{
		"cluster": 10,
		"tags": [
			"surveillance",
			"politics",
			"civil",
			"liberties",
			"society"
		],
		"y": 2.5487276242812715,
		"x": 12.160813713423249,
		"extended": "",
		"description": "FT.com / Comment / Opinion - Outside Edge: You can spy on us – but do it openly",
		"time": "2009-03-07T11:33:48Z",
		"href": "http://www.ft.com/cms/s/0/900eeb46-0a81-11de-95ed-0000779fd2ac.html?ftcamp=rss"
	},
	{
		"cluster": 12,
		"tags": [
			"http",
			"network",
			"protocol",
			"web",
			"internet",
			"tutorial",
			"reference",
			"programming",
			"development"
		],
		"y": 11.334802315618147,
		"x": -5.328258867937672,
		"extended": "",
		"description": "HTTP Made Really Easy",
		"time": "2009-03-06T11:03:21Z",
		"href": "http://www.jmarshall.com/easy/http/"
	},
	{
		"cluster": 1,
		"tags": [
			"hackney",
			"urban",
			"environment",
			"society",
			"history",
			"architecthre",
			"psychogeography",
			"geography",
			"culture"
		],
		"y": -2.7222245087892674,
		"x": 11.059216302771189,
		"extended": "",
		"description": "Video: Iain Sinclair - At large in a 'fictional' Hackney | Books | guardian.co.uk",
		"time": "2009-03-06T10:39:21Z",
		"href": "http://www.guardian.co.uk/books/video/2009/mar/03/hackney-iain-sinclair"
	},
	{
		"cluster": 10,
		"tags": [
			"iran",
			"middleeast",
			"islam",
			"fascism",
			"politics",
			"society",
			"liberalism",
			"leftwing",
			"socialism",
			"humanrights"
		],
		"y": 2.71509615519202,
		"x": 11.106794564555365,
		"extended": "",
		"description": "Harry’s Place » Support the Iranian people, oppose Tehran’s clerical fascism",
		"time": "2009-03-06T10:38:36Z",
		"href": "http://www.hurryupharry.org/2009/03/02/support-the-iranian-people-oppose-tehran%E2%80%99s-clerical-fascism/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"technology",
			"software",
			"computing",
			"essay",
			"process",
			"creativity"
		],
		"y": -11.564667920162984,
		"x": 0.9999368772994991,
		"extended": "",
		"description": "Artist and Computer - LESLIE MEZEI",
		"time": "2009-02-22T15:06:26Z",
		"href": "http://www.atariarchives.org/artist/sec7.php"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"society",
			"academia",
			"ethics",
			"food",
			"sex",
			"sociology",
			"writing",
			"behaviour",
			"moral",
			"values"
		],
		"y": -3.4394115707274424,
		"x": 12.131658762348374,
		"extended": "",
		"description": "Essays on food, and sex, and essays. — Bookkake",
		"time": "2009-02-22T15:05:08Z",
		"href": "http://bookkake.com/2009/02/18/essays-on-food-and-sex-and-essays/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"media",
			"culture",
			"criticism",
			"research",
			"review",
			"exhibition",
			"relationalaesthetics",
			"altermodern",
			"bourriand",
			"triennale"
		],
		"y": -12.296111070541707,
		"x": 2.761155886925565,
		"extended": "",
		"description": "Frieze Magazine | Editors' Blog | Altercritics",
		"time": "2009-02-22T14:50:52Z",
		"href": "http://www.frieze.com/blog/entry/altercritics/"
	},
	{
		"cluster": 1,
		"tags": [
			"freeculture",
			"art",
			"culture",
			"free",
			"software",
			"FOSS",
			"opensource",
			"floss"
		],
		"y": -12.111819637854637,
		"x": 1.5258254891862693,
		"extended": "",
		"description": "Mute magazine - Turning Software Inside Out",
		"time": "2009-02-22T14:48:43Z",
		"href": "http://www.metamute.org/en/content/turning_software_inside_out"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"internet",
			"culture",
			"online",
			"criticism",
			"wikipedia",
			"public",
			"netart"
		],
		"y": -10.017024132023518,
		"x": 1.2354311080976146,
		"extended": "",
		"description": "Art Fag City » Wikipedia Art Lasts All Day!",
		"time": "2009-02-22T14:32:44Z",
		"href": "http://www.artfagcity.com/2009/02/16/wikipedia-art-lasts-all-day/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"network",
			"web",
			"interaction",
			"digital",
			"wikipedia",
			"netart",
			"authorship",
			"relationalaesthetics"
		],
		"y": -10.153642488353148,
		"x": 1.161231741680884,
		"extended": "",
		"description": "WikiPedia art?: | Furtherfield Blog",
		"time": "2009-02-22T14:30:02Z",
		"href": "http://blog.furtherfield.org/?q=node/267"
	},
	{
		"cluster": 15,
		"tags": [
			"science",
			"space",
			"mathematics"
		],
		"y": -7.086599839304912,
		"x": -2.237452766188936,
		"extended": "",
		"description": "Mathematics: The only true universal language - physics-math - 16 February 2009 - New Scientist",
		"time": "2009-02-22T14:27:15Z",
		"href": "http://www.newscientist.com/article/mg20126951.800-mathematics-the-only-true-universal-language.html?page=1"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"online",
			"web",
			"wiki",
			"community",
			"wikipedia",
			"wikipediaart"
		],
		"y": -9.655613189986141,
		"x": 1.4203376075597793,
		"extended": "",
		"description": "Wikipedia Art",
		"time": "2009-02-22T14:26:46Z",
		"href": "http://wikipediaart.org/"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"web",
			"reference",
			"javascript",
			"html",
			"google",
			"standards",
			"dss"
		],
		"y": 10.710159160882968,
		"x": -0.5242525444324678,
		"extended": "",
		"description": "Welcome - doctype - Google Code",
		"time": "2009-02-22T14:23:41Z",
		"href": "http://code.google.com/p/doctype/wiki/Welcome?tm=6"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"technology",
			"design",
			"digital",
			"net",
			"interactive",
			"corbyand",
			"bailey",
			"corby"
		],
		"y": -10.937432845223613,
		"x": 1.0567461770024422,
		"extended": "",
		"description": "corby & baily - projects",
		"time": "2009-02-15T23:35:54Z",
		"href": "http://www.reconnoitre.net/"
	},
	{
		"cluster": 15,
		"tags": [
			"education",
			"development",
			"programming",
			"computerscience",
			"algorithms",
			"learning",
			"mathematics",
			"exercises",
			"problems",
			"puzzle"
		],
		"y": -0.1680203859453536,
		"x": -12.65605172923258,
		"extended": "",
		"description": "Project Euler",
		"time": "2009-02-15T18:27:04Z",
		"href": "http://projecteuler.net/"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"politics",
			"environmentalism",
			"activism"
		],
		"y": 2.7189625747693316,
		"x": 12.096241886348103,
		"extended": "",
		"description": "A row between California's greens | Tree-huggers v nerds | The Economist",
		"time": "2009-02-15T18:26:26Z",
		"href": "http://www.economist.com/world/unitedstates/displaystory.cfm?story_id=13109915"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"society",
			"politics",
			"middleclass",
			"development",
			"finance",
			"recession"
		],
		"y": 10.226402714239832,
		"x": 7.74801615596366,
		"extended": "",
		"description": "Two billion more bourgeois | The Economist",
		"time": "2009-02-15T18:25:46Z",
		"href": "http://www.economist.com/opinion/displaystory.cfm?story_id=13109687"
	},
	{
		"cluster": 14,
		"tags": [
			"language",
			"business",
			"design",
			"bollocks",
			"pretentious"
		],
		"y": -7.781293540174861,
		"x": 5.431199420853579,
		"extended": "",
		"description": "Language Log » The new logo",
		"time": "2009-02-15T18:22:51Z",
		"href": "http://languagelog.ldc.upenn.edu/nll/?p=1127"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"design",
			"culture",
			"politics",
			"protest",
			"society",
			"history"
		],
		"y": 0.2661182045877701,
		"x": 12.3398852715556,
		"extended": "",
		"description": "Futurismus -- Social Design Notes",
		"time": "2009-02-15T18:22:12Z",
		"href": "http://backspace.com/notes/2009/02/futurismus.php"
	},
	{
		"cluster": 10,
		"tags": [
			"religion",
			"politics",
			"judaism",
			"antisemitism",
			"society"
		],
		"y": 2.2614451156808406,
		"x": 12.35257118533652,
		"extended": "",
		"description": "Harry’s Place » Jesus! I’m turning into a Jew!",
		"time": "2009-02-15T18:21:09Z",
		"href": "http://www.hurryupharry.org/2009/02/13/jesus-i%E2%80%99m-turning-into-a-jew/"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"philosophy",
			"event",
			"debate",
			"twocultures",
			"art",
			"",
			"science",
			"tate",
			"londonconsortium",
			"cpsnow"
		],
		"y": -10.918116175540272,
		"x": 2.339678458967401,
		"extended": "",
		"description": "Two Cultures – Zoonomian",
		"time": "2009-02-15T18:19:28Z",
		"href": "http://communicatescience.com/zoonomian/2009/02/03/two-cultures/"
	},
	{
		"cluster": 2,
		"tags": [
			"video",
			"film",
			"sexuality",
			"sex",
			"history",
			"society",
			"sociology",
			"gender"
		],
		"y": -3.3716652520231283,
		"x": 12.223078708814105,
		"extended": "",
		"description": "Sex education films: they don't make them like they used to | Film | guardian.co.uk",
		"time": "2009-02-11T15:05:57Z",
		"href": "http://www.guardian.co.uk/film/filmblog/2009/feb/11/sex-education-films"
	},
	{
		"cluster": 2,
		"tags": [
			"apple",
			"app",
			"sync",
			"google",
			"calendar",
			"pim",
			"contacts",
			"organisation",
			"iphone"
		],
		"y": 6.833995416718554,
		"x": 3.526282593607513,
		"extended": "",
		"description": "Google Mobile - Sync",
		"time": "2009-02-11T15:05:04Z",
		"href": "http://www.google.com/mobile/apple/sync.html"
	},
	{
		"cluster": 10,
		"tags": [
			"news",
			"society",
			"politics",
			"sociology",
			"race",
			"racism",
			"idiots"
		],
		"y": 2.4227318802533424,
		"x": 12.707129700739674,
		"extended": "",
		"description": "Womanist Musings - PETA Dresses Up As KKK",
		"time": "2009-02-11T12:56:40Z",
		"href": "http://www.womanist-musings.com/2009/02/peta-and-racism.html"
	},
	{
		"cluster": 13,
		"tags": [
			"recession",
			"economics",
			"anthropology",
			"society",
			"culture",
			"capitalism",
			"finance",
			"history"
		],
		"y": -5.756442829802426,
		"x": 10.666523461450442,
		"extended": "According to this version, the period from 1945 to perhaps 1975 was marked by a tacit deal with elements of the North Atlantic male working class, who were offered guaranteed good jobs and social security in exchange for political loyalty. The problem for capital was that more and more people demanded in on the deal: people in the Third World, excluded minorities in the North, and, finally, women. At this point the system broke, the oil shock and recession of the '70s became a way of declaring that all deals were off: such groups could have political rights but these would no longer have any economic consequences.\n",
		"description": "Mute magazine - Debt: The First Five Thousand Years",
		"time": "2009-02-11T09:37:55Z",
		"href": "http://www.metamute.org/en/content/debt_the_first_five_thousand_years"
	},
	{
		"cluster": 8,
		"tags": [
			"online",
			"internet",
			"",
			"journalism",
			"business",
			"advertising",
			"strategy",
			"future",
			"media"
		],
		"y": -7.323425435155899,
		"x": 1.05393027417094,
		"extended": "Free content ultimately sends the message that the content is fungible; if it is fungible, then the Times has no business paying as much as it does for its content other than to be an eleemosynary institution trying to stave off extinction as long as possible. The Times needs to act on the correct belief that its content is not fungible.\n",
		"description": "Poynter Online - Romenesko",
		"time": "2009-02-11T09:31:49Z",
		"href": "http://www.poynter.org/column.asp?id=45&aid=158210"
	},
	{
		"cluster": 6,
		"tags": [
			"art",
			"copyright",
			"law",
			"shepherdfairey",
			"photography",
			"appropriation",
			"fairuse"
		],
		"y": -9.104485241850258,
		"x": 1.9142202678524867,
		"extended": "",
		"description": "myartspace>blog: Shepard Fairey sues the Associated Press over photograph of Obama",
		"time": "2009-02-11T09:24:29Z",
		"href": "http://www.myartspace.com/blog/2009/02/shepard-fairey-sues-associated-press.html"
	},
	{
		"cluster": 10,
		"tags": [
			"mmr",
			"science",
			"media",
			"politics",
			"health",
			"medicine",
			"policy"
		],
		"y": 1.5000106923641248,
		"x": 7.459975343467419,
		"extended": "",
		"description": "The preposterous prejudice of the anti-MMR lobby | David Aaronovitch - Times Online",
		"time": "2009-02-11T09:21:40Z",
		"href": "http://www.timesonline.co.uk/tol/comment/columnists/david_aaronovitch/article5696902.ece"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"programming",
			"computerscience",
			"reference",
			"functional",
			"tutorial",
			"learning"
		],
		"y": -6.629711291525639,
		"x": -8.845709100715121,
		"extended": "",
		"description": "Rippling Brainwaves: Haskell comprehension measured through WTF/min",
		"time": "2009-02-11T09:21:01Z",
		"href": "http://ripplingbrainwaves.blogspot.com/2009/02/haskell-comprehension-measured-through.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"business",
			"finance",
			"politics",
			"news",
			"adamsmith"
		],
		"y": 9.375756438530495,
		"x": 7.228578778205222,
		"extended": "",
		"description": "FT.com / Comment / Opinion - Adam Smith gets the last laugh",
		"time": "2009-02-11T09:19:17Z",
		"href": "http://www.ft.com/cms/s/0/2802e3a8-f77c-11dd-81f7-000077b07658.html?nclick_check=1"
	},
	{
		"cluster": 2,
		"tags": [
			"maths",
			"aesthetics",
			"geometry"
		],
		"y": -2.9688989145612443,
		"x": 2.23668870961623,
		"extended": "",
		"description": "The Myth That Will Not Go Away",
		"time": "2009-02-04T16:11:46Z",
		"href": "http://www.maa.org/devlin/devlin_05_07.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"libertarianism",
			"liberty",
			"leftwing",
			"society",
			"civil",
			"state"
		],
		"y": 2.469298612896391,
		"x": 12.171334299249182,
		"extended": "",
		"description": "Conor Gearty: Is there a risk that in pursuing its liberty agenda, the left is drifting into a dangerous brand of libertarianism?",
		"time": "2009-02-04T12:05:38Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/feb/02/liberty-central-civil-liberties-tony-benn"
	},
	{
		"cluster": 13,
		"tags": [
			"tax",
			"finance",
			"politics",
			"uk",
			"economics"
		],
		"y": 9.348629609811757,
		"x": 7.725752888737858,
		"extended": "",
		"description": "Vincent Cable: This crisis must spur us to take on the tax avoiders",
		"time": "2009-02-04T12:04:28Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/feb/03/vince-cable-tax-revenue"
	},
	{
		"cluster": 2,
		"tags": [
			"law",
			"uk",
			"police",
			"privacy",
			"civil",
			"liberty"
		],
		"y": 2.0343357404940954,
		"x": 6.816993755678323,
		"extended": "",
		"description": "Criminal policing",
		"time": "2009-02-04T11:49:01Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/feb/03/civil-liberties-stop-and-search"
	},
	{
		"cluster": 1,
		"tags": [
			"language",
			"linguistics",
			"music",
			"pop",
			"culture"
		],
		"y": -9.277306056139082,
		"x": 5.326575491719633,
		"extended": "",
		"description": "Oh boy, that'll be the day to rave on and not fade away",
		"time": "2009-02-04T11:46:26Z",
		"href": "http://languagelog.ldc.upenn.edu/nll/?p=1104"
	},
	{
		"cluster": 10,
		"tags": [
			"gaza",
			"conflict",
			"israel",
			"palestine",
			"war",
			"politics",
			"antisemitism",
			"jewish",
			"leftwing"
		],
		"y": 3.0728911009487696,
		"x": 7.298792555908269,
		"extended": "",
		"description": "Jonathan Freedland: As British Jews come under attack, the liberal left must not remain silent | Comment is free | The Guardian",
		"time": "2009-02-04T11:45:49Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/feb/04/gaza-jewish-community"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"history",
			"war",
			"conflict",
			"genocide",
			"israel",
			"palestine",
			"gaza",
			"middleeast",
			"antisemitism",
			"jewish",
			"warcrimes",
			"wwii",
			"holocaust"
		],
		"y": 3.0806232486476834,
		"x": 7.254376906431985,
		"extended": "",
		"description": "Robert Fisk’s World: When it comes to Gaza, leave the Second World War out of it - Robert Fisk, Commentators - The Independent",
		"time": "2009-02-04T11:27:12Z",
		"href": "http://www.independent.co.uk/opinion/commentators/fisk/robert-fiskrsquos-world-when-it-comes-to-gaza-leave-the-second-world-war-out-of-it-1418270.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"uk",
			"employment",
			"politics",
			"recession",
			"benefits"
		],
		"y": 9.03433652800723,
		"x": 8.524046973247751,
		"extended": "",
		"description": "Max Hastings: Recession-era anger is bound to grow | Comment is free | The Guardian",
		"time": "2009-02-02T11:44:30Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/feb/02/hastings-max-recession"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"finance",
			"bailout",
			"moralhazard"
		],
		"y": 9.319788999361581,
		"x": 7.749446738789715,
		"extended": "",
		"description": "Hazardous Materials?: Financial Page: The New Yorker",
		"time": "2009-02-02T11:34:15Z",
		"href": "http://www.newyorker.com/talk/financial/2009/02/09/090209ta_talk_surowiecki"
	},
	{
		"cluster": 10,
		"tags": [
			"education",
			"society",
			"politics",
			"economy"
		],
		"y": 3.15627728638446,
		"x": 12.733181364863169,
		"extended": "",
		"description": "Government to nationalise failing private schools | Education | The Guardian",
		"time": "2009-02-02T11:24:07Z",
		"href": "http://www.guardian.co.uk/education/2009/jan/31/private-schools-nationalised-academies"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"US",
			"obama",
			"recession",
			"bailout"
		],
		"y": 8.760642429671986,
		"x": 11.736324321783302,
		"extended": "",
		"description": "FT.com / Columnists / Christopher Caldwell - Is the stimulus Obama’s Iraq?",
		"time": "2009-02-02T11:23:03Z",
		"href": "http://www.ft.com/cms/s/0/2a48cef2-ef02-11dd-bbb5-0000779fd2ac.html?nclick_check=1"
	},
	{
		"cluster": 2,
		"tags": [
			"education",
			"society",
			"sociology",
			"race",
			"",
			"steiner"
		],
		"y": 3.050315464526707,
		"x": 13.010959976579523,
		"extended": "",
		"description": "Origin of the Specious: Race, lies and stereotypes in Rudolf Steiner’s anthroposophy - Counterknowledge.com",
		"time": "2009-02-02T11:13:01Z",
		"href": "http://counterknowledge.com/2009/01/origin-of-the-specious-race-lies-and-stereotypes-in-steiner%E2%80%99s-anthroposophy/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"culture",
			"economics",
			"politics",
			"protest",
			"rosemuseum",
			"brandeis"
		],
		"y": 6.588242784701392,
		"x": 7.7291224995448005,
		"extended": "",
		"description": "ArtCal Zine - Roundup - Rose Museum Roundup",
		"time": "2009-02-02T11:12:37Z",
		"href": "http://zine.artcal.net/2009/01/rose-museum-roundup.php"
	},
	{
		"cluster": 13,
		"tags": [
			"business",
			"economics",
			"politics",
			"tax"
		],
		"y": 8.750613674936384,
		"x": 7.765319119332708,
		"extended": "",
		"description": "Firms' secret tax avoidance schemes cost UK billions | Business | The Guardian",
		"time": "2009-02-02T11:12:01Z",
		"href": "http://www.guardian.co.uk/business/2009/feb/02/tax-gap-avoidance"
	},
	{
		"cluster": 13,
		"tags": [
			"technology",
			"economics",
			"government",
			"politics",
			"regulation",
			"recession"
		],
		"y": 8.971348460543826,
		"x": 9.083493661842859,
		"extended": "",
		"description": "Technology stimulus plans | Paved with good intentions | The Economist",
		"time": "2009-02-02T11:01:14Z",
		"href": "http://www.economist.com/business/displaystory.cfm?story_id=13022193"
	},
	{
		"cluster": 10,
		"tags": [
			"gaza",
			"politics",
			"palestine",
			"middleeast",
			"israel",
			"conflict"
		],
		"y": 3.0861452134902487,
		"x": 7.316055569345251,
		"extended": "",
		"description": "Diplomacy after the war in Gaza | A long and bumpy road | The Economist",
		"time": "2009-02-02T10:53:33Z",
		"href": "http://www.economist.com/world/mideast-africa/displaystory.cfm?story_id=13035647"
	},
	{
		"cluster": 1,
		"tags": [
			"programming",
			"art",
			"computing",
			"music",
			"culture",
			"technology",
			"interaction"
		],
		"y": -11.470786211391996,
		"x": 1.5777359033185052,
		"extended": "",
		"description": "Infinite C (2008) - Stewart Smith",
		"time": "2009-02-02T10:42:33Z",
		"href": "http://rhizome.org/editorial/2301"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"law",
			"tax",
			"culture"
		],
		"y": -10.056890010002984,
		"x": 2.1536824243677013,
		"extended": "",
		"description": "Frieze Magazine | Comment | Legal Drama",
		"time": "2009-02-02T10:40:44Z",
		"href": "http://www.frieze.com/comment/article/legal_drama/"
	},
	{
		"cluster": 17,
		"tags": [
			"technology",
			"programming",
			"tutorial",
			"computer",
			"vcs",
			"git",
			"distributed",
			"scm"
		],
		"y": 6.830135829484809,
		"x": 0.3665921308919341,
		"extended": "",
		"description": "Git from the bottom up - Lost in Technopolis",
		"time": "2009-01-30T10:44:27Z",
		"href": "http://www.newartisans.com/blog/2008/04/git-from-the-bottom-up.html"
	},
	{
		"cluster": 8,
		"tags": [
			"education",
			"technology",
			"",
			"internet",
			"history",
			"animation"
		],
		"y": 5.595594444981448,
		"x": 6.627227296263676,
		"extended": "",
		"description": "Sociological Images » HOW THE INTERNET WAS INVENTED",
		"time": "2009-01-30T01:21:14Z",
		"href": "http://contexts.org/socimages/2009/01/29/how-the-internet-was-invented/"
	},
	{
		"cluster": 2,
		"tags": [
			"technology",
			"hacking",
			"electronics",
			"tikitag",
			"rfid",
			"hardware",
			""
		],
		"y": -4.390264869672002,
		"x": 3.947456514141131,
		"extended": "",
		"description": "hackerati's Tumblelog, RFID on the cheap - hacking tikitag",
		"time": "2009-01-29T18:03:04Z",
		"href": "http://hackerati.com/post/57314994/rfid-on-the-cheap-hacking-tikitag"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"performance",
			"tool",
			"test",
			"dsl"
		],
		"y": -3.77872349614054,
		"x": 3.3736483212345094,
		"extended": "",
		"description": "Use tools running on M-Lab to test your Internet connection. | M-Lab",
		"time": "2009-01-29T14:17:45Z",
		"href": "http://measurementlab.net/measurement-lab-tools"
	},
	{
		"cluster": 13,
		"tags": [
			"law",
			"economics",
			"politics",
			"humanrightsact",
			"batshit",
			"crazy"
		],
		"y": 8.233211025703252,
		"x": 8.946879226977842,
		"extended": "",
		"description": "Afua Hirsch: Companies are increasingly turning to the Human Rights Act to mitigate loss of profits",
		"time": "2009-01-29T11:29:30Z",
		"href": "http://www.guardian.co.uk/commentisfree/libertycentral/2009/jan/28/hedge-fund-human-rights"
	},
	{
		"cluster": 1,
		"tags": [
			"jarmusch",
			"",
			"art",
			"culture",
			"originality",
			"authorship",
			"aesthetics",
			"appropriation"
		],
		"y": -9.804233297333242,
		"x": 2.249154700812072,
		"extended": "",
		"description": "NEWSgrist - where spin is art: Jim Jarmusch: Nothing is Original",
		"time": "2009-01-29T11:28:56Z",
		"href": "http://newsgrist.typepad.com/underbelly/2009/01/jim-jarmusch-nothing-is-original-.html"
	},
	{
		"cluster": 1,
		"tags": [
			"photography",
			"flickr",
			"art",
			"culture",
			"technology",
			"aesthetics"
		],
		"y": -11.642552985729658,
		"x": 0.6779342454702867,
		"extended": "",
		"description": "average photographs study (2008) - kitschpatrol",
		"time": "2009-01-29T11:27:39Z",
		"href": "http://rhizome.org/editorial/2304"
	},
	{
		"cluster": 1,
		"tags": [
			"floss",
			"free",
			"software",
			"culture",
			"freesoftware",
			"art",
			"hardware",
			"technology"
		],
		"y": -12.007398035962202,
		"x": 1.3568260947918196,
		"extended": "",
		"description": "Mute magazine - Culture and politics after the net",
		"time": "2009-01-29T11:26:16Z",
		"href": "http://www.metamute.org/en/content/code_dreams_are_made_of_this"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"politics",
			"history",
			"art",
			"culture"
		],
		"y": 6.702882794714615,
		"x": 7.89225776200497,
		"extended": "",
		"description": "Artists and advocates calling for (re)creation of depression-era cultural agencies",
		"time": "2009-01-29T11:23:38Z",
		"href": "http://feeds.feedburner.com/~r/artthreat/~3/525778684/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"computerscience",
			"ai",
			"neuralnetworks",
			"genetic",
			"algorithms",
			"book",
			"learning",
			"maths"
		],
		"y": 0.8854066348096219,
		"x": -12.794776116017504,
		"extended": "",
		"description": "Neural Networks - A Systematic Introduction",
		"time": "2009-01-29T11:14:34Z",
		"href": "http://page.mi.fu-berlin.de/rojas/neural/index.html.html"
	},
	{
		"cluster": 13,
		"tags": [
			"food",
			"fish",
			"environment",
			"japan",
			"economics",
			"farming"
		],
		"y": 6.922563766758273,
		"x": 5.142079219174422,
		"extended": "",
		"description": "FT.com / Columnists / David Pilling - Japan faces up to the prospect of ‘peak fish’",
		"time": "2009-01-29T10:55:14Z",
		"href": "http://www.ft.com/cms/s/0/0fd4fe70-ed58-11dd-88f3-0000779fd2ac.html?nclick_check=1"
	},
	{
		"cluster": 8,
		"tags": [
			"culture",
			"art",
			"",
			"internet",
			"magazine"
		],
		"y": -10.120856766448927,
		"x": 1.3937372886721808,
		"extended": "",
		"description": "palimpsest magamazine",
		"time": "2009-01-29T10:50:34Z",
		"href": "http://palimpsest.ca/current.html"
	},
	{
		"cluster": 1,
		"tags": [
			"photography",
			"art",
			"",
			"technology",
			"culture",
			"video",
			"aesthetics",
			"flickr"
		],
		"y": -11.62667259771538,
		"x": 0.6608109656986905,
		"extended": "",
		"description": "Rhizome | average photographs study (2008) - kitschpatrol",
		"time": "2009-01-29T10:42:07Z",
		"href": "http://rhizome.org/editorial/2304#comment-54603"
	},
	{
		"cluster": 14,
		"tags": [
			"culture",
			"",
			"compression",
			"aesthetics",
			"computerscience",
			"beauty",
			"design",
			"information",
			"visualisation",
			"paper"
		],
		"y": -1.609489216316914,
		"x": 10.162598728484443,
		"extended": "",
		"description": "[0812.4360] Driven by Compression Progress: A Simple Principle Explains Essential Aspects of Subjective Beauty, Novelty, Surprise, Interestingness, Attention, Curiosity, Creativity, Art, Science, Music, Jokes",
		"time": "2009-01-29T10:41:38Z",
		"href": "http://arxiv.org/abs/0812.4360"
	},
	{
		"cluster": 2,
		"tags": [
			"ping.fm"
		],
		"y": -2.7568855036130064,
		"x": 4.7776684765418596,
		"extended": "",
		"description": "Twitter / mistertim",
		"time": "2009-01-28T10:36:04Z",
		"href": "http://twitter.com/mistertim"
	},
	{
		"cluster": 10,
		"tags": [
			"holocaust",
			"antisemitism",
			"jewish",
			"politics",
			"darfur",
			"gaza",
			"society"
		],
		"y": 2.16088362893568,
		"x": 12.978634134050928,
		"extended": "",
		"description": "D’Escoto and The Holocaust",
		"time": "2009-01-28T09:27:12Z",
		"href": "http://www.hurryupharry.org/2009/01/27/descoto-and-the-holocaust/"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"art",
			"culture",
			"songwriting"
		],
		"y": -10.255144801916655,
		"x": 2.5919177934705573,
		"extended": "",
		"description": "Will Hodgkinson: three chords and a whoop make the perfect pop song",
		"time": "2009-01-28T09:20:46Z",
		"href": "http://www.guardian.co.uk/music/2009/jan/28/music-perfect-pop-song-pulp"
	},
	{
		"cluster": 10,
		"tags": [
			"violence",
			"protest",
			"antisemitism",
			"politics",
			"society",
			"gaza"
		],
		"y": 2.237203457556467,
		"x": 12.697216076404175,
		"extended": "",
		"description": "Cause and Effect",
		"time": "2009-01-28T09:17:30Z",
		"href": "http://www.hurryupharry.org/2009/01/14/cause-and-effect/"
	},
	{
		"cluster": 10,
		"tags": [
			"holocaust",
			"history",
			"jewish",
			"nazi",
			"ww2",
			"auschwitz",
			"politics",
			"society",
			"antisemitism"
		],
		"y": 2.059554570380141,
		"x": 13.116899955358404,
		"extended": "",
		"description": "David Cesarani: The mass killings at Auschwitz were made possible by the attitudes of ordinary people",
		"time": "2009-01-28T09:16:27Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/27/holocaust-memorial-day-auschwitz"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"exhibition",
			"culture",
			"technology"
		],
		"y": -11.225721003886862,
		"x": 0.8150311474097818,
		"extended": "",
		"description": "From the Print Archive: \"Compression\" Exhibit",
		"time": "2009-01-28T09:15:16Z",
		"href": "http://www.tommoody.us/archives/2009/01/27/from-the-print-archive-compression-exhibit/"
	},
	{
		"cluster": 1,
		"tags": [
			"sound",
			"art",
			"music",
			"culture",
			"technology"
		],
		"y": -11.271892395834513,
		"x": 1.6598063825790306,
		"extended": "",
		"description": "UbuWeb Sound - Brian Joseph Davis",
		"time": "2009-01-27T14:08:47Z",
		"href": "http://www.ubu.com/sound/davis.html"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"politics",
			"",
			"uk",
			"liberty"
		],
		"y": 2.4481505986141925,
		"x": 12.078944485507554,
		"extended": "",
		"description": "Tony Benn: Liberty is not an issue of left or right, it is crucial to democracy | Comment is free | guardian.co.uk",
		"time": "2009-01-27T13:59:23Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/27/surveillance-idcards"
	},
	{
		"cluster": 13,
		"tags": [
			"mentalhealth",
			"politics",
			"",
			"economics",
			"society",
			"culture",
			"depression",
			"health"
		],
		"y": 3.9655908687556978,
		"x": 13.369694359577519,
		"extended": "",
		"description": "Give me affluenza over poverty any day | News",
		"time": "2009-01-27T13:59:09Z",
		"href": "http://www.thisislondon.co.uk/standard/article-23628919-details/Give+me+affluenza+over+poverty+any+day/article.do"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"politics",
			"",
			"uk"
		],
		"y": 2.5304380573033725,
		"x": 12.055544822480513,
		"extended": "",
		"description": "George Monbiot: This lobbying scandal confirms it. The dying days of Labour are upon us | Comment is free | The Guardian",
		"time": "2009-01-27T13:58:08Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/27/house-lords-scandal"
	},
	{
		"cluster": 8,
		"tags": [
			"programming",
			"art",
			"",
			"technology",
			"graphics",
			"browsers",
			"web",
			"internet"
		],
		"y": -10.1077273262812,
		"x": -0.26067137239826416,
		"extended": "",
		"description": "tom moody » Wow, Now I Can Zoom an Entire Page!",
		"time": "2009-01-27T13:57:41Z",
		"href": "http://www.tommoody.us/archives/2009/01/27/wow-now-i-can-zoom-an-entire-page/"
	},
	{
		"cluster": 6,
		"tags": [
			"politics",
			"law",
			"copyright",
			"freeculture",
			"society",
			"ip"
		],
		"y": -3.609088109278154,
		"x": 9.334478862790139,
		"extended": "",
		"description": "open...: Intellectual Monopolists on the Back Foot",
		"time": "2009-01-26T14:28:15Z",
		"href": "http://opendotdotdot.blogspot.com/2009/01/intellectual-monopolists-on-back-foot.html"
	},
	{
		"cluster": 3,
		"tags": [
			"mathematics",
			"art",
			"culture",
			"education",
			"theory",
			"maths",
			"graph"
		],
		"y": -9.016152105871448,
		"x": -3.465956541834973,
		"extended": "",
		"description": "Graph theory as a recurring theme in a series of mathematics and art course modules - Journal of Mathematics and the Arts",
		"time": "2009-01-26T10:53:24Z",
		"href": "http://www.informaworld.com/smpp/content~content=a790414972~db=all~order=page"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"art",
			"games",
			"technology",
			"computing"
		],
		"y": -11.33557778398365,
		"x": 0.974147445491321,
		"extended": "",
		"description": "Gamasutra - Persuasive Games: The Proceduralist Style",
		"time": "2009-01-26T09:30:55Z",
		"href": "http://www.gamasutra.com/view/feature/3909/persuasive_games_the_.php"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"video",
			"installation",
			"public",
			"culture",
			"technology"
		],
		"y": -10.822792154341396,
		"x": 0.5226720487907613,
		"extended": "",
		"description": "DVblog » Under Scan by Rafael Lozano-Hemmer",
		"time": "2009-01-26T09:18:18Z",
		"href": "http://dvblog.org/?p=2055"
	},
	{
		"cluster": 2,
		"tags": [
			"computing",
			"maths",
			"education",
			"learning",
			"technology",
			"society"
		],
		"y": -5.1497419031181995,
		"x": 8.244552163906842,
		"extended": "",
		"description": "Face to Face: Alan Kay Still Waiting for the Revolution | Scholastic.com",
		"time": "2009-01-26T09:08:17Z",
		"href": "http://content.scholastic.com/browse/article.jsp?id=5"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"technology",
			"video",
			"event",
			"festival"
		],
		"y": -11.109944338506457,
		"x": 0.8075383489829082,
		"extended": "",
		"description": "transmediale.09 Streams Help Page | transmediale",
		"time": "2009-01-26T09:04:25Z",
		"href": "http://www.transmediale.de/en/transmediale09-streams-help-page-en"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"control",
			"society",
			"surveillance",
			"power",
			"cctv"
		],
		"y": -5.5204961920521285,
		"x": 11.216730927282612,
		"extended": "",
		"description": "Mute magazine - How do we move beyond ‘I’m being watched’?",
		"time": "2009-01-26T09:04:08Z",
		"href": "http://www.metamute.org/en/content/how_do_we_move_beyond_i_m_being_watched"
	},
	{
		"cluster": 10,
		"tags": [
			"culture",
			"society",
			"politics",
			"feminism",
			"sexuality",
			"gender",
			"sociology",
			"beauty"
		],
		"y": -2.3640186280562663,
		"x": 12.329000740110558,
		"extended": "",
		"description": "Sociological Images » (NSFW!) ALTERNATIVE BEAUTY STANDARDS OR SAME OLD THING?",
		"time": "2009-01-26T08:58:35Z",
		"href": "http://contexts.org/socimages/2009/01/23/alternative-beauty-standards-or-same-old-thing/"
	},
	{
		"cluster": 17,
		"tags": [
			"education",
			"ruby",
			"programming",
			"computerscience",
			"learning",
			"AI",
			"game"
		],
		"y": 0.2569006991897763,
		"x": -12.533290849092232,
		"extended": "git://github.com/ryanb/ruby-warrior.git\n",
		"description": "ryanb's ruby-warrior at master - GitHub",
		"time": "2009-01-26T08:56:19Z",
		"href": "http://github.com/ryanb/ruby-warrior/tree/master"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"computerscience",
			"functional",
			"haskell",
			"lisp",
			"language"
		],
		"y": -5.892866422894487,
		"x": -9.395032478020042,
		"extended": "",
		"description": "About Liskell",
		"time": "2009-01-26T08:54:35Z",
		"href": "http://liskell.org/about"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"politics",
			"culture"
		],
		"y": 0.5250485647599044,
		"x": 11.422718293339912,
		"extended": "",
		"description": "Jon Canter: Just don't say the J word when you're in police society",
		"time": "2009-01-26T08:52:03Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/26/comment-jobs-recession"
	},
	{
		"cluster": 10,
		"tags": [
			"obama",
			"us",
			"politics",
			"gaza",
			"palestine",
			"israel",
			"afghanistan",
			"iran",
			"war"
		],
		"y": 3.2169621528235366,
		"x": 7.411727363296841,
		"extended": "",
		"description": "Barack Obama’s triple test, Pervez Hoodbhoy",
		"time": "2009-01-26T08:50:23Z",
		"href": "http://www.opendemocracy.net/article/barack-obama-s-triple-test"
	},
	{
		"cluster": 10,
		"tags": [
			"obama",
			"US",
			"politics",
			"inauguration"
		],
		"y": 8.61384709250489,
		"x": 12.02066995240176,
		"extended": "",
		"description": "Simon Schama on Obama's inauguration speech: Right rhetoric for a nation in need",
		"time": "2009-01-26T08:48:55Z",
		"href": "http://www.guardian.co.uk/world/2009/jan/21/simon-schama-obama-inauguration-speech"
	},
	{
		"cluster": 10,
		"tags": [
			"israel",
			"gaza",
			"palestine",
			"conflict",
			"politics",
			"middleeast"
		],
		"y": 3.083700940278295,
		"x": 7.3204845890513655,
		"extended": "",
		"description": "Friends don’t let friends build settlements",
		"time": "2009-01-26T08:47:53Z",
		"href": "http://www.hurryupharry.org/2009/01/25/friends-don%E2%80%99t-let-friends-build-settlements/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"computerscience",
			"book",
			"learning",
			"functional",
			"lisp",
			"scheme",
			"sicp"
		],
		"y": -7.772585054646389,
		"x": -12.180428692598966,
		"extended": "",
		"description": "Resources - Hacker News Reads SICP | Google Groups",
		"time": "2009-01-25T17:01:21Z",
		"href": "http://groups.google.com/group/hacker-news-reads-sicp/web/resources"
	},
	{
		"cluster": 2,
		"tags": [
			"ping.fm",
			"Dancearea",
			"Austin",
			"Boston",
			"Always",
			"Anytime",
			"24",
			"Twenty",
			"Four",
			"Seven",
			"AA",
			"247",
			"Phantasy",
			"Sound",
			"Erol",
			"Alkan",
			"Massive",
			"Party",
			"James",
			"Connolly",
			"Lvis",
			"1990",
			"Partizan"
		],
		"y": -2.9797527881493844,
		"x": 5.524392873766134,
		"extended": "Debut single from Ultrect's Dance Area, featuring London's Austin Boston. Download now on Beatport -  includes remixes from Starkey, Noob &amp; Skull Juice.h...\n",
		"description": "YouTube - Dance Area Ft Austin Boston - AA/247",
		"time": "2009-01-23T15:04:16Z",
		"href": "http://uk.youtube.com/watch?v=KOITwa0ewfg"
	},
	{
		"cluster": 11,
		"tags": [
			"programming",
			"utility",
			"mac",
			"app",
			"extension",
			"editor",
			"textmate",
			"getbundle",
			"bundle",
			"installer"
		],
		"y": 9.411079767807506,
		"x": -2.0668637912045944,
		"extended": "",
		"description": "TextMate Blog » Getting More Bundles",
		"time": "2009-01-23T10:56:44Z",
		"href": "http://blog.macromates.com/2006/getting-more-bundles/"
	},
	{
		"cluster": 1,
		"tags": [
			"science",
			"music",
			"technology",
			"media",
			"photography"
		],
		"y": -8.645156364020664,
		"x": 5.383716595714652,
		"extended": "",
		"description": "Vinyl archaeologist plays records from photos of their grooves - Short Sharp Science - New Scientist",
		"time": "2009-01-23T10:23:30Z",
		"href": "http://www.newscientist.com/blogs/shortsharpscience/2009/01/vinyl-archeologist-plays-recor.html"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"light",
			"music",
			"technology",
			"scupture",
			"installation"
		],
		"y": -10.598466301624134,
		"x": 0.017581654738471043,
		"extended": "",
		"description": "Rhizome | >>HYPERION_Fragment<<(2006) - rosalie",
		"time": "2009-01-23T10:23:05Z",
		"href": "http://rhizome.org/editorial/2275"
	},
	{
		"cluster": 10,
		"tags": [
			"society",
			"family",
			"politics",
			"gender",
			"education",
			"children"
		],
		"y": 3.1865724226328807,
		"x": 12.854355730929624,
		"extended": "",
		"description": "Zoe Williams: This is a job for the boys",
		"time": "2009-01-23T10:21:43Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/21/need-male-role-models"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"functional",
			"scheme",
			"haskell",
			"interpreter"
		],
		"y": -5.121642170956528,
		"x": -8.360220892188213,
		"extended": "",
		"description": "Yhc/Javascript - HaskellWiki",
		"time": "2009-01-22T13:08:33Z",
		"href": "http://www.haskell.org/haskellwiki/Yhc/Javascript"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"programming",
			"web",
			"javascript",
			"functional",
			"scheme",
			"interpreter"
		],
		"y": 10.020205973618394,
		"x": -3.7213361752017886,
		"extended": "",
		"description": "Bluish Coder: Scheme Implementation in Javascript",
		"time": "2009-01-22T13:08:17Z",
		"href": "http://www.bluishcoder.co.nz/2006/05/scheme-implementation-in-javascript.html"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"reference",
			"api",
			"computerscience",
			"functional",
			"haskell",
			"languages",
			"functions",
			"prelude",
			"documentation"
		],
		"y": -6.071050194848181,
		"x": -9.368733692872595,
		"extended": "",
		"description": "The Haskell 98 Report: Standard Prelude",
		"time": "2009-01-22T09:45:15Z",
		"href": "http://www.haskell.org/onlinereport/standard-prelude.html"
	},
	{
		"cluster": 9,
		"tags": [
			"web",
			"admin",
			"linux",
			"server",
			"apache",
			"awstats",
			"stats"
		],
		"y": 0.3239200208680739,
		"x": 3.1280215856761617,
		"extended": "",
		"description": "Separate awstats for multiple Apache2 vhosts | Fladi.at",
		"time": "2009-01-22T09:23:26Z",
		"href": "http://www.fladi.at/2008/04/10/separate-awstats-for-multiple-apache2-vhosts/"
	},
	{
		"cluster": 11,
		"tags": [
			"mac",
			"osx",
			"applescript",
			"productivity",
			"tool",
			"quicksilver",
			"evernote",
			"action"
		],
		"y": -2.817248730700852,
		"x": 6.0064668304127125,
		"extended": "",
		"description": "macosxhints.com - Clip to Evernote via Quicksilver and AppleScript",
		"time": "2009-01-22T09:23:00Z",
		"href": "http://www.macosxhints.com/article.php?story=20081002082657926"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"tutorial",
			"video",
			"computerscience",
			"learning",
			"scheme",
			"sicp"
		],
		"y": -7.810696353220719,
		"x": -12.209725819859518,
		"extended": "",
		"description": "sicp-text-to-video-map",
		"time": "2009-01-22T09:22:43Z",
		"href": "http://community.schemewiki.org/?sicp-text-to-video-map"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"video",
			"computerscience",
			"learning",
			"functional",
			"scheme",
			"sicp",
			"lecture"
		],
		"y": -7.813634202808965,
		"x": -12.194344333778204,
		"extended": "",
		"description": "hn book club: Home",
		"time": "2009-01-22T09:22:43Z",
		"href": "http://hn-book-club.jottit.com/"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"tutorial",
			"computerscience",
			"learning",
			"functional",
			"haskell"
		],
		"y": -6.4288288972003755,
		"x": -8.933437222542523,
		"extended": "",
		"description": "A Gentle Introduction to Haskell, Version 98",
		"time": "2009-01-22T09:22:43Z",
		"href": "http://www.haskell.org/tutorial/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"judaism",
			"society",
			"palestine",
			"israel",
			"conflict",
			"protest",
			"gaza",
			"islam",
			"antisemitism"
		],
		"y": 3.026476809986828,
		"x": 7.3729586715078055,
		"extended": "",
		"description": "DD Guttenplan: I regret missing the Gaza protest march | Comment is free | guardian.co.uk",
		"time": "2009-01-19T14:26:04Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/17/gaza-protest"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"culture",
			"technology",
			"video",
			"film",
			"internet",
			"blogging",
			"aesthetics",
			"manifesto",
			"vlogging"
		],
		"y": -10.909778761028186,
		"x": 0.7632895635526005,
		"extended": "",
		"description": "The Lumiere Manifesto | videoblogging.info",
		"time": "2009-01-19T10:41:23Z",
		"href": "http://videoblogging.info/"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"culture",
			"technology",
			"video",
			"film",
			"internet",
			"netart",
			"httpgallery",
			"michaelszpakowski",
			"dorangolan"
		],
		"y": -10.646294866006437,
		"x": 0.8536569058137279,
		"extended": "",
		"description": "furtherfield review - Whereof one cannot speak, thereof one must be silent...",
		"time": "2009-01-19T10:40:20Z",
		"href": "http://www.furtherfield.org/displayreview.php?review_id=329"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"video",
			"film",
			"netart"
		],
		"y": -10.475006578526965,
		"x": 1.0255308281957498,
		"extended": "",
		"description": "www.somedancersandmusicians.com",
		"time": "2009-01-19T10:38:50Z",
		"href": "http://www.somedancersandmusicians.com/"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"internet",
			"culture",
			"technology",
			"wikipedia",
			"netart",
			"humour"
		],
		"y": -10.293853202471109,
		"x": 1.0000468681622812,
		"extended": "",
		"description": "Rhizome | 100% Fun: An Interview With Claude Closky",
		"time": "2009-01-19T09:15:41Z",
		"href": "http://rhizome.org/editorial/2269"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"online",
			"technology",
			"video",
			"interview",
			"netart",
			"humour",
			"comedy"
		],
		"y": -10.724784934600494,
		"x": 0.8605896777872264,
		"extended": "",
		"description": "Rhizome | Get it? An Interview with Cory Arcangel on Comedy",
		"time": "2009-01-19T09:12:10Z",
		"href": "http://rhizome.org/editorial/2205"
	},
	{
		"cluster": 14,
		"tags": [
			"architecture",
			"design",
			"society",
			"control",
			"culture"
		],
		"y": -5.176971411991094,
		"x": 11.638047310677734,
		"extended": "",
		"description": "What’s the deal with angled steps?",
		"time": "2009-01-19T09:01:14Z",
		"href": "http://architectures.danlockton.co.uk/2009/01/15/whats-the-deal-with-angled-steps/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"leftwing",
			"society",
			"gaza",
			"palestine",
			"hamas",
			"apologism",
			"hypocricy",
			"islam",
			"conflict",
			"gender",
			"identity",
			"sexuality"
		],
		"y": 2.8970402501761976,
		"x": 7.463629475588196,
		"extended": "",
		"description": "Harry’s Place » Transgendered Trots For Hamas",
		"time": "2009-01-19T09:00:37Z",
		"href": "http://www.hurryupharry.org/2009/01/15/transgendere-trots-for-hamas/"
	},
	{
		"cluster": 1,
		"tags": [
			"iran",
			"culture",
			"music",
			"society",
			"art"
		],
		"y": -6.295424604037001,
		"x": 10.171864683480136,
		"extended": "",
		"description": "Something inside so strong | Music | The Guardian",
		"time": "2009-01-19T08:59:29Z",
		"href": "http://www.guardian.co.uk/music/2009/jan/16/popandrock-freedom-of-speech"
	},
	{
		"cluster": 10,
		"tags": [
			"culture",
			"society",
			"judaism",
			"antisemitism",
			"politics",
			"identity",
			"theatre",
			"literature",
			"racism"
		],
		"y": 1.0514584667451978,
		"x": 12.41430049234343,
		"extended": "",
		"description": "Julia Pascal: It is time to bury Fagin for good | Comment is free | The Guardian",
		"time": "2009-01-19T08:59:06Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/17/jewish-stereotypes-fagin-shylock"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"society",
			"leftwing",
			"gaza",
			"conflict",
			"israel",
			"palestine",
			"hamas",
			"idf"
		],
		"y": 3.0029624712908993,
		"x": 7.385599097887297,
		"extended": "",
		"description": "Harry’s Place » Sheffield PSC/SWP: No criticism of Hamas allowed",
		"time": "2009-01-19T08:57:47Z",
		"href": "http://www.hurryupharry.org/2009/01/18/sheffield-pscswp-no-criticism-of-hamas-allowed/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"society",
			"gaza",
			"conflict",
			"israel",
			"palestine"
		],
		"y": 3.0595827693725934,
		"x": 7.365185817167836,
		"extended": "",
		"description": "The reactionary right-wing politics hegemonising the Gaza demonstrations | Workers' Liberty",
		"time": "2009-01-19T08:57:00Z",
		"href": "http://www.workersliberty.org/story/2009/01/15/politics-demonstrations-against-israels-offensive-gaza"
	},
	{
		"cluster": 10,
		"tags": [
			"activism",
			"society",
			"hacks",
			"politics",
			"feminism",
			"sociology",
			"barbie",
			"consumerism",
			"directaction",
			"toys",
			"gijoe"
		],
		"y": 2.659771402339311,
		"x": 12.071275240776812,
		"extended": "",
		"description": "Barbie Liberation",
		"time": "2009-01-17T16:29:11Z",
		"href": "http://sniggle.net/barbie.php"
	},
	{
		"cluster": 13,
		"tags": [
			"news",
			"economics",
			"finance",
			"trading",
			"shorselling",
			"stock",
			"markets"
		],
		"y": 9.012992283053203,
		"x": 6.02739276447163,
		"extended": "",
		"description": "ivan krstić · code culture » How Porsche hacked the financial system and made a killing",
		"time": "2009-01-14T16:59:21Z",
		"href": "http://radian.org/notebook/porsche"
	},
	{
		"cluster": 14,
		"tags": [
			"art",
			"media",
			"technology",
			"design",
			"visualisation",
			"sound",
			"science",
			"architecture",
			"radio",
			"installation",
			"exhibition"
		],
		"y": -10.9001233869778,
		"x": -0.1571042191930786,
		"extended": "",
		"description": "Barbican - Rafael Lozano-Hemmer",
		"time": "2009-01-14T09:16:13Z",
		"href": "http://www.barbican.org.uk/artgallery/event-detail.asp?ID=7879"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"technology",
			"radiator",
			"festival"
		],
		"y": -11.218277967575434,
		"x": 0.8933870795235149,
		"extended": "",
		"description": "Radiator Festival 2009 | Radiator",
		"time": "2009-01-14T09:15:25Z",
		"href": "http://www.radiator-festival.org/radiator-festival-2009"
	},
	{
		"cluster": 14,
		"tags": [
			"maths",
			"design",
			"video",
			"architecture",
			"mathematics",
			"calculus",
			"symmetry",
			"beauty",
			"nature"
		],
		"y": -3.9744252315469697,
		"x": 2.5805331943856578,
		"extended": "",
		"description": "TED Blog: Calculus and the new forms of architecture: Greg Lynn on TED.com",
		"time": "2009-01-14T09:14:00Z",
		"href": "http://blog.ted.com/2009/01/calculus_and_th.php"
	},
	{
		"cluster": 10,
		"tags": [
			"bias",
			"psychology",
			"sociology",
			"politics"
		],
		"y": 6.30051709487215,
		"x": 6.934225934814455,
		"extended": "",
		"description": "Sociological Images » INTERNALIZED BIAS",
		"time": "2009-01-14T08:47:17Z",
		"href": "http://contexts.org/socimages/2009/01/12/internalized-bias/"
	},
	{
		"cluster": 17,
		"tags": [
			"computation",
			"learning",
			"computerscience",
			"programming",
			"ai",
			"comput",
			"computational-linguistics",
			"nlp",
			"math",
			"grammar",
			"linguistics"
		],
		"y": 0.33139611193793256,
		"x": -11.989153968589433,
		"extended": "",
		"description": "Notes on Computational Linguistics: LIN/CSE 475",
		"time": "2009-01-14T08:46:35Z",
		"href": "https://www.msu.edu/course/lin/475/notes/"
	},
	{
		"cluster": 2,
		"tags": [
			"olpc",
			"technology",
			"education",
			"sociology",
			"determinism"
		],
		"y": -5.881784428224861,
		"x": 7.77170954555725,
		"extended": "",
		"description": "Sociological Images » ONE LAPTOP PER CHILD: THEN WHAT?",
		"time": "2009-01-14T08:44:35Z",
		"href": "http://contexts.org/socimages/2009/01/13/one-laptop-per-child-then-what/"
	},
	{
		"cluster": 10,
		"tags": [
			"language",
			"politics",
			"sexuality",
			"race"
		],
		"y": 0.4186232028432557,
		"x": 8.773207976961203,
		"extended": "",
		"description": "Patrick Strudwick: What did the media say about Prince Harry's homophobic comments? Not much, it seems | Comment is free | guardian.co.uk",
		"time": "2009-01-14T08:42:42Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/13/gayrights-prince-harry"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"culture",
			"irony",
			"appropriation"
		],
		"y": -9.534003655394729,
		"x": 3.961611881316922,
		"extended": "",
		"description": "Alan McGee: The non-ironic revival of Phil Collins | Music | guardian.co.uk",
		"time": "2009-01-14T08:40:55Z",
		"href": "http://www.guardian.co.uk/music/musicblog/2009/jan/13/phil-collins-non-ironic-revival"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"technology",
			"culture",
			"culturejamming",
			"advertising"
		],
		"y": -11.235511059386159,
		"x": 0.9306157737593025,
		"extended": "",
		"description": "Sociological Images » Creative Defacement",
		"time": "2009-01-14T08:39:32Z",
		"href": "http://contexts.org/socimages/2009/01/13/creative-defacement/"
	},
	{
		"cluster": 7,
		"tags": [
			"education",
			"development",
			"programming",
			"apple",
			"cocoa",
			"learning",
			"iphone",
			"objective-c"
		],
		"y": 7.8817243711426,
		"x": -6.182843925213016,
		"extended": "iPhone Bootcamp Blogs\n",
		"description": "Scott Leberknight's Weblog - iPhone Bootcamp Blogs",
		"time": "2009-01-12T08:49:55Z",
		"href": "http://www.sleberknight.com/blog/sleberkn/entry/iphone_bootcamp_logs"
	},
	{
		"cluster": 17,
		"tags": [
			"technology",
			"programming",
			"rubikscube",
			"lego",
			"robot",
			"maths",
			"awesome",
			"science"
		],
		"y": 1.4334257742044998,
		"x": -11.302491731613562,
		"extended": "",
		"description": "Tilted Twister",
		"time": "2009-01-12T08:42:04Z",
		"href": "http://www.tiltedtwister.com/"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"internet",
			"culture",
			"online"
		],
		"y": -9.967373301980627,
		"x": 1.3556256766875354,
		"extended": "",
		"description": "Thomson & Craighead",
		"time": "2009-01-11T13:36:39Z",
		"href": "http://www.thomson-craighead.net/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"music",
			"software",
			"linux",
			"distro"
		],
		"y": -8.79525939734249,
		"x": 3.5902958421526687,
		"extended": "",
		"description": "start - APODIO",
		"time": "2009-01-11T13:35:27Z",
		"href": "http://www.apo33.org/apodio/doku.php"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"oop",
			"language",
			"vm",
			"why",
			"potion",
			"mixins",
			"interpeter"
		],
		"y": 3.0868046558927156,
		"x": -5.205639648831517,
		"extended": "",
		"description": "why's potion at master — GitHub",
		"time": "2009-01-11T13:35:01Z",
		"href": "http://github.com/why/potion/tree/master"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"freeculture",
			"art",
			"internet",
			"culture",
			"technology",
			"lessig"
		],
		"y": -10.318788362511212,
		"x": 1.2694704488938604,
		"extended": "",
		"description": "YouTube - Lawrence Lessig on Colbert Report",
		"time": "2009-01-11T13:33:30Z",
		"href": "http://uk.youtube.com/watch?v=EzsBv2HDaRo"
	},
	{
		"cluster": 2,
		"tags": [
			"language",
			"english",
			"spellimg",
			"epitomy",
			"mistakes",
			"imanidiot"
		],
		"y": -1.2178837339041368,
		"x": 5.969216902920971,
		"extended": "",
		"description": "epitomy",
		"time": "2009-01-10T16:30:38Z",
		"href": "http://www.wsu.edu/~brians/errors/epitomy.html"
	},
	{
		"cluster": 3,
		"tags": [
			"culture",
			"video",
			"politics",
			"criticism",
			"sociology",
			"media",
			"gender",
			"theory",
			"disney",
			"race"
		],
		"y": -1.6780743583550235,
		"x": 10.942604680567145,
		"extended": "",
		"description": "Mickey Mouse Monopoly Preview | Media Education Foundation",
		"time": "2009-01-09T14:32:34Z",
		"href": "http://www.mediaed.org/cgi-bin/commerce.cgi?preadd=action&key=112&template=PDGCommTemplates/HTN/Item_Preview.html"
	},
	{
		"cluster": 2,
		"tags": [
			"code",
			"phone",
			"o2",
			"transfer",
			"number",
			"pac"
		],
		"y": -2.8166481465779563,
		"x": 4.990907372730274,
		"extended": "",
		"description": "Help",
		"time": "2009-01-09T14:27:00Z",
		"href": "http://service.o2.co.uk/IQ/SRVS/CGI-BIN/WEBCGI.EXE?New,KB=Companion,question=ref(user):str(Mobile),CASE=17495"
	},
	{
		"cluster": 2,
		"tags": [
			"hack",
			"reference",
			"hardware",
			"iphone",
			"phone",
			"jailbreak"
		],
		"y": -4.006559648741952,
		"x": 4.859744004172119,
		"extended": "",
		"description": "Dev-Team Blog - The man from DelMonte - He say Yes!",
		"time": "2009-01-09T14:21:19Z",
		"href": "http://blog.iphone-dev.org/post/61060174/the-man-from-delmonte-he-say-yes"
	},
	{
		"cluster": 1,
		"tags": [
			"event",
			"design",
			"art",
			"culture",
			"technology",
			"london",
			"print",
			"exhibition",
			"printing",
			"ica"
		],
		"y": -11.570890175783987,
		"x": 0.4211385011012643,
		"extended": "Emily King\n",
		"description": "Institute of Contemporary Arts : Visual Art : A Recent History of Writing and Drawing",
		"time": "2009-01-09T14:20:39Z",
		"href": "http://www.ica.org.uk/recenthistory"
	},
	{
		"cluster": 1,
		"tags": [
			"event",
			"art",
			"technology",
			"london",
			"exhibition"
		],
		"y": -11.360913267122815,
		"x": 0.36668851125315705,
		"extended": "",
		"description": "Exhibitions at HTTP Gallery: Whereof one cannot speak, thereof one must be silent: Doron Golan and Michael Szpakowski",
		"time": "2009-01-09T14:20:09Z",
		"href": "http://www.http.uk.net/exhibitions/golan_szpakowski/index.shtml"
	},
	{
		"cluster": 10,
		"tags": [
			"art",
			"technology",
			"politics",
			"research",
			"london",
			"social",
			"activism",
			"uk",
			"change"
		],
		"y": -9.456651254117602,
		"x": -0.21625653632677944,
		"extended": "",
		"description": "| co-pilot |",
		"time": "2009-01-09T14:18:52Z",
		"href": "http://co-pilot.net/"
	},
	{
		"cluster": 8,
		"tags": [
			"web",
			"internet",
			"art",
			"culture",
			"technology",
			"design",
			"news",
			"london",
			"net"
		],
		"y": -10.695546528861666,
		"x": 0.9845814021827657,
		"extended": "",
		"description": "net art at furtherfield",
		"time": "2009-01-09T14:18:20Z",
		"href": "http://www.furtherfield.org/"
	},
	{
		"cluster": 1,
		"tags": [
			"film",
			"marketing",
			"culture",
			"art",
			"sociology",
			"gender",
			"steretypes"
		],
		"y": -10.18462734182099,
		"x": 1.6138447050037048,
		"extended": "",
		"description": "Sociological Images » MARKETING MOVIES TO MEN AND WOMEN",
		"time": "2009-01-08T19:54:57Z",
		"href": "http://contexts.org/socimages/2009/01/06/marketing-movies-to-men-and-women/"
	},
	{
		"cluster": 7,
		"tags": [
			"development",
			"programming",
			"ruby",
			"sql",
			"orm",
			"database",
			"library"
		],
		"y": 7.996539108435004,
		"x": -9.810260518786908,
		"extended": "",
		"description": "M4DBI - Models (and more) for DBI",
		"time": "2009-01-08T16:19:23Z",
		"href": "http://purepistos.net/m4dbi"
	},
	{
		"cluster": 12,
		"tags": [
			"canvas",
			"html",
			"graphics",
			"web",
			"javascript",
			"html5",
			"programming",
			"development",
			"generative"
		],
		"y": 10.28889718351926,
		"x": -3.5849206782273764,
		"extended": "",
		"description": "HTML 5 canvas - the basics - Opera Developer Community",
		"time": "2009-01-08T15:33:56Z",
		"href": "http://dev.opera.com/articles/view/html-5-canvas-the-basics/"
	},
	{
		"cluster": 1,
		"tags": [
			"design",
			"art",
			"culture",
			"technology",
			"maeda"
		],
		"y": -10.718922650394445,
		"x": 1.0236356488058806,
		"extended": "",
		"description": "John Maeda on his journey in design | Video on TED.com",
		"time": "2009-01-08T13:44:45Z",
		"href": "http://www.ted.com/index.php/talks/john_maeda_on_design.html"
	},
	{
		"cluster": 1,
		"tags": [
			"programming",
			"art",
			"culture",
			"technology",
			"generative",
			"history",
			"emulator",
			"compunting",
			"poetry",
			"writing"
		],
		"y": -11.79793523774928,
		"x": 0.8117473240589044,
		"extended": "",
		"description": "MUC",
		"time": "2009-01-08T13:17:27Z",
		"href": "http://alpha60.de/research/muc/"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"sociology",
			"gender",
			"society",
			"sex"
		],
		"y": -3.3688308491855365,
		"x": 12.07497314636411,
		"extended": "",
		"description": "Sociological Images » THE IDEA OF THE ENTITLEMENT TO GOOD SEX",
		"time": "2009-01-08T13:13:47Z",
		"href": "http://contexts.org/socimages/2009/01/07/the-idea-of-the-entitlement-to-good-sex/"
	},
	{
		"cluster": 1,
		"tags": [
			"event",
			"art",
			"culture",
			"technology",
			"music",
			"sound",
			"exhibition"
		],
		"y": -11.412615059955193,
		"x": 1.4556616881413627,
		"extended": "",
		"description": "Gasworks - Felix's Machines -",
		"time": "2009-01-08T12:49:55Z",
		"href": "http://www.gasworks.org.uk/exhibitions/detail.php?id=403"
	},
	{
		"cluster": 1,
		"tags": [
			"learning",
			"event",
			"art",
			"culture",
			"science",
			"twocultures",
			"lecture"
		],
		"y": -10.76296258749802,
		"x": 2.3276806797662295,
		"extended": "http://www.tate.org.uk/modern/eventseducation/symposia/16580.htm\n",
		"description": "The British Society for Literature and Science · Art and Science Now: The Two Cultures in Question",
		"time": "2009-01-08T10:38:41Z",
		"href": "http://www.bsls.ac.uk/?p=249"
	},
	{
		"cluster": 1,
		"tags": [
			"programming",
			"art",
			"culture",
			"technology",
			"computer",
			"music",
			"sound",
			"synthesis"
		],
		"y": -11.492381181014519,
		"x": 1.789604938158412,
		"extended": "",
		"description": "Music Thing: TINY MUSIC MAKERS: Pt 3: The THX Sound",
		"time": "2009-01-07T14:17:01Z",
		"href": "http://musicthing.blogspot.com/2005/05/tiny-music-makers-pt-3-thx-sound.html"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"tv",
			"humour",
			"thewire"
		],
		"y": -0.623420898867437,
		"x": 12.192742508820901,
		"extended": "",
		"description": "McSweeney's Internet Tendency: You've Got to Watch The Wire.",
		"time": "2009-01-07T12:37:57Z",
		"href": "http://www.mcsweeneys.net/2008/3/7blaszak.html"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"war",
			"uk",
			"middleeast",
			"palestine",
			"israel",
			"conflict",
			"libdems"
		],
		"y": 3.0880728348984294,
		"x": 7.268997250318442,
		"extended": "",
		"description": "Nick Clegg: We must stop arming Israel | Comment is free | The Guardian",
		"time": "2009-01-07T12:06:25Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/07/nick-clegg-israel-gaza-war"
	},
	{
		"cluster": 7,
		"tags": [
			"programming",
			"development",
			"graphics",
			"ruby",
			"library",
			"cairo"
		],
		"y": 7.625654878876659,
		"x": -9.164521719285206,
		"extended": "",
		"description": "Ruby bindings",
		"time": "2009-01-06T18:29:48Z",
		"href": "http://www.cairographics.org/rcairo/"
	},
	{
		"cluster": 17,
		"tags": [
			"art",
			"programming",
			"graphics",
			"generative",
			"python",
			"tool",
			"visualisation"
		],
		"y": 1.761473380930054,
		"x": -4.843161591275304,
		"extended": "",
		"description": "NodeBox | Home",
		"time": "2009-01-06T18:29:29Z",
		"href": "http://nodebox.net/code/index.php/Home"
	},
	{
		"cluster": 6,
		"tags": [
			"art",
			"culture",
			"technology",
			"video",
			"politics",
			"internet",
			"law",
			"copyright",
			"debate"
		],
		"y": -8.832011032598645,
		"x": 2.123249211110772,
		"extended": "",
		"description": "FORA.tv - Battle of Ideas: Copyright in a Digital Age",
		"time": "2009-01-06T18:27:55Z",
		"href": "http://fora.tv/2008/11/01/Battle_of_Ideas_Copyright_in_a_Digital_Age"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"photography"
		],
		"y": -9.236704125133704,
		"x": 0.919055449609377,
		"extended": "",
		"description": "Florencia Durante",
		"time": "2009-01-06T18:23:35Z",
		"href": "http://www.florenciadurante.com/"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"design",
			"culture",
			"technology"
		],
		"y": -8.445594246506184,
		"x": 5.6374440384566995,
		"extended": "",
		"description": "Blog: It's time to redesign the guitar | Music | guardian.co.uk",
		"time": "2009-01-06T13:08:01Z",
		"href": "http://www.guardian.co.uk/music/musicblog/2009/jan/06/popandrock"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"tutorial",
			"computerscience",
			"introduction",
			"functional",
			"haskell",
			"logic",
			"monads"
		],
		"y": -6.570159814064503,
		"x": -8.951016233364465,
		"extended": "",
		"description": "Monads in 15 minutes: Backtracking and Maybe",
		"time": "2009-01-05T20:29:17Z",
		"href": "http://www.randomhacks.net/articles/2007/03/12/monads-in-15-minutes"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"programming",
			"web",
			"wordpress",
			"php"
		],
		"y": 9.90079131681919,
		"x": -4.819106530729709,
		"extended": "",
		"description": "Idealien Category Enhancements « Idealien Studios",
		"time": "2009-01-05T20:28:46Z",
		"href": "http://idealienstudios.com/code/ice/"
	},
	{
		"cluster": 0,
		"tags": [
			"web",
			"admin",
			"server",
			"sysadmin",
			"http",
			"apache",
			"url",
			"rewrite"
		],
		"y": 0.3719339967932942,
		"x": 3.1132871833575777,
		"extended": "",
		"description": "URL Rewriting Guide - Apache HTTP Server",
		"time": "2009-01-05T20:28:46Z",
		"href": "http://httpd.apache.org/docs/2.2/rewrite/rewrite_guide.html"
	},
	{
		"cluster": 17,
		"tags": [
			"maths",
			"programming",
			"graphics",
			"computerscience",
			"algorithms",
			"geometry"
		],
		"y": 1.2545409836676065,
		"x": -12.812278387852768,
		"extended": "",
		"description": "Geometry Algorithm Archive",
		"time": "2009-01-05T20:28:46Z",
		"href": "http://www.softsurfer.com/algorithm_archive.htm"
	},
	{
		"cluster": 13,
		"tags": [
			"depression",
			"happiness",
			"health",
			"mentalhealth",
			"massiveinsultingfallacy",
			"society",
			"politics",
			"poverty",
			"economics"
		],
		"y": 4.031405120338343,
		"x": 13.428026138092088,
		"extended": "",
		"description": "Rowenna Davis: Research from the Prince's Trust shows young people are unhappy, but tackling depression means tackling deprivation | Comment is free | guardian.co.uk",
		"time": "2009-01-05T20:11:04Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/05/youngpeople-mentalhealth"
	},
	{
		"cluster": 10,
		"tags": [
			"middleeast",
			"palestine",
			"israel",
			"conflict",
			"war",
			"religion",
			"protest",
			"politics",
			"socialism"
		],
		"y": 3.0619858922590746,
		"x": 7.287042438073968,
		"extended": "",
		"description": "Our failure to condemn the assault on Gaza plays into the hands of extremist ideologues | Comment is free | guardian.co.uk",
		"time": "2009-01-05T20:10:17Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/05/islam-gaza-extremism"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"art",
			"culture"
		],
		"y": -10.236007447132954,
		"x": 2.5277893915609866,
		"extended": "",
		"description": "Blog: It's time for pop and classical to join forces",
		"time": "2009-01-05T20:09:46Z",
		"href": "http://www.guardian.co.uk/music/musicblog/2009/jan/05/pop-classical-music-join-forces"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"design",
			"control",
			"society",
			"architecture",
			"culture",
			"sociology",
			"environment"
		],
		"y": -5.245509665275045,
		"x": 11.676666217293375,
		"extended": "",
		"description": "Staggering insight",
		"time": "2009-01-05T20:09:23Z",
		"href": "http://architectures.danlockton.co.uk/2009/01/05/staggering-insight/"
	},
	{
		"cluster": 10,
		"tags": [
			"internet",
			"news",
			"privacy",
			"censorship",
			"society",
			"politics",
			"law"
		],
		"y": 1.8319507927985024,
		"x": 13.866518356623414,
		"extended": "",
		"description": "Frank Fisher: Freedom of speech on the internet should be protected | Comment is free | guardian.co.uk",
		"time": "2009-01-05T20:06:23Z",
		"href": "http://www.guardian.co.uk/commentisfree/2008/dec/29/censorship-andyburnham"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"environment",
			"culture",
			"architecture",
			"control",
			"power",
			"sociology",
			"society"
		],
		"y": -5.218360458048954,
		"x": 11.681792414492337,
		"extended": "",
		"description": "The semiotics of signs vs fences :: Architectures of Control :: Dan Lockton",
		"time": "2009-01-05T20:02:20Z",
		"href": "http://architectures.danlockton.co.uk/2008/12/30/the-semiotics-of-signs-vs-fences/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"computerscience",
			"algorithm",
			"reference",
			"development",
			"book",
			"reading",
			"tutorial"
		],
		"y": 1.4314761025999432,
		"x": -11.944213783419404,
		"extended": "",
		"description": "Algorithm implementation - Wikibooks, collection of open-content textbooks",
		"time": "2009-01-05T20:01:26Z",
		"href": "http://en.wikibooks.org/wiki/Algorithm_implementation"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"culture",
			"politics",
			"economics",
			"community",
			"environment",
			"oil",
			"photography"
		],
		"y": 6.585055057878523,
		"x": 7.664032008442487,
		"extended": "",
		"description": "Sociological Images » AFTER THE OIL BOOM: IMAGES OF AN OIL BUST",
		"time": "2009-01-05T20:00:46Z",
		"href": "http://contexts.org/socimages/2009/01/01/after-the-oil-boom-images-of-an-oil-bust/"
	},
	{
		"cluster": 7,
		"tags": [
			"browser",
			"ruby",
			"web",
			"development",
			"programming"
		],
		"y": 8.751165978842584,
		"x": -7.942491346482226,
		"extended": "",
		"description": "hackety org » Dismantling BrowserPlus",
		"time": "2009-01-05T20:00:10Z",
		"href": "http://hackety.org/2008/06/09/dismantlingBrowserPlus.html"
	},
	{
		"cluster": 10,
		"tags": [
			"middleeast",
			"palestine",
			"israel",
			"conflict",
			"war",
			"religion",
			"protest",
			"politics",
			"socialism"
		],
		"y": 3.0619875693413223,
		"x": 7.28704658302184,
		"extended": "",
		"description": "Gary Younge: Israel has yet to learn the US lesson, that the war on terror was a failure | Comment is free | The Guardian",
		"time": "2009-01-05T19:59:23Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/05/terrorism-israel-obama"
	},
	{
		"cluster": 10,
		"tags": [
			"middleeast",
			"palestine",
			"israel",
			"conflict",
			"war",
			"religion",
			"protest",
			"politics",
			"socialism"
		],
		"y": 3.0607343810764505,
		"x": 7.274506025953125,
		"extended": "",
		"description": "Sunny Hundal: I marched to express solidarity with Palestinians, not to support Hamas or Islam | Comment is free | guardian.co.uk",
		"time": "2009-01-05T19:59:01Z",
		"href": "http://www.guardian.co.uk/commentisfree/2009/jan/05/israel-palestine-gaza-demo-london"
	},
	{
		"cluster": 1,
		"tags": [
			"goldsmiths",
			"masters",
			"art",
			"technology"
		],
		"y": -10.826610157284309,
		"x": -0.5916909556593947,
		"extended": "",
		"description": "Jane Prophet: Portfolio 2008",
		"time": "2009-01-05T18:11:48Z",
		"href": "http://www.janeprophet.com/"
	},
	{
		"cluster": 1,
		"tags": [
			"goldsmiths",
			"masters",
			"programming",
			"art",
			"technology",
			"generative",
			"music"
		],
		"y": -11.086465856672788,
		"x": -1.0710657585113241,
		"extended": "",
		"description": "Tim Blackwell",
		"time": "2009-01-05T18:10:17Z",
		"href": "http://www.timblackwell.com/"
	},
	{
		"cluster": 1,
		"tags": [
			"goldsmiths",
			"masters",
			"art",
			"technology",
			"books"
		],
		"y": -10.867720611060804,
		"x": -0.6745781833191647,
		"extended": "",
		"description": "eleanor dare's Storefront - Lulu.com",
		"time": "2009-01-05T18:09:57Z",
		"href": "http://stores.lulu.com/ma501ed"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"music",
			"online",
			"download",
			"mp3"
		],
		"y": -10.251292152369125,
		"x": 2.6108585240315207,
		"extended": "",
		"description": "The last partridge to rise gets the most sticks thrown at it",
		"time": "2009-01-05T17:55:27Z",
		"href": "http://www.incubatorgallery.org/gallery/present/gallery1/gallery1.html"
	},
	{
		"cluster": 1,
		"tags": [
			"design",
			"art",
			"graphics",
			"music",
			"records",
			"intervention",
			"publicart",
			"environmentalart"
		],
		"y": -9.907939129457246,
		"x": 2.9518905521970056,
		"extended": "",
		"description": "Nikolay Saveliev",
		"time": "2009-01-05T17:48:44Z",
		"href": "http://www.nikolaysaveliev.com/popmatters.html"
	},
	{
		"cluster": 4,
		"tags": [
			"learning",
			"programming",
			"tutorial",
			"computerscience",
			"functional",
			"reference",
			"haskell"
		],
		"y": -6.5884918783822135,
		"x": -8.866443622759396,
		"extended": "",
		"description": "Learn You a Haskell for Great Good!",
		"time": "2009-01-05T17:19:49Z",
		"href": "http://learnyouahaskell.com/"
	},
	{
		"cluster": 2,
		"tags": [
			"learning",
			"academic",
			"goldsmiths",
			"study",
			"masters"
		],
		"y": -9.326432327209764,
		"x": -1.624970137067797,
		"extended": "",
		"description": "Department of Computing > Academic Information",
		"time": "2009-01-05T09:28:32Z",
		"href": "http://www.doc.gold.ac.uk/intranet/academic/"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"programming",
			"web",
			"javascript",
			"prototype",
			"event",
			"callback",
			"onload"
		],
		"y": 10.160757039996836,
		"x": -3.636136626426178,
		"extended": "",
		"description": "Orangevolt: A speedy Prototype Event.observe (aka window.onload) replacement",
		"time": "2009-01-02T16:38:26Z",
		"href": "http://orangevolt.blogspot.com/2007/05/speedy-prototype-eventobserve-aka.html"
	},
	{
		"cluster": 11,
		"tags": [
			"programming",
			"utility",
			"mac",
			"extension",
			"text",
			"editor",
			"emacs",
			"textmate"
		],
		"y": 9.344580753797404,
		"x": -2.1306390525200163,
		"extended": "",
		"description": "TextMate Minor Mode — ones zeros majors and minors",
		"time": "2009-01-02T16:37:28Z",
		"href": "http://ozmm.org/posts/textmate_minor_mode.html"
	},
	{
		"cluster": 12,
		"tags": [
			"design",
			"development",
			"web",
			"css",
			"html",
			"typography",
			"ligature",
			"unicode"
		],
		"y": 10.466331352940356,
		"x": 0.4299227033078603,
		"extended": "",
		"description": "Ligatures On The Web",
		"time": "2009-01-02T16:35:44Z",
		"href": "http://safalra.com/web-design/typography/ligatures/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"computerscience",
			"book",
			"learning",
			"functional",
			"lisp",
			"scheme"
		],
		"y": -7.724527406026913,
		"x": -12.158585560305303,
		"extended": "",
		"description": "Sketchy LISP - Lambda Calculus and the Y Combinator (C3 S5)",
		"time": "2009-01-02T16:33:27Z",
		"href": "http://www.t3x.org/sketchy/vol1/sl21.html"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"technology",
			"programming",
			"graphics",
			"generative",
			"computerscience",
			"processing"
		],
		"y": 1.6504404788609086,
		"x": -4.728775984316769,
		"extended": "",
		"description": "Ask Proggit: Have you even created anything good with Processing? Links please! : programming",
		"time": "2009-01-02T16:32:31Z",
		"href": "http://www.reddit.com/r/programming/comments/7lqpz/ask_proggit_have_you_even_created_anything_good/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"technology",
			"video",
			"film"
		],
		"y": -10.801679124581664,
		"x": 0.8487096468300503,
		"extended": "",
		"description": "U B U W E B - Film & Video: Oliver Payne & Nick Relph - Comma, Pregnant Pause",
		"time": "2009-01-02T16:31:57Z",
		"href": "http://www.ubu.com/film/payne-relph_comma.html"
	},
	{
		"cluster": 13,
		"tags": [
			"business",
			"news",
			"economics",
			"politics",
			"finance",
			"recession",
			"chicago",
			"laissezfaire",
			"capitalism",
			"freemarket"
		],
		"y": 9.453434408719849,
		"x": 7.125939835018862,
		"extended": "",
		"description": "Bloomberg.com: Friedman Would Be Roiled as Chicago Disciples Rue Repudiation",
		"time": "2009-01-02T16:30:28Z",
		"href": "http://www.bloomberg.com/apps/news?pid=20601109&sid=a3GVhIHGyWRM&refer=home"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"criticism",
			"python",
			"typesystems",
			"java",
			"dynamic",
			"comparison",
			"ducktyping",
			"statictyping"
		],
		"y": 3.860004895344634,
		"x": -4.448226911491411,
		"extended": "",
		"description": "Python Makes Me Nervous - Ted Dziuba",
		"time": "2008-12-29T16:10:54Z",
		"href": "http://teddziuba.com/2008/12/python-makes-me-nervous.html"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"ruby",
			"web",
			"scalability",
			"hilarious",
			"twitter",
			"distributed",
			"java",
			"hadoop",
			"rant",
			"marvellous",
			"opensource",
			"mapreduce",
			"dataprocessing",
			"parralel"
		],
		"y": 8.5556479078231,
		"x": -7.900409769113579,
		"extended": "Processing large amounts of data lets a nerd excuse himself for being a shut-in, because shit, he's doing important work in there. He's got to command an army of machines, all working in unison. That will show the football team who the real man is. Sure beats talking to girls.\n",
		"description": "Hadoop: When grownups do open source • The Register",
		"time": "2008-12-29T14:27:38Z",
		"href": "http://www.theregister.co.uk/2008/08/11/hadoop_dziuba/"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"science",
			"technology",
			"sociology"
		],
		"y": -6.132609356318854,
		"x": 7.789905761545745,
		"extended": "",
		"description": "Sociological Images » THE TRUTH ABOUT INFECTED CIGARS: FAITH IN SCIENCE",
		"time": "2008-12-29T14:06:12Z",
		"href": "http://contexts.org/socimages/2008/12/29/the-truth-about-infected-cigars-faith-in-science/"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"internet",
			"culture",
			"netart",
			"artists"
		],
		"y": -10.078816204565,
		"x": 1.1068183227457797,
		"extended": "",
		"description": "implicit art » Tops of 2008: A Different Kind of Year in Review",
		"time": "2008-12-27T19:28:01Z",
		"href": "http://nathanielstern.com/blog/2008/12/25/tops-of-2008-a-different-kind-of-year-in-review/"
	},
	{
		"cluster": 1,
		"tags": [
			"media",
			"culture",
			"tv",
			"film",
			"wire",
			"davidsimon",
			"drama"
		],
		"y": -1.7792375137198793,
		"x": 11.455641580315177,
		"extended": "",
		"description": "TV drama: The Shield versus The Wire | Culture | The Guardian",
		"time": "2008-12-27T19:26:57Z",
		"href": "http://www.guardian.co.uk/culture/2008/dec/27/tv-drama-david-simon-wire-shield"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"development",
			"programming",
			"computerscience",
			"mathematics",
			"fractal",
			"complexnumbers",
			"mandelbrot"
		],
		"y": 3.483151287637889,
		"x": -10.146298350029234,
		"extended": "",
		"description": "CodeIdol - Thinking about Ruby Cookbook - Numbers - Using Complex Numbers",
		"time": "2008-12-27T17:46:20Z",
		"href": "http://codeidol.com/other/rubyckbk/Numbers/Using-Complex-Numbers/"
	},
	{
		"cluster": 12,
		"tags": [
			"design",
			"development",
			"web",
			"wordpress",
			"plugin",
			"css",
			"php",
			"html",
			"tag",
			"body",
			"class"
		],
		"y": 10.534747447706987,
		"x": 0.38080047850288506,
		"extended": "",
		"description": "Wordpress Plugin: ClassyBody",
		"time": "2008-12-27T17:43:04Z",
		"href": "http://www.alistercameron.com/2007/01/04/wordpress-plugin-classybody/"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"programming",
			"lambda",
			"web",
			"hack",
			"php",
			"computerscience",
			"functional",
			"closure"
		],
		"y": -3.9063492921763343,
		"x": -6.995736771251292,
		"extended": "",
		"description": "PHP Closures",
		"time": "2008-12-27T15:00:48Z",
		"href": "http://www.steike.com/code/php-closures/"
	},
	{
		"cluster": 14,
		"tags": [
			"business",
			"design",
			"finance",
			"economy",
			"recession",
			"advice"
		],
		"y": 7.924469935743336,
		"x": 4.794144975928552,
		"extended": "",
		"description": "Designing Through the Recession - Design Observer",
		"time": "2008-12-25T09:45:20Z",
		"href": "http://designobserver.com/archives/entry.html?id=38873"
	},
	{
		"cluster": 2,
		"tags": [
			"computing",
			"computer",
			"humour",
			"pastiche"
		],
		"y": -8.82028625446086,
		"x": -1.7305446178128847,
		"extended": "",
		"description": "How It Works .... The Computer (Ladybird books, 1978) - Boing Boing Gadgets",
		"time": "2008-12-25T09:44:26Z",
		"href": "http://gadgets.boingboing.net/2008/12/24/how-it-works-the-com.html"
	},
	{
		"cluster": 2,
		"tags": [
			"education",
			"computing",
			"computer",
			"book",
			"learning",
			"nostalgia"
		],
		"y": -9.467315908826661,
		"x": -4.856843050690757,
		"extended": "",
		"description": "How It Works...The Computer",
		"time": "2008-12-25T09:42:47Z",
		"href": "http://www.pointlessmuseum.com/computer/"
	},
	{
		"cluster": 13,
		"tags": [
			"music",
			"economics",
			"research",
			"business",
			"longtail",
			"distribution",
			"marketing"
		],
		"y": 5.925217864712718,
		"x": 4.7516506864411445,
		"extended": "",
		"description": "Most music didn't sell a single copy in 2008 | Music | guardian.co.uk",
		"time": "2008-12-23T15:34:28Z",
		"href": "http://www.guardian.co.uk/music/2008/dec/23/music-sell-sales"
	},
	{
		"cluster": 15,
		"tags": [
			"development",
			"programming",
			"computerscience",
			"book",
			"reading",
			"mathematics",
			"free"
		],
		"y": 0.450262747853363,
		"x": -11.838776938158503,
		"extended": "",
		"description": "Bill the Lizard: Even More Free Programming Books",
		"time": "2008-12-23T14:14:09Z",
		"href": "http://www.billthelizard.com/2008/12/even-more-free-programming-books.html"
	},
	{
		"cluster": 1,
		"tags": [
			"wiki",
			"art",
			"culture",
			"photography",
			"event",
			"free",
			"wikipedia",
			"open",
			"project",
			"v&amp;a"
		],
		"y": -9.368272272418118,
		"x": 1.283872571573074,
		"extended": "",
		"description": "Wikipedia:Wikipedia Loves Art at the Victoria and Albert Museum - Wikipedia, the free encyclopedia",
		"time": "2008-12-23T14:13:33Z",
		"href": "http://en.wikipedia.org/wiki/Wikipedia:Wikipedia_Loves_Art_at_the_Victoria_and_Albert_Museum#During_February_2009_at_the_V.26A"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"technology",
			"network",
			"media",
			"london",
			"events"
		],
		"y": -11.394814506945378,
		"x": 0.7806054988457635,
		"extended": "",
		"description": "NODE.London - Networked, Open, Distributed, Events. London",
		"time": "2008-12-23T14:13:00Z",
		"href": "http://nodel.org/index.php"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"science",
			"religion",
			"gender",
			"news",
			"sexuality",
			"catholicism"
		],
		"y": 2.2365340437294483,
		"x": 8.122145141581077,
		"extended": "",
		"description": "Pope misuses science to attack homosexuality - Short Sharp Science - New Scientist",
		"time": "2008-12-23T12:44:45Z",
		"href": "http://www.newscientist.com/blogs/shortsharpscience/2008/12/pope-shows-his-ignorance-of-ec.html"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"technology",
			"religion",
			"future",
			"jewish",
			"judaism",
			"sabbath",
			"kosher"
		],
		"y": -8.33578174436365,
		"x": 6.455206687925484,
		"extended": "",
		"description": "Naomi Alderman: Will the technological future be kosher for Jews? | Technology | guardian.co.uk",
		"time": "2008-12-23T12:44:18Z",
		"href": "http://www.guardian.co.uk/technology/2008/dec/23/naomi-alderman"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"photography",
			"law",
			"privacy"
		],
		"y": 4.0839970599034325,
		"x": 8.211418844000486,
		"extended": "",
		"description": "Photography: Yes, you have rights • The Register",
		"time": "2008-12-23T12:43:50Z",
		"href": "http://www.theregister.co.uk/2008/12/23/photography_rights/"
	},
	{
		"cluster": 6,
		"tags": [
			"art",
			"politics",
			"culture",
			"law",
			"copyright",
			"resale",
			"right"
		],
		"y": -5.377741281490851,
		"x": 9.303405623899637,
		"extended": "",
		"description": "Government wants to extend denial of royalties to dead artists' estates | OUT-LAW.COM",
		"time": "2008-12-23T12:43:35Z",
		"href": "http://www.out-law.com/page-9675"
	},
	{
		"cluster": 2,
		"tags": [
			"work",
			"business",
			"economy",
			"IT",
			"industry",
			"finance"
		],
		"y": 7.856625408405554,
		"x": 4.716818435831972,
		"extended": "",
		"description": "Reg readers say ‘don’t panic’ about the economy • The Register",
		"time": "2008-12-23T11:43:05Z",
		"href": "http://www.theregister.co.uk/2008/12/23/reg_readers_on_the_economic_downturn/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"computerscience",
			"language",
			"distributed",
			"computation",
			"vm",
			"swarm",
			"vega"
		],
		"y": -11.439226854807215,
		"x": -4.737131158560166,
		"extended": "",
		"description": "Swarm: A true distributed programming language - Blog -",
		"time": "2008-12-23T11:18:05Z",
		"href": "http://blog.locut.us/2008/10/06/swarm-a-true-distributed-programming-language/"
	},
	{
		"cluster": 15,
		"tags": [
			"philosophy",
			"book",
			"review",
			"mathematics",
			"godel",
			"incompleteness",
			"theorem"
		],
		"y": -9.836421675464377,
		"x": -3.7182539506267664,
		"extended": "",
		"description": "The romantic's favorite mathematician. - By Jordan Ellenberg - Slate Magazine",
		"time": "2008-12-22T17:06:55Z",
		"href": "http://www.slate.com/id/2114561/"
	},
	{
		"cluster": 10,
		"tags": [
			"internet",
			"networking",
			"politics",
			"google",
			"hilarious",
			"netneutrailty"
		],
		"y": 4.711752920303282,
		"x": 6.776102511045995,
		"extended": "",
		"description": "Google disguises capitalism as civil rights • The Register",
		"time": "2008-12-22T14:05:21Z",
		"href": "http://www.theregister.co.uk/2008/12/22/dziuba_net_neut/"
	},
	{
		"cluster": 17,
		"tags": [
			"development",
			"computerscience",
			"javascript",
			"functional",
			"memoization",
			"programing",
			"lazy",
			"evaluation"
		],
		"y": -3.659190185983209,
		"x": -10.130490121514775,
		"extended": "",
		"description": "Oliver Steele » Blog Archive » One-Line JavaScript Memoization",
		"time": "2008-12-22T12:57:21Z",
		"href": "http://osteele.com/archives/2006/04/javascript-memoization"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"programming",
			"web",
			"javascript",
			"AJAX",
			"rest",
			"dojo",
			"json",
			"xhr"
		],
		"y": 10.355253893511723,
		"x": -3.6720540939765565,
		"extended": "",
		"description": "Medryx Observations » JsonRestStore — Custom Services, Schemas, and Lazy Loading",
		"time": "2008-12-22T12:43:09Z",
		"href": "http://blog.medryx.org/2008/07/24/jsonreststore-overview/"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"programming",
			"web",
			"data",
			"javascript",
			"AJAX",
			"rest",
			"json"
		],
		"y": 10.317570117815364,
		"x": -3.6827363059018996,
		"extended": "",
		"description": "SitePen Blog » RESTful JSON + Dojo Data",
		"time": "2008-12-22T12:37:43Z",
		"href": "http://www.sitepen.com/blog/2008/06/13/restful-json-dojo-data/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"relational",
			"sql",
			"oop",
			"computerscience",
			"functional",
			"orm",
			"algebra",
			"databases",
			"object"
		],
		"y": -1.6434331822344193,
		"x": -8.76168250796369,
		"extended": "",
		"description": "The Functional-Relational Impedance Match | Enfranchised Mind",
		"time": "2008-12-22T12:35:03Z",
		"href": "http://enfranchisedmind.com/blog/2006/06/17/the-functional-relational-impedance-match/"
	},
	{
		"cluster": 6,
		"tags": [
			"music",
			"internet",
			"law",
			"copyright",
			"isp",
			"piracy",
			"buiness",
			"enforcement"
		],
		"y": -8.060863521115815,
		"x": 2.731789160489916,
		"extended": "",
		"description": "One ISP says RIAA must pay for piracy protection | Digital Media - CNET News",
		"time": "2008-12-22T12:17:08Z",
		"href": "http://news.cnet.com/8301-1023_3-10127841-93.html?part=rss&subj=news&tag=2547-1_3-0-20"
	},
	{
		"cluster": 14,
		"tags": [
			"web",
			"design",
			"ui",
			"ux",
			"usability",
			"interface",
			"experience",
			"user"
		],
		"y": 1.5157849423762682,
		"x": 1.0075101505099981,
		"extended": "",
		"description": "What makes a \"User Experience expert\"? - InsideRIA",
		"time": "2008-12-21T18:34:30Z",
		"href": "http://www.insideria.com/2008/12/what-makes-a-user-experience-e.html"
	},
	{
		"cluster": 0,
		"tags": [
			"network",
			"web",
			"server",
			"operations",
			"admin",
			"graphs",
			"performance"
		],
		"y": 0.07340574044036073,
		"x": 3.3156093994561004,
		"extended": "",
		"description": "Code: Flickr Developer Blog » Web Ops Visualizations Group on Flickr",
		"time": "2008-12-21T18:23:36Z",
		"href": "http://code.flickr.com/blog/2008/12/17/web-ops-visualizations-group-on-flickr/"
	},
	{
		"cluster": 6,
		"tags": [
			"org",
			"copyright",
			"music",
			"business",
			"politics",
			"term",
			"extension",
			"law"
		],
		"y": -4.582960037535088,
		"x": 9.620481166984035,
		"extended": "",
		"description": "The Open Rights Group : Blog Archive » UK Government launches new consultation on copyright",
		"time": "2008-12-21T18:23:00Z",
		"href": "http://www.openrightsgroup.org/2008/12/18/uk-government-launches-new-consultation-on-copyright/"
	},
	{
		"cluster": 14,
		"tags": [
			"theory",
			"design",
			"UI",
			"research",
			"ux",
			"process",
			"strategy",
			"practice"
		],
		"y": -5.439703675969233,
		"x": 1.2418935110610443,
		"extended": "",
		"description": "[Beta] How do you design?",
		"time": "2008-12-19T16:10:50Z",
		"href": "http://www.dubberly.com/articles/how-do-you-design.html"
	},
	{
		"cluster": 1,
		"tags": [
			"security",
			"IT",
			"culture",
			"networking",
			"crypto"
		],
		"y": -7.381937724743044,
		"x": 6.946506997427539,
		"extended": "",
		"description": "Security's inseparable couple - Network World",
		"time": "2008-12-18T15:10:14Z",
		"href": "http://www.networkworld.com/news/2005/020705widernetaliceandbob.html"
	},
	{
		"cluster": 11,
		"tags": [
			"wireless",
			"mac",
			"osx",
			"terminal",
			"unix",
			"airport",
			"wifi",
			"utility",
			"config",
			"tool"
		],
		"y": -3.05396023780504,
		"x": 6.795162643921858,
		"extended": "",
		"description": "airport - the Little Known Command Line Wireless Utility - OS X Daily",
		"time": "2008-12-18T15:01:40Z",
		"href": "http://osxdaily.com/2007/01/18/airport-the-little-known-command-line-wireless-utility/"
	},
	{
		"cluster": 12,
		"tags": [
			"dojo",
			"javascript",
			"json",
			"programming",
			"web",
			"development"
		],
		"y": 10.151395288185666,
		"x": -3.6056330675216417,
		"extended": "",
		"description": "SitePen Blog » JSON Referencing in Dojo",
		"time": "2008-12-17T17:14:33Z",
		"href": "http://www.sitepen.com/blog/2008/06/17/json-referencing-in-dojo/"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"law",
			"term",
			"extension",
			"music",
			"politics"
		],
		"y": -4.592100026489664,
		"x": 9.585387642117219,
		"extended": "",
		"description": "IPKat - news and fun for everyone!: UK Copyright 'debate' kicked off",
		"time": "2008-12-17T11:18:45Z",
		"href": "http://ipkitten.blogspot.com/2008/12/uk-copyright-debate-kicked-off.html"
	},
	{
		"cluster": 6,
		"tags": [
			"piracy",
			"music",
			"history",
			"culture",
			"term",
			"extension",
			"copyright",
			"law",
			"politics",
			"art"
		],
		"y": -4.72355738790334,
		"x": 9.612285371511605,
		"extended": "",
		"description": "New Statesman - Facing the music",
		"time": "2008-12-17T11:13:19Z",
		"href": "http://www.newstatesman.com/music/2008/12/public-century-composers"
	},
	{
		"cluster": 2,
		"tags": [
			"work",
			"space",
			"london",
			"office",
			"dalston",
			"hackney"
		],
		"y": -0.6108437778724579,
		"x": 5.585472267583675,
		"extended": "",
		"description": "Bootstrap Company",
		"time": "2008-12-16T15:27:36Z",
		"href": "http://www.bootstrapcompany.co.uk/index.html"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"gowers",
			"term",
			"extenion",
			"law",
			"politics",
			"music",
			"business"
		],
		"y": -4.5596100816621945,
		"x": 9.633642237038528,
		"extended": "",
		"description": "FT.com / Comment / Opinion - A moral case for extending copyright",
		"time": "2008-12-16T14:11:26Z",
		"href": "http://www.ft.com/cms/s/0/8ca0a7c6-cadd-11dd-87d7-000077b07658.html?nclick_check=1"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"appropriation",
			"copyright",
			"culture",
			"criticism",
			"law"
		],
		"y": -9.429580178183661,
		"x": 2.165912584296297,
		"extended": "",
		"description": "Damien Hirst's legal campaign against a graffiti artist makes him appear as cynical as his critics suggest | Art and design | guardian.co.uk",
		"time": "2008-12-16T10:47:18Z",
		"href": "http://www.guardian.co.uk/artanddesign/jonathanjonesblog/2008/dec/15/damien-hirst-cartrain"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"merb",
			"reference",
			"comparison",
			"web",
			"development",
			"ruby"
		],
		"y": 9.539431426403263,
		"x": -7.510750238089324,
		"extended": "",
		"description": "Bamboo Blog - Rails || Merb",
		"time": "2008-12-15T18:32:08Z",
		"href": "http://blog.new-bamboo.co.uk/2008/1/14/rails-merb"
	},
	{
		"cluster": 4,
		"tags": [
			"haskell",
			"finance",
			"programming",
			"computerscience",
			"functional",
			"modelling",
			"trading",
			"research"
		],
		"y": -5.890198090907867,
		"x": -9.420830060813989,
		"extended": "",
		"description": "Simon Peyton Jones: papers",
		"time": "2008-12-15T18:31:41Z",
		"href": "http://research.microsoft.com/~simonpj/papers/financial-contracts/contracts-icfp.htm"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"ruby1.9",
			"1.9",
			"fibers",
			"programming",
			"concurrency",
			"fibonacci"
		],
		"y": 5.6676888498503155,
		"x": -10.858366868198969,
		"extended": "",
		"description": "Fibonacci numbers with Ruby 1.9 Fibers - davidflanagan.com",
		"time": "2008-12-15T18:30:49Z",
		"href": "http://www.davidflanagan.com/2007/08/fibonacci-numbers-with-ruby-19-fibers.html"
	},
	{
		"cluster": 7,
		"tags": [
			"merb",
			"routing",
			"web",
			"development",
			"programming",
			"ruby",
			"rest"
		],
		"y": 8.890010623687678,
		"x": -7.913197777313833,
		"extended": "",
		"description": "Antares Traders Blog » Merb: Routing 201",
		"time": "2008-12-15T18:28:27Z",
		"href": "http://blog.antarestrader.com/?p=59"
	},
	{
		"cluster": 7,
		"tags": [
			"rest",
			"search",
			"ruby",
			"rails",
			"programming",
			"development",
			"web"
		],
		"y": 9.366687337696508,
		"x": -7.428974124397903,
		"extended": "",
		"description": "Michael Ivey: RESTful search across multiple models",
		"time": "2008-12-15T18:27:34Z",
		"href": "http://gweezlebur.com/2007/7/31/restful-search-across-multiple-models/"
	},
	{
		"cluster": 17,
		"tags": [
			"equality",
			"identity",
			"smalltalk",
			"ruby",
			"programming",
			"computerscience"
		],
		"y": 4.00412298207098,
		"x": -11.208767354861386,
		"extended": "",
		"description": "Identity and Equality in Ruby and Smalltalk « Something to Talk About",
		"time": "2008-12-15T18:26:47Z",
		"href": "http://kentreis.wordpress.com/2007/02/08/identity-and-equality-in-ruby-and-smalltalk/"
	},
	{
		"cluster": 12,
		"tags": [
			"json",
			"javascript",
			"web",
			"development",
			"programming"
		],
		"y": 10.003928247241449,
		"x": -3.6269217510107925,
		"extended": "",
		"description": "JSON » Blog Archives » JSON Referencing Proposal and Library",
		"time": "2008-12-15T18:25:30Z",
		"href": "http://www.json.com/2007/10/19/json-referencing-proposal-and-library/"
	},
	{
		"cluster": 11,
		"tags": [
			"tutorial",
			"howto",
			"php",
			"mac",
			"osx",
			"apache",
			"macports"
		],
		"y": -5.877736097444493,
		"x": -0.4917531269848534,
		"extended": "",
		"description": "Mac OS X Leopard + Apache 2 + SSL + PHP / macports (gd, etc) | Confessions of a cat",
		"time": "2008-12-15T09:00:18Z",
		"href": "http://www.pengekcs.com/2007/11/26/mac-os-x-leopard-apache-2-ssl-php-macports-gd-etc/"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"pedagogy",
			"learning",
			"teaching",
			"computerscience",
			"logic",
			"science",
			"computing",
			"research"
		],
		"y": 0.2394943245485623,
		"x": -12.6939418822831,
		"extended": "",
		"description": "A cognitive study of early learning of programming",
		"time": "2008-12-12T15:50:56Z",
		"href": "http://www.cs.mdx.ac.uk/research/PhDArea/saeed/"
	},
	{
		"cluster": 12,
		"tags": [
			"dojo",
			"mvc",
			"gui",
			"development",
			"js",
			"javascript",
			"tutorial",
			"web"
		],
		"y": 10.389147178297598,
		"x": -3.2744081085445673,
		"extended": "",
		"description": "Model-View-Controller (MVC) with JavaScript | Alex @ Net",
		"time": "2008-12-11T12:47:32Z",
		"href": "http://www.alexatnet.com/node/8"
	},
	{
		"cluster": 9,
		"tags": [
			"tutorial",
			"admin",
			"linux",
			"sysadmin",
			"shell",
			"script",
			"unix",
			"expect",
			"passwd"
		],
		"y": -5.906105695426514,
		"x": 3.0092299449972706,
		"extended": "",
		"description": "http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/scripting/5.html",
		"time": "2008-12-10T09:59:08Z",
		"href": "http://floppsie.comp.glam.ac.uk/Glamorgan/gaius/scripting/5.html"
	},
	{
		"cluster": 2,
		"tags": [
			"tunnel",
			"ssh",
			"security",
			"tips",
			"howto"
		],
		"y": -2.464948280549497,
		"x": 3.8257402850534596,
		"extended": "",
		"description": "How To: Surf Securely with an SSH Tunnel - PaulStamatiou.com",
		"time": "2008-12-09T16:23:03Z",
		"href": "http://paulstamatiou.com/2008/05/16/how-to-surf-securely-with-ssh-tunnel"
	},
	{
		"cluster": 17,
		"tags": [
			"art",
			"programming",
			"tutorial",
			"graphics",
			"generative",
			"flash",
			"fractal",
			"visualistaion",
			"actionscript"
		],
		"y": 1.7731450388649224,
		"x": -4.842229957439263,
		"extended": "",
		"description": "Fractals in ActionScript 3 - A Flash Tutorial | actionscripter.co.uk",
		"time": "2008-12-09T01:14:49Z",
		"href": "http://actionscripter.co.uk/blog/?page_id=75"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"video",
			"film",
			"appropriation",
			"hitchcock"
		],
		"y": -9.367404578031978,
		"x": 0.8347114482684345,
		"extended": "",
		"description": "Rhizome: 24 Hour Psycho (1993) - Douglas Gordon",
		"time": "2008-12-08T17:29:56Z",
		"href": "http://rhizome.org/editorial/2158"
	},
	{
		"cluster": 2,
		"tags": [
			"comic",
			"computer",
			"hacking",
			"fiction"
		],
		"y": -3.0126568051115297,
		"x": 4.6706206626852484,
		"extended": "",
		"description": "Ed Piskor's Comics & Stories, comics",
		"time": "2008-12-08T15:50:09Z",
		"href": "http://www.edpiskor.com/comics.html"
	},
	{
		"cluster": 1,
		"tags": [
			"goldsmiths",
			"computing",
			"study",
			"academic",
			"reading",
			"art"
		],
		"y": -9.111008031690845,
		"x": -1.6351225323748309,
		"extended": "",
		"description": "Departments, Units and Centres: Computing - Goldsmiths EPrints",
		"time": "2008-12-08T13:34:28Z",
		"href": "http://eprints.goldsmiths.ac.uk/view/subjects/200.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"banking",
			"finance",
			"analysis",
			"politics",
			"news"
		],
		"y": 9.66924016916704,
		"x": 7.325835384622568,
		"extended": "",
		"description": "The blunders that led to the banking crisis - life - 25 September 2008 - New Scientist",
		"time": "2008-12-08T13:27:30Z",
		"href": "http://www.newscientist.com/article/mg19926754.200-the-blunders-that-led-to-the-banking-crisis.html"
	},
	{
		"cluster": 1,
		"tags": [
			"sculpture",
			"art",
			"physics",
			"science",
			"cosmology"
		],
		"y": -7.812494012280223,
		"x": -0.10669629287080878,
		"extended": "",
		"description": "The glass universe where astronomy meets art - science-in-society - 07 December 2008 - New Scientist",
		"time": "2008-12-08T11:57:42Z",
		"href": "http://www.newscientist.com/article/mg20026852.400-the-glass-universe-where-astronomy-meets-art.html?DCMP=OTC-rss&nsref=magcontents"
	},
	{
		"cluster": 9,
		"tags": [
			"music",
			"programming",
			"linux",
			"sound",
			"freesoftware",
			"FOSS",
			"openmusic",
			"ircam"
		],
		"y": -8.391762947321348,
		"x": 3.574286491584286,
		"extended": "",
		"description": "freesoftware@ircam",
		"time": "2008-12-08T09:30:41Z",
		"href": "http://freesoftware.ircam.fr/"
	},
	{
		"cluster": 18,
		"tags": [
			"music",
			"programming",
			"software",
			"lisp",
			"openmusic",
			"ircam"
		],
		"y": -8.446807750639152,
		"x": 3.614347772666283,
		"extended": "",
		"description": "OM Building and Install",
		"time": "2008-12-08T09:30:21Z",
		"href": "http://recherche.ircam.fr/equipes/repmus/OpenMusic/dev-doc/build-om6/build-om6.html"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"ubuntu",
			"debian",
			"eeepc",
			"elantech",
			"driver",
			"touchpad",
			"synaptics"
		],
		"y": -5.975823879604559,
		"x": 5.663882401809001,
		"extended": "",
		"description": "Elantech touchpad driver for Linux",
		"time": "2008-12-08T09:27:37Z",
		"href": "http://arjan.opmeer.net/elantech/"
	},
	{
		"cluster": 11,
		"tags": [
			"ruby",
			"howto",
			"mac",
			"osx",
			"installation",
			"gem",
			"sdl"
		],
		"y": -5.989318070097855,
		"x": -0.5462492788200095,
		"extended": "",
		"description": "Going Up » Getting Ruby/SDL to Work on Mac OS X",
		"time": "2008-12-08T09:26:54Z",
		"href": "http://inquirylabs.com/blog2005/?p=21"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"development",
			"programming",
			"graphics",
			"sdl"
		],
		"y": 7.512959170735442,
		"x": -8.926733276521983,
		"extended": "",
		"description": "Ruby, meet SDL « Keeping it Small and Simple",
		"time": "2008-12-08T09:26:23Z",
		"href": "http://lorenzod8n.wordpress.com/2007/05/30/ruby-meet-sdl/"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"ubuntu",
			"netbook"
		],
		"y": -5.992868144420958,
		"x": 5.705381579607848,
		"extended": "",
		"description": "Ubuntu This & Ubuntu That » Ubuntu Netbook Remix",
		"time": "2008-12-08T09:25:56Z",
		"href": "http://ubuntukids.org/blog/?tag=ubuntu-netbook-remix"
	},
	{
		"cluster": 4,
		"tags": [
			"art",
			"development",
			"programming",
			"graphics",
			"functional",
			"haskell"
		],
		"y": -5.188965716287449,
		"x": -7.551472444219616,
		"extended": "",
		"description": "Functional Images",
		"time": "2008-12-08T09:25:09Z",
		"href": "http://conal.net/papers/functional-images/"
	},
	{
		"cluster": 10,
		"tags": [
			"news",
			"politics",
			"US",
			"obama",
			"blair"
		],
		"y": 8.612191217331267,
		"x": 12.04542111373169,
		"extended": "",
		"description": "Peter Preston: Will Obama realise that being elected is not an end in itself | Comment is free | The Guardian",
		"time": "2008-12-08T09:24:47Z",
		"href": "http://www.guardian.co.uk/commentisfree/2008/dec/08/comment-peter-preston-obama-blair"
	},
	{
		"cluster": 3,
		"tags": [
			"freeculture",
			"culture",
			"criticism",
			"freedom",
			"freesoftware",
			"FOSS"
		],
		"y": -9.409314950879656,
		"x": 5.935115236926442,
		"extended": "",
		"description": "Free culture succeeds where free software does not at Mass Think",
		"time": "2008-12-08T09:24:37Z",
		"href": "http://www.massthink.net/2008/12/07/free-culture-succeeds-where-free-software-does-not/"
	},
	{
		"cluster": 12,
		"tags": [
			"design",
			"development",
			"web",
			"javascript",
			"typography"
		],
		"y": 10.168999152133884,
		"x": 0.20585889644456754,
		"extended": "",
		"description": "typeface.js -- Rendering text with Javascript, <canvas>, and VML",
		"time": "2008-12-08T09:24:09Z",
		"href": "http://typeface.neocracy.org/"
	},
	{
		"cluster": 17,
		"tags": [
			"maths",
			"programming",
			"reference",
			"computerscience",
			"algorithms"
		],
		"y": 1.192630836643755,
		"x": -12.730356129550229,
		"extended": "",
		"description": "List of all algorithms, classified by purpose",
		"time": "2008-12-08T09:23:46Z",
		"href": "http://www.scriptol.org/list-of-algorithms.html"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"web",
			"google",
			"gmail",
			"security",
			"identity",
			"openid"
		],
		"y": 3.4004612847156275,
		"x": 2.8481292726884617,
		"extended": "",
		"description": "Your Gmail Account is Now An OpenID",
		"time": "2008-12-08T09:23:26Z",
		"href": "http://www.techcrunch.com/2008/10/29/your-gmail-account-is-now-an-openid/"
	},
	{
		"cluster": 15,
		"tags": [
			"tutorial",
			"computerscience",
			"algorithms",
			"learning",
			"mathematics",
			"ocw",
			"mit"
		],
		"y": -0.6879632480638724,
		"x": -12.54149080461589,
		"extended": "",
		"description": "Notes on Introduction To Algorithms | Lambda the Ultimate",
		"time": "2008-12-08T09:23:01Z",
		"href": "http://lambda-the-ultimate.org/node/3053"
	},
	{
		"cluster": 15,
		"tags": [
			"programming",
			"computerscience",
			"algorithms",
			"mathematics",
			"ocw",
			"mit",
			"course"
		],
		"y": -0.5778684044625475,
		"x": -12.388961461373102,
		"extended": "",
		"description": "MIT OpenCourseWare | Electrical Engineering and Computer Science | 6.046J Introduction to Algorithms (SMA 5503), Fall 2005 | Home",
		"time": "2008-12-08T09:22:34Z",
		"href": "http://ocw.mit.edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-046JFall-2005/CourseHome/index.htm"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"music",
			"electronics",
			"performance"
		],
		"y": -9.979257566283595,
		"x": 3.4100650778167045,
		"extended": "",
		"description": "YouTube - electric stimulus to face -test3 ( Daito Manabe )",
		"time": "2008-12-08T09:22:03Z",
		"href": "http://uk.youtube.com/watch?v=YxdlYFCp5Ic"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"media",
			"tv",
			"doublescreen",
			"socialmedia",
			"massmedia"
		],
		"y": 3.364641872089257,
		"x": 3.874277919266086,
		"extended": "",
		"description": "/Message: Carlo De Machis: Double Screen Is The Future",
		"time": "2008-12-08T09:21:49Z",
		"href": "http://www.stoweboyd.com/message/2008/11/carlo-de-machis.html"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"tutorial",
			"database",
			"sql",
			"optimisation",
			"denormalisation"
		],
		"y": 2.733758343385981,
		"x": -2.2587947961955,
		"extended": "",
		"description": "The Database Programmer: Keeping Denormalized Values Correct",
		"time": "2008-12-08T09:21:27Z",
		"href": "http://database-programmer.blogspot.com/2008/11/keeping-denormalized-values-correct.html"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"extension",
			"git",
			"tool",
			"emacs",
			"scm"
		],
		"y": 6.964004355623285,
		"x": 0.03653950544406913,
		"extended": "",
		"description": "It's Magit!",
		"time": "2008-12-08T09:21:03Z",
		"href": "http://zagadka.vm.bytemark.co.uk/magit/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"book",
			"research",
			"usability",
			"interface",
			"toread"
		],
		"y": -8.391052119054883,
		"x": -0.756190233949155,
		"extended": "",
		"description": "The Semantic Turn » Christian Beck’s Blog",
		"time": "2008-12-08T09:19:36Z",
		"href": "http://www.hcidesigns.com/cmbeck/?p=13"
	},
	{
		"cluster": 18,
		"tags": [
			"development",
			"programming",
			"tutorial",
			"software",
			"reference",
			"graphics",
			"book",
			"assembler"
		],
		"y": 7.386352159392049,
		"x": -10.964294659099247,
		"extended": "",
		"description": "BYTE.com > Graphics Programming Black Book by Michael Abrash",
		"time": "2008-12-08T09:19:10Z",
		"href": "http://www.byte.com/abrash/"
	},
	{
		"cluster": 7,
		"tags": [
			"development",
			"programming",
			"tutorial",
			"relational",
			"database",
			"sql",
			"algorithms",
			"graph",
			"db"
		],
		"y": 2.957923733158174,
		"x": -2.1375030603584486,
		"extended": "",
		"description": "Machines - Blog Archive - Computing connected graph components via SQL - Trampoline Systems",
		"time": "2008-12-08T09:18:47Z",
		"href": "http://www.trampolinesystems.com/blog/machines/2008/11/19/computing-connected-graph-components-via-sql/"
	},
	{
		"cluster": 4,
		"tags": [
			"art",
			"programming",
			"computing",
			"functional",
			"haskell"
		],
		"y": -5.161540805340321,
		"x": -8.186669951945593,
		"extended": "",
		"description": "Haskell and the Arts: How artists can benefit from FP :: PDF : programming",
		"time": "2008-12-08T09:18:09Z",
		"href": "http://www.reddit.com/r/programming/comments/7f6pm/haskell_and_the_arts_how_artists_can_benefit_from/"
	},
	{
		"cluster": 18,
		"tags": [
			"development",
			"programming",
			"software",
			"designpatterns",
			"patterns",
			"criticism",
			"architecture",
			"MVC"
		],
		"y": 6.150502048430581,
		"x": -5.416377773230383,
		"extended": "",
		"description": "Defying Classification: Removing The Model-View-Controller Straitjacket",
		"time": "2008-12-08T09:16:20Z",
		"href": "http://www.pointy-stick.com/blog/2008/11/30/removing-model-view-controller-straitjacket/"
	},
	{
		"cluster": 2,
		"tags": [
			"hack",
			"hardware",
			"eeepc",
			"tablet"
		],
		"y": -3.8832683858762964,
		"x": 4.9093492686458555,
		"extended": "",
		"description": "Aeeeris Tablet Conversion Kit",
		"time": "2008-12-08T09:15:48Z",
		"href": "http://www.aeeeris.com/"
	},
	{
		"cluster": 12,
		"tags": [
			"wordpress",
			"plugin",
			"cms",
			"php",
			"web",
			"development",
			"tool",
			"programming"
		],
		"y": 9.925010805796845,
		"x": -4.844173177723862,
		"extended": "",
		"description": "WordPress › Flutter « WordPress Plugins",
		"time": "2008-12-05T13:48:27Z",
		"href": "http://wordpress.org/extend/plugins/fresh-page/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"functional",
			"library",
			"programming",
			"development",
			"haskell",
			"arrows",
			"events",
			"arrowlets",
			"web"
		],
		"y": -4.94773521310723,
		"x": -6.7226453867165015,
		"extended": "",
		"description": "Introduction to Arrowlets",
		"time": "2008-12-05T10:58:21Z",
		"href": "http://www.cs.umd.edu/projects/PL/arrowlets/"
	},
	{
		"cluster": 12,
		"tags": [
			"wordpress",
			"osx",
			"mysql",
			"bug",
			"help",
			"web",
			"development",
			"programming"
		],
		"y": 9.942863563946563,
		"x": -4.87461580755449,
		"extended": "",
		"description": "WordPress › Support » Error establishing a database connection on OS X 10.5",
		"time": "2008-12-03T21:46:26Z",
		"href": "http://wordpress.org/support/topic/160658"
	},
	{
		"cluster": 7,
		"tags": [
			"andand",
			"ruby",
			"programming",
			"monads",
			"macros",
			"development",
			"computerscience",
			"library"
		],
		"y": 6.351483112993834,
		"x": -10.024025863608902,
		"extended": "",
		"description": "Object#andand & Object#me in Ruby",
		"time": "2008-12-03T09:52:27Z",
		"href": "http://weblog.raganwald.com/2008/01/objectandand-objectme-in-ruby.html"
	},
	{
		"cluster": 2,
		"tags": [
			"ping.fm"
		],
		"y": -2.81335658411237,
		"x": 4.886366908804243,
		"extended": "",
		"description": "Thick-client web application developer at Playlouder dev blog",
		"time": "2008-12-02T14:15:58Z",
		"href": "http://blog.playlouder.com/2008/12/01/thick-client-web-application-developer/"
	},
	{
		"cluster": 4,
		"tags": [
			"javascript",
			"haskell",
			"arrows",
			"programming",
			"development",
			"functional",
			"events"
		],
		"y": -4.979848915813923,
		"x": -6.85520867964998,
		"extended": "",
		"description": "Tupil Code Blog » Blog Archive » Look ma, no callbacks!",
		"time": "2008-12-02T12:17:34Z",
		"href": "http://blog.tupil.com/look-ma-no-callbacks/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rubinius",
			"vm",
			"interpreter",
			"virtualmachine",
			"software",
			"development",
			"programming"
		],
		"y": 7.70204322189397,
		"x": -8.392139032935363,
		"extended": "",
		"description": "Rubinius",
		"time": "2008-11-24T18:02:29Z",
		"href": "http://rubini.us/"
	},
	{
		"cluster": 2,
		"tags": [
			"education",
			"learning",
			"pedagogy",
			"reading",
			"reference",
			"theory"
		],
		"y": -9.003432841021258,
		"x": -5.9070556506619765,
		"extended": "",
		"description": "Learning Theories - Wikibooks, collection of open-content textbooks",
		"time": "2008-11-24T17:52:50Z",
		"href": "http://en.wikibooks.org/wiki/Learning_Theories"
	},
	{
		"cluster": 1,
		"tags": [
			"folk",
			"music",
			"culture",
			"society",
			"britain",
			"art"
		],
		"y": -6.403485020161638,
		"x": 10.095870048080988,
		"extended": "",
		"description": "Luke Turner: Why is our radical folk heritage ignored? | Music | guardian.co.uk",
		"time": "2008-11-24T09:42:05Z",
		"href": "http://www.guardian.co.uk/music/musicblog/2008/nov/14/folk-revival-traditional-music"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"http",
			"library",
			"efficiency",
			"criticism",
			"programming",
			"development"
		],
		"y": 7.958545084818847,
		"x": -9.208278232896985,
		"extended": "",
		"description": "InfoQ: What Is Wrong With Ruby's Net::HTTP?",
		"time": "2008-11-24T09:41:34Z",
		"href": "http://www.infoq.com/news/2008/11/ruby-http-problems"
	},
	{
		"cluster": 1,
		"tags": [
			"intelligence",
			"education",
			"learning",
			"psychology",
			"art",
			"culture",
			"statistics",
			"society",
			"science",
			"gladwell",
			"genius",
			"inspiration",
			"authorship"
		],
		"y": -4.792522004415234,
		"x": 11.14918737525148,
		"extended": "",
		"description": "Extract from Malcolm Gladwell's Outliers: Is there such a thing as pure genius? | Books | The Guardian",
		"time": "2008-11-24T09:40:48Z",
		"href": "http://www.guardian.co.uk/books/2008/nov/15/malcolm-gladwell-outliers-extract"
	},
	{
		"cluster": 7,
		"tags": [
			"javascript",
			"interpreter",
			"mozilla",
			"narcissus",
			"programming",
			"development"
		],
		"y": 9.714579192795664,
		"x": -3.3800927851790883,
		"extended": "",
		"description": "mozilla mozilla/js/narcissus/",
		"time": "2008-11-24T09:40:03Z",
		"href": "http://mxr.mozilla.org/mozilla/source/js/narcissus/"
	},
	{
		"cluster": 7,
		"tags": [
			"emacs",
			"lisp",
			"javascript",
			"programming",
			"development"
		],
		"y": 9.252734928728238,
		"x": -3.2011390361483008,
		"extended": "",
		"description": "ejacs - Google Code",
		"time": "2008-11-24T09:39:30Z",
		"href": "http://code.google.com/p/ejacs/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"grafitti",
			"environment"
		],
		"y": -10.261246656925772,
		"x": 2.1124071170890466,
		"extended": "",
		"description": "Reverse graffiti transforms city grime into art | Art Threat",
		"time": "2008-11-24T09:38:40Z",
		"href": "http://artthreat.net/2008/11/reverse-graffiti-transforms-city-grime-into-art/"
	},
	{
		"cluster": 1,
		"tags": [
			"fanfiction",
			"literature",
			"culture",
			"art",
			"appropriation",
			"society"
		],
		"y": -6.066064356472187,
		"x": 10.438728311301558,
		"extended": "",
		"description": "Jessica Reed: Fanfiction scripts are a labour of love and deserve to be celebrated as such | Comment is free | guardian.co.uk",
		"time": "2008-11-24T09:38:00Z",
		"href": "http://www.guardian.co.uk/commentisfree/2008/nov/17/fanfictions"
	},
	{
		"cluster": 7,
		"tags": [
			"solr",
			"library",
			"ruby",
			"programming",
			"development",
			"web",
			"search",
			"gem"
		],
		"y": 8.621203210165444,
		"x": -9.309960358187972,
		"extended": "",
		"description": "matthewrudy's solr_query at master — GitHub",
		"time": "2008-11-24T09:36:01Z",
		"href": "http://github.com/matthewrudy/solr_query/tree/master"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"tv",
			"indie",
			"criticism",
			"exploitation",
			"industry",
			"business"
		],
		"y": -8.800162473543807,
		"x": 4.882134486087399,
		"extended": "",
		"description": "Steven Wells: Indie music could learn a lot from American Idol | Music | guardian.co.uk",
		"time": "2008-11-24T09:35:14Z",
		"href": "http://www.guardian.co.uk/music/musicblog/2008/nov/18/american-idol-indie-music"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"community",
			"programming",
			"web",
			"development"
		],
		"y": 8.751221230673021,
		"x": -7.942492108120341,
		"extended": "",
		"description": "hackety org » A Costly Parade",
		"time": "2008-11-24T09:34:36Z",
		"href": "http://hackety.org/2008/11/21/aCostlyParade.html"
	},
	{
		"cluster": 2,
		"tags": [
			"recommendation",
			"algorithms",
			"machinelearning",
			"filtering",
			"film",
			"art",
			"business",
			"online",
			"search"
		],
		"y": -8.897241824356026,
		"x": 1.095578732709129,
		"extended": "",
		"description": "The Napoleon Dynamite Problem - Duke Listens!",
		"time": "2008-11-24T09:34:00Z",
		"href": "http://blogs.sun.com/plamere/entry/the_napoleon_dynamite_problem"
	},
	{
		"cluster": 17,
		"tags": [
			"couchdb",
			"database",
			"distributed",
			"db",
			"relational",
			"computerscience",
			"programming"
		],
		"y": 2.255932454987611,
		"x": -2.6403639580484533,
		"extended": "",
		"description": "Why CouchDB Sucks - Die in a Fire - Eric Florenzano’s Blog",
		"time": "2008-11-24T09:32:55Z",
		"href": "http://www.eflorenzano.com/blog/post/why-couchdb-sucks/"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"education",
			"culture",
			"society",
			"politics"
		],
		"y": 0.4745507193780457,
		"x": 12.693287596348139,
		"extended": "",
		"description": "Give young people high culture not hip-hop - Johnson | Culture | The Guardian",
		"time": "2008-11-24T09:31:36Z",
		"href": "http://www.guardian.co.uk/culture/2008/nov/24/london-johnson-culture-strategy-youth"
	},
	{
		"cluster": 2,
		"tags": [
			"cidr",
			"routing",
			"ip",
			"networking",
			"reference",
			"address",
			"networks",
			"subnet",
			"mask"
		],
		"y": -2.8742008032398347,
		"x": 5.7143842508790055,
		"extended": "",
		"description": "CIDR Info",
		"time": "2008-11-21T18:20:00Z",
		"href": "http://public.pacbell.net/dedicated/cidr.html"
	},
	{
		"cluster": 8,
		"tags": [
			"eeepc",
			"3",
			"3g",
			"mobile",
			"internet",
			"linux"
		],
		"y": -6.461389588454598,
		"x": 1.4182668836124381,
		"extended": "",
		"description": "Huawei E160 and Linux",
		"time": "2008-11-21T17:39:26Z",
		"href": "http://dani.tac-ops.net/blog/Huawei+E160+and+Linux/"
	},
	{
		"cluster": 8,
		"tags": [
			"eepc",
			"3g",
			"3",
			"mobile",
			"internet"
		],
		"y": -6.4638474023403205,
		"x": 1.35508368964133,
		"extended": "",
		"description": "Using the dongle on an EeePC",
		"time": "2008-11-21T17:39:04Z",
		"href": "http://www.3mobilebuzz.com/2008/04/25/using-the-dongle-on-an-eeepc/"
	},
	{
		"cluster": 8,
		"tags": [
			"gprs",
			"3g",
			"mobile",
			"internet",
			"access",
			"payg"
		],
		"y": -6.470263129595235,
		"x": 1.339605564845632,
		"extended": "",
		"description": "3 - Mobile Broadband - Price plans",
		"time": "2008-11-21T17:38:21Z",
		"href": "http://www.three.co.uk/personal/products_services_/mobile_broadband_/price_plans_payg.omp"
	},
	{
		"cluster": 6,
		"tags": [
			"music",
			"business",
			"playlouder",
			"economics",
			"copyright",
			"AMC",
			"MSP",
			"licencing",
			"blianket",
			"internet",
			"web",
			"technology"
		],
		"y": 5.284254725023539,
		"x": 4.672566832128081,
		"extended": "",
		"description": "How to destroy the music business • The Register",
		"time": "2008-11-21T10:51:42Z",
		"href": "http://www.theregister.co.uk/2008/11/20/how_to_destroy_the_music_business/"
	},
	{
		"cluster": 6,
		"tags": [
			"toread",
			"music",
			"business",
			"internet",
			"online",
			"economics",
			"copyright",
			"digitalrights"
		],
		"y": 5.299068140756329,
		"x": 4.9625969362494935,
		"extended": "",
		"description": "Music Ally | Blog Archive » Video: REM manager Bertis Downs talks digital music",
		"time": "2008-11-21T09:16:44Z",
		"href": "http://musically.com/blog/2008/11/14/video-rem-manager-bertis-downs-talks-digital-music/"
	},
	{
		"cluster": 7,
		"tags": [
			"toread",
			"mysql",
			"performance",
			"database",
			"programming",
			"development",
			"optimisation"
		],
		"y": 3.42121796189371,
		"x": -1.9782814385666143,
		"extended": "",
		"description": "YouTube - Performance Tuning Best Practices for MySQL",
		"time": "2008-11-21T09:16:14Z",
		"href": "http://uk.youtube.com/watch?v=u70mkgDnDdU"
	},
	{
		"cluster": 9,
		"tags": [
			"boxee",
			"linux",
			"forhome",
			"video",
			"media",
			"ubuntu",
			"xbmc"
		],
		"y": -5.374347339520428,
		"x": 5.704221441063989,
		"extended": "",
		"description": "boxee blog » linux version is available",
		"time": "2008-11-21T09:15:38Z",
		"href": "http://blog.boxee.tv/2008/07/22/linux-version-is-available/"
	},
	{
		"cluster": 12,
		"tags": [
			"flash",
			"javascript",
			"web",
			"development",
			"tools",
			"reference",
			"xhtml",
			"forquietus"
		],
		"y": 10.614045865878452,
		"x": -0.5209579131761198,
		"extended": "",
		"description": "swfobject - Google Code",
		"time": "2008-11-21T09:15:14Z",
		"href": "http://code.google.com/p/swfobject/"
	},
	{
		"cluster": 7,
		"tags": [
			"solr",
			"search",
			"fulltext",
			"java",
			"ruby",
			"rails",
			"tutorial",
			"forquietus",
			"programming",
			"development",
			"webdevelopment"
		],
		"y": 7.885164209653452,
		"x": -8.275947920230735,
		"extended": "",
		"description": "acts_as_solr for development and production in one Tomcat instance | Midnight Oil",
		"time": "2008-11-21T09:14:52Z",
		"href": "http://blog.aisleten.com/2007/04/15/acts_as_solr-for-development-and-production-in-one-tomcat-instance/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"smalltalk",
			"presentation",
			"programming",
			"computerscience",
			"development",
			"toread"
		],
		"y": 4.300477518241146,
		"x": -10.833243173387315,
		"extended": "",
		"description": "Avi Bryant: Ruby IS-A Smalltalk | Lambda the Ultimate",
		"time": "2008-11-21T09:14:19Z",
		"href": "http://lambda-the-ultimate.org/node/2573"
	},
	{
		"cluster": 14,
		"tags": [
			"usability",
			"web",
			"design",
			"development",
			"information",
			"architecture",
			"ux",
			"iu",
			"interface"
		],
		"y": 1.8200116021100519,
		"x": 0.9833275468020368,
		"extended": "",
		"description": "JSTOR: Marketing ScienceVol. 19, No. 1 (Winter, 2000), pp. 22-42",
		"time": "2008-11-21T09:13:42Z",
		"href": "http://www.jstor.org/pss/193257"
	},
	{
		"cluster": 12,
		"tags": [
			"nlp",
			"programming",
			"development",
			"criticism",
			"information",
			"efficiency",
			"web"
		],
		"y": 10.235813954627037,
		"x": -5.089031774047338,
		"extended": "",
		"description": "Avoiding NLP At All Costs - Ted Dziuba",
		"time": "2008-11-21T09:12:21Z",
		"href": "http://teddziuba.com/2008/11/avoiding-nlp-at-all-costs.html"
	},
	{
		"cluster": 15,
		"tags": [
			"perspective",
			"art",
			"science",
			"mathematics",
			"nigelwalters",
			"grandad"
		],
		"y": -7.306225270008965,
		"x": -1.8706546516444946,
		"extended": "",
		"description": "Perspectiva Geometrica by Mark A. Reynolds the Nexus Network Journal vol. 5 no. 1 (Spring 2003)",
		"time": "2008-11-21T09:11:51Z",
		"href": "http://www.emis.ams.org/journals/NNJ/GA-v5n1.html"
	},
	{
		"cluster": 0,
		"tags": [
			"hosting",
			"amazon",
			"ec2",
			"services",
			"web",
			"s3",
			"management",
			"admin",
			"tools",
			"systems",
			"sysadmin",
			"cloud"
		],
		"y": 0.5680180477216827,
		"x": 3.241774981577676,
		"extended": "",
		"description": "Ylastic - Manage your cloud",
		"time": "2008-11-21T09:11:24Z",
		"href": "http://ylastic.com/"
	},
	{
		"cluster": 12,
		"tags": [
			"serverside",
			"javascript",
			"web",
			"development",
			"programming",
			"framework"
		],
		"y": 10.103253668179223,
		"x": -3.568685311659036,
		"extended": "",
		"description": "AppJet: Instant Web Programming",
		"time": "2008-11-21T09:08:52Z",
		"href": "http://appjet.com/"
	},
	{
		"cluster": 9,
		"tags": [
			"openafs",
			"debian",
			"tutorial",
			"sysadmin",
			"linux",
			"server",
			"storage",
			"san",
			"afs",
			"howto"
		],
		"y": -5.860850731687884,
		"x": 4.296477744275616,
		"extended": "",
		"description": "OpenAFS installation on Debian",
		"time": "2008-11-11T19:58:52Z",
		"href": "http://www.debian-administration.org/articles/610"
	},
	{
		"cluster": 2,
		"tags": [
			"development",
			"tools",
			"repository",
			"svn",
			"subversion",
			"git",
			"tracking",
			"bug",
			"ticket",
			"wiki"
		],
		"y": -1.8502164106155645,
		"x": 2.6365886592719106,
		"extended": "",
		"description": "Redmine - Overview - Redmine",
		"time": "2008-11-11T12:27:24Z",
		"href": "http://www.redmine.org/"
	},
	{
		"cluster": 7,
		"tags": [
			"test",
			"ruby",
			"unit",
			"programming",
			"development",
			"unittest"
		],
		"y": 7.466932651526653,
		"x": -7.5619705543859626,
		"extended": "",
		"description": "thoughtbot: Shoulda",
		"time": "2008-11-10T15:39:14Z",
		"href": "http://www.thoughtbot.com/projects/shoulda"
	},
	{
		"cluster": 3,
		"tags": [
			"music",
			"criticism",
			"theory",
			"postmodernism",
			"value",
			"canon",
			"art"
		],
		"y": -11.299112455626075,
		"x": 3.2343519598460326,
		"extended": "",
		"description": "Taking on the 'canon' | Music | guardian.co.uk",
		"time": "2008-11-10T14:06:26Z",
		"href": "http://www.guardian.co.uk/music/musicblog/2008/nov/10/squarepusher-canon-crowther"
	},
	{
		"cluster": 9,
		"tags": [
			"vertical",
			"linux",
			"unix",
			"split",
			"screen",
			"untility"
		],
		"y": -5.546972373809736,
		"x": 2.5525032566280905,
		"extended": "",
		"description": "scie.nti.st » GNU screen with vertical split support",
		"time": "2008-11-10T13:08:17Z",
		"href": "http://scie.nti.st/2008/8/22/gnu-screen-with-vertical-split-support"
	},
	{
		"cluster": 9,
		"tags": [
			"screen",
			"patch",
			"linux",
			"unix",
			"utility",
			"gnu",
			"vertical",
			"split"
		],
		"y": -5.557173296270082,
		"x": 2.5457433056769223,
		"extended": "",
		"description": "Vertical Split for GNU Screen",
		"time": "2008-11-10T13:07:51Z",
		"href": "http://fungi.yuggoth.org/vsp4s/"
	},
	{
		"cluster": 9,
		"tags": [
			"emacs",
			"screen",
			"client",
			"bash",
			"linux",
			"unix"
		],
		"y": -5.5276054294248,
		"x": 2.5979079348242218,
		"extended": "",
		"description": "Screened Emacs Launcher - biais.org",
		"time": "2008-11-10T13:07:28Z",
		"href": "http://www.biais.org/blog/index.php/2008/05/26/66-screened-emacs-launcher"
	},
	{
		"cluster": 9,
		"tags": [
			"debian",
			"kerberos",
			"mit",
			"sysdamin",
			"security",
			"authentication",
			"linux",
			"unix"
		],
		"y": -5.883641956241006,
		"x": 4.078181261773898,
		"extended": "",
		"description": "Debian GNU: Setting up MIT Kerberos 5",
		"time": "2008-11-10T13:03:25Z",
		"href": "http://techpubs.spinlocksolutions.com/dklar/kerberos.html#krb-inst-krberized"
	},
	{
		"cluster": 9,
		"tags": [
			"patch",
			"linode",
			"openafs",
			"afs",
			"kernel",
			"sysadmin",
			"debian",
			"xen",
			"linux",
			"unix"
		],
		"y": -5.829512784799438,
		"x": 4.399240356817375,
		"extended": "",
		"description": "[Xen-bugs] [Bug 1167] New: Xen Kernel and OpenAFS module both #d - Xen Source",
		"time": "2008-11-10T12:59:43Z",
		"href": "http://lists.xensource.com/archives/html/xen-bugs/2008-02/msg00014.html"
	},
	{
		"cluster": 9,
		"tags": [
			"kerberos",
			"auth",
			"security",
			"sysadmin",
			"systems",
			"server",
			"debian",
			"unix",
			"linux"
		],
		"y": -5.981155695737185,
		"x": 4.0599695598234815,
		"extended": "cd /var/log; sudo tail -f daemon.log sulog user.log auth.log debug kern.log syslog dmesg messages kerberos/*.\n",
		"description": "MIT Kerberos installation on Debian",
		"time": "2008-11-09T17:27:59Z",
		"href": "http://www.debian-administration.org/articles/570"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"networking",
			"reference",
			"sysadmin",
			"security",
			"ip",
			"tcp",
			"udp",
			"admin"
		],
		"y": -4.6126623063452215,
		"x": 6.988573881111508,
		"extended": "",
		"description": "List of TCP and UDP port numbers - Wikipedia, the free encyclopedia",
		"time": "2008-11-08T19:22:28Z",
		"href": "http://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers"
	},
	{
		"cluster": 9,
		"tags": [
			"shorewall",
			"firewall",
			"debian",
			"admin",
			"sysadmin",
			"linux",
			"security"
		],
		"y": -6.04061354328158,
		"x": 4.153220237310359,
		"extended": "",
		"description": "HOWTO: Debian Etch: Install Shorewall firewall - VPSLink Wiki",
		"time": "2008-11-08T19:21:50Z",
		"href": "http://wiki.vpslink.com/HOWTO:_Debian_Etch:_Install_Shorewall_firewall"
	},
	{
		"cluster": 9,
		"tags": [
			"unix",
			"linux",
			"tips",
			"reference",
			"shell",
			"sysadmin",
			"terminal"
		],
		"y": -5.93401980155743,
		"x": 2.9876517741322925,
		"extended": "if [ -f ~/.bashrc ]; then source ~/.bashrc fi\n",
		"description": "Josh Staiger: .bash_profile vs. .bashrc",
		"time": "2008-11-08T15:55:58Z",
		"href": "http://www.joshstaiger.org/archives/2005/07/bash_profile_vs.html"
	},
	{
		"cluster": 9,
		"tags": [
			"hostname",
			"unix",
			"linux",
			"admin",
			"sysadmin",
			"reference",
			"debian",
			"dns"
		],
		"y": -5.983893451112766,
		"x": 3.7955401305912266,
		"extended": "",
		"description": "Change hostname or Server name of a Linux Machine -- Debian Admin",
		"time": "2008-11-08T14:30:41Z",
		"href": "http://www.debianadmin.com/change-hostname-or-server-name-of-a-linux-machine.html"
	},
	{
		"cluster": 7,
		"tags": [
			"cop",
			"context",
			"oriented",
			"programming",
			"development"
		],
		"y": 8.998481670926202,
		"x": -5.4475338470269,
		"extended": "",
		"description": "Context-oriented Programming (HPI)",
		"time": "2008-11-05T17:24:43Z",
		"href": "http://www.swa.hpi.uni-potsdam.de/cop/"
	},
	{
		"cluster": 7,
		"tags": [
			"programming",
			"productivity",
			"work",
			"development",
			"engineering"
		],
		"y": 8.755385022727195,
		"x": -1.437411161046955,
		"extended": "",
		"description": "Peter Hallam's WebLog : What Do Programmers Really Do Anyway? (aka Part 2 of the Yardstick saga)",
		"time": "2008-11-05T17:23:28Z",
		"href": "http://blogs.msdn.com/peterhal/archive/2006/01/04/509302.aspx"
	},
	{
		"cluster": 2,
		"tags": [
			"atari",
			"st",
			"rom",
			"emulation",
			"software",
			"download"
		],
		"y": -2.9610504073584636,
		"x": 5.301012597174921,
		"extended": "",
		"description": "Page 6 [New Atari User] Magazine - ST Public Domain Library",
		"time": "2008-11-05T17:23:04Z",
		"href": "http://www.page6.org/st_lib/st_lib.htm"
	},
	{
		"cluster": 17,
		"tags": [
			"video",
			"erlang",
			"programming",
			"tutorial",
			"development",
			"computerscience"
		],
		"y": 2.5555141906066536,
		"x": -11.71460267692742,
		"extended": "",
		"description": "YouTube - Erlang: The Movie",
		"time": "2008-11-05T11:23:34Z",
		"href": "http://uk.youtube.com/watch?v=uKfKtXYLG78"
	},
	{
		"cluster": 12,
		"tags": [
			"IM",
			"jabber",
			"bbc",
			"xmpp",
			"development",
			"web",
			"service",
			"appication"
		],
		"y": 9.329793377669011,
		"x": 0.6055350180454343,
		"extended": "",
		"description": "Whomwah.com » BBC Programmes via Instant Messenger",
		"time": "2008-11-04T13:04:33Z",
		"href": "http://whomwah.com/2008/11/02/bbc-programmes-via-instant-messenger/"
	},
	{
		"cluster": 10,
		"tags": [
			"design",
			"politics",
			"culture"
		],
		"y": -0.2877058589904412,
		"x": 10.378822968574262,
		"extended": "",
		"description": "Shepard Fairey for Obama | Art Threat",
		"time": "2008-11-04T12:58:14Z",
		"href": "http://artthreat.net/2008/11/shepard-fairey-obama/"
	},
	{
		"cluster": 1,
		"tags": [
			"science",
			"psychology",
			"culture",
			"lefthandedness"
		],
		"y": -6.137266027345389,
		"x": 7.653404298107665,
		"extended": "",
		"description": "Left-handed people are more inhibited - being-human - 03 November 2008 - New Scientist",
		"time": "2008-11-04T12:57:52Z",
		"href": "http://www.newscientist.com/channel/being-human/dn15112-lefthanded-people-are-more-inhibited.html?feedId=online-news_rss20"
	},
	{
		"cluster": 12,
		"tags": [
			"programming",
			"web",
			"development",
			"algorithms",
			"gps",
			"geo",
			"photography",
			"maps",
			"cartography",
			"geodata",
			"visualization",
			"statistics",
			"flickr",
			"math"
		],
		"y": 10.034309999313358,
		"x": -5.2625331718679975,
		"extended": "",
		"description": "Code: Flickr Developer Blog » The Shape of Alpha",
		"time": "2008-11-04T12:57:12Z",
		"href": "http://code.flickr.com/blog/2008/10/30/the-shape-of-alpha/"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"geek",
			"culture",
			"society"
		],
		"y": 0.6503090805758753,
		"x": 12.26121430667852,
		"extended": "",
		"description": "VOTE NERD - Boing Boing",
		"time": "2008-11-04T12:56:03Z",
		"href": "http://www.boingboing.net/2008/11/03/vote-nerd.html"
	},
	{
		"cluster": 7,
		"tags": [
			"red",
			"javascript",
			"web",
			"development",
			"ruby",
			"programming",
			"library",
			"gem"
		],
		"y": 8.640759730195736,
		"x": -9.32508601983837,
		"extended": "",
		"description": "Red 4.0 - A Full Ruby Runtime in Your Browser « Trek",
		"time": "2008-11-04T12:50:46Z",
		"href": "http://wonderfullyflawed.com/2008/10/13/red-40-a-full-ruby-runtime-in-your-browser/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"knuth",
			"algorithms",
			"artofcomputerprogramming",
			"computerscience",
			"programming",
			"development",
			"learning"
		],
		"y": 1.4285350364168257,
		"x": -12.926966449793184,
		"extended": "",
		"description": "8th Light Blog",
		"time": "2008-11-04T12:49:45Z",
		"href": "http://blog.8thlight.com/articles/2007/11/06/ruby-and-the-art-of-computer-programming"
	},
	{
		"cluster": 17,
		"tags": [
			"SICP",
			"computerscience",
			"lisp",
			"programming",
			"mit",
			"video",
			"scheme",
			"learning"
		],
		"y": -7.825056988142462,
		"x": -12.218774829049643,
		"extended": "",
		"description": "Structure and Interpretation of Computer Programs, Video Lectures",
		"time": "2008-11-04T12:00:30Z",
		"href": "http://groups.csail.mit.edu/mac/classes/6.001/abelson-sussman-lectures/"
	},
	{
		"cluster": 7,
		"tags": [
			"code",
			"humour",
			"programming",
			"ruby",
			"turtles",
			"kitties",
			"nil"
		],
		"y": 5.749952415246185,
		"x": -10.065252935771952,
		"extended": "",
		"description": "chalain: Turtles!",
		"time": "2008-11-04T11:55:04Z",
		"href": "http://chalain.livejournal.com/66798.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"database",
			"orm",
			"sql",
			"interface",
			"programming",
			"development",
			"gem",
			"library"
		],
		"y": 8.014883910384373,
		"x": -9.843416217353761,
		"extended": "",
		"description": "Sequel: The Database Toolkit for Ruby",
		"time": "2008-11-04T11:17:04Z",
		"href": "http://sequel.rubyforge.org/rdoc/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"gem",
			"database",
			"orm",
			"programming",
			"development"
		],
		"y": 7.879354901023994,
		"x": -9.661837324456872,
		"extended": "",
		"description": "Main Page - Cubawiki",
		"time": "2008-11-04T11:16:09Z",
		"href": "http://infranode.com/wiki/index.php/Main_Page"
	},
	{
		"cluster": 7,
		"tags": [
			"context",
			"oriented",
			"programming",
			"ruby",
			"gem",
			"cop",
			"development"
		],
		"y": 8.989714568141515,
		"x": -5.598078308606425,
		"extended": "",
		"description": "contextr",
		"time": "2008-11-04T11:06:42Z",
		"href": "http://contextr.rubyforge.org/"
	},
	{
		"cluster": 1,
		"tags": [
			"klf",
			"billdrummond",
			"music",
			"culture",
			"art",
			"performance"
		],
		"y": -10.281028723385294,
		"x": 2.824926555475566,
		"extended": "",
		"description": "The Quietus | Features | Bill Drummond Interviewed: Recorded Music Has Run Its Course",
		"time": "2008-10-31T13:24:40Z",
		"href": "http://www.thequietus.com/articles/00355-bill-drummond-interviewed-recorded-music-has-run-it-s-course"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"baltimore",
			"dance"
		],
		"y": -9.362692810270229,
		"x": 4.3154771863856425,
		"extended": "",
		"description": "The story of Baltimore house music | Music | guardian.co.uk",
		"time": "2008-10-31T13:20:37Z",
		"href": "http://www.guardian.co.uk/music/musicblog/2008/oct/27/baltimore-club-bmore-remix"
	},
	{
		"cluster": 13,
		"tags": [
			"politics",
			"economics",
			"marx",
			"theory",
			"culture",
			"marxism",
			"socialism",
			"society"
		],
		"y": 3.833445148342255,
		"x": 11.572015477309167,
		"extended": "",
		"description": "Mute magazine - Culture and politics after the net",
		"time": "2008-10-31T13:19:40Z",
		"href": "http://www.metamute.org/en/content/karl_marx_did_he_get_it_all_right"
	},
	{
		"cluster": 3,
		"tags": [
			"language",
			"culture",
			"politics",
			"criticism",
			"theory",
			"society",
			"linguistics"
		],
		"y": -0.6515835372745167,
		"x": 12.894243930581705,
		"extended": "",
		"description": "What Sarah Palin Is Saying - Anil Dash",
		"time": "2008-10-31T13:17:58Z",
		"href": "http://dashes.com/anil/2008/10/what-sarah-palin-is-saying.html"
	},
	{
		"cluster": 2,
		"tags": [
			"science",
			"neuroscience",
			"psychology",
			"brain",
			"love",
			"hate",
			"emotions",
			"thought",
			"life"
		],
		"y": -0.37251669265496085,
		"x": 6.625075190520416,
		"extended": "",
		"description": "'Hate circuit' discovered in brain - being-human - 28 October 2008 - New Scientist",
		"time": "2008-10-31T13:17:05Z",
		"href": "http://www.newscientist.com/channel/being-human/dn15060-brain-scans-show-the-difference-between-love-and-hate.html?feedId=online-news_rss20"
	},
	{
		"cluster": 6,
		"tags": [
			"law",
			"internet",
			"technology",
			"google",
			"copyright"
		],
		"y": -8.14242825033029,
		"x": 2.400660571534565,
		"extended": "",
		"description": "Techdirt: Short Term Profits Over Long Term Principles",
		"time": "2008-10-31T13:14:57Z",
		"href": "http://techdirt.com/articles/20081028/1218012674.shtml"
	},
	{
		"cluster": 17,
		"tags": [
			"life",
			"science",
			"consciousness",
			"philosophy",
			"programming",
			"psychology",
			"depression"
		],
		"y": -3.071239109545786,
		"x": 2.2827816135068955,
		"extended": "",
		"description": "Stevey's Blog Rants: A programmer's view of the Universe, part 1: The fish",
		"time": "2008-10-31T13:13:02Z",
		"href": "http://steve-yegge.blogspot.com/2008/10/programmers-view-of-universe-part-1.html"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"sculpture",
			"gilbertandgeorge"
		],
		"y": -10.210344567057392,
		"x": 2.0716975184142266,
		"extended": "",
		"description": "The L Magazine, New York City's Local Event Guide",
		"time": "2008-10-31T13:12:15Z",
		"href": "http://thelmagazine.com/6/31/art/art.cfm?ctype=2"
	},
	{
		"cluster": 10,
		"tags": [
			"politics",
			"socialism",
			"USA",
			"society"
		],
		"y": 2.7488481929626367,
		"x": 11.058415415928065,
		"extended": "",
		"description": "Like, Socialism: Comment: The New Yorker",
		"time": "2008-10-31T11:10:10Z",
		"href": "http://www.newyorker.com/talk/comment/2008/11/03/081103taco_talk_hertzberg?printable=true"
	},
	{
		"cluster": 18,
		"tags": [
			"development",
			"programming",
			"oop",
			"computerscience",
			"software"
		],
		"y": 3.9000062468578185,
		"x": -9.060611990808058,
		"extended": "",
		"description": "10 Object Oriented Design Principles | Livrona",
		"time": "2008-10-31T11:07:57Z",
		"href": "http://www.livrona.com/blog/programming/10-object-oriented-design-principles"
	},
	{
		"cluster": 2,
		"tags": [
			"society",
			"psychology",
			"love",
			"relationships",
			"science",
			"research"
		],
		"y": -0.24723065772251654,
		"x": 6.675095043435566,
		"extended": "",
		"description": "Men have a sharper eye for a love cheat - sex - 29 October 2008 - New Scientist",
		"time": "2008-10-31T10:48:31Z",
		"href": "http://www.newscientist.com/channel/sex/mg20026804.000-men-have-a-sharper-eye-for-a-love-cheat.html"
	},
	{
		"cluster": 8,
		"tags": [
			"music",
			"business",
			"economics",
			"legal",
			"p2p",
			"sharing",
			"internet",
			"technology"
		],
		"y": 5.178639426875718,
		"x": 4.716748914366082,
		"extended": "",
		"description": "A new economics of P2P file sharing • The Register",
		"time": "2008-10-31T10:47:51Z",
		"href": "http://www.theregister.co.uk/2008/10/30/shadow_pricing_p2p/"
	},
	{
		"cluster": 3,
		"tags": [
			"film",
			"cinema",
			"culture",
			"theory",
			"society",
			"criticism",
			"queer",
			"gay"
		],
		"y": -1.6899480758092653,
		"x": 11.338896276460941,
		"extended": "",
		"description": "Simon Callow on gay roles in cinema | Film | The Guardian",
		"time": "2008-10-31T10:24:56Z",
		"href": "http://www.guardian.co.uk/film/2008/oct/31/gay-roles"
	},
	{
		"cluster": 17,
		"tags": [
			"lisp",
			"context",
			"MVC",
			"COP",
			"oriented",
			"programming",
			"OOP",
			"development",
			"computerscience"
		],
		"y": 8.992004409878422,
		"x": -5.434739001182648,
		"extended": "",
		"description": "Lisp50 Notes part II: Model-View-Controller Considered Harmful « Learning Lisp",
		"time": "2008-10-27T09:54:46Z",
		"href": "http://lispy.wordpress.com/2008/10/22/lisp50-notes-part-ii-model-view-controller-considered-harmful/"
	},
	{
		"cluster": 17,
		"tags": [
			"book",
			"programming",
			"computerscience",
			"reference",
			"education",
			"learning",
			"theory",
			"textbook"
		],
		"y": 0.18294902854840425,
		"x": -12.671660437486532,
		"extended": "",
		"description": "a Practical Theory of Programming",
		"time": "2008-10-27T09:51:15Z",
		"href": "http://www.cs.toronto.edu/~hehner/aPToP/"
	},
	{
		"cluster": 9,
		"tags": [
			"awk",
			"unix",
			"scripting",
			"shell",
			"regexp",
			"tips",
			"tricks",
			"reference",
			"linux",
			"sysadmin",
			"tutorial"
		],
		"y": -5.927606450281449,
		"x": 2.9051588055527926,
		"extended": "",
		"description": "10 Awk Tips, Tricks and Pitfalls - good coders code, great reuse",
		"time": "2008-10-27T09:50:04Z",
		"href": "http://www.catonmat.net/blog/ten-awk-tips-tricks-and-pitfalls/"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"programming",
			"webservice",
			"rest",
			"xml",
			"xrds",
			"tutorial",
			"development",
			"architecture",
			"api"
		],
		"y": 9.831611582759628,
		"x": -6.1834670742738425,
		"extended": "",
		"description": "Dare Obasanjo aka Carnage4Life - REST API Design: Invent Media Types, Not Protocols and Understand the Importance of Hyperlinks",
		"time": "2008-10-27T09:48:57Z",
		"href": "http://www.25hoursaday.com/weblog/2008/10/24/RESTAPIDesignInventMediaTypesNotProtocolsAndUnderstandTheImportanceOfHyperlinks.aspx"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"computerscience",
			"eduation",
			"science",
			"maths",
			"technology",
			"computing"
		],
		"y": 1.370530097775207,
		"x": -11.471215734826716,
		"extended": "",
		"description": "Knowing and Doing: October 2008 Archives",
		"time": "2008-10-27T09:44:45Z",
		"href": "http://www.cs.uni.edu/~wallingf/blog/archives/monthly/2008-10.html#e2008-10-23T21_58_04.htm"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"rest",
			"development",
			"authentication",
			"internet",
			"software",
			"programming"
		],
		"y": 9.917827501783322,
		"x": -5.878026213534858,
		"extended": "",
		"description": "Andrzej on Software: REST: Some tips and implementing \"Forgot your password?\"",
		"time": "2008-10-27T09:41:28Z",
		"href": "http://andrzejonsoftware.blogspot.com/2008/10/rest-some-tips-and-implementing-your.html"
	},
	{
		"cluster": 8,
		"tags": [
			"social",
			"network",
			"software",
			"web",
			"internet",
			"development",
			"entrepreneurship",
			"business"
		],
		"y": 4.560800610690889,
		"x": 2.5442266113066556,
		"extended": "",
		"description": "Niche online social networks FTW! :: Blog :: Headshift",
		"time": "2008-10-27T09:39:51Z",
		"href": "http://www.headshift.com/blog/2008/10/niche-online-social-networks-f.php"
	},
	{
		"cluster": 2,
		"tags": [
			"science",
			"memory",
			"medicine",
			"psychology",
			"technology",
			"biotech"
		],
		"y": -6.051236275382232,
		"x": 7.651117832351363,
		"extended": "",
		"description": "'Eternal Sunshine' drug selectively erases memories - being-human - 23 October 2008 - New Scientist",
		"time": "2008-10-27T09:33:29Z",
		"href": "http://www.newscientist.com/channel/being-human/dn15025-eternal-sunshine-drug-selectively-erases-memories.html?feedId=online-news_rss20"
	},
	{
		"cluster": 14,
		"tags": [
			"privacy",
			"social",
			"software",
			"network",
			"internet",
			"design",
			"UI",
			"UX",
			"web",
			"development",
			"control"
		],
		"y": 4.534037737160253,
		"x": 2.252148299165865,
		"extended": "",
		"description": "apophenia: Putting Privacy Settings in the Context of Use (in Facebook and elsewhere)",
		"time": "2008-10-27T09:29:26Z",
		"href": "http://www.zephoria.org/thoughts/archives/2008/10/22/putting_privacy.html"
	},
	{
		"cluster": 2,
		"tags": [
			"religion",
			"literature",
			"scifi",
			"science",
			"technology",
			"maths",
			"fiction",
			"sf",
			"AI",
			"atheism"
		],
		"y": -2.967276336157644,
		"x": 2.222717887791738,
		"extended": "",
		"description": "God, AI, and the rapture of the geeks: Page 1",
		"time": "2008-10-27T09:26:25Z",
		"href": "http://arstechnica.com/articles/culture/rapture-for-the-geeks-book-review.ars"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"internet",
			"development",
			"programming",
			"design",
			"css",
			"javascript",
			"css3",
			"browsers",
			"compatibility",
			"standards",
			"html"
		],
		"y": 10.70387611976525,
		"x": 0.11469913919190773,
		"extended": "",
		"description": "Eric's Archived Thoughts: JavaScript Will Save Us All",
		"time": "2008-10-27T09:19:46Z",
		"href": "http://meyerweb.com/eric/thoughts/2008/10/22/javascript-will-save-us-all/"
	},
	{
		"cluster": 8,
		"tags": [
			"atlas",
			"map",
			"mapping",
			"network",
			"information",
			"design",
			"history",
			"graphics",
			"cartography",
			"internet",
			"book",
			"maps",
			"visualization",
			"networking"
		],
		"y": -2.800897795988377,
		"x": 0.6917559345101641,
		"extended": "",
		"description": "Atlas of Cyberspace",
		"time": "2008-10-24T10:08:49Z",
		"href": "http://www.kitchin.org/atlas/"
	},
	{
		"cluster": 1,
		"tags": [
			"religion",
			"society",
			"culture",
			"psychology",
			"sociology",
			"anthropology"
		],
		"y": -3.468491852050227,
		"x": 11.951330702378758,
		"extended": "",
		"description": "David Shariatmadari: May your god go with you | Comment is free | guardian.co.uk",
		"time": "2008-10-24T09:51:52Z",
		"href": "http://www.guardian.co.uk/commentisfree/2008/oct/24/religion-psychology"
	},
	{
		"cluster": 11,
		"tags": [
			"netbook",
			"asus",
			"hardware",
			"technology",
			"eeepc",
			"apple",
			"mac"
		],
		"y": -4.178540489940271,
		"x": 5.1442252716170636,
		"extended": "",
		"description": "Why I like netbooks (Scripting News)",
		"time": "2008-10-22T14:45:52Z",
		"href": "http://www.scripting.com/stories/2008/10/22/whyILikeNetbooks.html"
	},
	{
		"cluster": 2,
		"tags": [
			"gender",
			"society",
			"identity",
			"women",
			"anthropology",
			"sociology",
			"patriarchy",
			"albania"
		],
		"y": -3.3783994581616237,
		"x": 12.195051852183914,
		"extended": "",
		"description": "BBC NEWS | World | Europe | Last of Albania's 'sworn virgins'",
		"time": "2008-10-22T10:45:08Z",
		"href": "http://news.bbc.co.uk/1/hi/world/europe/7682240.stm"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"music",
			"business",
			"technology",
			"streaming"
		],
		"y": 5.050880337971359,
		"x": 4.558507248527689,
		"extended": "",
		"description": "Lala May Have Just Built The Next Revolution In Digital Music",
		"time": "2008-10-22T10:12:28Z",
		"href": "http://www.techcrunch.com/2008/10/20/lala-may-have-just-built-the-next-revolution-in-digital-music/"
	},
	{
		"cluster": 8,
		"tags": [
			"music",
			"mobile",
			"business",
			"internet",
			"technology"
		],
		"y": 5.017778073638622,
		"x": 4.538231079568859,
		"extended": "",
		"description": "Imeem For Android Takes The Jukebox In The Sky And Puts It In Your Pocket",
		"time": "2008-10-22T10:08:16Z",
		"href": "http://www.techcrunch.com/2008/10/20/imeem-for-android-takes-the-jukebox-in-the-sky-and-puts-it-in-your-pocket/"
	},
	{
		"cluster": 10,
		"tags": [
			"music",
			"society",
			"politics",
			"censorship",
			"business",
			"culture"
		],
		"y": 0.19394642416708135,
		"x": 12.680645016281343,
		"extended": "",
		"description": "Harry’s Place Arts » Iran’s Vinyl Solution",
		"time": "2008-10-22T10:07:14Z",
		"href": "http://arts.hurryupharry.org/2008/10/21/irans-vinyl-solution/"
	},
	{
		"cluster": 2,
		"tags": [
			"suicide",
			"depression",
			"health",
			"society",
			"psy"
		],
		"y": 0.5934271105459021,
		"x": 7.056996211576106,
		"extended": "",
		"description": "Why are baby boomers killing themselves? - Short Sharp Science - New Scientist",
		"time": "2008-10-22T10:06:26Z",
		"href": "http://www.newscientist.com/blogs/shortsharpscience/2008/10/whats-eating-baby-boomers.html"
	},
	{
		"cluster": 1,
		"tags": [
			"culture",
			"identity",
			"society",
			"accents",
			"language"
		],
		"y": -3.2876533170815456,
		"x": 11.376314308519998,
		"extended": "",
		"description": "Are foreign accents a reflection of identity? | Derek Sivers",
		"time": "2008-10-22T09:56:57Z",
		"href": "http://sivers.org/accents"
	},
	{
		"cluster": 6,
		"tags": [
			"iprs",
			"intellectualproperty",
			"copyright",
			"technology",
			"innovation",
			"society",
			"amateur",
			"professional"
		],
		"y": -3.2567692554734484,
		"x": 8.49196976515565,
		"extended": "",
		"description": "Pro geek hobbyists, innovation, and IPRs | Tangible IP",
		"time": "2008-10-22T09:50:01Z",
		"href": "http://www.tangible-ip.com/2008/pro-geek-hobbyists-innovation-and-iprs.htm"
	},
	{
		"cluster": 2,
		"tags": [
			"maths",
			"religion",
			"theology"
		],
		"y": -2.8355235429124366,
		"x": 2.4376299496383207,
		"extended": "",
		"description": "Are three odd numbers evidence of a Creator? via BlogRodent",
		"time": "2008-10-22T09:42:43Z",
		"href": "http://tatumweb.com/blog/2006/03/10/are-three-odd-numbers-evidence-of-a-creator/"
	},
	{
		"cluster": 10,
		"tags": [
			"economy",
			"politics",
			"america",
			"election"
		],
		"y": 5.296588781880433,
		"x": 10.917054699078427,
		"extended": "",
		"description": "America’s economy election | open Democracy News Analysis",
		"time": "2008-10-22T09:40:43Z",
		"href": "http://www.opendemocracy.net/article/america-s-economy-election"
	},
	{
		"cluster": 17,
		"tags": [
			"zip",
			"file",
			"quine",
			"computerscience",
			"recursion",
			"programming"
		],
		"y": 3.521723045314025,
		"x": -11.71147830261356,
		"extended": "",
		"description": "zip file quine",
		"time": "2008-10-21T12:44:53Z",
		"href": "http://steike.com/code/useless/zip-file-quine/"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"development",
			"education",
			"employment",
			"programming",
			"business",
			"skills"
		],
		"y": 9.203187647940805,
		"x": -1.5437268336541268,
		"extended": "",
		"description": "10 Most Sought-after Skills in Web Development - NETTUTS",
		"time": "2008-10-21T09:55:51Z",
		"href": "http://nettuts.com/articles/10-most-sought-after-skills-in-web-development/"
	},
	{
		"cluster": 4,
		"tags": [
			"programming",
			"computerscience",
			"haskell",
			"python",
			"erlang",
			"typing",
			"functional",
			"typesystems",
			"concurrency",
			"patternmatching"
		],
		"y": -7.6858253785101,
		"x": -9.121553513331849,
		"extended": "",
		"description": "Smart Disorganized Individuals",
		"time": "2008-10-21T09:53:59Z",
		"href": "http://smartdisorganized.blogspot.com/2008/10/prediction-i-made-i-predict-that-in.html"
	},
	{
		"cluster": 11,
		"tags": [
			"macruby",
			"mac",
			"ruby",
			"cocoa",
			"programming",
			"development",
			"osx",
			"apple",
			"objective-c",
			"xcode",
			"rubycocoa"
		],
		"y": 7.8621774026377675,
		"x": -6.435984037000125,
		"extended": "",
		"description": "ADC—Developing Cocoa Applications Using MacRuby",
		"time": "2008-10-21T09:39:43Z",
		"href": "http://developer.apple.com/mac/articles/scriptingautomation/cocoaappswithmacruby.html"
	},
	{
		"cluster": 9,
		"tags": [
			"vaneck",
			"sound",
			"radio",
			"music",
			"technology",
			"software",
			"linux"
		],
		"y": -8.661280798458794,
		"x": 3.782019414009138,
		"extended": "",
		"description": "Tempest for Eliza",
		"time": "2008-10-20T20:16:22Z",
		"href": "http://www.erikyyy.de/tempest/"
	},
	{
		"cluster": 2,
		"tags": [
			"jokes",
			"geek",
			"technology"
		],
		"y": -3.843107328194766,
		"x": 5.824074366290719,
		"extended": "",
		"description": "Tell us your best geek jokes | Technology | guardian.co.uk",
		"time": "2008-10-20T11:01:04Z",
		"href": "http://www.guardian.co.uk/technology/blog/2008/oct/17/1?commentpage=1"
	},
	{
		"cluster": 3,
		"tags": [
			"phptography",
			"theory",
			"culture",
			"art",
			"politics",
			"media"
		],
		"y": -7.138264300120805,
		"x": 10.430677900301946,
		"extended": "",
		"description": "The photograph as \"ruin\": Strange photo of McCain after last presidential debate | Art Threat | persuasive political art",
		"time": "2008-10-20T10:36:45Z",
		"href": "http://artthreat.net/2008/10/photograph-ruin-strange-photo-"
	},
	{
		"cluster": 8,
		"tags": [
			"software",
			"social",
			"culture",
			"mobile",
			"web",
			"communication",
			"internet",
			"technology",
			"matchmaking",
			"wireless",
			"gps",
			"location",
			"geodata",
			"mit",
			"research"
		],
		"y": 4.375463509915866,
		"x": 2.922773664546223,
		"extended": "",
		"description": "MIT Media Lab: Reality Mining",
		"time": "2008-10-20T10:13:09Z",
		"href": "http://reality.media.mit.edu/serendipity.php"
	},
	{
		"cluster": 8,
		"tags": [
			"gender",
			"education",
			"technology",
			"IT",
			"web",
			"internet",
			"programming",
			"computer",
			"science",
			"feminism",
			"women",
			"culture",
			"industry",
			"employment"
		],
		"y": -6.201567250935876,
		"x": 7.946611473232479,
		"extended": "",
		"description": "Slash7 with Amy Hoy - Can we can it with the damn \"where are the women?\" crap already?",
		"time": "2008-10-20T09:57:08Z",
		"href": "http://www.slash7.com/articles/2008/10/19/can-we-can-it-with-the-damn-where-are-the-women-crap-already"
	},
	{
		"cluster": 2,
		"tags": [
			"xkcd",
			"comic",
			"humour",
			"webcomic",
			"cartoon",
			"interview"
		],
		"y": -3.0738056368324034,
		"x": 4.160178900748457,
		"extended": "",
		"description": "The Cartoon Lounge: Online Only: The New Yorker",
		"time": "2008-10-20T09:46:34Z",
		"href": "http://www.newyorker.com/online/blogs/cartoonlounge/2008/10/cartoonoff-xkcd.html"
	},
	{
		"cluster": 1,
		"tags": [
			"psychology",
			"books",
			"toread",
			"science",
			"music"
		],
		"y": -8.72797178863758,
		"x": 4.95023165363229,
		"extended": "",
		"description": "Paperback of the week: Musicophilia by Oliver Sacks | Books | The Observer",
		"time": "2008-10-20T09:45:40Z",
		"href": "http://www.guardian.co.uk/books/2008/oct/19/scienceandnature"
	},
	{
		"cluster": 8,
		"tags": [
			"social",
			"software",
			"location",
			"geodata",
			"gps",
			"web",
			"internet",
			"dating",
			"relationships",
			"sex",
			"privacy"
		],
		"y": 4.364483780584743,
		"x": 2.7920074966380906,
		"extended": "",
		"description": "Location - Webmonkey",
		"time": "2008-10-20T09:45:03Z",
		"href": "http://www.webmonkey.com/blog/Location-Based_Dating%3A_Not_New__Still_Creepy_"
	},
	{
		"cluster": 2,
		"tags": [
			"google",
			"news",
			"seo",
			"urls"
		],
		"y": -2.3642589082578684,
		"x": 4.62438790356162,
		"extended": "",
		"description": "Technical Requirements : Article URLs - Help for Publishers",
		"time": "2008-10-20T09:32:49Z",
		"href": "http://www.google.com/support/news_pub/bin/answer.py?answer=68323"
	},
	{
		"cluster": 2,
		"tags": [
			"ruby",
			"rails",
			"mail",
			"gem",
			"plugin",
			"offline",
			"background",
			"ar_mailer",
			"ar_sendmail"
		],
		"y": -0.49712968421299764,
		"x": 1.7423156025812594,
		"extended": ":activerecord\n",
		"description": "Sending tons of emails in Ruby on Rails with ar_mailer - Developer Discussion - Ameravant",
		"time": "2008-10-20T09:32:26Z",
		"href": "http://www.ameravant.com/posts/sending-tons-of-emails-in-ruby-on-rails-with-ar_mailer"
	},
	{
		"cluster": 2,
		"tags": [
			"food",
			"pastry",
			"baking",
			"cooking",
			"recipe"
		],
		"y": -3.6049755340819196,
		"x": 1.3214983261080169,
		"extended": "",
		"description": "Rough-puff pastry recipe - Recipes - BBC Good Food",
		"time": "2008-10-19T15:21:58Z",
		"href": "http://www.bbcgoodfood.com/recipes/2403/roughpuff-pastry-"
	},
	{
		"cluster": 2,
		"tags": [
			"france",
			"paris",
			"work",
			"space",
			"office"
		],
		"y": -0.6143190479353624,
		"x": 5.470596954055252,
		"extended": "",
		"description": "La Cantine",
		"time": "2008-10-19T15:18:45Z",
		"href": "http://lacantine.org/"
	},
	{
		"cluster": 2,
		"tags": [
			"train",
			"ticket",
			"france",
			"paris",
			"travel"
		],
		"y": -0.7605315377258776,
		"x": 5.066813088663251,
		"extended": "",
		"description": "Troc des Prems: pour acheter un billet de train pas cher (Prem's, Smilys, Piccolo). Billets train SNCF, THALYS, EUROSTAR, LYRIA",
		"time": "2008-10-19T15:18:08Z",
		"href": "http://www.trocdesprems.com/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"ruby1.9",
			"programming",
			"development",
			"regexp"
		],
		"y": 7.518911010688951,
		"x": -8.773070934994651,
		"extended": "",
		"description": "PragDave: Fun with Ruby 1.9 Regular Expressions",
		"time": "2008-10-17T10:26:06Z",
		"href": "http://pragdave.blogs.pragprog.com/pragdave/2008/10/fun-with-ruby-19-regular-expressions.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"cgi",
			"web",
			"development",
			"programming",
			"erb"
		],
		"y": 8.787610801654122,
		"x": -7.953860127207965,
		"extended": "",
		"description": "eRuby: How to use Ruby CGI and ERB templating for Web Pages | Hiveminds Magazine for web publishers and community builders",
		"time": "2008-10-16T13:01:31Z",
		"href": "http://www.hiveminds.co.uk/node/3189"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"development",
			"web",
			"server"
		],
		"y": 8.740252041671075,
		"x": -7.949885329241984,
		"extended": "",
		"description": "ruby-server-pages - Google Code",
		"time": "2008-10-16T11:23:36Z",
		"href": "http://code.google.com/p/ruby-server-pages/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"web",
			"server",
			"development",
			"programming"
		],
		"y": 8.755829132551773,
		"x": -7.938754879176446,
		"extended": "",
		"description": "modruby.net",
		"time": "2008-10-16T11:18:30Z",
		"href": "http://www.modruby.net/en/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"security",
			"network",
			"tools",
			"development",
			"networking",
			"pcap",
			"library"
		],
		"y": 7.817829175767992,
		"x": -9.427399968681568,
		"extended": "",
		"description": "Ruby/Pcap",
		"time": "2008-10-16T11:00:58Z",
		"href": "http://www.goto.info.waseda.ac.jp/~fukusima/ruby/pcap-e.html"
	},
	{
		"cluster": 2,
		"tags": [
			"ip6",
			"networking",
			"future",
			"network"
		],
		"y": -2.885301952175869,
		"x": 4.863311053817161,
		"extended": "",
		"description": "Slashdot | World's Smallest IPv6 Stack By Cisco, Atmel, SICS",
		"time": "2008-10-16T10:45:02Z",
		"href": "http://tech.slashdot.org/article.pl?sid=08/10/15/1839209"
	},
	{
		"cluster": 8,
		"tags": [
			"wordpress",
			"socialsoftware",
			"socialnetwork",
			"plugins",
			"web",
			"software",
			"development",
			"blogging",
			"internet"
		],
		"y": 4.710062159378632,
		"x": 2.4676530365322575,
		"extended": "",
		"description": "BuddyPress » A Wordpress MU Based Social Network Platform",
		"time": "2008-10-16T09:58:43Z",
		"href": "http://buddypress.org/"
	},
	{
		"cluster": 12,
		"tags": [
			"mvc",
			"development",
			"internet",
			"programming",
			"patterns",
			"rails",
			"web"
		],
		"y": 9.578123751535136,
		"x": -6.720417944535,
		"extended": "",
		"description": "MVC As Anti-Pattern - O'Reilly Broadcast",
		"time": "2008-10-15T18:58:16Z",
		"href": "http://broadcast.oreilly.com/2008/10/mvc-as-anti-pattern.html"
	},
	{
		"cluster": 2,
		"tags": [
			"psychology",
			"science",
			"love",
			"relationships",
			"biology"
		],
		"y": -0.21569793237255516,
		"x": 6.619301636669685,
		"extended": "",
		"description": "Grieving voles hint at why human relationships last - being-human - 15 October 2008 - New Scientist",
		"time": "2008-10-15T18:23:35Z",
		"href": "http://www.newscientist.com/channel/being-human/dn14949-grieving-voles-hint-at-why-human-relationships-last.html?feedId=online-news_rss20"
	},
	{
		"cluster": 6,
		"tags": [
			"music",
			"business",
			"talk",
			"copyright",
			"technology"
		],
		"y": 5.2205151021260825,
		"x": 4.68443602902789,
		"extended": "",
		"description": "Let’s Sell Recorded Music! Part1: Here We Are Now, Entertain Us — MusicTank",
		"time": "2008-10-15T18:18:18Z",
		"href": "http://www.musictank.co.uk/events/let2019s-sell-recorded-music-part-1-here-we-are-now-entertain-us"
	},
	{
		"cluster": 14,
		"tags": [
			"music",
			"design",
			"business",
			"merchandise"
		],
		"y": -8.220803207693955,
		"x": 5.28792690546852,
		"extended": "",
		"description": "The Official of Montreal Blog » We Will Only Propagate Exceptional Objects",
		"time": "2008-10-15T18:17:45Z",
		"href": "http://ofmontreal.net/blog/2008/09/27/we-will-only-propagate-exceptional-objects/"
	},
	{
		"cluster": 11,
		"tags": [
			"samba",
			"linux",
			"mac",
			"osx",
			"workaround",
			"bug",
			"hack",
			"smb",
			"finder"
		],
		"y": -3.281166491229135,
		"x": 6.709327014022581,
		"extended": "",
		"description": "macosxhints.com - 10.5: A workaround for -43 error mounting SMB shares",
		"time": "2008-10-15T18:17:11Z",
		"href": "http://www.macosxhints.com/article.php?story=20071110042328748&query=smb%2Berror%2B43"
	},
	{
		"cluster": 9,
		"tags": [
			"samba",
			"linux",
			"administration",
			"systems",
			"authentication"
		],
		"y": -4.927314210980237,
		"x": 3.671183465133597,
		"extended": "",
		"description": "Unix and Samba password sync on Debian Etch | Jaka Jančar",
		"time": "2008-10-15T18:17:11Z",
		"href": "http://jaka.kubje.org/wp/2007/05/14/unix-samba-password-sync-on-debian-etch/"
	},
	{
		"cluster": 8,
		"tags": [
			"vertebara",
			"cloud",
			"computing",
			"scale",
			"monitoring",
			"management",
			"ruby",
			"internet",
			"web",
			"admin",
			"systems",
			"messaging",
			"xmpp",
			"erlang"
		],
		"y": 4.105693298535284,
		"x": 2.385975667445123,
		"extended": "",
		"description": "Introducing Vertebra",
		"time": "2008-10-13T13:34:39Z",
		"href": "http://brainspl.at/articles/2008/06/02/introducing-vertebra"
	},
	{
		"cluster": 13,
		"tags": [
			"science",
			"ecology",
			"enbvironment",
			"politics",
			"finance",
			"economics"
		],
		"y": 9.343626178546835,
		"x": 7.732417777684279,
		"extended": "",
		"description": "What does the credit crunch mean for the environment?",
		"time": "2008-10-13T13:32:21Z",
		"href": "http://www.newscientist.com/blogs/shortsharpscience/2008/10/what-does-the-credit-crunch-me.html"
	},
	{
		"cluster": 6,
		"tags": [
			"music",
			"internet",
			"technology",
			"law",
			"copyright",
			"economics",
			"art",
			"culture"
		],
		"y": -8.915110674215327,
		"x": 2.1773350651261034,
		"extended": "",
		"description": "This digital utopianism is glorified piracy | spiked",
		"time": "2008-10-13T13:30:26Z",
		"href": "http://www.spiked-online.com/index.php?/site/article/5795/"
	},
	{
		"cluster": 1,
		"tags": [
			"photography",
			"propaganda",
			"art",
			"history",
			"capa",
			"war",
			"reliability"
		],
		"y": -8.902552235336982,
		"x": 0.9118528977429181,
		"extended": "",
		"description": "Isabel Hilton: The camera never lies. But photographers can and do | Comment is free | The Guardian",
		"time": "2008-10-13T11:34:06Z",
		"href": "http://www.guardian.co.uk/commentisfree/2008/sep/27/photography.pressandpublishing"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"interactive",
			"online",
			"web"
		],
		"y": -9.410135278792659,
		"x": 1.1038121357825779,
		"extended": "",
		"description": "Rhizome",
		"time": "2008-10-13T10:25:08Z",
		"href": "http://rhizome.org/editorial/1955"
	},
	{
		"cluster": 12,
		"tags": [
			"geode",
			"geolocation",
			"geo",
			"mapping",
			"location",
			"geodata",
			"javascript",
			"web",
			"development"
		],
		"y": 10.44744471836336,
		"x": -2.3795213762660463,
		"extended": "",
		"description": "Mozilla Labs » Blog Archive » Introducing Geode",
		"time": "2008-10-13T10:23:08Z",
		"href": "http://labs.mozilla.com/2008/10/introducing-geode/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"finance",
			"politics"
		],
		"y": 9.105893170391713,
		"x": 7.857884382281491,
		"extended": "",
		"description": "Like J.P. Morgan, Warren E. Buffett Braves a Crisis - NYTimes.com",
		"time": "2008-10-13T10:21:23Z",
		"href": "http://www.nytimes.com/2008/10/06/business/06buffett.html?_r=3"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"technology",
			"geo",
			"geolocation",
			"geodata",
			"location",
			"browser",
			"firefox",
			"geode"
		],
		"y": -2.5742811863811332,
		"x": 7.526549998394371,
		"extended": "",
		"description": "BBC NEWS | Technology | Firefox users gain location tool",
		"time": "2008-10-13T10:19:58Z",
		"href": "http://news.bbc.co.uk/1/hi/technology/7659497.stm"
	},
	{
		"cluster": 2,
		"tags": [
			"photography",
			"graphics",
			"photoshop",
			"tutorial",
			"hdr"
		],
		"y": -7.485411924766433,
		"x": 1.2556339973388062,
		"extended": "",
		"description": "dekePod Episode 007: Faking an HDR Portrait | O'Reilly Media",
		"time": "2008-10-13T09:58:10Z",
		"href": "http://digitalmedia.oreilly.com/2008/10/08/dekepod-faking-hdr-portrait.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"dsl",
			"metaprogramming",
			"hackery",
			"programming",
			"development",
			"OOP",
			"computerscience"
		],
		"y": 4.581376917565106,
		"x": -10.289242179833158,
		"extended": "",
		"description": "hackety org » Mixing Our Way Out Of Instance Eval?",
		"time": "2008-10-13T09:56:56Z",
		"href": "http://hackety.org/2008/10/06/mixingOurWayOutOfInstanceEval.html"
	},
	{
		"cluster": 10,
		"tags": [
			"design",
			"art",
			"politics",
			"history",
			"socialism",
			"france",
			"paris",
			"posters",
			"1968"
		],
		"y": 1.2019965867046363,
		"x": 9.742990360535568,
		"extended": "",
		"description": "Anti-Nazism and the Ateliers Populaires",
		"time": "2008-10-13T09:55:56Z",
		"href": "http://www.docspopuli.org/articles/Paris1968_Tempest/AfficheParis1968_Tempest.html"
	},
	{
		"cluster": 8,
		"tags": [
			"society",
			"culture",
			"youth",
			"internet",
			"sex",
			"teenagers"
		],
		"y": -4.094243048492422,
		"x": 11.47442201571385,
		"extended": "",
		"description": "apophenia: teens, dating, friendship, and school dances",
		"time": "2008-10-13T09:55:25Z",
		"href": "http://www.zephoria.org/thoughts/archives/2008/10/05/teens_dating_fr.html"
	},
	{
		"cluster": 17,
		"tags": [
			"programming",
			"sicp",
			"lisp",
			"scheme",
			"learning",
			"review",
			"computerscience"
		],
		"y": -7.814536900749115,
		"x": -12.215096669912032,
		"extended": "",
		"description": "Eli Bendersky’s website » Blog Archive » Book review: “Structure and Interpretation of Computer Programs” by Harold Abelson, Gerald Jay Sussman",
		"time": "2008-10-13T09:54:54Z",
		"href": "http://eli.thegreenplace.net/2008/05/28/book-review-structure-and-interpretation-of-computer-programs-by-harold-abelson-gerald-jay-sussman/"
	},
	{
		"cluster": 17,
		"tags": [
			"sicp",
			"lisp",
			"programming",
			"computerscience",
			"learning",
			"solutions",
			"functional",
			"reading",
			"scheme"
		],
		"y": -7.804245713483755,
		"x": -12.181512471971498,
		"extended": "",
		"description": "Eli Bendersky’s website » SICP",
		"time": "2008-10-13T09:53:59Z",
		"href": "http://eli.thegreenplace.net/category/programming/lisp/sicp/"
	},
	{
		"cluster": 1,
		"tags": [
			"reading",
			"literature",
			"music"
		],
		"y": -9.348248380265577,
		"x": 4.235949073655352,
		"extended": "",
		"description": "The Quietus | News | British Sea Power's Autumn Reading Guide",
		"time": "2008-10-13T09:52:17Z",
		"href": "http://www.thequietus.com/articles/british-sea-power-s-autumn-reading-guide-2"
	},
	{
		"cluster": 15,
		"tags": [
			"programming",
			"computerscience",
			"learning",
			"algorithms",
			"mathematics",
			"recursion",
			"induction",
			"pedagogy",
			"teaching",
			"education"
		],
		"y": -0.11754230470781617,
		"x": -12.64622076010381,
		"extended": "",
		"description": "Teaching, Playing, and Programming: Score one for induction!",
		"time": "2008-10-13T09:51:53Z",
		"href": "http://okasaki.blogspot.com/2008/10/score-one-for-induction.html"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"music",
			"coryarcangel",
			"tape",
			"sound",
			"technology",
			"synthesis",
			"concrete",
			"sampling"
		],
		"y": -11.553585952996256,
		"x": 1.8919275994148907,
		"extended": "",
		"description": "the san francisco tape music center - artforum.com / in print",
		"time": "2008-10-13T09:51:06Z",
		"href": "http://artforum.com/inprint/issue=200808"
	},
	{
		"cluster": 10,
		"tags": [
			"music",
			"culture",
			"pop",
			"society",
			"history",
			"youth",
			"politics"
		],
		"y": 0.2095854866606805,
		"x": 12.735809670077064,
		"extended": "",
		"description": "Historian says Beatles were just capitalists, and not youth heroes | Music | The Guardian",
		"time": "2008-10-13T09:49:57Z",
		"href": "http://www.guardian.co.uk/music/2008/oct/09/youngpeople.history"
	},
	{
		"cluster": 2,
		"tags": [
			"technology",
			"photography",
			"video",
			"hardware",
			"camera",
			"film",
			"digital"
		],
		"y": -6.909471563026742,
		"x": 1.7422759059382922,
		"extended": "",
		"description": "New Chips Poised to Revolutionize Photography, Film | Gadget Lab from Wired.com",
		"time": "2008-10-13T09:47:22Z",
		"href": "http://blog.wired.com/gadgets/2008/10/new-chips-poise.html"
	},
	{
		"cluster": 8,
		"tags": [
			"deaf",
			"social",
			"media",
			"video",
			"bsl",
			"blogging",
			"internet",
			"web"
		],
		"y": 4.211439364729235,
		"x": 2.8644602914857216,
		"extended": "",
		"description": "Lessons in the art of vlogging | Life and style | The Guardian",
		"time": "2008-10-13T09:43:41Z",
		"href": "http://www.guardian.co.uk/lifeandstyle/2008/oct/10/vlogging-internet"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"logic",
			"godel",
			"incomple",
			"theorems"
		],
		"y": -9.690002211648455,
		"x": -3.755818636512121,
		"extended": "",
		"description": "Kurt Gödel (Stanford Encyclopedia of Philosophy)",
		"time": "2008-10-13T09:41:51Z",
		"href": "http://plato.stanford.edu/entries/goedel/"
	},
	{
		"cluster": 15,
		"tags": [
			"mathematics",
			"godel",
			"incompleteness",
			"theorems"
		],
		"y": -9.779720491463955,
		"x": -3.7233191718966676,
		"extended": "",
		"description": "PORTRAITS OF SCIENCE: Kurt Godel-Separating Truth from Proof in Mathematics -- Devlin 298 (5600): 1899 -- Science",
		"time": "2008-10-13T09:41:22Z",
		"href": "http://www.sciencemag.org/cgi/content/full/298/5600/1899"
	},
	{
		"cluster": 15,
		"tags": [
			"godel",
			"radio",
			"inourtime",
			"mathematics",
			"incompleteness",
			"theorems"
		],
		"y": -9.81516335775621,
		"x": -3.708319123334294,
		"extended": "",
		"description": "BBC - Radio 4 In Our Time - Home Page",
		"time": "2008-10-13T09:40:48Z",
		"href": "http://www.bbc.co.uk/radio4/history/inourtime/research_20081009.shtml"
	},
	{
		"cluster": 15,
		"tags": [
			"factorial",
			"mathematics",
			"computerscience",
			"discrete",
			"algorithms"
		],
		"y": -1.2191106427078893,
		"x": -11.977065608241578,
		"extended": "",
		"description": "Ten is a good number: Calculating n!",
		"time": "2008-10-13T09:40:13Z",
		"href": "http://blogten.blogspot.com/2007/01/calculating-n.html"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"web",
			"interaction",
			"usability",
			"ui",
			"ux",
			"internet"
		],
		"y": 1.594792695580693,
		"x": 1.0495673139016424,
		"extended": "",
		"description": "Interaction Design Pattern Library - Welie.com",
		"time": "2008-10-13T09:29:29Z",
		"href": "http://www.welie.com/patterns/"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"metal",
			"doom",
			"noise"
		],
		"y": -9.535685433048267,
		"x": 4.271579069231492,
		"extended": "",
		"description": "The Quietus | Features | In Extremis: Metal Gaze - From My Bloody Valentine To Nadja via SunnO)))",
		"time": "2008-10-13T09:28:32Z",
		"href": "http://www.thequietus.com/articles/in-extremis-metal-gaze"
	},
	{
		"cluster": 9,
		"tags": [
			"eeepc",
			"ubuntu",
			"linux"
		],
		"y": -5.978215224408643,
		"x": 5.6906739740460655,
		"extended": "",
		"description": "Turn off annoying touchpad tap-to-click or change the touch sensitivity in ubuntu « Alex S.",
		"time": "2008-10-03T18:54:49Z",
		"href": "http://strabes.wordpress.com/2006/11/04/turn-off-annoying-touchpad-tap-click-in-ubuntu/"
	},
	{
		"cluster": 7,
		"tags": [
			"emacs",
			"linux",
			"unix",
			"programming",
			"development"
		],
		"y": 8.571950187116867,
		"x": -3.1789588989821755,
		"extended": "",
		"description": "GNU Emacs Manual - Indentation",
		"time": "2008-10-03T18:54:28Z",
		"href": "http://www.chemie.fu-berlin.de/chemnet/use/info/emacs/emacs_23.html#SEC179"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"emacs",
			"linux",
			"programming",
			"develpoment",
			"unix"
		],
		"y": 8.555365351537933,
		"x": -3.3098886971378416,
		"extended": "",
		"description": "Ruby syntax highlighting in emacs « LinuxHappy’s Weblog",
		"time": "2008-10-03T18:53:54Z",
		"href": "http://linuxhappy.wordpress.com/2008/02/02/ruby-syntax-highlighting-in-emacs/"
	},
	{
		"cluster": 15,
		"tags": [
			"maths",
			"computer",
			"science",
			"programming",
			"mathematics",
			"development",
			"education",
			"tutorial",
			"learning",
			"ocw"
		],
		"y": -8.677994923354378,
		"x": -6.948624815560369,
		"extended": "",
		"description": "MIT OpenCourseWare | Electrical Engineering and Computer Science | 6.042J Mathematics for Computer Science, Fall 2005 | Readings",
		"time": "2008-10-02T13:17:35Z",
		"href": "http://ocw.mit.edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-042JFall-2005/Readings/index.htm"
	},
	{
		"cluster": 9,
		"tags": [
			"ubuntu",
			"linux",
			"eeepc",
			"eee",
			"swap",
			"journalling",
			"ext3",
			"format",
			"ssd",
			"hdd"
		],
		"y": -6.111341476121515,
		"x": 5.771634609678827,
		"extended": "",
		"description": "EeeUser ASUS Eee PC Forum / Installing Ubuntu 'Prepare disk space' - How?",
		"time": "2008-09-30T08:17:57Z",
		"href": "http://forum.eeeuser.com/viewtopic.php?pid=344187"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"culture",
			"business",
			"economics",
			"technology"
		],
		"y": 5.68992413002558,
		"x": 4.748399382618451,
		"extended": "",
		"description": "Why Should Rock Stars Expect To Be Rich? | Word Magazine",
		"time": "2008-09-29T18:04:22Z",
		"href": "http://www.wordmagazine.co.uk/content/why-should-rock-stars-expect-to-be-rich"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"installation",
			"interaction",
			"technology"
		],
		"y": -10.50773755165089,
		"x": 0.023781982931992945,
		"extended": "",
		"description": "Rhizome",
		"time": "2008-09-29T18:03:29Z",
		"href": "http://rhizome.org/editorial/560"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"installation",
			"interaction",
			"technology"
		],
		"y": -10.557868607534017,
		"x": -0.009350575438879388,
		"extended": "",
		"description": "Rhizome",
		"time": "2008-09-29T18:02:24Z",
		"href": "http://rhizome.org/editorial/1907"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"IP",
			"freeculture",
			"law"
		],
		"y": -3.692630088366106,
		"x": 9.11972981812039,
		"extended": "",
		"description": "Mark Dery on the copyfight - Boing Boing",
		"time": "2008-09-29T18:01:14Z",
		"href": "http://www.boingboing.net/2008/09/24/mark-dery-on-the-cop.html"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"cartoon",
			"finance",
			"politics",
			"funny"
		],
		"y": 9.330079155677725,
		"x": 7.69912485533806,
		"extended": "",
		"description": "The Subprime Mortgage Primer",
		"time": "2008-09-29T18:00:46Z",
		"href": "http://www.businesspundit.com/sub-prime/"
	},
	{
		"cluster": 8,
		"tags": [
			"deaf",
			"video",
			"online",
			"internet",
			"web",
			"social",
			"software",
			"access",
			"deafness"
		],
		"y": 4.284510810894954,
		"x": 2.763024260635594,
		"extended": "",
		"description": "Global Voices Online » Deaf Awareness Week: Organizing Offline activities Online",
		"time": "2008-09-29T18:00:06Z",
		"href": "http://globalvoicesonline.org/2008/09/29/deaf-awareness-week-organizing-offline-activities-online/"
	},
	{
		"cluster": 12,
		"tags": [
			"drupal",
			"php",
			"web",
			"development",
			"links",
			"tutorial",
			"reference"
		],
		"y": 10.16858973825304,
		"x": -4.890619712501061,
		"extended": "",
		"description": "Drupal Developer’s Toolbox | Developer's Toolbox | Smashing Magazine",
		"time": "2008-09-29T16:00:45Z",
		"href": "http://www.smashingmagazine.com/2008/09/24/drupal-developers-toolbox/"
	},
	{
		"cluster": 7,
		"tags": [
			"arduino",
			"programming",
			"development",
			"library"
		],
		"y": 8.107723638149324,
		"x": -2.771876570073966,
		"extended": "",
		"description": "Arduino - LibraryTutorial",
		"time": "2008-09-29T16:00:16Z",
		"href": "http://arduino.cc/en/Hacking/LibraryTutorial"
	},
	{
		"cluster": 9,
		"tags": [
			"photography",
			"exif",
			"image",
			"nikon",
			"raw",
			"linux"
		],
		"y": -7.221520218590708,
		"x": 2.220134957957531,
		"extended": "",
		"description": "Håvard Berland : NEF Workflow, D70/D70s on Linux/Unix",
		"time": "2008-09-29T15:59:55Z",
		"href": "http://www.pvv.ntnu.no/~berland/nef/"
	},
	{
		"cluster": 9,
		"tags": [
			"exif",
			"photo",
			"linux",
			"unix",
			"programming",
			"tool",
			"hack"
		],
		"y": 8.519680140965631,
		"x": -3.2606724803211313,
		"extended": "",
		"description": "Flickr Migration Done - www.devco.net",
		"time": "2008-09-29T15:59:33Z",
		"href": "http://www.devco.net/archives/2005/06/17/flickr_migration_done.php"
	},
	{
		"cluster": 7,
		"tags": [
			"web",
			"development",
			"programming",
			"ruby",
			"rails",
			"software"
		],
		"y": 9.313984896681086,
		"x": -7.5065085312991595,
		"extended": "",
		"description": "Hobo - the web application builder for Rails",
		"time": "2008-09-29T15:58:35Z",
		"href": "http://hobocentral.net/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"serial",
			"library",
			"interface",
			"programming",
			"development"
		],
		"y": 7.8067453432815395,
		"x": -9.501302678615996,
		"extended": "",
		"description": "RubyForge: ruby-serialport: Project Filelist",
		"time": "2008-09-29T15:57:49Z",
		"href": "http://rubyforge.org/frs/?group_id=61&release_id=308"
	},
	{
		"cluster": 7,
		"tags": [
			"gps",
			"ruby",
			"gpsd",
			"gem",
			"programming",
			"development"
		],
		"y": 7.80610190474145,
		"x": -9.525249100185714,
		"extended": "",
		"description": "RubyForge: gps: Project Info",
		"time": "2008-09-29T15:55:44Z",
		"href": "http://rubyforge.org/projects/gps/"
	},
	{
		"cluster": 9,
		"tags": [
			"python",
			"gps",
			"mac",
			"linux",
			"tool",
			"royaltek",
			"rgm3800",
			"code"
		],
		"y": -4.947626625831768,
		"x": 5.3981761611806585,
		"extended": "",
		"description": "rgm3800py - Google Code",
		"time": "2008-09-29T15:54:57Z",
		"href": "http://code.google.com/p/rgm3800py/"
	},
	{
		"cluster": 1,
		"tags": [
			"academia",
			"performance",
			"research",
			"art",
			"netart",
			"dissertation",
			"surveillance",
			"sousveillance",
			"culture"
		],
		"y": -10.156918654391047,
		"x": 1.5036088623551693,
		"extended": "",
		"description": "Marisa Olson Writes Her Dissertation",
		"time": "2008-09-29T15:35:39Z",
		"href": "http://www.marisaolson.com/31acts/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"http",
			"programming",
			"development",
			"internet"
		],
		"y": 7.6488622763148335,
		"x": -8.872544362972109,
		"extended": "",
		"description": "Pixels and Politics: Ruby HTTPS with HTTP Basic Auth",
		"time": "2008-09-29T15:33:37Z",
		"href": "http://pixels-and-politics.blogspot.com/2007/02/ruby-https-with-http-basic-auth.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"inheritance",
			"programming",
			"development",
			"OOP",
			"class_inheritable_array"
		],
		"y": 6.989953286833632,
		"x": -8.965051141780298,
		"extended": "",
		"description": "Space Vatican : Fun with class variables",
		"time": "2008-09-23T14:45:00Z",
		"href": "http://www.spacevatican.org/2008/8/19/fun-with-class-variables"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"methodvisibility",
			"OOP",
			"programming",
			"development"
		],
		"y": 7.030642905039726,
		"x": -8.957851679666499,
		"extended": "",
		"description": "the { buckblogs :here }: Method visibility in Ruby",
		"time": "2008-09-23T10:11:02Z",
		"href": "http://weblog.jamisbuck.org/2007/2/23/method-visibility-in-ruby"
	},
	{
		"cluster": 10,
		"tags": [
			"thewire",
			"tv",
			"culture",
			"politics",
			"society"
		],
		"y": -0.0567440018626825,
		"x": 12.289059048002791,
		"extended": "",
		"description": "The Quietus | Features | The Wire: How A Flop Cop Show Became The Greatest TV Series Of All Time",
		"time": "2008-09-23T10:06:48Z",
		"href": "http://www.thequietus.com/articles/the-wire-season-five-dvd-box-set-reviewed"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"economics",
			"culture",
			"society"
		],
		"y": -5.939874104744677,
		"x": 10.34111217968307,
		"extended": "",
		"description": "How will the credit crunch affect music? | Music | guardian.co.uk",
		"time": "2008-09-23T10:02:41Z",
		"href": "http://www.guardian.co.uk/music/musicblog/2008/sep/23/credit.crunch.and.music?gusrc=rss"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"recommendation",
			"algorithm",
			"technology",
			"analysis"
		],
		"y": -8.838586924232196,
		"x": 5.345068212247083,
		"extended": "",
		"description": "Slashdot | Using Computers for Sophisticated Music Analysis",
		"time": "2008-09-23T09:49:29Z",
		"href": "http://tech.slashdot.org/article.pl?sid=08/09/22/205240"
	},
	{
		"cluster": 2,
		"tags": [
			"learning",
			"education",
			"reference",
			"tutorial",
			"engineering"
		],
		"y": -8.971970079430267,
		"x": -5.777853782177603,
		"extended": "",
		"description": "Stanford School of Engineering",
		"time": "2008-09-23T09:48:29Z",
		"href": "http://see.stanford.edu/"
	},
	{
		"cluster": 3,
		"tags": [
			"design",
			"art",
			"culture",
			"criticism",
			"narrative"
		],
		"y": -10.080189672456259,
		"x": 1.8166694855251553,
		"extended": "",
		"description": "Design Observer: Second in a Series: Completions",
		"time": "2008-09-23T09:47:59Z",
		"href": "http://designobserver.com/archives/entry.html?id=38806"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"processing",
			"tutorial",
			"development",
			"web",
			"technology",
			"internet",
			"jquery"
		],
		"y": 10.530139757920766,
		"x": -3.0575399496994926,
		"extended": "",
		"description": "John Resig - Adv. JavaScript and Processing.js",
		"time": "2008-09-23T09:45:32Z",
		"href": "http://ejohn.org/blog/adv-javascript-and-processingjs/"
	},
	{
		"cluster": 1,
		"tags": [
			"propaganda",
			"art",
			"design",
			"culture",
			"history",
			"ww2",
			"poster",
			"graphics",
			"usa",
			"war",
			"advertising"
		],
		"y": -9.621873157402769,
		"x": 1.4981706597679911,
		"extended": "",
		"description": "American Legion Posters | American Legion",
		"time": "2008-09-23T09:44:51Z",
		"href": "http://www.legion.org/whatsnew/posters?row=0"
	},
	{
		"cluster": 10,
		"tags": [
			"economocs",
			"finance",
			"news",
			"politics",
			"currentaffairs"
		],
		"y": 9.8158791568955,
		"x": 7.265861732144404,
		"extended": "",
		"description": "Bad Finance 101 - A Programmer's Guide - O'Reilly Broadcast",
		"time": "2008-09-23T09:44:08Z",
		"href": "http://broadcast.oreilly.com/2008/09/why-programmers-should-be-watc.html"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"culture",
			"technology",
			"IP",
			"law",
			"book"
		],
		"y": -3.875652835206491,
		"x": 9.113154315265179,
		"extended": "",
		"description": "Copyright's Paradox: brilliantly argued scholarly book tackles free speech vs. copyright - Boing Boing",
		"time": "2008-09-23T09:38:19Z",
		"href": "http://www.boingboing.net/2008/09/18/copyrights-paradox-b.html"
	},
	{
		"cluster": 2,
		"tags": [
			"technology",
			"wireless",
			"bluetooth",
			"accessibility",
			"blindness",
			"society"
		],
		"y": -2.4832481964549555,
		"x": 7.719740432663574,
		"extended": "",
		"description": "Bluetoothing androids to shout at blind people • The Register",
		"time": "2008-09-23T09:37:31Z",
		"href": "http://www.theregister.co.uk/2008/09/19/bluetooth_talking_web_signs/"
	},
	{
		"cluster": 1,
		"tags": [
			"film",
			"poster",
			"design",
			"art",
			"culture"
		],
		"y": -10.048085407418357,
		"x": 1.5569910975032688,
		"extended": "",
		"description": "The poster for Blow Up explodes with urgency | Film | guardian.co.uk",
		"time": "2008-09-23T09:36:16Z",
		"href": "http://www.guardian.co.uk/film/2008/sep/22/blowup.filmposter?gusrc=rss"
	},
	{
		"cluster": 8,
		"tags": [
			"tv",
			"media",
			"internet",
			"culture",
			"technology",
			"web",
			"brilliant"
		],
		"y": 3.693310108079626,
		"x": 3.7623585445220384,
		"extended": "",
		"description": "Emily Bell, opinion: There's no point spurning technology, creativity follows it | Media | The Guardian",
		"time": "2008-09-23T09:34:02Z",
		"href": "http://www.guardian.co.uk/media/2008/sep/22/michaelgrade.googlethemedia?gusrc=rss"
	},
	{
		"cluster": 9,
		"tags": [
			"asus",
			"eeepc",
			"netbook",
			"linux",
			"ubuntu",
			"gnu",
			"install"
		],
		"y": -6.001434992501392,
		"x": 5.802219902174088,
		"extended": "",
		"description": "How to install Ubuntu Eee on the Eee PC 1000H",
		"time": "2008-09-23T09:31:36Z",
		"href": "http://www.liliputing.com/2008/09/how-to-install-ubuntu-eee-on-the-eee-pc-1000h.html"
	},
	{
		"cluster": 2,
		"tags": [
			"goldsmiths",
			"computing",
			"research"
		],
		"y": -8.899973172793553,
		"x": -1.6455078074439389,
		"extended": "",
		"description": "AIKON » Objectives",
		"time": "2008-09-20T13:47:50Z",
		"href": "http://doc.gold.ac.uk/aikon/wp/?page_id=2"
	},
	{
		"cluster": 2,
		"tags": [
			"goldsmiths",
			"computing",
			"research"
		],
		"y": -8.89998983220253,
		"x": -1.645511115385545,
		"extended": "",
		"description": "Mutators Research Group » Home",
		"time": "2008-09-20T13:47:31Z",
		"href": "http://doc.gold.ac.uk/mutators/wp/?page_id=2"
	},
	{
		"cluster": 2,
		"tags": [
			"goldsmiths",
			"computing",
			"research"
		],
		"y": -8.89998979655083,
		"x": -1.645511115513699,
		"extended": "",
		"description": "NM2 - new millennium, new media",
		"time": "2008-09-20T13:47:16Z",
		"href": "http://www.ist-nm2.org/"
	},
	{
		"cluster": 2,
		"tags": [
			"goldsmiths",
			"computing",
			"research"
		],
		"y": -8.899989827880939,
		"x": -1.6455111154314064,
		"extended": "",
		"description": "Tate Research | Major Projects | Culture Mining: Time-Based Cultural Documents and Online Audio/Video (re)Search Tools",
		"time": "2008-09-20T13:46:57Z",
		"href": "http://www.tate.org.uk/research/tateresearch/majorprojects/data_mining.htm"
	},
	{
		"cluster": 2,
		"tags": [
			"goldsmiths",
			"computing",
			"research"
		],
		"y": -8.90299503572472,
		"x": -1.6490569901407874,
		"extended": "",
		"description": "Projects",
		"time": "2008-09-20T13:46:42Z",
		"href": "http://doc.gold.ac.uk/~mas02md/Projects/projects.html"
	},
	{
		"cluster": 2,
		"tags": [
			"goldsmiths",
			"computing",
			"research"
		],
		"y": -8.899989829281093,
		"x": -1.6455111173092603,
		"extended": "",
		"description": "AHRC ICT Methods Network: Supporting the Digital Arts and Humanities : Workshops and Seminars",
		"time": "2008-09-20T13:46:26Z",
		"href": "http://www.methodsnetwork.ac.uk/activities/act15.html"
	},
	{
		"cluster": 2,
		"tags": [
			"goldsmiths",
			"computing",
			"research"
		],
		"y": -8.899989794482783,
		"x": -1.6455111165499061,
		"extended": "",
		"description": "MorphoLingua",
		"time": "2008-09-20T13:46:09Z",
		"href": "http://www.doc.gold.ac.uk/morpholingua/"
	},
	{
		"cluster": 9,
		"tags": [
			"screen",
			"unix",
			"tutorial",
			"reference",
			"linux",
			"utility"
		],
		"y": -5.572993194633704,
		"x": 2.6765833740658485,
		"extended": "",
		"description": "Screen - Gentoo Linux Wiki",
		"time": "2008-09-19T17:06:06Z",
		"href": "http://gentoo-wiki.com/TIP_Using_screen"
	},
	{
		"cluster": 9,
		"tags": [
			"debian",
			"apt",
			"package",
			"tip",
			"admin",
			"linux",
			"system",
			"ubuntu"
		],
		"y": -6.080534660896611,
		"x": 5.454671593025207,
		"extended": "dpkg -l |awk ‘/^rc/ {print $2}’ |xargs sudo dpkg --purge\n",
		"description": "APT Tip: Purge Removed Packages « exit’s /dev/urandom blog",
		"time": "2008-09-19T15:09:47Z",
		"href": "http://ascending.wordpress.com/2007/04/10/apt-tip-purge-removed-packages/"
	},
	{
		"cluster": 8,
		"tags": [
			"academia",
			"network",
			"social",
			"socialnetwork",
			"education",
			"academic",
			"socialsoftware",
			"web",
			"internet",
			"research",
			"software"
		],
		"y": 4.571095914036908,
		"x": 2.5957595129465765,
		"extended": "",
		"description": "Academia.edu traces scholarly family tree, Facebook style",
		"time": "2008-09-18T13:18:39Z",
		"href": "http://arstechnica.com/news.ars/post/20080918-academia-edu-traces-academic-family-tree-facebook-style.html"
	},
	{
		"cluster": 1,
		"tags": [
			"shoes",
			"music",
			"fashion"
		],
		"y": -9.144628433387663,
		"x": 4.279102707823379,
		"extended": "",
		"description": "Harry’s Place Arts » Singer becomes shoe",
		"time": "2008-09-18T13:15:06Z",
		"href": "http://arts.hurryupharry.org/2008/09/18/singer-becomes-shoe/"
	},
	{
		"cluster": 12,
		"tags": [
			"scaling",
			"web",
			"django",
			"python",
			"frameworks",
			"development",
			"programming",
			"video",
			"scalability",
			"hilarious"
		],
		"y": 10.328717438675275,
		"x": -5.08490916651727,
		"extended": "",
		"description": "YouTube - DjangoCon 2008 Keynote: Cal Henderson",
		"time": "2008-09-18T09:54:12Z",
		"href": "http://www.youtube.com/watch?v=i6Fr65PFqfk"
	},
	{
		"cluster": 8,
		"tags": [
			"google",
			"web",
			"technology",
			"internet",
			"search",
			"indexing",
			"audio"
		],
		"y": 3.487304554249192,
		"x": 2.8860293600393905,
		"extended": "",
		"description": "Google Launches Audio Indexing",
		"time": "2008-09-17T14:40:34Z",
		"href": "http://www.techcrunch.com/2008/09/17/google-launches-audio-indexing/"
	},
	{
		"cluster": 2,
		"tags": [
			"french",
			"jobs",
			"france",
			"career",
			"cv"
		],
		"y": -2.48408973872405,
		"x": 4.988307621879522,
		"extended": "",
		"description": "French Résumé - Le CV français - Writing a French Résumé",
		"time": "2008-09-17T09:43:17Z",
		"href": "http://french.about.com/library/writing/bl-cv.htm"
	},
	{
		"cluster": 1,
		"tags": [
			"chuck",
			"music",
			"livecode",
			"programming",
			"technology",
			"art",
			"culture"
		],
		"y": -11.470217731490324,
		"x": 1.7358765102387679,
		"extended": "",
		"description": "The Chuck Tutorial - Duke Listens!",
		"time": "2008-09-17T09:38:07Z",
		"href": "http://blogs.sun.com/plamere/entry/the_chuck_tutorial"
	},
	{
		"cluster": 1,
		"tags": [
			"tagging",
			"folksonomy",
			"music",
			"information",
			"categorisation",
			"technology",
			"semantic",
			"web"
		],
		"y": -5.033284719094225,
		"x": 7.086157382096943,
		"extended": "",
		"description": "Social Tags and Music Information Retrieval - Social Tags and Music IR - wikis.sun.com",
		"time": "2008-09-17T09:36:58Z",
		"href": "http://wikis.sun.com/display/SocTagsMIR/Social%20Tags%20and%20Music%20Information%20Retrieval"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"technology",
			"performance",
			"event"
		],
		"y": -8.913568733733074,
		"x": 5.150209050447536,
		"extended": "",
		"description": "Netaudio London 2008",
		"time": "2008-09-17T09:36:10Z",
		"href": "http://www.netaudiolondon.cc/blog/150/placard-headphone-festival-2008"
	},
	{
		"cluster": 8,
		"tags": [
			"language",
			"social",
			"software",
			"internet",
			"culture",
			"technology",
			"identity",
			"network"
		],
		"y": 4.34422181829664,
		"x": 2.9807970572284055,
		"extended": "",
		"description": "apophenia: Facebook and Techcrunch: the costs of technological determinism and configuring users",
		"time": "2008-09-17T09:33:15Z",
		"href": "http://www.zephoria.org/thoughts/archives/2008/09/15/facebook_and_te.html"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"politics",
			"ecology",
			"society",
			"culture",
			"culturejamming"
		],
		"y": 0.3219957892324228,
		"x": 12.768822259189616,
		"extended": "",
		"description": "Squat a parking stall this Friday for National Park(ing) Day | Art Threat | persuasive political art",
		"time": "2008-09-17T09:29:51Z",
		"href": "http://artthreat.net/2008/09/squat-parking-stall-friday-nat"
	},
	{
		"cluster": 13,
		"tags": [
			"art",
			"economics",
			"hirst",
			"finance"
		],
		"y": 8.830560951830465,
		"x": 6.7231224941836585,
		"extended": "",
		"description": "Our (and Your) RISD » Blog Archive » Art and the Economy",
		"time": "2008-09-17T09:29:04Z",
		"href": "http://our.risd.edu/2008/09/15/art-and-the-economy/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"news",
			"banking",
			"finance",
			"politics"
		],
		"y": 9.612593985673046,
		"x": 7.355462606902123,
		"extended": "",
		"description": "Simon Jenkins: A tribunal must tell us what to fix. And whom to punish | Comment is free | The Guardian",
		"time": "2008-09-17T09:27:35Z",
		"href": "http://www.guardian.co.uk/commentisfree/2008/sep/17/economics.banking?showallcomments=true"
	},
	{
		"cluster": 11,
		"tags": [
			"php",
			"pear",
			"mac",
			"osx",
			"programming",
			"reference",
			"howto",
			"development"
		],
		"y": 8.803196702416002,
		"x": -5.168914155764771,
		"extended": "",
		"description": "MacDevCenter.com -- PHP's PEAR on Mac OS X",
		"time": "2008-09-17T09:13:32Z",
		"href": "http://www.macdevcenter.com/pub/a/mac/2003/01/21/pear_macosx.html"
	},
	{
		"cluster": 9,
		"tags": [
			"howto",
			"hack",
			"wifi",
			"router",
			"hardware",
			"fon",
			"networking",
			"linux",
			"wlan",
			"wireless"
		],
		"y": -4.8681559952061875,
		"x": 4.249645752407726,
		"extended": "",
		"description": "Hacking the La Fonera",
		"time": "2008-09-17T09:13:02Z",
		"href": "http://stefans.datenbruch.de/lafonera/"
	},
	{
		"cluster": 17,
		"tags": [
			"prolog",
			"logic",
			"programming",
			"languages",
			"computerscience",
			"development",
			"language",
			"tutorial"
		],
		"y": 2.388876337885083,
		"x": -11.611478155070035,
		"extended": "",
		"description": "Learn Prolog Now!",
		"time": "2008-09-17T09:12:30Z",
		"href": "http://www.coli.uni-saarland.de/~kris/learn-prolog-now/index.php"
	},
	{
		"cluster": 1,
		"tags": [
			"video",
			"art",
			"bracepaine",
			"music",
			"noise",
			"chiptune",
			"hendrix",
			"gossip"
		],
		"y": -9.37132469263087,
		"x": 2.8431517835991977,
		"extended": "",
		"description": "Rhizome",
		"time": "2008-09-15T10:29:50Z",
		"href": "http://rhizome.org/editorial/fp/blog.php/1147"
	},
	{
		"cluster": 12,
		"tags": [
			"brix",
			"widget",
			"web",
			"framework",
			"ruby",
			"development",
			"composability",
			"UI"
		],
		"y": 8.71830073446592,
		"x": -7.957450295492022,
		"extended": "",
		"description": "Brix – Trac",
		"time": "2008-09-15T09:41:32Z",
		"href": "http://dev.playlouder.com/projects/brix"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"france",
			"ror",
			"web",
			"development",
			"programming"
		],
		"y": 9.339390800281516,
		"x": -7.610410605158699,
		"extended": "",
		"description": "Railsfrance.org - Ruby on Rails",
		"time": "2008-09-15T09:41:01Z",
		"href": "http://www.railsfrance.org/"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"programming",
			"functional",
			"evaluationstrategies",
			"callbyname",
			"computerscience",
			"rewrite",
			"macros",
			"andand",
			"functions",
			"methods"
		],
		"y": 4.492269513887213,
		"x": -11.485955184316433,
		"extended": "",
		"description": "Macros, Hygiene, and Call By Name in Ruby",
		"time": "2008-09-04T15:47:34Z",
		"href": "http://weblog.raganwald.com/2008/06/macros-hygiene-and-call-by-name-in-ruby.html"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"web",
			"development",
			"security",
			"programming",
			"scripting"
		],
		"y": 10.173283451504597,
		"x": -3.53705876964464,
		"extended": "",
		"description": "google-caja - Google Code",
		"time": "2008-09-04T13:41:04Z",
		"href": "http://code.google.com/p/google-caja/"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"benkler",
			"culture",
			"production",
			"economics",
			"music",
			"film"
		],
		"y": -9.643201749820832,
		"x": 6.8309314371636,
		"extended": "",
		"description": "MediaFuturist: Yochai Benkler Video: Conflicts in Cultural Production (music industry woes explained very succinctly)",
		"time": "2008-09-04T11:10:05Z",
		"href": "http://www.mediafuturist.com/2008/09/yochai-benkler.html"
	},
	{
		"cluster": 14,
		"tags": [
			"semantic",
			"web",
			"internet",
			"design",
			"ui",
			"ux",
			"devel"
		],
		"y": 1.644596450942094,
		"x": 1.0641434188953058,
		"extended": "",
		"description": "cubicgarden.com...",
		"time": "2008-09-04T11:03:06Z",
		"href": "http://www.cubicgarden.com/blojsom/blog/cubicgarden/xml/Semantic+web/?permalink=A-glimmer-of-what-a-semantic-web-could-be-like.html"
	},
	{
		"cluster": 2,
		"tags": [
			"cern",
			"datacentre",
			"computing",
			"systems",
			"infrastructure",
			"science",
			"petacentre",
			"physics"
		],
		"y": -7.63163793417389,
		"x": -0.8983157313182726,
		"extended": "",
		"description": "Big data: Welcome to the petacentre : Nature News",
		"time": "2008-09-04T10:55:38Z",
		"href": "http://www.nature.com/news/2008/080903/full/455016a.html"
	},
	{
		"cluster": 12,
		"tags": [
			"google",
			"chrome",
			"browser",
			"javascript",
			"development",
			"web",
			"architecture",
			"memory",
			"management",
			"performance"
		],
		"y": 10.573980695172216,
		"x": -2.5586928347437237,
		"extended": "",
		"description": "John Resig - Google Chrome Process Manager",
		"time": "2008-09-04T10:39:46Z",
		"href": "http://ejohn.org/blog/google-chrome-process-manager/"
	},
	{
		"cluster": 1,
		"tags": [
			"fashion",
			"culture",
			"society"
		],
		"y": -3.727174967938736,
		"x": 11.46379511124006,
		"extended": "",
		"description": "In defence of hipsters | Comment is free | guardian.co.uk",
		"time": "2008-09-04T10:35:58Z",
		"href": "http://www.guardian.co.uk/commentisfree/2008/sep/03/fashion?commentpage=1"
	},
	{
		"cluster": 12,
		"tags": [
			"html",
			"css",
			"web",
			"design",
			"development",
			"javascript"
		],
		"y": 10.53709888456728,
		"x": 0.23405725378276285,
		"extended": "",
		"description": "Fixed Footers without JavaScript : Boagworld web design podcast",
		"time": "2008-09-04T10:35:33Z",
		"href": "http://boagworld.com/technology/fixed_footers_without_javascri/"
	},
	{
		"cluster": 10,
		"tags": [
			"evolution",
			"science",
			"education",
			"religion",
			"politics"
		],
		"y": 3.098626209193216,
		"x": 8.272319042386775,
		"extended": "",
		"description": "Sue Blackmore: Those who teach our children science have a duty to reveal the workings of nature | Comment is free | guardian.co.uk",
		"time": "2008-09-04T10:32:43Z",
		"href": "http://www.guardian.co.uk/commentisfree/2008/sep/04/religion.evolution?gusrc=rss"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"computerscience",
			"functional",
			"programming",
			"development",
			"metaprogramming",
			"lisp",
			"languages",
			"dna",
			"code"
		],
		"y": 4.190461141815977,
		"x": -11.018784234311966,
		"extended": "",
		"description": "Spaghetti-Western Coding",
		"time": "2008-09-04T10:13:02Z",
		"href": "http://weblog.raganwald.com/2008/03/spaghetti-western-coding.html"
	},
	{
		"cluster": 1,
		"tags": [
			"numbersstations",
			"shortwave",
			"espionage",
			"spying",
			"music",
			"art",
			"sound",
			"history",
			"radio"
		],
		"y": -9.402845538627089,
		"x": 6.989992277803706,
		"extended": "",
		"description": "Salon People | Counting spies",
		"time": "2008-09-03T10:15:19Z",
		"href": "http://www.salon.com/people/feature/1999/09/16/numbers/"
	},
	{
		"cluster": 2,
		"tags": [
			"numbersstations",
			"espionage",
			"spying",
			"sound",
			"history",
			"coldwar",
			"radio",
			"shortwave"
		],
		"y": -9.3764364759906,
		"x": 7.040600464804942,
		"extended": "",
		"description": "Number Stations",
		"time": "2008-09-02T19:20:44Z",
		"href": "http://www.simonmason.karoo.net/page30.html"
	},
	{
		"cluster": 2,
		"tags": [
			"technology",
			"apple",
			"iphone",
			"mobile",
			"connectedness",
			"society"
		],
		"y": -2.248247725823933,
		"x": 7.337666378533187,
		"extended": "",
		"description": "Alt Text: A Wistful Geek Heads for Sweet iPhone Hell",
		"time": "2008-08-29T10:11:40Z",
		"href": "http://www.wired.com/culture/lifestyle/commentary/alttext/2008/08/alttext_0827"
	},
	{
		"cluster": 10,
		"tags": [
			"science",
			"chemistry",
			"maths",
			"fear",
			"safety",
			"politics",
			"culture",
			"education",
			"society",
			"security"
		],
		"y": 0.6792097251871766,
		"x": 13.4070335286147,
		"extended": "",
		"description": "Why We're Failing in Math and Science - O'Reilly Radar",
		"time": "2008-08-29T10:10:49Z",
		"href": "http://radar.oreilly.com/2008/08/why-were-failing-in-math-and-science.html"
	},
	{
		"cluster": 2,
		"tags": [
			"film",
			"cohens",
			"cohenbrothers",
			"review",
			"burnafterreading"
		],
		"y": -3.6556615441824656,
		"x": 4.328366899328841,
		"extended": "",
		"description": "Review: Burn After Reading | Film | guardian.co.uk",
		"time": "2008-08-29T10:09:22Z",
		"href": "http://www.guardian.co.uk/film/2008/aug/27/venicefilmfestival.coenbrothers1?gusrc=rss"
	},
	{
		"cluster": 2,
		"tags": [
			"language",
			"communication",
			"english",
			"linguistics",
			"semantics",
			"words",
			"neologisms",
			"grammar",
			"lexicography"
		],
		"y": -0.1078146707128877,
		"x": 7.885430818349791,
		"extended": "",
		"description": "Chillax - The Boston Globe",
		"time": "2008-08-29T09:41:39Z",
		"href": "http://www.boston.com/bostonglobe/ideas/articles/2008/08/03/chillax/"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"web",
			"interactive",
			"netart",
			"url",
			"location",
			"www",
			"internet",
			"culturee",
			"curation"
		],
		"y": -9.599879229389403,
		"x": 0.7720742438858377,
		"extended": "",
		"description": "ART.TELEPORTACIA: Location=\"Yes\"",
		"time": "2008-08-28T13:22:45Z",
		"href": "http://art.teleportacia.org/Location_Yes/"
	},
	{
		"cluster": 8,
		"tags": [
			"ipalyer",
			"bbc",
			"isp",
			"network",
			"bandwidth",
			"routing",
			"internet",
			"video",
			"technology"
		],
		"y": -3.677214547012492,
		"x": 4.477743377258616,
		"extended": "",
		"description": "Telco 2.0: BBC iPlayer Bandwidth Wars",
		"time": "2008-08-27T10:02:21Z",
		"href": "http://www.telco2.net/blog/2008/08/bbc_iplayer_bandwidth_wars.html"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"technology",
			"exploit",
			"bgp",
			"routing",
			"network",
			"computing",
			"security",
			"neteworking",
			"hacking",
			"cracking",
			"vulnerability"
		],
		"y": -7.250371762750838,
		"x": -0.16719417429334188,
		"extended": "",
		"description": "Revealed: The Internet's Biggest Security Hole | Threat Level from Wired.com",
		"time": "2008-08-27T09:38:19Z",
		"href": "http://blog.wired.com/27bstroke6/2008/08/revealed-the-in.html"
	},
	{
		"cluster": 11,
		"tags": [
			"utility",
			"mac",
			"osx",
			"mail",
			"apple",
			"plugin",
			"tool",
			"security",
			"provacy",
			"gpg",
			"pgp"
		],
		"y": -3.2004953924909,
		"x": 6.9234670433295635,
		"extended": "",
		"description": "Sen:te - GPGMail",
		"time": "2008-08-27T09:24:31Z",
		"href": "http://www.sente.ch/software/GPGMail/English.lproj/GPGMail.html"
	},
	{
		"cluster": 2,
		"tags": [
			"environment",
			"lifestyle",
			"urban",
			"food",
			"farming",
			"sustainability"
		],
		"y": 6.793998628769566,
		"x": 4.986790393125432,
		"extended": "",
		"description": "Clive Thompson on Why Urban Farming Isn't Just for Foodies",
		"time": "2008-08-27T09:07:50Z",
		"href": "http://www.wired.com/techbiz/people/magazine/16-09/st_thompson"
	},
	{
		"cluster": 8,
		"tags": [
			"statistics",
			"web",
			"trends",
			"google",
			"internet"
		],
		"y": 3.4573061894137083,
		"x": 2.8420965216327865,
		"extended": "",
		"description": "The Google Alphabet, 2008 edition - O'Reilly Radar",
		"time": "2008-08-27T09:05:54Z",
		"href": "http://radar.oreilly.com/2008/08/google-alphabet-2008-edition.html"
	},
	{
		"cluster": 14,
		"tags": [
			"ubiquity",
			"ui",
			"ux",
			"cli",
			"firefox",
			"browser",
			"interface",
			"design"
		],
		"y": -4.629269739955467,
		"x": 1.3325663088745512,
		"extended": "",
		"description": "Ubiquitous Interfaces, Ubiquitous Functionality",
		"time": "2008-08-26T21:58:02Z",
		"href": "http://www.toolness.com/wp/?p=54"
	},
	{
		"cluster": 12,
		"tags": [
			"interface",
			"ux",
			"web",
			"browser",
			"firefox",
			"programming",
			"javascript",
			"ui",
			"natural",
			"language",
			"nlp"
		],
		"y": 11.26450390898242,
		"x": -3.7772991489014247,
		"extended": "",
		"description": "Labs/Ubiquity - MozillaWiki",
		"time": "2008-08-26T21:16:58Z",
		"href": "https://wiki.mozilla.org/Labs/Ubiquity"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"tutorial",
			"programming",
			"development",
			"debugging"
		],
		"y": 7.4114925443996675,
		"x": -8.77590143367452,
		"extended": "",
		"description": "Data Noise: Tutorial on ruby-debug",
		"time": "2008-08-26T21:08:59Z",
		"href": "http://www.datanoise.com/articles/2006/7/12/tutorial-on-ruby-debug"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"development",
			"tutorial",
			"debugging"
		],
		"y": 7.412493938643483,
		"x": -8.780045825069108,
		"extended": "",
		"description": "Kinetic's Intro to Ruby-Debugging",
		"time": "2008-08-26T21:08:35Z",
		"href": "http://blog.kineticweb.com/articles/2007/11/15/kinetics-intro-to-ruby-debugging"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"irb",
			"utility",
			"gem",
			"programming",
			"development",
			"debugging"
		],
		"y": 7.662487682242323,
		"x": -9.2644831730638,
		"extended": "",
		"description": "Pablotron: Wirble",
		"time": "2008-08-26T21:08:15Z",
		"href": "http://pablotron.org/software/wirble/"
	},
	{
		"cluster": 3,
		"tags": [
			"film",
			"politics",
			"theory",
			"culture"
		],
		"y": -0.7872008228026189,
		"x": 10.786777069749865,
		"extended": "",
		"description": "The dark (k)night of a postmodern world | open Democracy News Analysis",
		"time": "2008-08-26T19:52:34Z",
		"href": "http://www.opendemocracy.net/article/the-dark-k-night-of-a-postmodern-world"
	},
	{
		"cluster": 8,
		"tags": [
			"myspace",
			"facebook",
			"music",
			"socialnetwork",
			"socialsoftware",
			"web",
			"internet",
			"business"
		],
		"y": 4.803046052993348,
		"x": 4.343412752288914,
		"extended": "",
		"description": "Facebook v. MySpace In The U.S. Market: The Music Factor",
		"time": "2008-08-26T19:43:36Z",
		"href": "http://www.techcrunch.com/2008/08/22/facebook-v-myspace-in-the-us-market-the-music-factor/"
	},
	{
		"cluster": 9,
		"tags": [
			"sudoku",
			"computerscience",
			"linux",
			"algorithm",
			"software",
			"debian",
			"hack",
			"computer",
			"maths",
			"dpkg",
			"apt"
		],
		"y": -7.554277525016149,
		"x": 3.9272899527740766,
		"extended": "",
		"description": "Package Management Sudoku",
		"time": "2008-08-26T19:36:18Z",
		"href": "http://algebraicthunk.net/~dburrows/blog/entry/package-management-sudoku/"
	},
	{
		"cluster": 1,
		"tags": [
			"sonicyouth",
			"music",
			"geffen",
			"news"
		],
		"y": -9.345670704906793,
		"x": 4.322426339293967,
		"extended": "",
		"description": "The Quietus | News | Sonic Youth U-Turn On Leaving Geffen",
		"time": "2008-08-26T19:33:47Z",
		"href": "http://www.thequietus.com/articles/sonic-youth-confirm-independent-future"
	},
	{
		"cluster": 8,
		"tags": [
			"twitter",
			"internet",
			"microblogging",
			"blogging",
			"society",
			"socialsoftware",
			"social",
			"web"
		],
		"y": 4.427610877102428,
		"x": 2.6920875483776747,
		"extended": "",
		"description": "On The Media: Transcript of \"How Tweet It Is\" (August 22, 2008)",
		"time": "2008-08-26T19:32:44Z",
		"href": "http://www.onthemedia.org/transcripts/2008/08/22/05"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"security",
			"web",
			"technology",
			"hacking",
			"black",
			"hat",
			"cracking",
			"scriptkiddy"
		],
		"y": -7.149188690400706,
		"x": -0.08925918175881616,
		"extended": "",
		"description": "Security Fix Archive by Category",
		"time": "2008-08-26T19:28:43Z",
		"href": "http://voices.washingtonpost.com/securityfix/web_fraud_20/"
	},
	{
		"cluster": 2,
		"tags": [
			"science",
			"LHC",
			"cern",
			"physics"
		],
		"y": -7.493971922404359,
		"x": -0.7437861299617933,
		"extended": "",
		"description": "Rapping the Higgs Boson: Katherine McAlpine (aka AlpineKat) talks particle physics, the Large Hadron Collector, and Rapping at CERN - O'Reilly News",
		"time": "2008-08-26T08:50:04Z",
		"href": "http://news.oreilly.com/2008/08/rapping-the-higgs-boson-kather.html"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"googlemaps",
			"found",
			"internet",
			"web"
		],
		"y": -9.615348538868558,
		"x": 0.6486873712761446,
		"extended": "",
		"description": "Rhizome - Last Breath in Alaska (Found Object) (2008) by Pascual Sisto",
		"time": "2008-08-26T08:43:36Z",
		"href": "http://rhizome.org/editorial/fp/blog.php/1062"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"culture",
			"history",
			"zine",
			"sefpublishing",
			"publishing",
			"diy",
			"media"
		],
		"y": -6.163971110110136,
		"x": 9.126366073782238,
		"extended": "",
		"description": "Danny O’Brien’s Oblomovka » Blog Archive » riot gwwwls",
		"time": "2008-08-26T08:37:58Z",
		"href": "http://www.oblomovka.com/wp/2008/08/24/riot-gwwwls/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"dsl",
			"programming",
			"computerscience",
			"development",
			"functional"
		],
		"y": 4.169566367241653,
		"x": -10.851073980035487,
		"extended": "",
		"description": "An Approach to Composing Domain-Specific Languages in Ruby",
		"time": "2008-08-23T12:01:55Z",
		"href": "http://weblog.raganwald.com/2007/03/approach-to-composing-domain-specific.html"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"server",
			"deployment",
			"systems",
			"development",
			"ruby",
			"nginx",
			"upload",
			"plugin",
			"mongrel",
			"scaling"
		],
		"y": 8.663971009465245,
		"x": -7.930974020623019,
		"extended": "",
		"description": "Nginx Upload Module",
		"time": "2008-08-22T16:25:38Z",
		"href": "http://brainspl.at/articles/2008/07/20/nginx-upload-module"
	},
	{
		"cluster": 8,
		"tags": [
			"dating",
			"internet",
			"literature",
			"longtail",
			"web",
			"online",
			"society"
		],
		"y": -5.131746312261042,
		"x": 8.640168864446645,
		"extended": "",
		"description": "BBC NEWS | Business | Penguin targets lonely bookworms",
		"time": "2008-08-22T16:09:29Z",
		"href": "http://news.bbc.co.uk/1/hi/business/7577132.stm"
	},
	{
		"cluster": 3,
		"tags": [
			"art",
			"politics",
			"media",
			"fluxus",
			"communication",
			"culture",
			"US",
			"election",
			"news",
			"performance"
		],
		"y": -1.5751234128952294,
		"x": 12.51679523726871,
		"extended": "",
		"description": "Rhizome News: Change It Up",
		"time": "2008-08-22T13:08:12Z",
		"href": "http://rhizome.org/news/?timestamp=20080822"
	},
	{
		"cluster": 12,
		"tags": [
			"iphone",
			"web",
			"design",
			"development",
			"tutorial",
			"mobile",
			"phone",
			"progrtamming",
			"css",
			"javascript",
			"html",
			"howto",
			"orientation",
			"apple",
			"layout",
			"sfari",
			"reference",
			"programming",
			"markup"
		],
		"y": 11.021473546252992,
		"x": 0.3151315911689987,
		"extended": "",
		"description": "How to build a website for the iphone with orientation detection | Engage Interactive Blog | Web design Harrogate",
		"time": "2008-08-22T10:18:05Z",
		"href": "http://www.engageinteractive.co.uk/blog/2008/06/19/tutorial-building-a-website-for-the-iphone/"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"culture"
		],
		"y": -9.372695967955993,
		"x": 4.307321434921025,
		"extended": "",
		"description": "How to make a cult musician by Bob Stanley | Music | The Guardian",
		"time": "2008-08-22T09:44:50Z",
		"href": "http://www.guardian.co.uk/music/2008/aug/22/popandrock?gusrc=rss"
	},
	{
		"cluster": 8,
		"tags": [
			"p2p",
			"comcast",
			"internet",
			"networking",
			"telecom",
			"business"
		],
		"y": 1.5450135994052039,
		"x": 4.239622360645316,
		"extended": "",
		"description": "Comcast Does About-Face: Declares Love for P2P | Epicenter from Wired.com",
		"time": "2008-08-22T09:44:16Z",
		"href": "http://blog.wired.com/business/2008/08/a-p2p-solution.html"
	},
	{
		"cluster": 2,
		"tags": [
			"somerstown",
			"shanemeadows",
			"film",
			"eurostar",
			"review",
			"cinema"
		],
		"y": -3.7059695336900704,
		"x": 4.292554347996183,
		"extended": "",
		"description": "The Quietus | Features | Shane Meadows' Somers Town: Reviewed",
		"time": "2008-08-21T16:48:55Z",
		"href": "http://www.thequietus.com/articles/shane-meadows-somers-town-reviewed"
	},
	{
		"cluster": 2,
		"tags": [
			"photosynth",
			"photo",
			"web",
			"awesome"
		],
		"y": -1.9778443644591595,
		"x": 4.334165704338706,
		"extended": "",
		"description": "Up Close With Microsoft’s Photosynth: Stitch Photos Together Auto-Magically",
		"time": "2008-08-21T16:45:56Z",
		"href": "http://www.techcrunch.com/2008/08/21/up-close-with-microsofts-photosynth-stitch-photos-together-auto-magically/"
	},
	{
		"cluster": 13,
		"tags": [
			"economics",
			"learning",
			"textbook",
			"free"
		],
		"y": 7.875998820586668,
		"x": 7.726997725274464,
		"extended": "",
		"description": "Techdirt: If You're Looking To Learn Basic Economics, Here's A Free Textbook",
		"time": "2008-08-21T11:23:29Z",
		"href": "http://techdirt.com/articles/20080819/0326152027.shtml"
	},
	{
		"cluster": 12,
		"tags": [
			"templating",
			"development",
			"javascript",
			"html",
			"web",
			"programming",
			"code",
			"template"
		],
		"y": 10.375761932397065,
		"x": -3.536399399948474,
		"extended": "",
		"description": "John Resig - JavaScript Micro-Templating",
		"time": "2008-08-21T11:23:02Z",
		"href": "http://ejohn.org/blog/javascript-micro-templating/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"css3",
			"web",
			"development",
			"design",
			"firefox",
			"webkit",
			"safari",
			"border-image",
			"browsers"
		],
		"y": 10.30610261882472,
		"x": 0.6210934481303613,
		"extended": "",
		"description": "John Resig - border-image in Firefox",
		"time": "2008-08-21T11:22:03Z",
		"href": "http://ejohn.org/blog/border-image-in-firefox/"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"web",
			"development",
			"programming",
			"OOP"
		],
		"y": 10.051778653963371,
		"x": -3.6189017124270006,
		"extended": "",
		"description": "John Resig - Object.getPrototypeOf",
		"time": "2008-08-21T11:21:07Z",
		"href": "http://ejohn.org/blog/objectgetprototypeof/"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"development",
			"architecture",
			"systems",
			"facebook",
			"scaling",
			"database",
			"mysql",
			"distributed",
			"server",
			"scalability",
			"routing",
			"networking"
		],
		"y": 3.8355009717926554,
		"x": -2.308869251168035,
		"extended": "",
		"description": "Facebook | Engineering @ Facebook's Notes",
		"time": "2008-08-21T10:55:39Z",
		"href": "http://www.new.facebook.com/note.php?note_id=23844338919"
	},
	{
		"cluster": 2,
		"tags": [
			"fashion",
			"digital",
			"print",
			"customisation",
			"photography",
			"shoes"
		],
		"y": -8.027576636413391,
		"x": 4.159857958714774,
		"extended": "",
		"description": "Keds Custom Shoes | Keds Shoes - Create Your Own Original Custom Shoes - Lace Up & Slip On",
		"time": "2008-08-21T10:52:58Z",
		"href": "http://www.keds.com/text/kedsstudio/index.jsp"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"ux",
			"usability",
			"society",
			"information",
			"web",
			"data",
			"analysis",
			"visualisation"
		],
		"y": -2.268478515472905,
		"x": -0.2701543348526859,
		"extended": "",
		"description": "Creating a Digital World: Data As Design Material :: UXmatters",
		"time": "2008-08-20T23:27:32Z",
		"href": "http://www.uxmatters.com/MT/archives/000315.php"
	},
	{
		"cluster": 18,
		"tags": [
			"hack",
			"usb",
			"software",
			"development",
			"vcs",
			"svn",
			"subversion",
			"git",
			"programming"
		],
		"y": 8.050441216729892,
		"x": -1.63103651153573,
		"extended": "",
		"description": "mezzoblue § Sneakernet SVN",
		"time": "2008-08-20T23:05:34Z",
		"href": "http://mezzoblue.com/archives/2008/08/18/sneakernet_s/"
	},
	{
		"cluster": 7,
		"tags": [
			"scripting",
			"programming",
			"ruby",
			"perl",
			"java",
			"education",
			"learning",
			"computerscience",
			"language",
			"computing",
			"development"
		],
		"y": 0.21072867044710122,
		"x": -13.127780696032321,
		"extended": "",
		"description": "in praise of scripting: real programming pragmatism",
		"time": "2008-08-20T23:03:48Z",
		"href": "http://www.cse.wustl.edu/~loui/praiseieee.html"
	},
	{
		"cluster": 18,
		"tags": [
			"computerscience",
			"development",
			"education",
			"academic",
			"code",
			"language",
			"programming",
			"java",
			"c",
			"scheme",
			"ada",
			"learning",
			"software",
			"lisp",
			"computing"
		],
		"y": 0.11451032035017156,
		"x": -13.335031302602191,
		"extended": "",
		"description": "STSC CrossTalk - Computer Science Education: Where Are the Software Engineers of Tomorrow? - Jan 2008",
		"time": "2008-08-20T22:51:37Z",
		"href": "http://www.stsc.hill.af.mil/CrossTalk/2008/01/0801DewarSchonberg.html"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"ruby",
			"interview",
			"DHH",
			"programming",
			"web",
			"development"
		],
		"y": 9.356500307379125,
		"x": -7.5381290342842115,
		"extended": "",
		"description": "Interview with David Heinemeier Hansson: Rails Culture, Scaling Basecamp, and Building Successful Companies - O'Reilly News",
		"time": "2008-08-20T22:38:20Z",
		"href": "http://news.oreilly.com/2008/08/interview-with-david-heinemeie.html"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"biology",
			"science",
			"interview"
		],
		"y": -7.612830771642143,
		"x": 0.08687317441016716,
		"extended": "",
		"description": "Interview with Marta de Menezes",
		"time": "2008-08-20T22:20:30Z",
		"href": "http://rhizome.org/editorial/18"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"depression",
			"cards",
			"photography",
			"psychology",
			"mood",
			"health"
		],
		"y": 0.6147451904687005,
		"x": 6.838166421592987,
		"extended": "",
		"description": "Look Up",
		"time": "2008-08-20T20:46:31Z",
		"href": "http://www.alexostrowski.com/lookup.php"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"print",
			"test",
			"typography",
			"digital"
		],
		"y": -4.757264896847153,
		"x": 6.637947445178969,
		"extended": "",
		"description": "Dear Lulu, The New Standards",
		"time": "2008-08-20T15:43:35Z",
		"href": "http://www.underconsideration.com/speakup/archives/005154.html"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"vocal",
			"range",
			"voice",
			"singing",
			"incredible"
		],
		"y": -9.295296255473179,
		"x": 4.383025401026698,
		"extended": "",
		"description": "my opinions: yma sumac",
		"time": "2008-08-20T15:38:51Z",
		"href": "http://guys-opinions.blogspot.com/2008/08/yma-sumac.html"
	},
	{
		"cluster": 8,
		"tags": [
			"lessig",
			"politics",
			"law",
			"technology",
			"mccain",
			"usa",
			"presidential",
			"election",
			"internet"
		],
		"y": 4.341136728230029,
		"x": 7.9770706878218505,
		"extended": "",
		"description": "Me on McCain on Technology (Lessig Blog)",
		"time": "2008-08-20T14:19:25Z",
		"href": "http://lessig.org/blog/2008/08/me_on_mccain_on_technology.html"
	},
	{
		"cluster": 2,
		"tags": [
			"maths",
			"learning",
			"language",
			"education",
			"brain"
		],
		"y": -5.892133792059301,
		"x": -1.361505049934156,
		"extended": "",
		"description": "BBC NEWS | Health | Brain's counting skill 'built-in'",
		"time": "2008-08-19T09:31:24Z",
		"href": "http://news.bbc.co.uk/1/hi/health/7563265.stm"
	},
	{
		"cluster": 8,
		"tags": [
			"web",
			"comic",
			"internet",
			"art",
			"list",
			"webcomic"
		],
		"y": -9.541301217571998,
		"x": 0.6730702760070143,
		"extended": "",
		"description": "10 Great Webcomics You Should Not Share With Your Kids | Geekdad from Wired.com",
		"time": "2008-08-19T09:30:18Z",
		"href": "http://blog.wired.com/geekdad/2008/08/10-geeky-webcom.html"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"society",
			"culture",
			"intelligence"
		],
		"y": -4.106017279342051,
		"x": 11.315488964820037,
		"extended": "",
		"description": "The Critics Need a Reboot. The Internet Hasn't Led Us Into a New Dark Age.",
		"time": "2008-08-19T09:25:51Z",
		"href": "http://www.wired.com/culture/culturereviews/magazine/16-09/st_essay"
	},
	{
		"cluster": 6,
		"tags": [
			"playlouder",
			"music",
			"isp",
			"technology",
			"internet",
			"computers",
			"piracy",
			"copyright"
		],
		"y": -8.043466444166508,
		"x": 2.7347712742060803,
		"extended": "",
		"description": "Music and ISPs are slowly coming together :: Shane Richmond",
		"time": "2008-08-18T10:24:50Z",
		"href": "http://blogs.telegraph.co.uk/shane_richmond/blog/2008/08/14/music_and_isps_are_slowly_coming_together"
	},
	{
		"cluster": 14,
		"tags": [
			"art",
			"design",
			"war",
			"military",
			"painting"
		],
		"y": -8.921671016272406,
		"x": 0.5589246484570451,
		"extended": "",
		"description": "Design Observer: Blast-Door Art: Cave Paintings of the Nuclear Era",
		"time": "2008-08-15T14:04:00Z",
		"href": "http://designobserver.com/archives/entry.html?id=34554"
	},
	{
		"cluster": 14,
		"tags": [
			"spam",
			"art",
			"design",
			"advertising"
		],
		"y": -8.826768925402906,
		"x": 0.6138253350643889,
		"extended": "",
		"description": "***spamflet***",
		"time": "2008-08-14T10:58:22Z",
		"href": "http://www.lennekeheeren.nl/spamflet/"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"computing",
			"video",
			"generative",
			"graphics",
			"technology"
		],
		"y": -10.53709487335678,
		"x": -0.14188397226981186,
		"extended": "",
		"description": "Rhizome - The Artists And The Computer",
		"time": "2008-08-14T10:18:42Z",
		"href": "http://rhizome.org/editorial/fp/blog.php/1012"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"technology",
			"exhibition",
			"robots",
			"gallery"
		],
		"y": -11.262952784417896,
		"x": 0.2575099397061307,
		"extended": "",
		"description": "Institute of Contemporary Arts : Visual Art : A Recent History of Writing and Drawing",
		"time": "2008-08-14T10:09:43Z",
		"href": "http://www.ica.org.uk/A20Recent20History20of20Writing20and20Drawing+17101.twl"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"lisp",
			"rlips",
			"programming",
			"functional",
			"computerscience"
		],
		"y": 4.0438398017339034,
		"x": -11.228771815822174,
		"extended": "",
		"description": "RLisp - taw's website",
		"time": "2008-08-13T16:02:08Z",
		"href": "http://chaosforge.org/taw/rlisp/"
	},
	{
		"cluster": 17,
		"tags": [
			"ruby",
			"programming",
			"computerscince",
			"functional",
			"dsl",
			"metaprogramming",
			"tutorial",
			"introduction"
		],
		"y": 5.186166756381254,
		"x": -10.143128430561246,
		"extended": "",
		"description": "the { buckblogs :here }: Writing Domain Specific Languages",
		"time": "2008-08-13T14:47:47Z",
		"href": "http://weblog.jamisbuck.org/2006/4/20/writing-domain-specific-languages"
	},
	{
		"cluster": 2,
		"tags": [
			"secretsanta",
			"cmoputerscience",
			"algorithm",
			"complexity",
			"computation",
			"models",
			"turingmachines",
			"npcomplete",
			"graph",
			"traversal"
		],
		"y": -2.8331641167158463,
		"x": 3.4069421266149993,
		"extended": "",
		"description": "Steve Rowe's Blog : Secret Santa is NP-Complete",
		"time": "2008-08-13T12:45:56Z",
		"href": "http://blogs.msdn.com/steverowe/archive/2006/12/19/secret-santa-is-np-complete.aspx"
	},
	{
		"cluster": 17,
		"tags": [
			"maths",
			"algorithm",
			"trading",
			"barter",
			"programming",
			"computerscience"
		],
		"y": 1.2329697643901476,
		"x": -12.612811032210873,
		"extended": "",
		"description": "Teaching, Playing, and Programming: What the heck is a math trade?",
		"time": "2008-08-13T12:35:02Z",
		"href": "http://okasaki.blogspot.com/2008/03/what-heck-is-math-trade.html"
	},
	{
		"cluster": 12,
		"tags": [
			"html",
			"web",
			"design",
			"development",
			"programming",
			"xhtml",
			"xml",
			"stadards",
			"webstandards",
			"markup"
		],
		"y": 10.49644652033815,
		"x": 0.2265248452954512,
		"extended": "",
		"description": "Why HTML",
		"time": "2008-08-13T12:33:53Z",
		"href": "http://www.b-list.org/weblog/2008/jun/18/html/"
	},
	{
		"cluster": 2,
		"tags": [
			"deaf",
			"visualization",
			"technology",
			"synaesthesia",
			"computing"
		],
		"y": -8.758219817092355,
		"x": -1.5439855873331807,
		"extended": "",
		"description": "BBC NEWS | Technology | 'Seeing sound' for the deaf",
		"time": "2008-08-13T12:32:54Z",
		"href": "http://news.bbc.co.uk/1/hi/technology/7558017.stm"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"commodity",
			"theory",
			"economics",
			"marxism",
			"criticism",
			"copyleft",
			"media"
		],
		"y": 7.312915260881753,
		"x": 7.209069102342319,
		"extended": "",
		"description": "Mute magazine - Culture and politics after the net",
		"time": "2008-08-13T12:32:03Z",
		"href": "http://www.metamute.org/en/copyfarleft_a_critique"
	},
	{
		"cluster": 17,
		"tags": [
			"ycombinator",
			"computerscience",
			"functional",
			"recursion",
			"programming",
			"ruby"
		],
		"y": 3.973904175907132,
		"x": -11.819916714093823,
		"extended": "",
		"description": "Guest Blogger: Tom Moertel derives the Y combinator in Ruby",
		"time": "2008-08-13T09:29:15Z",
		"href": "http://weblog.raganwald.com/2007/02/guest-blogger-tom-moertel-derives-y.html"
	},
	{
		"cluster": 17,
		"tags": [
			"ycombinator",
			"computerscience",
			"functional",
			"recursion",
			"programming",
			"ruby"
		],
		"y": 3.977362439679286,
		"x": -11.842618281691033,
		"extended": "",
		"description": "But Y would I want to do a thing like this?",
		"time": "2008-08-13T09:28:46Z",
		"href": "http://weblog.raganwald.com/2007/02/but-y-would-i-want-to-do-thing-like.html"
	},
	{
		"cluster": 17,
		"tags": [
			"ycombinator",
			"computerscience",
			"functional",
			"recursion",
			"programming",
			"ruby"
		],
		"y": 3.9739041822281207,
		"x": -11.819916717336591,
		"extended": "",
		"description": "A Use of the Y Combinator in Ruby",
		"time": "2008-08-13T09:28:39Z",
		"href": "http://www.eecs.harvard.edu/~cduan/technical/ruby/ycombinator.shtml"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"plagiarism",
			"iprs",
			"technology",
			"internet",
			"music",
			"culture",
			"IP",
			"law",
			"piracy",
			"politics",
			"attribution",
			"copying"
		],
		"y": -8.219487520017905,
		"x": 2.471721073964507,
		"extended": "",
		"description": "Danny O’Brien’s Oblomovka » Blog Archive » Copyright, Fraud and Window Taxes (No, not that Windows)",
		"time": "2008-08-12T10:18:35Z",
		"href": "http://www.oblomovka.com/wp/2008/08/07/copyright-fraud-and-window-taxes-no-not-that-windows/"
	},
	{
		"cluster": 14,
		"tags": [
			"ui",
			"ux",
			"design",
			"web",
			"accessibility",
			"Deafness",
			"deaf"
		],
		"y": 1.7114003445788504,
		"x": 1.0274409930504655,
		"extended": "",
		"description": "A List Apart: Articles: Deafness and the User Experience",
		"time": "2008-08-12T09:46:45Z",
		"href": "http://www.alistapart.com/articles/deafnessandtheuserexperience"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"computerscience",
			"functional",
			"programming",
			"lambda",
			"tutorial",
			"development",
			"ycombinator"
		],
		"y": 4.051654036187367,
		"x": -11.865508934196583,
		"extended": "",
		"description": "Understanding the Y Combinator - Xavier Shay's Blog",
		"time": "2008-08-11T11:52:05Z",
		"href": "http://rhnh.net/2007/12/20/understanding-the-y-combinator"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"webservices",
			"http",
			"xml",
			"web",
			"webdevelopment",
			"development",
			"programming",
			"rest",
			"service"
		],
		"y": 8.909155226005826,
		"x": -8.534731738029352,
		"extended": "",
		"description": "HTTParty: Quick Web Service Consumption From Any Ruby Class",
		"time": "2008-08-11T10:45:50Z",
		"href": "http://www.rubyinside.com/httparty-web-api-rest-service-consumption-from-ruby-class-981.html"
	},
	{
		"cluster": 2,
		"tags": [
			"saml",
			"xml",
			"authentiation",
			"identity",
			"webservices",
			"standards",
			"sso",
			"soa",
			"soap",
			"security"
		],
		"y": -1.999068878716201,
		"x": 5.266582812202847,
		"extended": "",
		"description": "XML.com: SAML 2: The Building Blocks of Federated Identity",
		"time": "2008-08-07T11:16:03Z",
		"href": "http://www.xml.com/pub/a/2005/01/12/saml2.html"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"technology",
			"history",
			"lacma",
			"collaboration",
			"culture"
		],
		"y": -11.351024286886458,
		"x": 0.9053727492269751,
		"extended": "",
		"description": "LACMA Collections Online - Art and Technology",
		"time": "2008-08-06T14:12:10Z",
		"href": "http://collectionsonline.lacma.org/MWEB/archives/artandtechnology/at_home.asp"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"development",
			"programming",
			"persistence",
			"vm",
			"smalltalk",
			"concurrency",
			"maglev",
			"gemstone"
		],
		"y": 6.9835923728642,
		"x": -9.273389850074166,
		"extended": "",
		"description": "MagLev recap",
		"time": "2008-08-05T14:02:32Z",
		"href": "http://www.avibryant.com/2008/06/maglev-recap.html"
	},
	{
		"cluster": 8,
		"tags": [
			"art",
			"technology",
			"participation",
			"identity",
			"internet",
			"media"
		],
		"y": -10.101997626005607,
		"x": 0.022532623912069834,
		"extended": "",
		"description": "Rhizome | Rhizome News: Putting Participation on the Map",
		"time": "2008-08-05T12:40:00Z",
		"href": "http://rhizome.org/editorial/news/?timestamp=20080804"
	},
	{
		"cluster": 8,
		"tags": [
			"troll",
			"society",
			"internet",
			"anonymity",
			"community",
			"privacy",
			"ethics",
			"speech"
		],
		"y": -4.153316589732762,
		"x": 11.272354576676987,
		"extended": "",
		"description": "Malwebolence - The World of Web Trolling - NYTimes.com",
		"time": "2008-08-04T14:10:35Z",
		"href": "http://www.nytimes.com/2008/08/03/magazine/03trolls-t.html?_r=2"
	},
	{
		"cluster": 8,
		"tags": [
			"youtube",
			"media",
			"internet",
			"copyright",
			"viacom",
			"ugc",
			"video",
			"participation"
		],
		"y": -3.305968667690282,
		"x": 3.5682229586662655,
		"extended": "",
		"description": "Groklaw - 88% of YouTube is New and Original Content, Professor Says",
		"time": "2008-08-04T13:40:53Z",
		"href": "http://www.groklaw.net/article.php?story=20080803232159314"
	},
	{
		"cluster": 6,
		"tags": [
			"internet",
			"media",
			"publishing",
			"p2p",
			"sharing",
			"translatoin",
			"copyright"
		],
		"y": 4.253272464928048,
		"x": 5.210069073888341,
		"extended": "",
		"description": "Novelist Paulo Coelho finds the perfect alchemy of print",
		"time": "2008-08-04T13:40:05Z",
		"href": "http://blogs.guardian.co.uk/organgrinder/2008/08/novelist_paul_coelho_finds_the.html"
	},
	{
		"cluster": 1,
		"tags": [
			"CoryArcangel",
			"BuceSpringsteen",
			"Music",
			"Art",
			"Appropriation",
			"BornToRun"
		],
		"y": -9.995469621071587,
		"x": 3.087823880501936,
		"extended": "",
		"description": "Rhizone - Content Producer - New York, August 5, 8pm",
		"time": "2008-08-04T12:13:13Z",
		"href": "http://rhizome.org/editorial/fp/reblog.php/4440"
	},
	{
		"cluster": 4,
		"tags": [
			"monad",
			"ruby",
			"programming",
			"functional",
			"tutorial",
			"computerscience",
			"haskell"
		],
		"y": -5.296338123060691,
		"x": -9.635266875977386,
		"extended": "",
		"description": "Monads in Ruby, Part 1: Introduction - Moonbase",
		"time": "2008-08-04T12:09:42Z",
		"href": "http://moonbase.rydia.net/mental/writings/programming/monads-in-ruby/00introduction.html"
	},
	{
		"cluster": 1,
		"tags": [
			"circuitbending",
			"hacking",
			"electronics",
			"music",
			"electronic",
			"synthesizer"
		],
		"y": -9.741589731736871,
		"x": 3.978233762673786,
		"extended": "",
		"description": "Circuit Bending Documentary",
		"time": "2008-08-03T19:08:27Z",
		"href": "http://absurdity.biz/CircuitBending/Bent.htm"
	},
	{
		"cluster": 1,
		"tags": [
			"guitar",
			"tab",
			"music",
			"magneticfields",
			"stephinmerrit",
			"claudiagonson"
		],
		"y": -9.285043458058052,
		"x": 4.374387176453953,
		"extended": "",
		"description": "The Magnetic Fields Guitar Tablature Site",
		"time": "2008-07-16T14:09:05Z",
		"href": "http://stephinsongs.wiw.org/tab/"
	},
	{
		"cluster": 11,
		"tags": [
			"mac",
			"osx",
			"screengrab",
			"grab",
			"keyboard",
			"shortcut",
			"tips",
			"tricks"
		],
		"y": -2.3276441864034485,
		"x": 6.017980064536485,
		"extended": "I always forget these\n",
		"description": "Juixe TechKnow » Mac OS X Screen Grab",
		"time": "2008-07-16T13:55:13Z",
		"href": "http://www.juixe.com/techknow/index.php/2007/10/11/mac-os-x-screen-grab/"
	},
	{
		"cluster": 7,
		"tags": [
			"development",
			"programming",
			"ruby",
			"erlang",
			"java",
			"threading",
			"future",
			"concurrency",
			"gotcha"
		],
		"y": 6.6687495515559565,
		"x": -8.797642285043894,
		"extended": "",
		"description": "InfoQ: The Futures of Ruby Threading",
		"time": "2008-07-16T11:26:07Z",
		"href": "http://www.infoq.com/news/2007/05/ruby-threading-futures"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"threading",
			"tutorial",
			"intro",
			"programming",
			"development"
		],
		"y": 7.315597102758915,
		"x": -8.74569063636405,
		"extended": "",
		"description": "Ruby Threading » Bogle’s Blog",
		"time": "2008-07-16T10:47:50Z",
		"href": "http://thebogles.com/blog/2006/11/ruby-threading/"
	},
	{
		"cluster": 7,
		"tags": [
			"threading",
			"ruby",
			"require",
			"programming",
			"development",
			"gotcha",
			"tips",
			"tutorial"
		],
		"y": 7.28348165855566,
		"x": -8.657989701581286,
		"extended": "",
		"description": "Daniel Azuma: Ruby threads and Kernel#require",
		"time": "2008-07-16T10:43:36Z",
		"href": "http://216.239.59.104/search?q=cache:wheiJSNdc04J:www.daniel-azuma.com/blog/view/z4oi2c3bf8t16s/ruby_threads_and_kernel_require+Kernel%23require&hl=en&ct=clnk&cd=1&gl=uk&client=firefox-a"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"require",
			"programming",
			"development",
			"howto",
			"reference",
			"tips"
		],
		"y": 7.457275445231847,
		"x": -8.50528507627136,
		"extended": "",
		"description": "Micah's General Guidelines on Ruby require",
		"time": "2008-07-16T09:39:41Z",
		"href": "http://blog.8thlight.com/articles/2007/10/08/micahs-general-guidelines-on-ruby-require"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"sax",
			"xml",
			"development"
		],
		"y": 7.467467350516083,
		"x": -8.789239483444128,
		"extended": "",
		"description": "Luca Guidi: Ruby: XML Parsing With SAX",
		"time": "2008-07-08T21:16:50Z",
		"href": "http://www.lucaguidi.com/2008/1/30/ruby-xml-parsing-with-sax"
	},
	{
		"cluster": 8,
		"tags": [
			"facebook",
			"art",
			"privacy",
			"society",
			"internet",
			"technology",
			"installation"
		],
		"y": -10.384224456956572,
		"x": -0.12333918401237873,
		"extended": "",
		"description": "The Valley Advocate: Arts & Literature - Face-Off",
		"time": "2008-06-18T09:34:23Z",
		"href": "http://www.valleyadvocate.com/article.cfm?aid=7117"
	},
	{
		"cluster": 2,
		"tags": [
			"moustache",
			"raf",
			"grooming",
			"facialhair"
		],
		"y": -2.8516209902510257,
		"x": 5.027588147507035,
		"extended": "",
		"description": "Biggles battles Yanks for right to sport tash | The Register",
		"time": "2008-06-13T12:56:21Z",
		"href": "http://www.theregister.co.uk/2008/06/13/handlebar_tash/"
	},
	{
		"cluster": 2,
		"tags": [
			"hofstadter",
			"AI",
			"maths",
			"science",
			"computerscience",
			"strangeloop",
			"GEB",
			"philosophy"
		],
		"y": -3.0856936220741287,
		"x": 2.1091990303155,
		"extended": "",
		"description": "An Interview with Douglas R. Hofstadter, following ''I am a Strange Loop''",
		"time": "2008-06-13T11:27:22Z",
		"href": "http://tal.forum2.org/hofstadter_interview"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"responsibility",
			"interaction",
			"product",
			"social"
		],
		"y": -5.404079929074697,
		"x": 1.289269380827272,
		"extended": "",
		"description": "Exploiting the desire for order",
		"time": "2008-06-13T11:26:17Z",
		"href": "http://feeds.feedburner.com/~r/ArchitecturesOfControlInDesign/~3/311079312/"
	},
	{
		"cluster": 8,
		"tags": [
			"socialsoftware",
			"social",
			"software",
			"groups",
			"web",
			"development",
			"community",
			"internet"
		],
		"y": 4.5689046020916,
		"x": 2.565622453725244,
		"extended": "",
		"description": "Shirky: A Group Is Its Own Worst Enemy",
		"time": "2008-04-07T16:18:17Z",
		"href": "http://shirky.com/writings/group_enemy.html"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"ip",
			"law"
		],
		"y": -3.6917643965129816,
		"x": 9.159955450065597,
		"extended": "Bruce Schneier links to a report that examines how pervasive copyright infringement is in modern society. Very pervasive, it turns out.\n",
		"description": "Schneier on Security: Law Review Article on the Problems with Copyright",
		"time": "2007-11-26T18:26:20Z",
		"href": "http://www.schneier.com/blog/archives/2007/11/law_review_arti.html"
	},
	{
		"cluster": 6,
		"tags": [
			"CC",
			"freeculture",
			"art",
			"creativecommons",
			"creative",
			"commons",
			"copyright",
			"IP"
		],
		"y": -7.459726653378707,
		"x": 3.106493854271404,
		"extended": "A load of CC and free culture projects specifically aimed at artists and broadening understanding of FC among those involved in the arts.\n",
		"description": "www.iarts.cc - I arts CC",
		"time": "2007-11-26T18:25:21Z",
		"href": "http://www.iarts.cc/"
	},
	{
		"cluster": 2,
		"tags": [
			"bookbinding",
			"christmas",
			"paris",
			"france",
			"presents",
			"family"
		],
		"y": -0.8535165442939053,
		"x": 5.183803736871558,
		"extended": "List of bookbinding suppliers and related businesses in Paris.\n",
		"description": "France",
		"time": "2007-11-26T18:23:34Z",
		"href": "http://www.cecilia-letteringart.com/WorldDirectory/france.htm"
	},
	{
		"cluster": 6,
		"tags": [
			"cc",
			"creativecommons",
			"music",
			"creative",
			"commons",
			"copyright",
			"licencing",
			"distribution",
			"business"
		],
		"y": -7.504429495216235,
		"x": 3.1500478456200973,
		"extended": "Article about the use of CC licences for music, that's pretty critical in nature. However, it seems to be based on a bit of a misunderstanding - CC is not a middleman in any sense, but a provider of legal tools to allow the sharing of creative work, and t\n",
		"description": "Musicians and Creative Commons | Wicked Whammy - Music Needs Management",
		"time": "2007-11-13T16:22:26Z",
		"href": "http://wickedwhammy.com/musicians-and-creative-commons/"
	},
	{
		"cluster": 2,
		"tags": [
			"maths",
			"education",
			"news",
			"literacy",
			"lottery"
		],
		"y": -5.851682717249563,
		"x": -1.185812136416718,
		"extended": "Stupid people in \"don't understand negative numbers\" shock. You'll guffaw with laughter, before realising that this really is a fucking terrible state of affairs.\n",
		"description": "'Cool Cash' card confusion - News - Manchester Evening News",
		"time": "2007-11-13T16:18:18Z",
		"href": "http://www.manchestereveningnews.co.uk/news/s/1022757_cool_cash_card_confusion"
	},
	{
		"cluster": 8,
		"tags": [
			"internet",
			"media",
			"mcluhan",
			"culture",
			"theory",
			"philosophy",
			"online",
			"communication"
		],
		"y": -7.331971408257475,
		"x": 10.120973759245988,
		"extended": "Great article on the relevance of Marshall McLuhan's work to today's networked media.\n",
		"description": "Rough Type: Nicholas Carr's Blog: McLuhan's web",
		"time": "2007-11-12T10:55:39Z",
		"href": "http://www.roughtype.com/archives/2007/11/mcluhans_net.php"
	},
	{
		"cluster": 6,
		"tags": [
			"blog",
			"blogging",
			"",
			"free",
			"music",
			"p2p",
			"filesharing",
			"copyright",
			"mp3"
		],
		"y": -8.254040191989008,
		"x": 4.778071854445138,
		"extended": "Guardian journalist attacks big media's two betes nour (bloggers and filesharers) simultaneously. Concentrates on problems for indie labels though, which is refreshing. Some excellent stuff in the comments too.\n",
		"description": "Guardian Unlimited: Arts blog - music: If you love music, stop taking it for free",
		"time": "2007-11-09T18:39:25Z",
		"href": "http://blogs.guardian.co.uk/music/2007/11/louis_pattison_thurs_am_pic.html"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"freeculture",
			"wto",
			"gambling",
			"trade",
			"international"
		],
		"y": -3.7072174317257742,
		"x": 8.701987297062827,
		"extended": "Antigua is the new Sweden: WTO expected to suspend Antigua's obligations to honour US copyrights, as part of a compenstation package over internet gambling restrictions.\n",
		"description": "Investing | Africa - Reuters.com",
		"time": "2007-11-09T18:37:37Z",
		"href": "http://africa.reuters.com/business/news/usnBAN324906.html"
	},
	{
		"cluster": 2,
		"tags": [
			"iplayer",
			"bbc",
			"digitalrights",
			"activism",
			"law",
			"technology",
			"drm",
			"openrightsgroup",
			"org"
		],
		"y": -3.688428633395541,
		"x": 6.332281363350988,
		"extended": "Interview with Becky from ORG! Discussion of the iPlayer and other Digital Rights issues.\n",
		"description": "Groklaw - Becky Hogge, Open Rights Group, on the BBC, iPlayer and DRM, interviewed by Sean Daly",
		"time": "2007-11-09T18:35:59Z",
		"href": "http://www.groklaw.net/article.php?story=20071108235140236"
	},
	{
		"cluster": 2,
		"tags": [
			"filesharing",
			"oink",
			"bpi",
			"riaa",
			"lawsuits",
			"freeculture",
			"p2p"
		],
		"y": -2.76675042894955,
		"x": 5.319899931214439,
		"extended": "Good comment on the demise of Oink, and the history of filesharing and the attendant lawsuits\n",
		"description": "demonbaby: When Pigs Fly: The Death of Oink, the Birth of Dissent, and a Brief History of Record Industry Suicide.",
		"time": "2007-11-09T18:35:05Z",
		"href": "http://www.demonbaby.com/blog/2007/10/when-pigs-fly-death-of-oink-birth-of.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"playlouder",
			"work",
			"lrug",
			"design",
			"development",
			"programming",
			"UI"
		],
		"y": 9.380131690613355,
		"x": -8.424586691314262,
		"extended": "Matt is giving a talk about some of our experiences developing a widget-based UI framework for Playlouder at LRUG on Monday. Come, it'll be fascinating.\n",
		"description": "Meet us at LRUG at Playlouder dev blog",
		"time": "2007-11-09T11:42:37Z",
		"href": "http://devblog.playlouder.com/index.php/2007/11/08/meet-us-at-lrug/"
	},
	{
		"cluster": 2,
		"tags": [
			"org-cdbe",
			"",
			"creativecommons",
			"freeculture",
			"ccsalon",
			"cc",
			"event",
			"jordanhatcher",
			"culturalheritage",
			"creativearchive",
			"freeeculture"
		],
		"y": -3.2721487533070603,
		"x": 4.785768439371704,
		"extended": "",
		"description": "CC-Salon London » November Salon with Jordan Hatcher",
		"time": "2007-11-06T14:50:58Z",
		"href": "http://ccsalon-london.org.uk/?p=9"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"programming",
			"tutorial",
			"explanation",
			"return",
			"proc",
			"lambda"
		],
		"y": 6.2277043838699075,
		"x": -9.770283011360664,
		"extended": "very succinct description of the differencein behaviour of the return statement in procs and lambdas respectively in ruby. Useful to know!\n",
		"description": "Proc.new vs Lambda in Ruby by Sam",
		"time": "2007-10-30T17:01:47Z",
		"href": "http://samdanielson.com/2007/3/19/proc-new-vs-lambda-in-ruby"
	},
	{
		"cluster": 2,
		"tags": [
			"amazon",
			"s3",
			"itunes",
			"storage",
			"network",
			"webservice"
		],
		"y": 2.5590811693778286,
		"x": 3.15948714634085,
		"extended": "guide to storing your itunes library on amazon s3\n",
		"description": "iTunes everywhere: Using Amazon S3 as your music library : Pain in the Tech",
		"time": "2007-10-26T17:59:39Z",
		"href": "http://paininthetech.com/2007/01/25/itunes-everywhere-using-amazon-s3-as-your-music-library/"
	},
	{
		"cluster": 2,
		"tags": [
			"amazon",
			"s3",
			"webservice",
			"storage",
			"network",
			"web",
			"utility",
			"software"
		],
		"y": 2.599667383028829,
		"x": 3.143247810604176,
		"extended": "Great roundup of tools that work with Amazon S3\n",
		"description": "Amazon S3 Storage Tools | Vinod Live!",
		"time": "2007-10-26T17:58:56Z",
		"href": "http://www.vinodlive.com/2007/08/20/amazon-s3-storage-tools/"
	},
	{
		"cluster": 2,
		"tags": [
			"amazon",
			"s3",
			"webdav",
			"network",
			"web",
			"service",
			"software",
			"storage",
			"webservice"
		],
		"y": 2.60190539074493,
		"x": 3.140560663046946,
		"extended": "Great app to mount an Amazon S3 share on your desktop.\n",
		"description": "JungleDisk - Reliable online storage powered by Amazon S3™",
		"time": "2007-10-26T17:58:26Z",
		"href": "http://www.jungledisk.com/download.shtml"
	},
	{
		"cluster": 2,
		"tags": [
			"twitter",
			"wordpress",
			"blog",
			"plugin",
			"software",
			"tools"
		],
		"y": 2.8506448982375856,
		"x": 3.1092845879369553,
		"extended": "Twitter Tools for Wordpress - To install over the weekend\n",
		"description": "README | alexking.org",
		"time": "2007-10-12T16:19:41Z",
		"href": "http://alexking.org/projects/wordpress/readme?project=twitter-tools"
	},
	{
		"cluster": 8,
		"tags": [
			"music",
			"business",
			"sales",
			"internet",
			"mobile",
			"diamondshoes"
		],
		"y": 4.88330135951993,
		"x": 4.4969730217973956,
		"extended": "Sony BMG's senior director of business development says \"My Wallet's too heavy and my diamond shoes are too tight\" in response to news that Internet sales are up 50%\n",
		"description": "Total Telecom",
		"time": "2007-10-12T10:15:40Z",
		"href": "http://www.totaltele.com/View.aspx?ID=95790&t=2"
	},
	{
		"cluster": 6,
		"tags": [
			"DRM",
			"DMCA",
			"music",
			"industry",
			"online",
			"internet",
			"p2p",
			"copyright",
			"sharing"
		],
		"y": 4.3126620459692,
		"x": 5.121350875835011,
		"extended": "DRM, Blanket Licencing and Lawsuits: Comment from the EFF on various recent digital music stories\n",
		"description": "Is DRM \"Enabling New Business Models\"?",
		"time": "2007-10-10T20:55:17Z",
		"href": "http://www.eff.org/deeplinks/archives/005478.php"
	},
	{
		"cluster": 6,
		"tags": [
			"radiohead",
			"download",
			"p2p",
			"music",
			"copyright",
			"internet",
			"free",
			"sharing"
		],
		"y": 4.294147699618165,
		"x": 5.138800197582333,
		"extended": "Good bit of perspective to add to all the debate over Radiohead's strategy for their new record. Noone's mentioned that Magnatune's been doing the same thing for years yet though.\n",
		"description": "Everyone wants to be Radiohead",
		"time": "2007-10-10T20:51:09Z",
		"href": "http://feeds.feedburner.com/~r/newmusicstrategies/~3/167645646/"
	},
	{
		"cluster": 1,
		"tags": [
			"drm",
			"music",
			"distribution",
			"free",
			"sharing",
			"technology",
			"musicIndustry",
			"mp3",
			"consumer",
			"industry",
			"business"
		],
		"y": 5.2651045207408105,
		"x": 4.58638624680248,
		"extended": "Report on Ian Rogers from Yahoo's rather inspirational speech at the Music 2.0 conference\n",
		"description": "Yahoo’s Ian Rogers To Music Industry: “Inconvenience Doesn’t Scale”",
		"time": "2007-10-09T13:14:03Z",
		"href": "http://www.techcrunch.com/2007/10/08/yahoos-ian-rogers-to-music-industry-inconvenience-doesnt-scale/"
	},
	{
		"cluster": 2,
		"tags": [
			"folksonomy",
			"tagging",
			"information",
			"categorization"
		],
		"y": -4.744143619884927,
		"x": 6.925590604170958,
		"extended": "Good introductory article on folksonomy and tagging\n",
		"description": "Bulletin October/November 2007",
		"time": "2007-10-09T13:11:50Z",
		"href": "http://www.asis.org/Bulletin/Oct-07/neal.html"
	},
	{
		"cluster": 1,
		"tags": [
			"PJHarvery",
			"",
			"music",
			"interview",
			"DiS"
		],
		"y": -9.34837983402798,
		"x": 4.304686512557893,
		"extended": "Interview with PJ Harvey from DiS. Her new record is excellent, by they way.\n",
		"description": "Drowned in Sound - Features - PJ Harvey: \"There are no rules, and you can make anything up you want\"",
		"time": "2007-10-09T13:03:57Z",
		"href": "http://www.drownedinsound.com/articles/2463095"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"ip",
			"analysis",
			"economics",
			"royalties"
		],
		"y": 6.769047128777689,
		"x": 6.08137831040085,
		"extended": "Kretschmer, M. [2006]. \"Empirical Evidence on Copyright Earnings\" - a quantative analysis of authors inome from royalties on copyrights\n",
		"description": "Bournemouth University | The Business School | mk_publications_detail",
		"time": "2007-10-08T13:54:30Z",
		"href": "http://www.cippm.org.uk/publications/mk_publications_detail.php?StaffID=35&PubID=811#"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"ticket",
			"touting",
			"ebay",
			"auuctions",
			"sales",
			"live",
			"gigs",
			"industry",
			"wankers"
		],
		"y": -8.921387002379637,
		"x": 4.447237510677495,
		"extended": "\"I wish eBay would drop dead and die... I have begged them to take [the tickets] off and they have basically told us to fuck off. So I will do everything I possibly can to ruin their lives.\" says Harvey Goldsmith, continuing in the time-honoured tradition\n",
		"description": "Led Zeppelin promoter wishes eBay would 'drop dead and die' | News | Guardian Unlimited Music",
		"time": "2007-10-08T11:56:09Z",
		"href": "http://music.guardian.co.uk/news/story/0,,2186298,00.html?gusrc=rss"
	},
	{
		"cluster": 6,
		"tags": [
			"music",
			"copyright",
			"control",
			"blook",
			"blog",
			"thomas",
			"capitol",
			"riaa",
			"radiohead",
			"sales",
			"distribution",
			"business"
		],
		"y": -1.1746790465468624,
		"x": 7.621181592363861,
		"extended": "Guy Kewney talks to Gerd Leonhard about  \"The End of Control\", Radiohead's new album and the Capitol vs Thomas verdict.\n",
		"description": "The RIAA will come to regret its court win | The Register",
		"time": "2007-10-08T11:48:15Z",
		"href": "http://www.theregister.co.uk/2007/10/08/0810_riaa_comment/"
	},
	{
		"cluster": 13,
		"tags": [
			"long",
			"tail",
			"reccomendation",
			"algorithm",
			"longtail",
			"ecommerce",
			"economics",
			"commerce"
		],
		"y": 7.93887002471692,
		"x": 7.792079194137311,
		"extended": "Good article on some new research into the role of algorithmic reccomendations in e-commerce, with reference to the long tail\n",
		"description": "'Reinforcing the Blockbuster Nature of Media': The Impact of Online Recommenders - Knowledge@Wharton",
		"time": "2007-10-08T11:39:23Z",
		"href": "http://knowledge.wharton.upenn.edu/article.cfm?articleid=1818&jsessionid=9a30a2ff46b674337664"
	},
	{
		"cluster": 11,
		"tags": [
			"iphoto",
			"storage",
			"photography",
			"mac",
			"osx",
			"hdd",
			"external",
			"apple"
		],
		"y": -3.4396062879951437,
		"x": 6.899873929421536,
		"extended": "Exactly what I needed to know - I have a lovely new 10Mp digital SLR and only a gig of space on my laptop currently.\n",
		"description": "AJAYA Move iPhoto albums to External Drive",
		"time": "2007-10-08T11:33:01Z",
		"href": "http://www.ajay.ws/2007/10/6/change-iphoto-root-directory"
	},
	{
		"cluster": 6,
		"tags": [
			"cc",
			"copyright",
			"litigation",
			"law",
			"privacy",
			"flickr"
		],
		"y": -3.598982785086033,
		"x": 9.032185688260455,
		"extended": "Great summary of issues involved in the Virgin / CC court case, and the distinction between copyright nd privacy rights.\n",
		"description": "Creative Commons, Common Sense, and Nonsense | Stanford Center for Internet and Society [beta site]",
		"time": "2007-10-08T10:02:35Z",
		"href": "http://cyberlaw.stanford.edu/node/5553"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"web",
			"essay",
			"metaphor",
			"interaction"
		],
		"y": 9.524591765450042,
		"x": 1.135425736021368,
		"extended": "Looks interesting, and should touch on a lot of subjects we've been discussing at work recently. To read later (via Zeroinfluencer's Twitter feed)\n",
		"description": "The Role of Metaphor in Interaction Design",
		"time": "2007-10-08T09:11:52Z",
		"href": "http://www.odannyboy.com/blog/cmu/new_archives/the_role_of_metaphor_in_interaction_design.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"log",
			"server",
			"admin",
			"development",
			"visualisation",
			"monitoring"
		],
		"y": 8.365658613419399,
		"x": -8.178102496793473,
		"extended": "Cool log visualisation tool written in ruby\n",
		"description": "glTail.rb - realtime logfile visualization",
		"time": "2007-10-08T08:10:46Z",
		"href": "http://www.fudgie.org/"
	},
	{
		"cluster": 6,
		"tags": [
			"capitol",
			"thomas",
			"p2p",
			"lawsuit",
			"copyright"
		],
		"y": -1.1744077405181474,
		"x": 7.615305563903612,
		"extended": "Techcrunch has a good analysis of the numbers involved in the Capitol vs Thomas settlement.\n",
		"description": "Court Victory For Music Labels Won’t Save Their Industry",
		"time": "2007-10-07T16:57:25Z",
		"href": "http://www.techcrunch.com/2007/10/05/court-victory-for-music-labels-wont-save-their-industry/"
	},
	{
		"cluster": 6,
		"tags": [
			"capitol",
			"thomas",
			"riaa",
			"copyright",
			"p2p",
			"lawsuit"
		],
		"y": -1.1716969456654012,
		"x": 7.618056709086252,
		"extended": "An incendiary, yet insightful rant from Lefsetz on the Capitol vs. Thomas case.\n",
		"description": "Lefsetz Letter » Blog Archive » The RIAA Victory",
		"time": "2007-10-07T16:54:30Z",
		"href": "http://lefsetz.com/wordpress/index.php/archives/2007/10/05/the-riaa-victory/"
	},
	{
		"cluster": 6,
		"tags": [
			"capitol",
			"thomas",
			"riaa",
			"copyright",
			"court",
			"case",
			"p2p",
			"lawsuit"
		],
		"y": -1.1692561881469912,
		"x": 7.620070032458709,
		"extended": "PlagiarismToday's take on the Capito vs. Thomas verdict. Particularly interesting as it is very much a non-partisan view of the case.\n",
		"description": "PlagiarismToday » What the RIAA Judgment Means to Me",
		"time": "2007-10-07T16:52:24Z",
		"href": "http://www.plagiarismtoday.com/2007/10/05/what-the-riaa-judgment-means-to-me/"
	},
	{
		"cluster": 3,
		"tags": [
			"criticism",
			"culture",
			"freeCulture",
			"free",
			"art",
			"essay",
			"commons",
			"theory"
		],
		"y": -11.72283939340149,
		"x": 2.8910018083706706,
		"extended": "Issue of OPEN magazine concentrating on a critical reading of Free Culture and the commons\n",
		"description": "Stichting Kunst en Openbare Ruimte - Contents OPEN 12 Freedom of culture",
		"time": "2007-10-07T16:50:08Z",
		"href": "http://www.skor.nl/article-3086-en.html"
	},
	{
		"cluster": 8,
		"tags": [
			"social",
			"network",
			"society",
			"criticism",
			"socialsoftware",
			"socialNetwork",
			"software",
			"internet",
			"web"
		],
		"y": 4.542286054662684,
		"x": 2.624559484804819,
		"extended": "Interesting selection of articles loookinng at social networks as a narrative form\n",
		"description": "Epeus' epigone: Storytelling and performance",
		"time": "2007-10-07T16:47:34Z",
		"href": "http://epeus.blogspot.com/2007/10/storytelling-and-performance.html"
	},
	{
		"cluster": 7,
		"tags": [
			"relational",
			"database",
			"sql",
			"programming",
			"development"
		],
		"y": 2.9722024929192488,
		"x": -2.068923140002785,
		"extended": "Good article on open source relational databases and some of the discrepancies between SQL and the relational model\n",
		"description": "Open Source Relational Databases - O'Reilly ONLamp Blog",
		"time": "2007-10-07T16:44:27Z",
		"href": "http://www.oreillynet.com/onlamp/blog/2007/10/open_source_relational_databas.html"
	},
	{
		"cluster": 11,
		"tags": [
			"ruby",
			"cocoa",
			"osx",
			"programming",
			"development",
			"apple",
			"mac"
		],
		"y": 7.839802157035821,
		"x": -6.447829417576126,
		"extended": "RobyCocoa - bindings to Cocoa API on Mac OSX for ruby\n",
		"description": "RubyCocoa: Welcome",
		"time": "2007-10-05T11:41:24Z",
		"href": "http://rubycocoa.sourceforge.net/HomePage"
	},
	{
		"cluster": 11,
		"tags": [
			"ruby",
			"cocoa",
			"programming",
			"development",
			"sound",
			"audio",
			"livecode",
			"music",
			"mac",
			"osx"
		],
		"y": 7.82086143531707,
		"x": -6.6589983996282935,
		"extended": "example of using RubyCocoa for sound playback\n",
		"description": "Re: FMOD or other sound libraries...anyone?",
		"time": "2007-10-05T11:40:11Z",
		"href": "http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/134551"
	},
	{
		"cluster": 2,
		"tags": [
			"electronics",
			"reference",
			"tutorial",
			"hardware",
			"hacking",
			"textbook"
		],
		"y": -4.395265830238069,
		"x": 3.884749566291553,
		"extended": "Great, freely licenced electronics textbooks\n",
		"description": "Lessons In Electric Circuits",
		"time": "2007-10-05T11:38:32Z",
		"href": "http://www.ibiblio.org/kuphaldt/electricCircuits/"
	},
	{
		"cluster": 11,
		"tags": [
			"ruby",
			"apple",
			"mac",
			"osx",
			"programming",
			"development",
			"scripting",
			"automation",
			"applescript",
			"blogpost"
		],
		"y": 7.839410162041477,
		"x": -6.655161684555096,
		"extended": "Awesome! Ruby bindings for the Apple Event Manager, meaning you can use ruby to do applescript-ish automation tasks\n",
		"description": "RubyOSA: Ruby/AppleEvent Bridge",
		"time": "2007-10-03T13:30:15Z",
		"href": "http://rubyosa.rubyforge.org/"
	},
	{
		"cluster": 7,
		"tags": [
			"api",
			"rails",
			"ruby",
			"ror",
			"dev",
			"coding",
			"programming",
			"facebook",
			"development"
		],
		"y": 9.251006233516398,
		"x": -7.941232354726695,
		"extended": "Neat Rails plugin for developing facebook platform apps. loads of great timesaving features compared to RFacebook on its own\n",
		"description": "facebook-rails - Google Code",
		"time": "2007-09-28T11:03:39Z",
		"href": "http://code.google.com/p/facebook-rails/"
	},
	{
		"cluster": 1,
		"tags": [
			"ruy",
			"jtalk",
			"livecode",
			"programming",
			"generative",
			"art",
			"synth",
			"music"
		],
		"y": -11.49712861356247,
		"x": -1.9575127695074441,
		"extended": "Livecoding with ruby, jtalk and various other tools\n",
		"description": "concentration studios Musical Live Coding in Ruby?",
		"time": "2007-09-25T17:26:26Z",
		"href": "http://concentrationstudios.com/2007/6/3/musical-live-coding-in-ruby"
	},
	{
		"cluster": 17,
		"tags": [
			"computers",
			"music",
			"programming",
			"ruuby",
			"composition",
			"generative",
			"livecode",
			"MIDI"
		],
		"y": -11.517651153519978,
		"x": -2.022455964168069,
		"extended": "interesting article on using ruby for generative composition and MIDI\n",
		"description": "http://www.gilesgoatboy.org/ruby/midi.html",
		"time": "2007-09-25T17:25:35Z",
		"href": "http://www.gilesgoatboy.org/ruby/midi.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"puredata",
			"jmax",
			"art",
			"code",
			"programming",
			"livecode"
		],
		"y": 5.7117845568594445,
		"x": -10.069316805757191,
		"extended": "A PureData / Ruby / jMax interface\n",
		"description": "freshmeat.net: Project details for GridFlow",
		"time": "2007-09-25T17:24:40Z",
		"href": "http://freshmeat.net/projects/gridflow/?branch_id=31852&release_id=92862"
	},
	{
		"cluster": 7,
		"tags": [
			"aeduino",
			"ruby",
			"serial",
			"hardware",
			"hacking",
			"code",
			"development",
			"art"
		],
		"y": 7.556886520735424,
		"x": -9.483502538200979,
		"extended": "Using Arduino boards with ruby\n",
		"description": "Ruby/serial demo - ComputerKraft Wiki",
		"time": "2007-09-18T15:23:35Z",
		"href": "http://www.computerkraft.com/wiki/index.php?title=Ruby/serial_demo"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"development",
			"web",
			"hacks",
			"hack",
			"browser",
			"browsers",
			"compatibility"
		],
		"y": 10.393115502227179,
		"x": 0.6965750050766877,
		"extended": "Very comprehensive list of CSS hacks and filters for different browsers\n",
		"description": "CSS hacks series",
		"time": "2007-09-12T17:03:02Z",
		"href": "http://thomas.tanreisoftware.com/?p=11"
	},
	{
		"cluster": 17,
		"tags": [
			"maths",
			"geo",
			"coordinates",
			"trigonometry",
			"programming",
			"algorithms",
			"location",
			"distance",
			"geolocation"
		],
		"y": -3.0196265595135725,
		"x": 1.4721243869409986,
		"extended": "Notes on determining the distance between two lat/long points\n",
		"description": "Math Forum - Ask Dr. Math",
		"time": "2007-09-07T15:41:28Z",
		"href": "http://www.mathforum.com/library/drmath/view/51711.html"
	},
	{
		"cluster": 16,
		"tags": [
			"geodata",
			"data",
			"postcode",
			"locations",
			"geo",
			"map",
			"postcodes",
			"mapping",
			"uk"
		],
		"y": -2.1307874632332884,
		"x": 0.010454500971912518,
		"extended": "big zip file of data on UK postcodes and their locations\n",
		"description": "UK Postcode Coordinates",
		"time": "2007-09-07T15:31:42Z",
		"href": "http://www.jibble.org/ukpostcodes/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"hack",
			"tutorial",
			"inline-block",
			"dev",
			"development"
		],
		"y": 10.44880483749965,
		"x": 1.1907526237941437,
		"extended": "good tutorial on display: inline-block in CSS\n",
		"description": "ruzee.com - Steffen Rusitschka » Blog Archive » Align List Items Horizontally with CSS …",
		"time": "2007-09-04T17:53:20Z",
		"href": "http://www.ruzee.com/blog/2007/05/align-list-items-horizontally-with-css/"
	},
	{
		"cluster": 2,
		"tags": [
			"facebook",
			"rss",
			"status",
			"twitter",
			"howto"
		],
		"y": -2.549954816238513,
		"x": 4.794449911776585,
		"extended": "HOWTO syndicate your facebook status for inclusion in something like Twitter\n",
		"description": "Facebook Tip: Broadcast your Facebook status as RSS « Internet Duct Tape",
		"time": "2007-08-30T12:20:26Z",
		"href": "http://internetducttape.com/2007/08/08/broadcast-facebook-status-rss-filter/"
	},
	{
		"cluster": 12,
		"tags": [
			"application",
			"design",
			"development",
			"web",
			"portfolio",
			"cms",
			"php",
			"webapp",
			"sofware"
		],
		"y": 9.758004195638875,
		"x": 0.6878175047775072,
		"extended": "Nice simple php webapp for building portfolio sites\n",
		"description": "Introduction :: indexhibit",
		"time": "2007-08-29T11:40:56Z",
		"href": "http://indexhibit.org/"
	},
	{
		"cluster": 18,
		"tags": [
			"architectuure",
			"art",
			"code",
			"computing",
			"dev",
			"prograamming",
			"wiki",
			"designpatterns",
			"design",
			"patterns",
			"software",
			"development"
		],
		"y": 6.032906710787492,
		"x": -5.328151670405384,
		"extended": "Great resource on design patterns and other software development issues.\n",
		"description": "Front Page",
		"time": "2007-08-29T10:21:00Z",
		"href": "http://c2.com/cgi/wiki"
	},
	{
		"cluster": 9,
		"tags": [
			"svn",
			"rails",
			"ruby",
			"dev",
			"development",
			"admin",
			"subversion",
			"linux",
			"administration",
			"howto"
		],
		"y": -6.8589646149633285,
		"x": 4.83090494278266,
		"extended": "Intro to setting up a rails project with svn on linux\n",
		"description": "Alan Christopher Thomas | 2007 February",
		"time": "2007-08-28T23:23:10Z",
		"href": "http://alanchristopherthomas.com/blog/2007/02/"
	},
	{
		"cluster": 9,
		"tags": [
			"lighttpd",
			"server",
			"subversion",
			"trac",
			"admin",
			"linux",
			"administration"
		],
		"y": -6.6398601174474745,
		"x": 4.939381860214347,
		"extended": "setting up lighttpd to serve a trac install\n",
		"description": "HowToSetupTrac - lighttpd - secure, fast, compliant, and very flexible web-server - Trac",
		"time": "2007-08-28T22:43:23Z",
		"href": "http://trac.lighttpd.net/trac/wiki/HowToSetupTrac"
	},
	{
		"cluster": 9,
		"tags": [
			"vi",
			"linux",
			"howto",
			"reference"
		],
		"y": -5.369903826879264,
		"x": 3.9428584259750203,
		"extended": "Useful quick reference for vi\n",
		"description": "10.3 vi Quick Reference Guide",
		"time": "2007-08-28T22:30:21Z",
		"href": "http://8help.osu.edu/wks/unix_course/intro-134.html"
	},
	{
		"cluster": 9,
		"tags": [
			"admin",
			"administration",
			"linux",
			"ubuntu",
			"user",
			"accounts",
			"sysadmin"
		],
		"y": -6.380742141159615,
		"x": 5.315753122881324,
		"extended": "Good guide to adding user accounts for daemons in linux\n",
		"description": "Add User Accounts - Fairly-Secure Anti-Spam",
		"time": "2007-08-28T22:29:57Z",
		"href": "http://flakshack.com/anti-spam/wiki/index.php?page=Add+User+Accounts"
	},
	{
		"cluster": 9,
		"tags": [
			"svn",
			"svnserve",
			"linux",
			"admin",
			"xinted",
			"ubuntu",
			"howto",
			"administration",
			"subversion"
		],
		"y": -6.74448916724839,
		"x": 4.957435098559933,
		"extended": "setting up svnserve to run as a daemon under xinetd\n",
		"description": "Subversion Users: Re: Setting up svnserve on Linux/Ubuntu",
		"time": "2007-08-28T22:29:07Z",
		"href": "http://svn.haxx.se/users/archive-2005-09/1282.shtml"
	},
	{
		"cluster": 9,
		"tags": [
			"vhost",
			"lighttpd",
			"ubuntu",
			"debian",
			"linux",
			"administration",
			"admin",
			"server",
			"web"
		],
		"y": -6.5719059397198105,
		"x": 5.034070104001326,
		"extended": "Guide to setting up multiple vhosts in lighttpd\n",
		"description": "Hosting Multiple Websites or Namebased,IPbased Virtual hosts in Lighttpd",
		"time": "2007-08-27T14:22:40Z",
		"href": "http://www.debianhelp.co.uk/virtualhostslighttpd.htm"
	},
	{
		"cluster": 9,
		"tags": [
			"bash",
			"linux",
			"shell",
			"scripting",
			"reference",
			"howto"
		],
		"y": -5.442309071616583,
		"x": 3.501458169819297,
		"extended": "Great quick reference for bash shell scripting\n",
		"description": "All about Linux: 10 Seconds Guide to Bash Shell Scripting",
		"time": "2007-08-27T14:20:09Z",
		"href": "http://linuxhelp.blogspot.com/2005/10/10-seconds-guide-to-bash-shell.html"
	},
	{
		"cluster": 9,
		"tags": [
			"debian",
			"vhost",
			"exim4",
			"mail",
			"mta",
			"linux",
			"ubuntu",
			"admin",
			"administration"
		],
		"y": -6.52744124755596,
		"x": 5.124096587536018,
		"extended": "Guide to setting up vhost based mail services in exim4.. Remember to edit update-exim4.conf.conf to use split file configuration!\n",
		"description": "Debian Administration :: Handling mail for multiple virtual domains with exim4",
		"time": "2007-08-27T14:18:44Z",
		"href": "http://www.debian-administration.org/articles/140"
	},
	{
		"cluster": 9,
		"tags": [
			"ssh",
			"auth",
			"linux",
			"debian",
			"ubuntu",
			"administration",
			"admin",
			"key",
			"login"
		],
		"y": -6.376468598243071,
		"x": 5.304021401971228,
		"extended": "Setting up ssh public key authentication on Debian / Ubuntu Linux\n",
		"description": "Text* Snippets: administration code",
		"time": "2007-08-27T14:16:59Z",
		"href": "http://textsnippets.com/tag/administration"
	},
	{
		"cluster": 2,
		"tags": [
			"box",
			"css",
			"ie7",
			"debugging",
			"development",
			"haslayout",
			"ie"
		],
		"y": 8.739407951554497,
		"x": 1.6659711778483683,
		"extended": "Great explanation of css bugs arising from IE's 'hasLayout' property\n",
		"description": "On having layout — the concept of hasLayout in IE/Win",
		"time": "2007-08-23T11:32:49Z",
		"href": "http://www.satzansatz.de/cssd/onhavinglayout.html"
	},
	{
		"cluster": 16,
		"tags": [
			"design",
			"computing",
			"data",
			"visualization",
			"graphics",
			"information",
			"statistics",
			"blogpost"
		],
		"y": -2.8558384000707573,
		"x": 0.12737908140733042,
		"extended": "Awesome collection of interesting approaches to data visualisation. Fascinating, both from a maths and a design perspective.\n",
		"description": "Data Visualization: Modern Approaches | Graphics",
		"time": "2007-08-14T13:48:36Z",
		"href": "http://www.smashingmagazine.com/2007/08/02/data-visualization-modern-approaches/"
	},
	{
		"cluster": 2,
		"tags": [
			"cinema",
			"richmix",
			"popcorn",
			"free"
		],
		"y": -2.7450331625196216,
		"x": 5.069880917868648,
		"extended": "Free popcorn at rich mix\n",
		"description": "Free_popcorn_coupon.jpg (JPEG Image, 478x325 pixels)",
		"time": "2007-08-08T11:29:25Z",
		"href": "http://www.richmix.org.uk/downloads/Free_popcorn_coupon.jpg"
	},
	{
		"cluster": 2,
		"tags": [
			"rails",
			"faceebook",
			"developer",
			"platform",
			"ruby",
			"api"
		],
		"y": 0.6764792143620906,
		"x": -3.0531180401501388,
		"extended": "",
		"description": "Liverail - Tutorial on developing a Facebook platform application with Ruby On Rails",
		"time": "2007-08-05T12:27:29Z",
		"href": "http://www.liverail.net/articles/2007/6/29/tutorial-on-developing-a-facebook-platform-application-with-ruby-on-rails"
	},
	{
		"cluster": 2,
		"tags": [
			"facebook",
			"rails",
			"developer",
			"platform",
			"ruby",
			"api",
			"howto"
		],
		"y": 0.6787623795015002,
		"x": -3.0553667805223226,
		"extended": "",
		"description": "Using Ruby on Rails with Facebook Platform - Facebook Developers Wiki",
		"time": "2007-08-05T12:26:57Z",
		"href": "http://wiki.developers.facebook.com/index.php/Using_Ruby_on_Rails_with_Facebook_Platform"
	},
	{
		"cluster": 2,
		"tags": [
			"javascript",
			"scope",
			"binding",
			"oop",
			"prototype"
		],
		"y": -1.9385458050706026,
		"x": 4.024180554910302,
		"extended": "Great tutorial on scope and binding in javascript, including info on working with the prototype framework.\n",
		"description": "AlternateIdea: Understanding Scope and Binding in JavaScript",
		"time": "2007-08-01T12:47:48Z",
		"href": "http://www.encytemedia.com/blog/articles/2007/7/18/javascript-scope-and-binding"
	},
	{
		"cluster": 2,
		"tags": [
			"samsmiths",
			"pub",
			"london",
			"bermondsey",
			"south",
			"east",
			"towerbridge"
		],
		"y": -2.0180787136251825,
		"x": 6.077686510875772,
		"extended": "Nice Sam Smiths pub that's (reasonably) local to me.\n",
		"description": "Anchor Tap Pub, Bermondsey, London - Traditional and Historic London Pub Guide @ Pubs.com",
		"time": "2007-07-26T15:57:37Z",
		"href": "http://www.pubs.com/pub_details.cfm?ID=145"
	},
	{
		"cluster": 2,
		"tags": [
			"statemachine",
			"rails",
			"ruby",
			"plugin",
			"activerecord",
			"model",
			"state"
		],
		"y": 0.7664541791295599,
		"x": 0.2836664843826022,
		"extended": "Interesting Rails plugin that gives state to an ActiveRecord model.\n",
		"description": "Rubyist - Acts As State Machine",
		"time": "2007-07-26T15:12:59Z",
		"href": "http://rubyi.st/2006/1/21/acts-as-state-machine"
	},
	{
		"cluster": 11,
		"tags": [
			"apple",
			"airtunes",
			"audio",
			"app",
			"utility",
			"osx",
			"mac"
		],
		"y": -3.1843441025892822,
		"x": 6.8395108141215255,
		"extended": "Useful little app to allow any program to play audio through AirTunes speakers\n",
		"description": "Rogue Amoeba - Choose Your Operating System",
		"time": "2007-07-26T13:40:36Z",
		"href": "http://www.rogueamoeba.com/airfoil/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"symbols",
			"programming",
			"development",
			"web"
		],
		"y": 9.341197700840635,
		"x": -7.553678950176848,
		"extended": "The best explanation of Ruby symbols I've come accross. This was one of the hardest things to get to grips with in Ruby, for me, so it's well worth a look.\n",
		"description": "Learning Ruby - Symbols",
		"time": "2007-06-08T15:13:35Z",
		"href": "http://sitekreator.com/satishtalim/symbols.html"
	},
	{
		"cluster": 11,
		"tags": [
			"elgato",
			"video",
			"h.264",
			"mac",
			"apple",
			"hardware",
			"encoding"
		],
		"y": -3.5083723203929376,
		"x": 4.962383355312703,
		"extended": "I need to get one of these....\n",
		"description": "Elgato Systems",
		"time": "2007-06-05T10:03:40Z",
		"href": "http://www.elgato.com/index.php?file=products_eyetvturbo"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"fogel",
			"registration",
			"term",
			"economics",
			"IP",
			"market",
			"blogpost"
		],
		"y": 6.793360622415032,
		"x": 6.043910072020641,
		"extended": "A fascinating proposal from Karl Fogel, that attempts to use market value to determine a reasonable copyright term on a 'case-by-case' basis. I'm keen on this, as it shows that a skeptical attitude to copyright need not be anti-market or anti-competetive.\n",
		"description": "A Modest Proposal: Proportional Registration for Copyrights | QuestionCopyright.org",
		"time": "2007-05-25T08:51:57Z",
		"href": "http://www.copyrightmyths.org/proportional_registration"
	},
	{
		"cluster": 2,
		"tags": [
			"facebook",
			"wordpress",
			"blog",
			"syndicatioon",
			"socialsoftware",
			"socialnetwork",
			"rss",
			"xml",
			"integration",
			"blogging",
			"blogpost"
		],
		"y": -1.6952081950019118,
		"x": 5.875117086217939,
		"extended": "Reason #1238509 why Facebook is vastly superior to mySpace. Integration of my 'proper' blog and the blog facilities on my social network profiles is something i've been crying out for since way back when everyone simultanously decided to leave friendster.\n",
		"description": "Adam Hill’s Website » Wordpress Plugin - Facebook Comments",
		"time": "2007-05-17T10:46:18Z",
		"href": "http://www.adamhill.ca/?page_id=179"
	},
	{
		"cluster": 11,
		"tags": [
			"blogpost",
			"mac",
			"apple",
			"osx",
			"facebook",
			"socialsoftware",
			"socialnetwork"
		],
		"y": -3.1570371702425435,
		"x": 6.7205367712965645,
		"extended": "A list of Mac Apps for Facebook and Myspace users. I really like the idea of integrating facebook into my current contacts / photo management system in this way, it'd be even better if an iCal feed for facebook events was available too!\n",
		"description": "Mac News Online » The Socially Networked Mac",
		"time": "2007-05-16T11:14:33Z",
		"href": "http://macnewsonline.com/wp/the-socially-networked-mac/"
	},
	{
		"cluster": 2,
		"tags": [
			"camera",
			"digital",
			"photo",
			"photography",
			"technology"
		],
		"y": -6.911593604863173,
		"x": 1.7573667280002545,
		"extended": "Digital camera reccomendation\n",
		"description": "Boing Boing: Lumix FX07 cameras - perfect pocket camera",
		"time": "2007-05-11T11:11:47Z",
		"href": "http://www.boingboing.net/2007/04/12/lumix_fx07_cameras_p.html"
	},
	{
		"cluster": 2,
		"tags": [
			"clock",
			"cc",
			"audio",
			"stephenfry"
		],
		"y": -3.3845270229542104,
		"x": 4.502084910081343,
		"extended": "Wake up to the voice of Stephen Fry\n",
		"description": "The VOCO Clock",
		"time": "2007-05-09T13:48:06Z",
		"href": "http://voco.uk.com/"
	},
	{
		"cluster": 11,
		"tags": [
			"apple",
			"mac",
			"osx",
			"application",
			"alarmclock",
			"itunes",
			"software"
		],
		"y": -3.41885537310012,
		"x": 7.294071364663819,
		"extended": "",
		"description": "Aurora - Free iTunes and EyeTV Alarm Clock for Mac OS X",
		"time": "2007-05-09T13:11:49Z",
		"href": "http://metaquark.de/aurora/"
	},
	{
		"cluster": 3,
		"tags": [
			"literature",
			"theory",
			"intentionalfallacy",
			"affectivefallacy",
			"criticism"
		],
		"y": -3.4524342872817817,
		"x": 5.423548829789143,
		"extended": "Great set of notes on The Intentional Fallacy\n",
		"description": "Wimsatt and Beardsley",
		"time": "2007-05-02T15:10:50Z",
		"href": "http://www.michaelbryson.net/academic/wimsattbeardsley.html"
	},
	{
		"cluster": 2,
		"tags": [
			"indieexchange",
			"ticket",
			"association",
			"secondarymarket",
			"sales",
			"industry"
		],
		"y": -2.8758895734596894,
		"x": 5.0435858621488165,
		"extended": "The secondary-ticket-sale industry have an association! Research for indieexchange project.\n",
		"description": "Welcome to ASTA UK - the website of the Association of Secondary Ticket Agents, established January 2006",
		"time": "2007-04-27T14:28:29Z",
		"href": "http://www.asta-uk.org/index.php"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"extension",
			"ruby",
			"rubyonrails",
			"scaffolding",
			"plugin",
			"scaffold",
			"development",
			"webdevelopment"
		],
		"y": 10.535346195651837,
		"x": -7.562169634282261,
		"extended": "Extension to Rails Scaffolding that supports belongs_to and HABTM relationships\n",
		"description": "Scaffolding Extensions Plugin in Ruby on Rails",
		"time": "2007-04-25T10:22:50Z",
		"href": "http://wiki.rubyonrails.org/rails/pages/Scaffolding+Extensions+Plugin"
	},
	{
		"cluster": 11,
		"tags": [
			"coda",
			"development",
			"utility",
			"application",
			"css",
			"text",
			"html",
			"ftp",
			"mac",
			"osx",
			"blogpost"
		],
		"y": -3.068144768042305,
		"x": 6.932265528507833,
		"extended": "Interesting looking web-dev tool from the makers of SubEthaEdit and Transmit - an all-singing-all-dancing text/css-editor-cum-ftp-client-cum-terminal-emulator-cum-reference-bookshelf-thingy.\n",
		"description": "Panic - Coda - Get Help With Coda",
		"time": "2007-04-24T12:31:22Z",
		"href": "http://www.panic.com/coda/support.html"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"screencast",
			"tutorial",
			"programming",
			"video",
			"howto",
			"blogpost"
		],
		"y": 6.167100247969315,
		"x": -9.374495738561244,
		"extended": "A great directory of Ruby and Rails screencasts\n",
		"description": "Ruby - A Programmer's Best Friend :: Tech Videos, Screencasts, Tutorials, Webinars, Techtalks, Tutorials",
		"time": "2007-04-23T16:13:08Z",
		"href": "http://www.bestechvideos.com/category/development/ruby/page/4/"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"windowsmobile",
			"sync",
			"compatibility"
		],
		"y": -4.975124944222187,
		"x": 5.2586556375644316,
		"extended": "Project intending to allow synchronisation between windows mobile devices and linux machines\n",
		"description": "Windows Mobile 2005 HCL - SynCE-Wiki",
		"time": "2007-04-20T13:53:42Z",
		"href": "http://www.synce.org/index.php/Windows_Mobile_2005_HCL"
	},
	{
		"cluster": 1,
		"tags": [
			"blogpost",
			"music",
			"creativecommons",
			"netlabel"
		],
		"y": -9.361434607228269,
		"x": 4.320962950598098,
		"extended": "A great UK-based netlabel,  a huge variety of electronic music under a CC BY-NC-ND licence.\n",
		"description": "Polymorphic Music",
		"time": "2007-04-19T15:08:19Z",
		"href": "http://www.polymorphic-music.co.uk/"
	},
	{
		"cluster": 11,
		"tags": [
			"ipod",
			"itunes",
			"troubleshooting",
			"error",
			"mac"
		],
		"y": -3.7038701516327075,
		"x": 4.665186548717485,
		"extended": "Fixing an odd iTunes error....\n",
		"description": "iTunes for Mac reports a -48 error during iPod sync",
		"time": "2007-04-13T10:44:05Z",
		"href": "http://docs.info.apple.com/article.html?artnum=304893"
	},
	{
		"cluster": 6,
		"tags": [
			"musc",
			"publishing",
			"industry",
			"copyright",
			"licensing",
			"cc",
			"blogpost"
		],
		"y": -3.4809361376795387,
		"x": 4.9806169483398754,
		"extended": "Juhn Buckman (of magnatune) gives some great advice demystifying the music publishing business for free / cc musicians.\n",
		"description": "buckman's magnatune blog: advice to Magnatune musicians about music publishing",
		"time": "2007-04-12T09:05:33Z",
		"href": "http://blogs.magnatune.com/buckman/2006/05/advice_to_magna.html"
	},
	{
		"cluster": 1,
		"tags": [
			"blogpost",
			"books",
			"reading",
			"publishing",
			"technology",
			"art",
			"aesthetics",
			"media",
			"book"
		],
		"y": -11.19031200555484,
		"x": -0.6387133156101693,
		"extended": "Cory writes about the relationship between aesthetics and medium in music and the written word, and the effect of new technology on how these media are created and received.\n",
		"description": "Locus Online Features: Cory Doctorow: You <i>Do</i> Like Reading Off a Computer Screen",
		"time": "2007-03-20T14:05:20Z",
		"href": "http://www.locusmag.com/Features/2007/03/cory-doctorow-you-do-like-reading-off.html"
	},
	{
		"cluster": 17,
		"tags": [
			"algorithms",
			"sorting",
			"learning",
			"education",
			"computerscience",
			"visualization",
			"code",
			"programming",
			"blogpost"
		],
		"y": 0.18286246881221357,
		"x": -12.806491802826086,
		"extended": "Animated visualisations of various sorting algorithms - A great learning tool if, like me. you struggle to understand these things purely through code and written descritions.\n",
		"description": "The Improved Sorting Algorithm Demo",
		"time": "2007-03-20T11:38:40Z",
		"href": "http://cg.scs.carleton.ca/~morin/misc/sortalg/"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"google",
			"viacom",
			"law",
			"ip",
			"dmca",
			"grokster",
			"supremecourt",
			"congress",
			"policymaking",
			"intellectualproperty",
			"infringement"
		],
		"y": -3.7112378927125182,
		"x": 9.122858206468603,
		"extended": "Lawrence Lessig offers a far more educated take on the Google vs. Viacom case than my own, posted previously.\n",
		"description": "Make Way for Copyright Chaos - New York Times",
		"time": "2007-03-19T17:28:50Z",
		"href": "http://www.nytimes.com/2007/03/18/opinion/18lessig.html?ex=1331870400&en=a376e7886d4bcf62&ei=5088&partner=rssnyt&emc=rss"
	},
	{
		"cluster": 2,
		"tags": [
			"blogpost",
			"twitter",
			"software",
			"tools",
			"mobile",
			"web"
		],
		"y": 2.9834365824631752,
		"x": 3.081491222953237,
		"extended": "I haven't properly looked at Twitter yet, despite all the attention it's recieved, as like many social software tools, it's only really useful if you have friends who use it too. Nevertheless, these add-ons certainly show why it's generated such interest.\n",
		"description": "WIRED Blogs: Monkey Bites - 8 Cool Twitter Tools",
		"time": "2007-03-19T17:01:33Z",
		"href": "http://blog.wired.com/monkeybites/2007/03/8_cool_twitter_.html"
	},
	{
		"cluster": 2,
		"tags": [
			"education",
			"research",
			"social",
			"society",
			"myspace",
			"fame",
			"psychology",
			"narcissim",
			"network",
			"media",
			"blogpost"
		],
		"y": -0.23626329331362508,
		"x": 7.2408817902736535,
		"extended": "A great article by Danah Boyd, talking about the rise of narcissism in society, and analysing the role of both the mass-media (as a cause) and online social networks (as a symptom) of this.\n",
		"description": "apophenia: fame, narcissism and MySpace",
		"time": "2007-03-19T12:21:17Z",
		"href": "http://www.zephoria.org/thoughts/archives/2007/03/17/fame_narcissism.html"
	},
	{
		"cluster": 11,
		"tags": [
			"apple",
			"ical",
			"google",
			"gcal",
			"calendar",
			"mac",
			"sync",
			"software",
			"osx"
		],
		"y": -3.6440593635984975,
		"x": 7.532456081203194,
		"extended": "Potentially the missing link in my calendering setup...\n",
		"description": "Spanning Sync",
		"time": "2007-03-14T13:44:53Z",
		"href": "http://spanningsync.com/"
	},
	{
		"cluster": 6,
		"tags": [
			"book",
			"books",
			"google",
			"googlebooks",
			"copyright",
			"search"
		],
		"y": -3.7613741937883582,
		"x": 3.4449353203242445,
		"extended": "",
		"description": "Off the shelf | Technology | Guardian Unlimited Technology",
		"time": "2007-03-13T16:36:04Z",
		"href": "http://technology.guardian.co.uk/news/story/0,,2030831,00.html"
	},
	{
		"cluster": 8,
		"tags": [
			"community",
			"internet",
			"web2.0",
			"web",
			"mobile",
			"metadata",
			"socialsoftware",
			"social"
		],
		"y": 4.495155662705957,
		"x": 2.610313452294262,
		"extended": "",
		"description": "Communities are not Web20 because talk is cheap!",
		"time": "2007-03-13T16:35:16Z",
		"href": "http://opengardensblog.futuretext.com/archives/2007/03/communities_are_not_web20_because_talk_is_cheap.html"
	},
	{
		"cluster": 17,
		"tags": [
			"academia",
			"computer",
			"science",
			"computerscience",
			"computing",
			"academic",
			"programming",
			"employment"
		],
		"y": 1.463068478049304,
		"x": -11.653757573452193,
		"extended": "",
		"description": "The death of computing (Member view) : Articles : Future of Computing : BCScopmsci",
		"time": "2007-03-13T16:34:18Z",
		"href": "http://www.bcs.org/server.php?show=ConWebDoc.9662"
	},
	{
		"cluster": 2,
		"tags": [
			"programmin",
			"journalism",
			"employment",
			"education",
			"skills",
			"media",
			"news",
			"online",
			"development"
		],
		"y": 9.42354753497657,
		"x": -1.3680815685904115,
		"extended": "Great article on the crossover between hack-ish and hacker-ish skillsets. very pertinent....\n",
		"description": "MediaShift . Digging Deeper::Web Focus Leads Newspapers to Hire Programmers for Editorial Staff | PBS",
		"time": "2007-03-09T17:30:06Z",
		"href": "http://www.pbs.org/mediashift/2007/03/digging_deeperthe_geek_in_the_1.html"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"iTunes",
			"web",
			"editorial",
			"promotion",
			"sales",
			"business"
		],
		"y": -8.404255821352175,
		"x": 5.010793760479816,
		"extended": "Article on Apple's editorial processes on the iTunes store, and the extent to which their promotional decisions can affect sales.\n",
		"description": "Music's New Gatekeeper - WSJ.com",
		"time": "2007-03-09T17:29:08Z",
		"href": "http://online.wsj.com/public/article/SB117340340327331757-OZTwdOgBiRz0flPHET_MBcnOfmc_20080308.html?mod=tff_main_tff_top"
	},
	{
		"cluster": 2,
		"tags": [
			"rss",
			"rdf",
			"web",
			"dublincore",
			"semantic",
			"prism",
			"metadata",
			"syndication"
		],
		"y": 1.8814784956797732,
		"x": 2.4600786063779174,
		"extended": "Enriching metadata in a RSS 1.0 feed using Dublin Core and PRISM.\n",
		"description": "XML.com: Why Choose RSS 1.0?",
		"time": "2007-03-07T17:38:01Z",
		"href": "http://www.xml.com/pub/a/2003/07/23/rssone.html"
	},
	{
		"cluster": 2,
		"tags": [
			"screescraping",
			"ruby",
			"rails",
			"web",
			"to_blog"
		],
		"y": 9.60381996133821,
		"x": -7.526142511577009,
		"extended": "Excellent tutorial on Screen Scraping with Ruby - I'm tentatively planning to make a little app to scrape data on books from the bbc site and transform it into some sort of RDF format, so this should prove to be useful...\n",
		"description": "Ruby, Rails, Web2.0 » Data extraction for Web 2.0: Screen scraping in Ruby/Rails",
		"time": "2007-03-07T14:04:20Z",
		"href": "http://www.rubyrailways.com/data-extraction-for-web-20-screen-scraping-in-rubyrails"
	},
	{
		"cluster": 12,
		"tags": [
			"job",
			"web",
			"design",
			"development"
		],
		"y": 9.60231581919224,
		"x": 0.6574800456264958,
		"extended": "a web development job advertised in the Guardian\n",
		"description": "ITSR91348 Web Developer(v)",
		"time": "2007-02-21T23:46:37Z",
		"href": "http://jobs.guardian.co.uk/browse/it-and-telecoms/internet/vacancy-itsr91348.html"
	},
	{
		"cluster": 12,
		"tags": [
			"javascript",
			"css",
			"design",
			"development",
			"web",
			"html",
			"corners"
		],
		"y": 10.550579273436172,
		"x": 0.2594785210473922,
		"extended": "A JS library for creating boxes with rounded corners\n",
		"description": "curvyCorners - [Usage].",
		"time": "2007-02-21T23:45:48Z",
		"href": "http://www.curvycorners.net/usage.php"
	},
	{
		"cluster": 12,
		"tags": [
			"job",
			"development",
			"career",
			"web",
			"design"
		],
		"y": 9.67567239138314,
		"x": 0.6634701649350468,
		"extended": "Web development job from Guardian jobs\n",
		"description": "ITSR90763 Front End Developer(v)",
		"time": "2007-02-21T23:38:03Z",
		"href": "http://jobs.guardian.co.uk/browse/it-and-telecoms/internet/vacancy-itsr90763.html"
	},
	{
		"cluster": 1,
		"tags": [
			"drum",
			"sample",
			"break",
			"loop",
			"music"
		],
		"y": -9.290424384457175,
		"x": 4.379895386310583,
		"extended": "Tons of drum breaks from old funk and soul records.\n",
		"description": "Bourbon Breaks",
		"time": "2007-02-19T11:45:18Z",
		"href": "http://www.rah.gq.nu/bourbon/breaks1.html"
	},
	{
		"cluster": 2,
		"tags": [
			"wordpress",
			"bbpress",
			"404",
			"mod_rewrite",
			"integration",
			"webdevelopment",
			"web",
			"http"
		],
		"y": 7.13328847620142,
		"x": 2.4746964279455517,
		"extended": "More on wordpress / bbpress integration.. including a fix for spurious 404 headers\n",
		"description": "External Files Causing a WordPress 404 Error? | Ardamis.com",
		"time": "2007-02-12T12:58:55Z",
		"href": "http://www.ardamis.com/2006/07/10/wordpress-googlebot-404-error/"
	},
	{
		"cluster": 2,
		"tags": [
			"wordpress",
			"gallery",
			"plugin",
			"image",
			"photo",
			"blog",
			"webdevelopment",
			"web",
			"software"
		],
		"y": 2.8536582457014448,
		"x": 3.095757160850171,
		"extended": "A wordpress image gallery plugin\n",
		"description": "//WP plugin: ANIga gallery//animalbeach.net",
		"time": "2007-01-31T15:15:30Z",
		"href": "http://www.animalbeach.net/aniga/#con10"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"design",
			"development",
			"howto",
			"html",
			"xhtml",
			"list",
			"web"
		],
		"y": 10.561308111721715,
		"x": 0.45724747484004674,
		"extended": "Working with lists in XHTML and CSS\n",
		"description": "A List Apart: Articles: CSS Design: Taming Lists",
		"time": "2007-01-28T16:33:56Z",
		"href": "http://alistapart.com/articles/taminglists/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"development",
			"design",
			"web",
			"float",
			"hack",
			"howto"
		],
		"y": 10.43258132733834,
		"x": 0.6164541969985672,
		"extended": "Clearing floats in CSS\n",
		"description": "Clearing floated images in body text | 456 Berea Street",
		"time": "2007-01-28T16:33:11Z",
		"href": "http://www.456bereastreet.com/archive/200412/clearing_floated_images_in_body_text/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"xhtml",
			"float",
			"web",
			"design",
			"development",
			"hack",
			"howto"
		],
		"y": 10.470972554944616,
		"x": 0.579995182145967,
		"extended": "Clearing floats with CSS\n",
		"description": "Clearing a float container without source markup",
		"time": "2007-01-28T16:31:46Z",
		"href": "http://www.positioniseverything.net/easyclearing.html"
	},
	{
		"cluster": 2,
		"tags": [
			"wordpress",
			"bbpress",
			"theme",
			"development",
			"php",
			"login"
		],
		"y": 7.232318247137557,
		"x": 2.4067412575195055,
		"extended": "Integrating Wordpress and BBpress\n",
		"description": "Bui4Ever.com » How To Integrate WordPress and BBPress",
		"time": "2007-01-28T16:30:44Z",
		"href": "http://www.bui4ever.com/web-itecture/how_to_integrate_wordpress_and_bbpress/"
	},
	{
		"cluster": 2,
		"tags": [
			"bbpress",
			"wordpress",
			"development",
			"integration",
			"login",
			"php"
		],
		"y": 7.217693992548925,
		"x": 2.4162888700495864,
		"extended": "Guide to integrating Wordpress and bbPress themes\n",
		"description": "aadityavat.h » Blog Archive » bbPress & WP Theme Integration",
		"time": "2007-01-28T16:29:51Z",
		"href": "http://www.adityanaik.com/blog/bbpress-and-wordpress-integration/"
	},
	{
		"cluster": 2,
		"tags": [
			"bbpress",
			"forum",
			"avatar",
			"software",
			"plugin"
		],
		"y": -2.165641875349533,
		"x": 4.727107324030504,
		"extended": "Add support for Avatars to BBpress\n",
		"description": "Avatar Plugin for BBPress",
		"time": "2007-01-28T16:29:01Z",
		"href": "http://faq.rayd.org/bbpress_avatar/"
	},
	{
		"cluster": 1,
		"tags": [
			"acapella",
			"spankrock",
			"music"
		],
		"y": -9.39030345991172,
		"x": 4.303027726361456,
		"extended": "Spank Rock Acapellas\n",
		"description": "Index of /accaps",
		"time": "2007-01-23T15:04:14Z",
		"href": "http://spankrock.net/accaps/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"design",
			"development",
			"web",
			"inheritance",
			"oop"
		],
		"y": 10.296243097606272,
		"x": 0.5366752933033004,
		"extended": "great difference on the difference between CSS selectors and OOP principles - discussion of inheritence in CSS.\n",
		"description": "CSS Inheritance (Dorward Online)",
		"time": "2007-01-18T18:25:17Z",
		"href": "http://dorward.me.uk/www/css/inheritance/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"inheritance",
			"web",
			"design",
			"development"
		],
		"y": 10.261973095050102,
		"x": 0.5378590848850696,
		"extended": "CSS Inheritance tutorial\n",
		"description": "SimpleBits ~ CSS Inheritance",
		"time": "2007-01-18T18:24:15Z",
		"href": "http://www.simplebits.com/notebook/2003/04/15/css_inheritance.html"
	},
	{
		"cluster": 12,
		"tags": [
			"blog",
			"wordpress",
			"seo",
			"plugin",
			"development",
			"web",
			"optimisation",
			"search",
			"google"
		],
		"y": 10.318136058060803,
		"x": -4.824835106233014,
		"extended": "SEO tips for Wordpress sites\n",
		"description": "Devlounge | Plugins for a Search Engine Friendly WordPress Blog",
		"time": "2007-01-18T18:21:32Z",
		"href": "http://www.devlounge.net/articles/plugins-for-a-search-engine-friendly-wordpress-blog"
	},
	{
		"cluster": 12,
		"tags": [
			"headshit",
			"web",
			"design",
			"development",
			"job"
		],
		"y": 9.675672396666016,
		"x": 0.663470163875568,
		"extended": "Job opportunity at Headshift\n",
		"description": "Headshift :: An Opportunity to make it happen",
		"time": "2007-01-18T18:20:29Z",
		"href": "http://www.headshift.com/archives/003089.cfm"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"javascript",
			"xhtml",
			"web",
			"development",
			"design"
		],
		"y": 10.437522810296134,
		"x": 0.30065304256072595,
		"extended": "",
		"description": "Transparent custom corners and borders, version 2 | 456 Berea Street",
		"time": "2007-01-03T17:42:49Z",
		"href": "http://www.456bereastreet.com/archive/200609/transparent_custom_corners_and_borders_version_2/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"javascript",
			"xhtml",
			"web",
			"development",
			"design"
		],
		"y": 10.432412907164158,
		"x": 0.31441260790219844,
		"extended": "",
		"description": "Automatic pullquotes with JavaScript and CSS | 456 Berea Street",
		"time": "2007-01-03T17:42:29Z",
		"href": "http://www.456bereastreet.com/archive/200609/automatic_pullquotes_with_javascript_and_css/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"design",
			"development",
			"positioning",
			"web",
			"tutorial"
		],
		"y": 10.364842192260882,
		"x": 0.6450430914780683,
		"extended": "great css positioning tutorial\n",
		"description": "Stopdesign | Making the Absolute, Relative",
		"time": "2006-12-28T13:21:21Z",
		"href": "http://www.stopdesign.com/articles/absolute/"
	},
	{
		"cluster": 16,
		"tags": [
			"database",
			"model",
			"data",
			"schema",
			"diagram",
			"rails",
			"ruby",
			"rubyonrails"
		],
		"y": 0.9795800934397355,
		"x": 0.1696128733461575,
		"extended": "A diagram of  Ruby on Rails data model relationship functionality.\n",
		"description": "Data Model Relationships Diagram",
		"time": "2006-12-20T14:04:16Z",
		"href": "http://www.rubyonrailsblog.com/articles/2006/10/24/data-model-relationships-diagram"
	},
	{
		"cluster": 12,
		"tags": [
			"development",
			"semantic",
			"semanticweb",
			"web",
			"rdf",
			"owl"
		],
		"y": 2.0408300647473685,
		"x": 2.3344607941372635,
		"extended": "Brief introduction to semantic web principles and technologies\n",
		"description": "The Semantic Web: Everything you wanted to know but were too afraid to ask. - O'Reilly XML Blog",
		"time": "2006-12-19T18:08:54Z",
		"href": "http://www.oreillynet.com/xml/blog/2006/12/the_semantic_web_everything_yo.html"
	},
	{
		"cluster": 7,
		"tags": [
			"web",
			"development",
			"webdevelopment",
			"webdev",
			"webdesign",
			"ruby",
			"rails",
			"rubyonrails"
		],
		"y": 10.40147371506987,
		"x": -7.540276842558353,
		"extended": "Nice gallery of Rails webapps\n",
		"description": "HappyCodr: Ruby on Rails Showcase",
		"time": "2006-12-19T18:08:05Z",
		"href": "http://happycodr.com/?page=2"
	},
	{
		"cluster": 2,
		"tags": [
			"mencoder",
			"encode",
			"video",
			"xvid",
			"theora",
			"mplayer",
			"convert",
			"compress",
			"HOWTO",
			"guide",
			"computers",
			"audio",
			"digital",
			"multimedia",
			"media",
			"Software",
			"tools",
			"tutorial"
		],
		"y": -4.0166863316332,
		"x": 3.6755964609316427,
		"extended": "Good intro to compiling and using mencoder.\n",
		"description": "HOWTO Mencoder Introduction Guide - Gentoo Linux Wiki",
		"time": "2006-12-02T11:07:51Z",
		"href": "http://gentoo-wiki.com/HOWTO_Mencoder_Introduction_Guide"
	},
	{
		"cluster": 7,
		"tags": [
			"google",
			"googlemaps",
			"rails",
			"ruby",
			"rubyonrails",
			"maps",
			"postcode",
			"uk",
			"location",
			"geolocation",
			"geotagging",
			"geo",
			"development",
			"dev",
			"webdevelopment",
			"webdev",
			"programming"
		],
		"y": 8.509315441841013,
		"x": -7.368959557877674,
		"extended": "Incorporating Google maps into Rails apps with cartographer\n",
		"description": "Using Google Maps in the UK with Rails",
		"time": "2006-11-24T16:36:43Z",
		"href": "http://iamrice.org/articles/2005/12/09/using-google-maps-in-the-uk-with-rails"
	},
	{
		"cluster": 7,
		"tags": [
			"geocoding",
			"geotagging",
			"google",
			"googlemaps",
			"rails",
			"ruby",
			"rubyonrails",
			"hack",
			"location",
			"gelocation",
			"development",
			"dev",
			"webdevelopment",
			"webdev",
			"programming"
		],
		"y": 8.527494823111908,
		"x": -7.371878810265043,
		"extended": "Useful bit of Ruby code that leverages Google Maps to convert UK Post Codes to  Lat and Long coordiantes\n",
		"description": "UK post code to latitude/longitude snippet",
		"time": "2006-11-24T16:35:24Z",
		"href": "http://iamrice.org/articles/2005/12/01/uk-post-code-to-latitude-longitude-snippet"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"rubyonrails",
			"tag",
			"tagging",
			"tags",
			"folksonomy",
			"tutorial",
			"HOWTO",
			"development",
			"dev",
			"webdevelopment",
			"webdev",
			"programming"
		],
		"y": 10.903092759387135,
		"x": -8.128351322293579,
		"extended": "Simple Tagging in RoR\n",
		"description": "Using Tagging in your Ruby on Rails Application - Tech-Recipes.com",
		"time": "2006-11-24T16:32:10Z",
		"href": "http://www.tech-recipes.com/rx/1629/using_tagging_in_your_ruby_on_rails_application"
	},
	{
		"cluster": 7,
		"tags": [
			"database",
			"development",
			"dev",
			"webdevelopment",
			"webdev",
			"ruby",
			"rubyonrails",
			"rails",
			"tutorial",
			"howto",
			"programming",
			"guide",
			"reference"
		],
		"y": 10.912882682100115,
		"x": -8.107645179756926,
		"extended": "Comprehensive tutorial on using migrations in RoR, including list of accepted datatypes\n",
		"description": "UsingMigrations in Ruby on Rails",
		"time": "2006-11-24T14:00:41Z",
		"href": "http://wiki.rubyonrails.org/rails/pages/UsingMigrations"
	},
	{
		"cluster": 7,
		"tags": [
			"rails",
			"ruby",
			"rubyonrails",
			"sql",
			"database",
			"dev",
			"development",
			"webdevelopment",
			"webdev",
			"howto",
			"tutorial",
			"introduction",
			"programming",
			"web"
		],
		"y": 10.902781640210153,
		"x": -8.089847248912333,
		"extended": "an introduction to using migrate to build database tables in rails\n",
		"description": "Godbit Project | Beginners Guide to Rails, part 1",
		"time": "2006-11-24T13:59:34Z",
		"href": "http://godbit.com/article/beginners-guide-to-rails-part-1"
	},
	{
		"cluster": 7,
		"tags": [
			"dev",
			"development",
			"HOWTO",
			"model",
			"programming",
			"reference",
			"relationships",
			"ruby",
			"rubyonrails",
			"rails",
			"software",
			"webdev",
			"sql",
			"database",
			"tutorial",
			"web",
			"tutorials",
			"web2.0"
		],
		"y": 10.931801999256498,
		"x": -8.111530175500286,
		"extended": "A comparison of methods for producing many-to-many database relationships in Rails.\n",
		"description": "Many-to-many Dance-off!",
		"time": "2006-11-24T13:58:21Z",
		"href": "http://blog.hasmanythrough.com/articles/2006/04/20/many-to-many-dance-off"
	},
	{
		"cluster": 12,
		"tags": [
			"community",
			"css",
			"Design",
			"news",
			"rss",
			"webdevelopment",
			"webdesign",
			"webdev",
			"web2.0",
			"blogblogs",
			"web",
			"development",
			"programming",
			"html"
		],
		"y": 11.214287084479766,
		"x": 0.7388629128029311,
		"extended": "Good selection of web development related blogs.\n",
		"description": "9rules — Browse: Read anything about everything",
		"time": "2006-11-23T15:40:29Z",
		"href": "http://9rules.com/en/browse/design/"
	},
	{
		"cluster": 11,
		"tags": [
			"apple",
			"mail",
			"plugins",
			"plugin",
			"Software",
			"mac",
			"osx",
			"list",
			"pim",
			"ical",
			"email"
		],
		"y": -3.6701722374096506,
		"x": 7.562473974019192,
		"extended": "Lots of useful apps to extend Apple Mail\n",
		"description": "Hawk Wings - Plug-ins for Apple Mail",
		"time": "2006-11-16T20:39:38Z",
		"href": "http://www.hawkwings.net/plugins.htm"
	},
	{
		"cluster": 11,
		"tags": [
			"PIM",
			"CRM",
			"mac",
			"osx",
			"apple",
			"iCal",
			"Mail",
			"calendar",
			"contacts",
			"todo",
			"email",
			"productivity",
			"organisation",
			"software"
		],
		"y": -3.699847873021306,
		"x": 7.591953420871355,
		"extended": "A pseudo-PIM for Mac OS X that integrates iCal, Address Book and Mail into one interface, with added bells and whistles.\n",
		"description": "Overview",
		"time": "2006-11-16T17:06:26Z",
		"href": "http://www.crm4mac.com/page1/page1.html"
	},
	{
		"cluster": 11,
		"tags": [
			"ical",
			"apple",
			"mac",
			"google",
			"calendar",
			"osx",
			"synchronise",
			"synch",
			"software"
		],
		"y": -3.6438146397530597,
		"x": 7.532834920855686,
		"extended": "Application to synchronise iCal with google Calendar\n",
		"description": "Full synchronization of iCal and Google Calendar coming via Spanning Sync - The Unofficial Apple Weblog (TUAW)",
		"time": "2006-11-15T13:22:24Z",
		"href": "http://www.tuaw.com/2006/11/01/full-synchronization-of-ical-and-google-calendar-coming-via-span/"
	},
	{
		"cluster": 2,
		"tags": [
			"outlook",
			"pocketpc",
			"windows",
			"mobile",
			"phone",
			"smartphone",
			"software",
			"pda",
			"windowsmobile",
			"ical",
			"google",
			"Calendar",
			"web"
		],
		"y": 9.299922714932682,
		"x": 3.253285928217003,
		"extended": "Windows Mobile software to synchronise google calendar with outlook.\n",
		"description": "CompanionLink for Google Calendar -- synchronize Google Calendar with Outlook and any mobile device.",
		"time": "2006-11-15T13:20:00Z",
		"href": "http://www.companionlink.com/products/companionlinkforgoogle.html"
	},
	{
		"cluster": 2,
		"tags": [
			"syncML",
			"pda",
			"phone",
			"services",
			"calendar",
			"google",
			"application",
			"service",
			"mobile",
			"online"
		],
		"y": -2.661180653305892,
		"x": 4.4669664389638974,
		"extended": "A service that synchronises google calendar with other apps via SyncML\n",
		"description": "Sync your Google Calendar with your cell phone - Lifehacker",
		"time": "2006-11-15T13:18:07Z",
		"href": "http://www.lifehacker.com/software/top/sync-your-google-calendar-with-your-cell-phone-213886.php"
	},
	{
		"cluster": 2,
		"tags": [
			"ftp",
			"sftp",
			"scp",
			"windows",
			"windowsmobile",
			"mobile",
			"phone",
			"smartphone",
			"pda",
			"software"
		],
		"y": 9.301376623506641,
		"x": 3.258600089631202,
		"extended": "sFTP client for Windows Mobile\n",
		"description": "GetIt FTP For Microsoft Pocket PC",
		"time": "2006-11-15T13:13:15Z",
		"href": "http://www.noisette-software.com/products/pocketpc/GetIt/"
	},
	{
		"cluster": 2,
		"tags": [
			"xmlrpc",
			"xml-rpc",
			"blog",
			"blogging",
			"client",
			"software",
			"windows",
			"mobile",
			"windowsmobile",
			"pda",
			"smartphone",
			"phone"
		],
		"y": 9.306875482485372,
		"x": 3.2565557188948584,
		"extended": "XML-RPC blogging client for Windows Mobile\n",
		"description": "Download PicoBlogger for Smartphone 3.0 Free Trial - Simply the best mobile blogging (moblog) application for your windows mobile camera phone. Don\\'t believe us? Try it for yourself and see! - Softpedia",
		"time": "2006-11-15T13:10:41Z",
		"href": "http://handheld.softpedia.com/get/Blog/PicoBlogger-for-Smartphone-14369.shtml"
	},
	{
		"cluster": 2,
		"tags": [
			"geo",
			"gps",
			"review",
			"hardware"
		],
		"y": -2.506727978123006,
		"x": 7.452695735339859,
		"extended": "Review of Holux GPS receiver.\n",
		"description": "Holux GPSlim (GR-236) Review",
		"time": "2006-11-15T10:17:03Z",
		"href": "http://www.pocketgpsworld.com/gr236.php"
	},
	{
		"cluster": 2,
		"tags": [
			"flickr",
			"flickrexport",
			"tagging",
			"geotagging",
			"geolocation",
			"geo",
			"gps",
			"photo",
			"photography",
			"location",
			"map",
			"mapping"
		],
		"y": -2.635129090039899,
		"x": 7.757124483975137,
		"extended": "Blog post on geotagging with flickr and flickrexport\n",
		"description": "Connected Flow Blog » Blog Archive » Flickr, Geotagging and FlickrExport",
		"time": "2006-11-15T10:12:03Z",
		"href": "http://www.connectedflow.com/blog/?p=40"
	},
	{
		"cluster": 11,
		"tags": [
			"application",
			"apple",
			"Geo",
			"geocoding",
			"geotagging",
			"geolocation",
			"gps",
			"location",
			"mapping",
			"maps",
			"metadata",
			"osx",
			"tagging",
			"tag",
			"photo",
			"photography"
		],
		"y": -2.677043991458528,
		"x": 7.832409670833707,
		"extended": "A  Mac OS X app that facilitates adding geodata to photos.\n",
		"description": "GPSPhotoLinker: Overview",
		"time": "2006-11-15T10:03:42Z",
		"href": "http://oregonstate.edu/~earlyj/gpsphotolinker/"
	},
	{
		"cluster": 1,
		"tags": [
			"cardiacs",
			"band",
			"music",
			"rock",
			"indie",
			"alt",
			"punk",
			"alternative"
		],
		"y": -9.576845917689635,
		"x": 4.650822724060424,
		"extended": "A band that Stef reccomended.\n",
		"description": "Cardiacs Official Website » Downloads",
		"time": "2006-11-15T09:59:02Z",
		"href": "http://www.cardiacs.com/downloads/"
	},
	{
		"cluster": 2,
		"tags": [
			"gps",
			"geotagging",
			"geocoding",
			"geo",
			"location",
			"mapping",
			"maps",
			"software",
			"tag",
			"tagging",
			"tags",
			"photography",
			"geolocation"
		],
		"y": -2.6616752209621573,
		"x": 7.8198763304727095,
		"extended": "Useful resource on geotagging photos with GPS.\n",
		"description": "Geocoding Photos",
		"time": "2006-11-15T09:54:32Z",
		"href": "http://www.chebucto.ns.ca/~rakerman/geocode-photos.html"
	},
	{
		"cluster": 2,
		"tags": [
			"gps",
			"geo",
			"geolocation",
			"location"
		],
		"y": -2.5061917649512226,
		"x": 7.465638444031497,
		"extended": "GPS resources\n",
		"description": "G p s P a s S i o n",
		"time": "2006-11-15T09:53:24Z",
		"href": "http://www.gpspassion.com/fr/Default.asp"
	},
	{
		"cluster": 2,
		"tags": [
			"mapping",
			"mpas",
			"mobile",
			"pda",
			"phone",
			"pocketpc",
			"smartphone",
			"windows",
			"wm5",
			"geo",
			"gps",
			"gelocation",
			"location"
		],
		"y": 9.26422731659456,
		"x": 3.278103203421292,
		"extended": "Virtual Earth for Windows Mobile, includs GPS supprt\n",
		"description": "Via Virtual Earth",
		"time": "2006-11-15T09:50:30Z",
		"href": "http://www.viavirtualearth.com/vve/Gallery/VEMobile.ashx"
	},
	{
		"cluster": 2,
		"tags": [
			"google",
			"maps",
			"gps",
			"geo",
			"googlemaps",
			"geolocation",
			"location",
			"mapping",
			"mobile",
			"phone",
			"smartphone",
			"software"
		],
		"y": 9.215436912112619,
		"x": 3.2981793206839396,
		"extended": "Mobile mapping software that uses Google Maps data.\n",
		"description": "Mobile GMaps - Google Maps, Yahoo! Maps and Windows Live Local on your mobile phone!",
		"time": "2006-11-15T09:32:02Z",
		"href": "http://www.mgmaps.com/"
	},
	{
		"cluster": 2,
		"tags": [
			"GPS",
			"mobile",
			"google",
			"maps",
			"googlemaps",
			"mapping",
			"pocketpc",
			"Software",
			"phone",
			"windows",
			"smartphone",
			"pda"
		],
		"y": 9.260837747742674,
		"x": 3.276262860223965,
		"extended": "GPS Mapping program for  Windows Mobile that leverages Google's map data. Download at http://map4pda.com/\n",
		"description": "Map for PDA Phone with LBS and GPS",
		"time": "2006-11-15T09:24:35Z",
		"href": "http://www.mapforpda.com/"
	},
	{
		"cluster": 11,
		"tags": [
			"gps",
			"receiver",
			"geocache",
			"mac",
			"os",
			"x",
			"windows",
			"mobile",
			"windowsmobile"
		],
		"y": -2.438336566703876,
		"x": 7.336322652387144,
		"extended": "Review of a bargain mac and windows mobile compatible GPS reciever.\n",
		"description": "Review :: Holux GPSlim 236 - Mobile Gadget News :: Making Your Windows Mobile Life Simpler",
		"time": "2006-11-15T08:17:00Z",
		"href": "http://www.mobilegadgetnews.com/index.php?showtopic=11646"
	},
	{
		"cluster": 2,
		"tags": [
			"mobile",
			"pda",
			"software",
			"windows",
			"phone",
			"smartphone",
			"network",
			"windowsmobile"
		],
		"y": 9.29766754055105,
		"x": 3.256421443960459,
		"extended": "More useful Windows Mobile software, inc. Network utilities.\n",
		"description": "Cambridge - Windows CE / Windows Mobile / Pocket PC Software",
		"time": "2006-11-15T07:12:12Z",
		"href": "http://www.cam.com/windowsce.html"
	},
	{
		"cluster": 2,
		"tags": [
			"software",
			"windowsmobile",
			"windows",
			"mobile",
			"phone",
			"smartphone",
			"portuguese",
			"education",
			"learning",
			"language",
			"pda"
		],
		"y": 9.30596210438732,
		"x": 3.2562946335461636,
		"extended": "Portuguese language learning tools for Windows Mobile\n",
		"description": "Search results for portuguese - Free Software Downloads and Software Reviews - Download.com",
		"time": "2006-11-15T07:08:18Z",
		"href": "http://www.download.com/3120-20_4-0.html?tg=dl-2005&qt=portuguese&tag=srch"
	},
	{
		"cluster": 2,
		"tags": [
			"utility",
			"software",
			"network",
			"pocketpc",
			"windows",
			"mobile",
			"smartphone",
			"phone"
		],
		"y": 9.29026029852367,
		"x": 3.252304918421162,
		"extended": "Another network diagnostics utility for windows mobile\n",
		"description": "AllHoursIT.com",
		"time": "2006-11-15T07:04:22Z",
		"href": "http://www.allhoursit.com/NetTools.aspx"
	},
	{
		"cluster": 2,
		"tags": [
			"windows",
			"mobile",
			"smartphone",
			"phone",
			"windowsmobile",
			"software",
			"network",
			"utility"
		],
		"y": 9.295246538941392,
		"x": 3.2550295413398653,
		"extended": "Network Utility for Windows Mobile\n",
		"description": "z2 PocketLAN",
		"time": "2006-11-15T06:55:25Z",
		"href": "http://www.z2software.com/PocketLAN.htm"
	},
	{
		"cluster": 2,
		"tags": [
			"text",
			"editor",
			"smartphone",
			"pocketpc",
			"windows",
			"mobile",
			"windowsmobile",
			"phone"
		],
		"y": 9.301186039629348,
		"x": 3.2336298154589245,
		"extended": "Another Windows Mobile text editor\n",
		"description": "notepad mobile / Orneta",
		"time": "2006-11-15T06:01:09Z",
		"href": "http://www.orneta.com/index.php?module=Pagesetter&func=viewpub&tid=2&pid=2"
	},
	{
		"cluster": 18,
		"tags": [
			"pocketpc",
			"mobile",
			"programming",
			"Software",
			"editor",
			"text",
			"windows",
			"phone",
			"smartphone"
		],
		"y": 9.304471017080541,
		"x": 3.207743599675594,
		"extended": "A programmer's text editor for Windows Mobile\n",
		"description": "Logical Sky",
		"time": "2006-11-15T05:47:25Z",
		"href": "http://www.logicalsky.com/"
	},
	{
		"cluster": 11,
		"tags": [
			"mac",
			"GPS",
			"geo",
			"software",
			"free",
			"GNU"
		],
		"y": -2.4745612844982334,
		"x": 7.579798136267878,
		"extended": "Free Mac GPS software\n",
		"description": "FlightTrack home page",
		"time": "2006-11-14T15:03:37Z",
		"href": "http://flighttrack.sourceforge.net/"
	},
	{
		"cluster": 11,
		"tags": [
			"Mac",
			"GPS",
			"software",
			"Geo"
		],
		"y": -2.4809544319344097,
		"x": 7.54669711117906,
		"extended": "GPS software for Mac OS X\n",
		"description": "RouteBuddy V1.1 Premium Mac OSX Mapping Software",
		"time": "2006-11-14T15:00:40Z",
		"href": "http://www.usglobalsat.com/item.asp?itemid=135"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"design",
			"development",
			"webdesign",
			"webdevelopment",
			"webdev",
			"css",
			"html",
			"howto",
			"tutorial",
			"positioning",
			"layout",
			"reference",
			"corner",
			"border"
		],
		"y": 11.410660771141425,
		"x": 0.9321171367344941,
		"extended": "Method for creating corners and borders in CSS\n",
		"description": "A List Apart: Articles: CSS Design: Creating Custom Corners & Borders",
		"time": "2006-11-14T14:50:15Z",
		"href": "http://www.alistapart.com/stories/customcorners/"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"design",
			"development",
			"webdesign",
			"webdevelopment",
			"webdev",
			"css",
			"html",
			"howto",
			"tutorial",
			"positioning",
			"layout",
			"reference"
		],
		"y": 11.374459564184395,
		"x": 0.9100633511628148,
		"extended": "More on CSS-P\n",
		"description": "A List Apart: Articles: Flexible Layouts with CSS Positioning",
		"time": "2006-11-14T14:49:38Z",
		"href": "http://alistapart.com/articles/flexiblelayouts/"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"design",
			"development",
			"webdesign",
			"webdevelopment",
			"webdev",
			"css",
			"html",
			"howto",
			"tutorial",
			"positioning",
			"layout",
			"reference"
		],
		"y": 11.38828350522269,
		"x": 0.9167229556012514,
		"extended": "Succinct CSS-P Tutorial\n",
		"description": "Learn CSS Positioning in Ten Steps: position static relative absolute float",
		"time": "2006-11-14T14:49:10Z",
		"href": "http://www.barelyfitz.com/screencast/html-training/css/positioning/"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"design",
			"html",
			"web",
			"development",
			"webdevelopment",
			"webdesign",
			"webdev",
			"positioningdesign",
			"tutorial",
			"howto",
			"reference"
		],
		"y": 11.352065006761345,
		"x": 0.887448409821913,
		"extended": "W3Schools guide to CSS-P\n",
		"description": "CSS Positioning Properties",
		"time": "2006-11-14T14:48:02Z",
		"href": "http://www.w3schools.com/css/css_positioning.asp"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"html",
			"webdev",
			"design",
			"dev",
			"howto",
			"box",
			"model",
			"boxmodel",
			"webdesign",
			"development",
			"web",
			"webdevelopment",
			"tutorial",
			"reference",
			"positioning"
		],
		"y": 11.42535633087123,
		"x": 0.9449055363095192,
		"extended": "Tutorial on CSS-P and the Box Model.\n",
		"description": "BrainJar.com: CSS Positioning",
		"time": "2006-11-14T14:46:54Z",
		"href": "http://www.brainjar.com/css/positioning/"
	},
	{
		"cluster": 6,
		"tags": [
			"creative",
			"commons",
			"copyright",
			"remix",
			"EMI",
			"web2.0",
			"google",
			"digg",
			"cc",
			"creativecommons"
		],
		"y": -7.399164948323968,
		"x": 3.0813935152746255,
		"extended": "Brief summary of events at Web 2.0 summit, including EMI's David Munns on CC licenses\n",
		"description": "Web 2.0 Summit: the final afternoon from Guardian Unlimited: Technology",
		"time": "2006-11-10T09:00:52Z",
		"href": "http://blogs.guardian.co.uk/technology/archives/2006/11/09/web_20_summit_the_final_afternoon.html#more"
	},
	{
		"cluster": 12,
		"tags": [
			"web",
			"development",
			"architecture",
			"service",
			"oriented",
			"SOA",
			"serviceoriented",
			"application",
			"webapplication",
			"webservices",
			"services",
			"AJAX",
			"network",
			"platform"
		],
		"y": 6.881392950139958,
		"x": -5.7992835130303835,
		"extended": "Interesting article on the future of rich web applications.\n",
		"description": "TechCrunch UK » Blog Archive » Neo-Network Computing & The Service-Oriented Client",
		"time": "2006-11-09T19:11:06Z",
		"href": "http://uk.techcrunch.com/2006/11/09/neo-network-computing-the-service-oriented-client/"
	},
	{
		"cluster": 8,
		"tags": [
			"tv",
			"mobile",
			"internet",
			"crossplatform",
			"television",
			"mobitv",
			"ondemand",
			"braodcast",
			"youtube",
			"tideo",
			"phone"
		],
		"y": -6.436485469911984,
		"x": 1.4208527689814523,
		"extended": "",
		"description": "Thinking About MobiTV’s $100 million",
		"time": "2006-11-03T11:32:33Z",
		"href": "http://www.techcrunch.com/2006/11/03/thinking-about-mobitvs-100-million/"
	},
	{
		"cluster": 2,
		"tags": [
			"firefox:toolbar"
		],
		"y": -2.770705827288409,
		"x": 4.791888205108061,
		"extended": "",
		"description": "ectoize",
		"time": "2006-11-02T18:57:33Z",
		"href": "javascript:%20var%20baseUrl%20=%20'ecto:';%20var%20url=baseUrl;var%20title=document.title;%20url=url%20+%20'title='%20+%20encodeURIComponent(title);%20var%20currentUrl=document.location.href;%20url=url%20+%20'&url='%20+%20encodeURIComponent(currentUrl);%20var%20selectedText;%20selectedText=getSelection();%20if%20(selectedText%20!=%20'')%20url=url%20+%20'&text='%20+%20encodeURIComponent(selectedText);document.location.href=url;"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"artist",
			"community",
			"culture",
			"society",
			"social",
			"awareness",
			"activism",
			"education",
			"responsibility"
		],
		"y": -0.3837764084309598,
		"x": 13.176271632639844,
		"extended": "A selection of resources on combining artistic practice and community-based education and activism from Yes Magazine\n",
		"description": "Art and Community - YES! Magazine - Summer 2002",
		"time": "2006-11-02T18:49:55Z",
		"href": "http://www.yesmagazine.org/default.asp?ID=49"
	},
	{
		"cluster": 6,
		"tags": [
			"design",
			"rights",
			"trademark",
			"copyright",
			"infringement",
			"law",
			"threat",
			"lawyer",
			"scaremongering"
		],
		"y": -3.775746355528944,
		"x": 8.958021548565966,
		"extended": "Adrian from Be A Design Group faces the sharp end of a trademark lawsuit\n",
		"description": "Be A Design Group: My Improper Trade Practices",
		"time": "2006-11-02T06:33:29Z",
		"href": "http://www.beadesigngroup.com/blog/archives/2006/10/corporation_x_is_suing_me.shtml"
	},
	{
		"cluster": 14,
		"tags": [
			"typeface",
			"typography",
			"font",
			"design",
			"piracy",
			"copyright",
			"infringement",
			"sharing"
		],
		"y": -4.742076764675872,
		"x": 6.698962788401624,
		"extended": "Be a Design group's survey on typeface piracy.\n",
		"description": "Graphic Design Surveys: How many of your fonts did you pay for?",
		"time": "2006-11-02T06:13:21Z",
		"href": "http://www.beadesigngroup.com/surveys/2006/10/how_many_of_your_fonts_did_you.php?display_results=1"
	},
	{
		"cluster": 11,
		"tags": [
			"blog",
			"Blogging",
			"hack",
			"howto",
			"tagging",
			"tutorial",
			"wordpress",
			"ecto",
			"UTW",
			"ultimatetagwarrior",
			"plugins",
			"tags",
			"xmlrpc",
			"xml",
			"mac",
			"apple",
			"software",
			"osx",
			"php",
			"folksonomy"
		],
		"y": -5.851108981717449,
		"x": -0.3484741366078195,
		"extended": "Make Ecto play nicely with the Ultimate Tag Warrior plugin for Wordpress.\n",
		"description": "How to make ecto work with Ultimate Tag Warrior » 石锅拌饭 | 互联网 Mac & 软件开发",
		"time": "2006-11-01T13:42:01Z",
		"href": "http://www.robinlu.com/blog/archives/57"
	},
	{
		"cluster": 2,
		"tags": [
			"free",
			"application",
			"software",
			"mobile",
			"phone",
			"windows",
			"pda",
			"pocketpc",
			"smartphone",
			"list",
			"wm5"
		],
		"y": 9.255736464440881,
		"x": 3.2585594228203556,
		"extended": "11 Free Windows Mobile Apps\n",
		"description": "11 Killer Freebies for Your Pocket PC - Lifehacker",
		"time": "2006-10-31T16:34:49Z",
		"href": "http://www.lifehacker.com/software/pocket-pc/11-killer-freebies-for-your-pocket-pc-209413.php"
	},
	{
		"cluster": 11,
		"tags": [
			"phone",
			"pda",
			"windows",
			"mobile",
			"mac",
			"osx",
			"howto",
			"mda",
			"vario",
			"hermes",
			"tmobile"
		],
		"y": 8.446212893945246,
		"x": 3.2455147390816528,
		"extended": "Setting up the MDA Vario II on a mac\n",
		"description": "Finally, mobile Internet in the UK for new Macs at Aral Balkan",
		"time": "2006-10-30T18:34:57Z",
		"href": "http://aralbalkan.com/765"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"htmk",
			"xhtml",
			"web",
			"development",
			"design",
			"screen",
			"standards",
			"webdesign",
			"webdevelopment",
			"www",
			"tutorial",
			"html",
			"hack",
			"reference"
		],
		"y": 11.171212164336039,
		"x": 0.8072276522961651,
		"extended": "The FIR method of replacing text in a web page with an image, using CSS.\n",
		"description": "Stopdesign | Using Background-Image to Replace Text",
		"time": "2006-10-29T23:26:30Z",
		"href": "http://www.stopdesign.com/articles/replace_text/"
	},
	{
		"cluster": 12,
		"tags": [
			"wordpress",
			"theme",
			"design",
			"development",
			"web",
			"html",
			"xhtml",
			"css",
			"php",
			"blog",
			"weblog",
			"HOWTO",
			"tutorial"
		],
		"y": 10.52922612642186,
		"x": 0.4799544037065273,
		"extended": "The anatomy of a wordpress theme\n",
		"description": "UrbanGiraffe » Dissection of a WordPress theme: Part 1",
		"time": "2006-10-25T00:20:08Z",
		"href": "http://www.urbangiraffe.com/2005/04/12/themeguide1/"
	},
	{
		"cluster": 2,
		"tags": [
			"gmail",
			"pop",
			"mail",
			"email",
			"google",
			"pop3",
			"computers"
		],
		"y": -1.163134460258602,
		"x": 4.2082157317238815,
		"extended": "Methods of retrieving gmail messages via POP on multiple devices.\n",
		"description": "gmail pop synchronize multiple clients - Google Groups",
		"time": "2006-10-24T07:13:37Z",
		"href": "http://groups.google.co.uk/groups?q=gmail+pop+synchronize+multiple+clients&hl=en&lr=&sa=X&oi=groups&ct=title"
	},
	{
		"cluster": 2,
		"tags": [
			"imap",
			"gmail",
			"perl",
			"script",
			"hack",
			"pop",
			"email",
			"google",
			"mail",
			"googlemail",
			"software",
			"tools"
		],
		"y": -0.907448854146577,
		"x": 4.1316166887963295,
		"extended": "a perl scrip that provides IMAP access to gmail\n",
		"description": "The Julipedia: IMAP gateway to GMail",
		"time": "2006-10-24T06:38:00Z",
		"href": "http://julipedia.blogspot.com/2006/08/imap-gateway-to-gmail.html"
	},
	{
		"cluster": 9,
		"tags": [
			"debian",
			"linux",
			"peerguardian",
			"moblock",
			"security",
			"software",
			"firewall",
			"p2p",
			"internet"
		],
		"y": -6.346188415780409,
		"x": 4.133084875365969,
		"extended": "peerguardian for linux!\n",
		"description": "moblock-deb: debian packages for moblock and peerguardnf",
		"time": "2006-10-23T08:21:23Z",
		"href": "http://moblock-deb.sourceforge.net/"
	},
	{
		"cluster": 9,
		"tags": [
			"soulseek",
			"p2p",
			"linux",
			"debian",
			"client",
			"slsk"
		],
		"y": -5.219160125673369,
		"x": 4.862847161073849,
		"extended": "A Soulseek client for Linux\n",
		"description": "MuseekOnDebian - Museek+ - Trac",
		"time": "2006-10-23T08:10:13Z",
		"href": "http://www.museek-plus.org/wiki/MuseekOnDebian"
	},
	{
		"cluster": 1,
		"tags": [
			"hiphop",
			"miami",
			"bass",
			"miamibass",
			"records",
			"music",
			"electro",
			"dance",
			"lists",
			"songs",
			"DJ"
		],
		"y": -9.34685370474959,
		"x": 4.490957910077685,
		"extended": "100 Miami Bass records\n",
		"description": "100 Greatest Miami Bass Songs",
		"time": "2006-10-23T06:57:34Z",
		"href": "http://www.digitaldreamdoor.com/pages/best_dance-miami.html"
	},
	{
		"cluster": 9,
		"tags": [
			"azureus",
			"linux",
			"java",
			"software",
			"bittorrent",
			"p2p",
			"torrent"
		],
		"y": -7.8989866746937905,
		"x": 3.8962918547719068,
		"extended": "Running Azureus from the console on a  headless linux box.\n",
		"description": "Console UI - AzureusWiki",
		"time": "2006-10-23T05:47:39Z",
		"href": "http://www.azureuswiki.com/index.php/Console_UI"
	},
	{
		"cluster": 1,
		"tags": [
			"electro",
			"techno",
			"music",
			"mp3",
			"blog",
			"disco",
			"italo",
			"electronic",
			"dance"
		],
		"y": -0.8258587238109344,
		"x": 6.913614053124998,
		"extended": "Fantastic mp3 blog featuring a lot of new electronic records\n",
		"description": "Discobelle.net",
		"time": "2006-10-23T05:36:56Z",
		"href": "http://www.discobelle.net/page/2/"
	},
	{
		"cluster": 8,
		"tags": [
			"free",
			"internet",
			"java",
			"mda",
			"mobile",
			"smartphone",
			"phone",
			"windows",
			"TTY",
			"telnet",
			"putty",
			"ssh",
			"wm5"
		],
		"y": 9.119584162938017,
		"x": 3.2622900640835657,
		"extended": "A port of PuTTY to the Windows Mobile platform\n",
		"description": "PocketPuTTY Homepage",
		"time": "2006-10-20T17:11:41Z",
		"href": "http://www.pocketputty.net/"
	},
	{
		"cluster": 11,
		"tags": [
			"mac",
			"os",
			"x",
			"skin",
			"osx",
			"windows",
			"mobile",
			"wm5",
			"theme",
			"mda",
			"vario",
			"phone",
			"smartphone"
		],
		"y": 8.520562791104531,
		"x": 3.2494551157698655,
		"extended": "A Mac Os X style skin for Windows Mobile 5\n",
		"description": "MoDaCo -> Download Manager -> QVGA Computer -> WM5 iPhone OSX Skin",
		"time": "2006-10-20T17:04:23Z",
		"href": "http://www.modaco.com/index.php?automodule=downloads&showfile=1408#"
	},
	{
		"cluster": 6,
		"tags": [
			"textz",
			"library",
			"search",
			"p2p",
			"copyright",
			"text",
			"academic",
			"reading",
			"reference"
		],
		"y": -2.643373939613869,
		"x": 6.30902487616987,
		"extended": "Textz.com public beta\n",
		"description": "textz.com",
		"time": "2006-10-12T22:26:46Z",
		"href": "http://textz.com/4ca9d3dcd2b6843e62d75eb191887cf2/"
	},
	{
		"cluster": 9,
		"tags": [
			"admin",
			"debian",
			"HOWTO",
			"install",
			"java",
			"linux",
			"sun",
			"reference",
			"sarge",
			"tutorial",
			"software"
		],
		"y": -5.358303902822335,
		"x": 3.3837722541458866,
		"extended": "Installing Java on Debian with dpkg\n",
		"description": "How to Install Sun Java on Debian",
		"time": "2006-10-11T17:21:36Z",
		"href": "http://www.crazysquirrel.com/computing/debian/java.jspx"
	},
	{
		"cluster": 9,
		"tags": [
			"screen",
			"linux",
			"howto",
			"cli",
			"command",
			"line",
			"tools",
			"sysadmin",
			"system",
			"admin",
			"shell",
			"unix"
		],
		"y": -5.764442331999583,
		"x": 3.2752405334201926,
		"extended": "tutorial for the Linux command-line tool\n",
		"description": "How to use screen on linux. rackAID",
		"time": "2006-10-11T15:49:48Z",
		"href": "http://www.rackaid.com/resources/tips/linux-screen.cfm"
	},
	{
		"cluster": 2,
		"tags": [
			"IDE",
			"harddrive",
			"hard",
			"drive",
			"PC",
			"component",
			"Seagate",
			"160gb"
		],
		"y": -2.8537835817240462,
		"x": 5.024114278944286,
		"extended": "cheap 160gb IDE hard drive\n",
		"description": "ebuyer.com - HardDrives & Storage » Hard Drives » IDE 20GB - 160GB » Product details",
		"time": "2006-10-11T14:29:57Z",
		"href": "http://www.ebuyer.com/UK/product/97513"
	},
	{
		"cluster": 2,
		"tags": [
			"monitor",
			"xerox",
			"lcd",
			"19inch"
		],
		"y": -2.856397741562986,
		"x": 5.00871576972663,
		"extended": "cheap 19\" widescreet monitor\n",
		"description": "ebuyer.com - Monitors » Monitors » .TFT LCD Flat Panel 19\" » Product details",
		"time": "2006-10-11T14:20:43Z",
		"href": "http://www.ebuyer.com/customer/products/index.html?action=c2hvd19wcm9kdWN0X292ZXJ2aWV3&product_uid=118009&_LOC=UK"
	},
	{
		"cluster": 11,
		"tags": [
			"apple",
			"computer",
			"linux",
			"ppc",
			"virtualisation",
			"computers",
			"mac",
			"osx",
			"ubuntu",
			"emulator"
		],
		"y": -5.986716120065525,
		"x": 5.830731755823307,
		"extended": "Software to run Mac OS X as a virtualised client OS from within Linux on PPC.\n",
		"description": "Mac-on-Linux",
		"time": "2006-10-11T13:35:50Z",
		"href": "http://www.maconlinux.org/"
	},
	{
		"cluster": 11,
		"tags": [
			"video",
			"apple",
			"mac",
			"osx",
			"reference",
			"software",
			"download",
			"computer",
			"tools",
			"dvd"
		],
		"y": -3.4169934061999787,
		"x": 7.005844512537323,
		"extended": "Guide to useful video software for mac os x\n",
		"description": "Pure Mac: Video - Software for Macintosh",
		"time": "2006-10-08T15:04:25Z",
		"href": "http://www.pure-mac.com/video.html"
	},
	{
		"cluster": 9,
		"tags": [
			"wikipedia",
			"ipod",
			"linux",
			"hack",
			"encyclopedia"
		],
		"y": -4.333255779198371,
		"x": 4.837785647420692,
		"extended": "make your ipod into a portable wikipedia\n",
		"description": "Encyclopodia - the encyclopedia on your iPod",
		"time": "2006-09-14T17:27:55Z",
		"href": "http://encyclopodia.sourceforge.net/en/index.html"
	},
	{
		"cluster": 6,
		"tags": [
			"creative",
			"commons",
			"creativecommons",
			"copyright",
			"copyleft",
			"CC",
			"ND",
			"NC",
			"Noderivs",
			"Noncommercial",
			"sunset",
			"founderscopyright",
			"founders",
			"copyfighters",
			"free",
			"culture",
			"term",
			"freeCulture",
			"freedom"
		],
		"y": -7.472096825305279,
		"x": 3.116826923445622,
		"extended": "Free Software Magazine article arguing for 'Sunset Clauses' in Creatice Commons NC / ND licenses.\n",
		"description": "The case for a Creative Commons 'sunset' Non-Commercial license module | Free Software Magazine",
		"time": "2006-09-13T09:45:53Z",
		"href": "http://www.freesoftwaremagazine.com/node/1566"
	},
	{
		"cluster": 8,
		"tags": [
			"advertising",
			"business",
			"model",
			"business_models",
			"models",
			"entrepreneurship",
			"startup",
			"web",
			"marketing",
			"internet",
			"online",
			"development",
			"management"
		],
		"y": 7.989923872779779,
		"x": 1.053515361531482,
		"extended": "a comprehensive list of different business models that could be applied to online businesses.\n",
		"description": "Business Models on the Web | Professor Michael Rappa",
		"time": "2006-09-12T11:11:23Z",
		"href": "http://digitalenterprise.org/models/models.html"
	},
	{
		"cluster": 2,
		"tags": [
			"apache2",
			"debian",
			"subversion",
			"HOWTO",
			"install",
			"configure"
		],
		"y": -4.639228677099045,
		"x": 4.371318091698747,
		"extended": "using subversion on debian with apache2\n",
		"description": "Debian Sarge + Apache 2 + Subversion",
		"time": "2006-09-10T20:07:38Z",
		"href": "http://mattl.co.uk/apache2subversiondebianhowto.html"
	},
	{
		"cluster": 9,
		"tags": [
			"webalizer",
			"debian",
			"linux",
			"config"
		],
		"y": -5.23026555201143,
		"x": 4.895697628520688,
		"extended": "configuring webalizer on debian\n",
		"description": "Webalizer Configuration",
		"time": "2006-09-10T20:07:08Z",
		"href": "http://www.debianhelp.co.uk/webalizer.htm"
	},
	{
		"cluster": 19,
		"tags": [
			"apache",
			"debian",
			"server",
			"ruby",
			"rails",
			"rubyonrails",
			"linux",
			"setup",
			"admin",
			"HOWTO",
			"tutorial",
			"sysadmin"
		],
		"y": -6.439606942801109,
		"x": 3.8934979527899527,
		"extended": "HOWTO set up an apache / debian / rails server\n",
		"description": "Debian Sarge (3.1) with Ruby on Rails and Apache 2 with FastCGI - Page 6 | HowtoForge - Linux Howtos and Tutorials",
		"time": "2006-08-30T16:35:25Z",
		"href": "http://www.howtoforge.com/ruby_on_rails_apache2_fastcgi_debian_p6"
	},
	{
		"cluster": 7,
		"tags": [
			"admin",
			"rails",
			"programming",
			"version",
			"control",
			"svn",
			"subversion",
			"ruby",
			"rubyonrails",
			"web",
			"tutorial",
			"HOWTO",
			"development",
			"dev",
			"webdev"
		],
		"y": 10.856970244392585,
		"x": -8.091819994505377,
		"extended": "Using SVN for version control with Rails apps.\n",
		"description": "Maniacal Rage. Here's how I create a...(12 April, 2006)",
		"time": "2006-08-30T16:34:07Z",
		"href": "http://maniacalrage.net/past/2006/4/12/heres_how_i_create_a/"
	},
	{
		"cluster": 7,
		"tags": [
			"GUID",
			"UUID",
			"ruby",
			"rails",
			"library",
			"development",
			"indieexchange"
		],
		"y": 9.1413701641191,
		"x": -8.734305945035647,
		"extended": "Library for creatnig GUIDs in Ruby\n",
		"description": "RAA - ruby-guid",
		"time": "2006-08-26T20:01:23Z",
		"href": "http://raa.ruby-lang.org/project/ruby-guid/"
	},
	{
		"cluster": 2,
		"tags": [
			"ticket",
			"trade",
			"buy",
			"sell",
			"indieexchange",
			"sports"
		],
		"y": -2.8686708372087075,
		"x": 5.03528751553976,
		"extended": "Site allowing sports fans to trade tickets to events\n",
		"description": "Buy Sports Tickets, Sell Sports Tickets --",
		"time": "2006-08-26T20:00:23Z",
		"href": "http://www.wcticketexchange.com/"
	},
	{
		"cluster": 7,
		"tags": [
			"folksonomy",
			"tag",
			"ruby",
			"rails",
			"web",
			"webdevelopment",
			"development",
			"programming",
			"indieExchange"
		],
		"y": 9.638631917270128,
		"x": -7.532276238172024,
		"extended": "guide to implementing folksonomic taggings systems with Ruby on Rails\n",
		"description": "Easy Tagging with Rails",
		"time": "2006-08-26T19:59:10Z",
		"href": "http://dema.ruby.com.br/articles/2005/08/27/easy-tagging-with-rails"
	},
	{
		"cluster": 2,
		"tags": [
			"geolocation",
			"API",
			"webservice",
			"webservices",
			"indieexchange",
			"development",
			"webdevelopment",
			"location",
			"postcode",
			"coordinates"
		],
		"y": -2.487645116063284,
		"x": 7.306092387280151,
		"extended": "Nearby.org.uk - an API for converting UK postcodes to coordinates.\n",
		"description": "Nearby.org.uk - Location Searches - Points of Interest - UK - GB and Ireland",
		"time": "2006-08-26T19:37:48Z",
		"href": "http://www.nearby.org.uk/"
	},
	{
		"cluster": 7,
		"tags": [
			"indieexchange",
			"ruby",
			"rails",
			"lucene",
			"ferret",
			"search",
			"location",
			"development",
			"dev",
			"web",
			"webdevelopment"
		],
		"y": 9.944687846279972,
		"x": -7.474051053872795,
		"extended": "Using Ferret and Ruby on Rails to perform location based searches. Ferret is a Ruby port of the Apache Lucene project. Toub.us is  a social networking site for live music fans\n",
		"description": "tourb.us blog » Ferret and Location-based Searches",
		"time": "2006-08-26T19:32:14Z",
		"href": "http://blog.tourb.us/archives/ferret-and-location-based-searches/"
	},
	{
		"cluster": 7,
		"tags": [
			"guide",
			"howto",
			"programming",
			"Rails",
			"reference",
			"ruby",
			"rubyonrails",
			"Software",
			"Technology",
			"tutorial",
			"tutorials",
			"webdesign",
			"webdevelopment",
			"web",
			"webdev",
			"indieexchange"
		],
		"y": 10.884074994977846,
		"x": -7.99855521205935,
		"extended": "A list of introcutiry articles to Ruby on Rails\n",
		"description": "Top 12 Ruby on Rails Tutorials",
		"time": "2006-08-26T19:27:09Z",
		"href": "http://www.digitalmediaminute.com/article/1816/top-ruby-on-rails-tutorials"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"rails",
			"howto",
			"tutorial",
			"authentication",
			"indieexchange",
			"web",
			"development",
			"webdev",
			"programming",
			"computers",
			"rubyonrails",
			"server",
			"tutorials",
			"webdevelopment"
		],
		"y": 10.787852026124446,
		"x": -7.924955710635507,
		"extended": "HOWTO setup a basic user authentication system with ruby on rails\n",
		"description": "Basic User Authentication in Rails | aidanf.net",
		"time": "2006-08-26T18:36:18Z",
		"href": "http://www.aidanf.net/rails_user_authentication_tutorial"
	},
	{
		"cluster": 7,
		"tags": [
			"design",
			"development",
			"programming",
			"Sotware",
			"database",
			"SQL",
			"access",
			"mySQL",
			"structures",
			"tutorial"
		],
		"y": 3.119542552143502,
		"x": -2.2252031942591284,
		"extended": "Interesting database design tutorial\n",
		"description": "Design and create a relational database",
		"time": "2006-08-26T16:43:49Z",
		"href": "http://www.campus.ncl.ac.uk/databases/design/"
	},
	{
		"cluster": 2,
		"tags": [
			"quickReference",
			"",
			"reference",
			"cheatsheet",
			"webdev",
			"computers",
			"Computer",
			"xhtml",
			"css",
			"javascript",
			"HTML",
			"Ruby",
			"Rails",
			"rubyonrails",
			"SQL",
			"mysql",
			"HOWTO"
		],
		"y": 7.791188590571637,
		"x": -11.174932931781878,
		"extended": "Various quick reference 'cheat sheets' for various programming and computer related subjects, inc HTML, SQL, Ruby on Rails, CSS and Javascript.\n",
		"description": "HTML Character Entities Cheat Sheet - Cheat Sheets - ILoveJackDaniels.com",
		"time": "2006-08-26T11:24:46Z",
		"href": "http://www.ilovejackdaniels.com/cheat-sheets/"
	},
	{
		"cluster": 7,
		"tags": [
			"ruby",
			"book",
			"books",
			"ComputerScience",
			"development",
			"programming",
			"algorithms",
			"design",
			"patterns",
			"data",
			"structures"
		],
		"y": 4.130972093907448,
		"x": -10.572360564087203,
		"extended": "A web book on data structures and algorithms in Ruby.\n",
		"description": "Data Structures and Algorithms with Object-Oriented Design Patterns in Ruby",
		"time": "2006-08-16T17:03:32Z",
		"href": "http://www.brpreiss.com/books/opus8/"
	},
	{
		"cluster": 6,
		"tags": [
			"publicDomain",
			"freeCulture",
			"IP",
			"copyright",
			"freeCultureUK",
			"registry",
			"sound",
			"recordings",
			"domain",
			"free",
			"open",
			"public"
		],
		"y": -3.717374320148642,
		"x": 9.065575034181773,
		"extended": "The Public Domain Burn project aims to create a registry of public domain works - starting with sound recordings.\n",
		"description": "FrontPage - Public Domain Works DB [alpha]",
		"time": "2006-08-09T10:34:45Z",
		"href": "http://www.publicdomainworks.net/"
	},
	{
		"cluster": 12,
		"tags": [
			"2.0",
			"computers",
			"development",
			"HOWTO",
			"html",
			"intro",
			"javascript",
			"tutorial",
			"tutorials",
			"web",
			"web2.0",
			"xml",
			"ajax",
			"programming",
			"webdevelopment",
			"webdev",
			"HelloWorld"
		],
		"y": 10.581084103374018,
		"x": -3.7312847551524233,
		"extended": "Quick Tutorial on creating a 'Hello world' application using AJAX principles.\n",
		"description": "The Hello World of AJAX",
		"time": "2006-08-07T11:54:16Z",
		"href": "http://www.dynamicajax.com/fr/AJAX_Hello_World-271_290_322.html"
	},
	{
		"cluster": 9,
		"tags": [
			"mediamvp",
			"linux",
			"mod",
			"hack",
			"nfs",
			"samba",
			"smb",
			"server",
			"stream",
			"HTPC",
			"video",
			"multimedia",
			"audio"
		],
		"y": -4.22153951228989,
		"x": 4.3590368275720035,
		"extended": "A hack for the HAuppage MediaMVP that allows playing of video and audio files from an NFS / SAMBA share, amongst other things.\n",
		"description": "MediaMVP Media Center",
		"time": "2006-08-07T07:15:05Z",
		"href": "http://mvpmc.sourceforge.net/idx.php?pg=main"
	},
	{
		"cluster": 8,
		"tags": [
			"video",
			"host",
			"social",
			"socialSoftware",
			"network",
			"web",
			"internet",
			"metadata",
			"socialNetwork",
			"share",
			"participate",
			"particpatory",
			"culture",
			"readWriteWeb",
			"discuss",
			"web2.0",
			"tagging",
			"tag",
			"discussion"
		],
		"y": 4.537310712518129,
		"x": 2.573299861602169,
		"extended": "New website that adds youtube style social metadata functionality to video hosted elsewhere.\n",
		"description": "Boing Boing: Dabbler - rate/recco/discuss videos, no matter where they're hosted",
		"time": "2006-08-01T10:42:55Z",
		"href": "http://www.boingboing.net/2006/07/26/dabbler_ratereccodis.html"
	},
	{
		"cluster": 2,
		"tags": [
			"flat",
			"apartmentholiday",
			"accomodation",
			"lisbon",
			"portugal",
			"cheap",
			"travel",
			"selfCatering",
			"self",
			"catering"
		],
		"y": -1.3029019570951055,
		"x": 4.801876970530683,
		"extended": "Nice Apartment in Lisbon\n",
		"description": "1 bedroom private holiday apartment for rent in Central Lisbon, Portugal",
		"time": "2006-07-26T20:34:25Z",
		"href": "http://www.ownersdirect.co.uk/portugal/P1304.htm"
	},
	{
		"cluster": 6,
		"tags": [
			"stephan",
			"kinsella",
			"law",
			"lawyer",
			"ip",
			"copyright",
			"patent",
			"YRO",
			"digtalRights"
		],
		"y": -3.6963766882607603,
		"x": 9.150102565873487,
		"extended": "Wikipedia entry on IP lawyer and author Stephan Kinsella, including links to publications available electronically.\n",
		"description": "Stephan Kinsella - Wikipedia, the free encyclopedia",
		"time": "2006-07-26T06:55:54Z",
		"href": "http://en.wikipedia.org/wiki/Stephan_Kinsella"
	},
	{
		"cluster": 6,
		"tags": [
			"activism",
			"copyright",
			"download",
			"fileSharing",
			"freeCulture",
			"MPAA",
			"mp3",
			"musicIndustry",
			"p2p",
			"piracy",
			"RIAA",
			"digitalRights",
			"YRO"
		],
		"y": -2.3574246718357914,
		"x": 6.8093828994912515,
		"extended": "Weblog reporting the RIAA's programme of lawsuits against alleged file-sharers\n",
		"description": "Recording Industry vs The People",
		"time": "2006-07-26T06:41:19Z",
		"href": "http://recordingindustryvspeople.blogspot.com/"
	},
	{
		"cluster": 6,
		"tags": [
			"BMR",
			"MCPS",
			"PRS",
			"royalty",
			"publishing",
			"copyright",
			"rights",
			"yro",
			"digitalRights",
			"mySpace",
			"socialSoftware",
			"socialNetwork"
		],
		"y": -1.8957452187051052,
		"x": 5.489597385717306,
		"extended": "British Music Rights pressure mySpace to pay a royalty payment to composers and songwriters.\n\n",
		"description": "MySpace faces royalty challenge | The Register",
		"time": "2006-07-21T12:15:21Z",
		"href": "http://www.theregister.co.uk/2006/07/20/pay_up_myspace/"
	},
	{
		"cluster": 2,
		"tags": [
			"mySpace",
			"flash",
			"macromedia",
			"monopoly",
			"adobe",
			"socialSoftware",
			"socialNetwork"
		],
		"y": -1.8870841301769519,
		"x": 5.3300726506099965,
		"extended": "An alternativve view of the reason's behind mySpace's adoption of flash 9\n",
		"description": "tiara.org » MySpace to Secondary Markets: Drop Dead",
		"time": "2006-07-21T12:13:41Z",
		"href": "http://www.tiara.org/blog/?p=222"
	},
	{
		"cluster": 19,
		"tags": [
			"apache",
			"apple",
			"development",
			"Geek",
			"HOWTO",
			"install",
			"mac",
			"mySQL",
			"Rails",
			"ruby",
			"rubyonrails",
			"server",
			"setup",
			"SQL",
			"tutorial",
			"web",
			"osx",
			"tiger"
		],
		"y": 11.670111401022021,
		"x": -7.021260939792964,
		"extended": "HOWTO install Rails on Mac OS X Tiger - from the rubyonrails.org wiki\n",
		"description": "HowtoInstallOnOSXTiger in Ruby on Rails",
		"time": "2006-07-13T11:52:31Z",
		"href": "http://wiki.rubyonrails.org/rails/pages/HowtoInstallOnOSXTiger"
	},
	{
		"cluster": 19,
		"tags": [
			"apache",
			"apple",
			"development",
			"Geek",
			"HOWTO",
			"install",
			"mac",
			"mySQL",
			"Rails",
			"ruby",
			"rubyonrails",
			"server",
			"setup",
			"SQL",
			"tutorial",
			"web",
			"osx",
			"tiger",
			"darwinports",
			"darwin"
		],
		"y": 11.68413250730683,
		"x": -7.023139621732893,
		"extended": "HOWTO install Rails on Mac OSX using darwinports\n",
		"description": "HowtoInstallOnOSXTigerUsingDarwinPorts in Ruby on Rails",
		"time": "2006-07-13T11:51:53Z",
		"href": "http://wiki.rubyonrails.org/rails/pages/HowtoInstallOnOSXTigerUsingDarwinPorts"
	},
	{
		"cluster": 19,
		"tags": [
			"apache",
			"apple",
			"development",
			"Geek",
			"HOWTO",
			"install",
			"mac",
			"mySQL",
			"Rails",
			"ruby",
			"rubyonrails",
			"server",
			"setup",
			"SQL",
			"tutorial",
			"web",
			"osx",
			"tiger"
		],
		"y": 11.689532325947544,
		"x": -7.017614152051496,
		"extended": "HOWTO Install Rails on Mac OS X Tiger, one of many tutorials consulted.\n",
		"description": "MacZealots > Tutorials > Installing Rails on Tiger",
		"time": "2006-07-13T11:51:05Z",
		"href": "http://maczealots.com/tutorials/ruby-on-rails/"
	},
	{
		"cluster": 19,
		"tags": [
			"apache",
			"debian",
			"linux",
			"ruby",
			"rubyonrails",
			"rails",
			"rail",
			"sarge",
			"admin",
			"howto"
		],
		"y": -6.453147957383479,
		"x": 3.86082943204893,
		"extended": "Another (more comprehensive) Debian / RoR tutorial\n",
		"description": "Debian Sarge (3.1) with Ruby on Rails and Apache 2 with FastCGI - Page 4 | HowtoForge - Linux Howtos and Tutorials",
		"time": "2006-07-12T13:47:26Z",
		"href": "http://www.howtoforge.com/ruby_on_rails_apache2_fastcgi_debian_p4"
	},
	{
		"cluster": 19,
		"tags": [
			"administration",
			"apache",
			"debian",
			"guide",
			"howto",
			"install",
			"linux",
			"mySQL",
			"rails",
			"rail",
			"ruby",
			"rubyonrails",
			"server",
			"setup",
			"sysadmin",
			"tutorial",
			"web",
			"webdevelopment"
		],
		"y": -6.513924334222988,
		"x": 3.831432274069722,
		"extended": "HOWTO install ruby on rails on a Debian Sarge system\n",
		"description": "Debian Administration :: Ruby on Rails on Debian",
		"time": "2006-07-12T13:46:23Z",
		"href": "http://www.debian-administration.org/articles/329"
	},
	{
		"cluster": 6,
		"tags": [
			"uk",
			"law",
			"lawyer",
			"ip",
			"intellectual",
			"property",
			"it",
			"information",
			"technology",
			"digital",
			"rights",
			"copyright",
			"patent"
		],
		"y": -3.789073649325129,
		"x": 9.143874221437567,
		"extended": "UK weblog about IP  / IT  / entertainment law\n",
		"description": "nipc IP/it Update",
		"time": "2006-07-06T11:31:28Z",
		"href": "http://www.nipclaw.blogspot.com/"
	},
	{
		"cluster": 19,
		"tags": [
			"lamp",
			"debian",
			"sarge",
			"linux",
			"apache",
			"php",
			"mysql",
			"howqto",
			"administration",
			"admin",
			"apache2",
			"computers",
			"howto",
			"html",
			"install",
			"internet",
			"server",
			"sysadmin",
			"systems",
			"tutorial",
			"web",
			"webdesign",
			"webdevelopment",
			"development"
		],
		"y": -6.474172700770337,
		"x": 3.893195828326912,
		"extended": "Good guide to installing a LAMP debain webserver\n",
		"description": "Debian Administration :: LAMP on Sarge (Apache2, PHP5, MySQL5, phpMyAdmin, Smarty, ADODB)",
		"time": "2006-06-23T12:31:23Z",
		"href": "http://www.debian-administration.org/articles/357"
	},
	{
		"cluster": 13,
		"tags": [
			"hiphop",
			"hip",
			"hop",
			"cristal",
			"brand",
			"status",
			"consumption",
			"conspicous",
			"affluence",
			"wealth",
			"poverty",
			"money",
			"economics"
		],
		"y": 7.886544956391107,
		"x": 7.729005429562548,
		"extended": "Brief and slightly snobbish  examination of 'conspicuous consumption' in hip-hop culture, which, despite it's failings provides some interesting references.\n",
		"description": "BBC NEWS | Magazine | Taking the shine off Cristal",
		"time": "2006-06-08T11:37:52Z",
		"href": "http://news.bbc.co.uk/1/hi/magazine/5056744.stm"
	},
	{
		"cluster": 12,
		"tags": [
			"dreamweaver",
			"wordpress",
			"web",
			"design",
			"development",
			"php",
			"blog",
			"CMS",
			"template",
			"theme",
			"webdesign",
			"tutorial",
			"Software",
			"content",
			"management",
			"mySQL",
			"dynamic"
		],
		"y": 9.959717641390375,
		"x": 0.24516436498572236,
		"extended": "All pretty elementary stuff... but useful nonetheless!\n",
		"description": "How to edit Wordpress themes using Dreamweaver at Leon Kilat ::: The Cybercafe Experiments",
		"time": "2006-06-07T15:36:59Z",
		"href": "http://max.limpag.com/2006/06/07/how-to-edit-wordpress-design-using-dreamweaver/"
	},
	{
		"cluster": 6,
		"tags": [
			"DRM",
			"digital",
			"convergence",
			"home",
			"future",
			"technology",
			"network",
			"culture",
			"consumer",
			"rights",
			"content",
			"copyright",
			"tpms",
			"freedom",
			"science"
		],
		"y": -6.348689673961099,
		"x": 7.798251507904326,
		"extended": "Contains interesting quote from Disney Exec on DRM. Argues that visions of the 'Digital Home' come from the priorities of rights owners, rather than consumers.\n",
		"description": "The digital home | Science fiction? | Economist.com",
		"time": "2006-06-05T13:39:47Z",
		"href": "http://www.economist.com/displaystory.cfm?story_id=4342418"
	},
	{
		"cluster": 6,
		"tags": [
			"Copyright",
			"term",
			"extension",
			"freeCulture",
			"intellectual",
			"property",
			"law",
			"politics",
			"gowers"
		],
		"y": -4.275793564527565,
		"x": 9.772623174776411,
		"extended": "Transcript of Parlimentary debate on term extension from theyworkforyou.com\n",
		"description": "Gowers Review: 17 May 2006: Westminster Hall debates (TheyWorkForYou.com)",
		"time": "2006-05-19T07:42:43Z",
		"href": "http://www.theyworkforyou.com/whall/?id=2006-05-17a.331.0&s=copyright+term#g336.0"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"term",
			"extension",
			"freeCulture",
			"freedom",
			"IP",
			"intellectual",
			"property",
			"law",
			"politics",
			"gowers"
		],
		"y": -4.239166872195063,
		"x": 9.768899049053694,
		"extended": "An adjournment debate on copyright term extension that took place in Parliament on the 17th of May.\n",
		"description": "House of Commons Hansard Debates for 17 May 2006 (pt 0054)",
		"time": "2006-05-19T07:36:31Z",
		"href": "http://www.publications.parliament.uk/cgi-bin/newhtml_hl?DB=semukparl&STEMMER=en&WORDS=term%20extens%20adjourn&ALL=term%20extension%20adjournement&ANY=&PHRASE=&CATEGORIES=&SIMPLE=&SPEAKER=&COLOUR=red&STYLE=s&ANCHOR=muscat_highlighter_first_match&URL=/pa/cm200506/cmhansrd/cm060517/halltext/60517h0061.htm#muscat_highlighter_first_match"
	},
	{
		"cluster": 1,
		"tags": [
			"Sandi",
			"Thom",
			"SandiThom",
			"Music",
			"Online",
			"Promotion",
			"Participation",
			"Culture",
			"Stream",
			"Webcast",
			"participatoryMedia",
			"Sony",
			"SonyBMG"
		],
		"y": -9.995408973544443,
		"x": 4.107520427880318,
		"extended": "Sandi Thom is the latest hotly-tipped musical act to have been discovered through inventive use of online promotion. How much of this was a truly 'grassroots' phenomenon however? This blog entry raises some doubt about Ms Thom's story.....\n",
		"description": "chartreuse (BETA) » Blog Archive » Is Sandi Thom A Fraud? (Or How To Lose Your Career In Internet Time)",
		"time": "2006-05-16T15:51:07Z",
		"href": "http://chartreuse.wordpress.com/2006/04/06/is-sandi-thom-a-fraud-or-how-to-lose-your-career-on-internet-time/"
	},
	{
		"cluster": 6,
		"tags": [
			"private",
			"copy",
			"privateCopy",
			"copyright",
			"copyleft",
			"copyfighters",
			"term",
			"extension",
			"digitalRights",
			"law",
			"society",
			"consumer",
			"free",
			"open",
			"rights",
			"digital",
			"politics",
			"gowers",
			"ncc"
		],
		"y": -4.466326098294155,
		"x": 9.7221211272647,
		"extended": "A spokesman for the National Consumer Council speaks out against extension to copyright term in sound drecordings, and for the right to private copy. It's great that support for these causes is getting out of the digital rights subculture and raising awar\n",
		"description": "BBC NEWS | Entertainment | Half of UK 'infringing copyright'",
		"time": "2006-05-15T12:52:26Z",
		"href": "http://news.bbc.co.uk/1/hi/entertainment/4766349.stm"
	},
	{
		"cluster": 8,
		"tags": [
			"bbc",
			"license",
			"fee",
			"technology",
			"new",
			"media",
			"innovation",
			"politics",
			"licensefee",
			"internet",
			"web",
			"online"
		],
		"y": 3.7370332969236344,
		"x": 3.9473535658283585,
		"extended": "George Osbourne, the Shadow Chancellor, says that: “As new forms of media develop, I believe that the BBC must be very careful about not abusing its privileged position and huge resources to crowd out smaller players.”\n",
		"description": "Tory attack on BBC media domination - Britain - Times Online",
		"time": "2006-05-15T09:09:44Z",
		"href": "http://www.timesonline.co.uk/article/0,,17129-2180953,00.html"
	},
	{
		"cluster": 2,
		"tags": [
			"annaSvidersky",
			"timJonze",
			"myspace",
			"meme",
			"viral",
			"public",
			"privacy",
			"private",
			"socialSoftware",
			"identity",
			"online",
			"appropriation",
			"freeCulture",
			"freedom"
		],
		"y": -1.4671434142952409,
		"x": 5.565617212439059,
		"extended": "How a tribute to a murdered teeenager from her closest friends became a myspace meme. Interesting story on the erosion of boundaries between public and private spheres and the nature of identity online.\n",
		"description": "Guardian Unlimited Technology | Technology | Tim Jonze on the death of Anna Svidersky",
		"time": "2006-05-15T06:57:42Z",
		"href": "http://technology.guardian.co.uk/news/story/0,,1775013,00.html"
	},
	{
		"cluster": 2,
		"tags": [
			"esr",
			"eric",
			"raymond",
			"animal",
			"sophont",
			"sapient",
			"rights",
			"welfare"
		],
		"y": -2.7094837541438364,
		"x": 4.868657771165523,
		"extended": "Despite my misgivings about a lot of Eric Raymonds writing and opinions, this article on defining what level of consciousness in animals could be described as being equivalent to humans is interesting nonetheless\n",
		"description": "Armed and Dangerous » Blog Archive » Animal imagination?",
		"time": "2006-05-14T14:11:56Z",
		"href": "http://esr.ibiblio.org/?p=288#more-288"
	},
	{
		"cluster": 8,
		"tags": [
			"brand",
			"bbc",
			"marketing",
			"demographics",
			"advertising",
			"longtail",
			"long",
			"tail",
			"market",
			"choice",
			"online",
			"internet",
			"access"
		],
		"y": 1.5157082294456594,
		"x": 2.8870954424428983,
		"extended": "Suw on brands as a 'cult of personality'. I've been thinking abotut eh same issues a lot altely and will write about this at more length soon. Specifically, I'm beginning to wonder that the wealth of content / products / services available online, and the\n",
		"description": "Your brand can't save you now. Strange Attractor: Picking out patterns from the chaos that is the blogosphere.",
		"time": "2006-05-03T11:56:56Z",
		"href": "http://strange.corante.com/archives/2006/05/01/your_brand_cant_save_you_now.php"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"yro",
			"slashdot",
			"term",
			"extension",
			"musicIndustry",
			"music",
			"DRM",
			"rights",
			"RIAA",
			"BPI",
			"trustedComputing",
			"freedom",
			"free",
			"freeCulture"
		],
		"y": -5.2719236339132785,
		"x": 9.255131147072726,
		"extended": "A Slashdot Reader provides a very succinct, accessible and informative explanation of what's wrong with copyright.\n",
		"description": "Comment on RIAA Targets LAN Filesharing at Universities",
		"time": "2006-05-03T08:28:06Z",
		"href": "http://yro.slashdot.org/comments.pl?sid=184605&cid=15243673"
	},
	{
		"cluster": 8,
		"tags": [
			"net",
			"neutrality",
			"netneutrality",
			"internet",
			"government",
			"politicts",
			"regulation",
			"telecom",
			"telco",
			"technology",
			"web",
			"YRO",
			"rights",
			"digitalRights",
			"digital",
			"online"
		],
		"y": 4.359279343725746,
		"x": 3.8959071998827803,
		"extended": "A non-technical introduction to network neutrality, and why it is important for the internet as a whole.\n",
		"description": "Why you should care about network neutrality. By Tim Wu",
		"time": "2006-05-03T06:28:24Z",
		"href": "http://www.slate.com/id/2140850/fr/rss/"
	},
	{
		"cluster": 10,
		"tags": [
			"atheism",
			"faith",
			"bible",
			"religion",
			"atheist",
			"rushkoff",
			"critic",
			"secular",
			"secularism",
			"humanism",
			"metaphor",
			"literature",
			"politics",
			"sam",
			"harris",
			"samHarris",
			"society"
		],
		"y": 1.9948893910601004,
		"x": 12.303178937690276,
		"extended": "Douglas Rushkoff has posted an excellent essay about why the Bible is much more useful as a metaphorical guide to life than as a literal document. (via BoingBoing)\n",
		"description": ":: Douglas Rushkoff - Weblog ::",
		"time": "2006-05-03T06:19:10Z",
		"href": "http://www.rushkoff.com/2006/04/faith-illness-why-ive-had-it-with.php"
	},
	{
		"cluster": 8,
		"tags": [
			"BBC",
			"Guardian",
			"media",
			"tv",
			"new",
			"internet",
			"web"
		],
		"y": 3.6457839438986,
		"x": 3.8071448099847327,
		"extended": "The Guardian's Emily Bell claims that Mark Thompsons sweeping reforms will change the BBC out of all recognition.\n",
		"description": "Comment is free: Auntie's dead",
		"time": "2006-04-27T09:42:18Z",
		"href": "http://commentisfree.guardian.co.uk/emily_bell/2006/04/aunties_dead.html"
	},
	{
		"cluster": 8,
		"tags": [
			"myspace",
			"advertising",
			"marketing",
			"internet",
			"online"
		],
		"y": -7.42458153848477,
		"x": 1.0605206606510886,
		"extended": "Article on how advertsers plan to use myspace to target children and young people. Research for later!\n",
		"description": "For MySpace, Making Friends Was Easy. Big Profit Is Tougher. - New York Times",
		"time": "2006-04-26T13:11:22Z",
		"href": "http://www.nytimes.com/2006/04/23/business/yourmoney/23myspace.html?_r=1&oref=slogin"
	},
	{
		"cluster": 8,
		"tags": [
			"marketing",
			"advertising",
			"myspace",
			"online",
			"internet"
		],
		"y": -7.557758979640007,
		"x": 1.0988343235286515,
		"extended": "Weblogg-ed comments on the incroach of advertisers using myspace to target children. Research for a later post!\n",
		"description": "Weblogg-ed » MySpace Predators",
		"time": "2006-04-26T13:09:17Z",
		"href": "http://weblogg-ed.com/2006/myspace-predators/"
	},
	{
		"cluster": 8,
		"tags": [
			"marketing",
			"long",
			"tail",
			"longtail",
			"demographics",
			"demographic",
			"internet",
			"online",
			"web"
		],
		"y": 1.5470308978436282,
		"x": 2.881931561324812,
		"extended": "Research for a forethcoming post discussing marketing on the internet - An analysis of wwhat the 'long tail' means to marketers\n",
		"description": "::HorsePigCow:: life uncommon: The Long Tail is Chunky",
		"time": "2006-04-26T13:07:24Z",
		"href": "http://www.horsepigcow.com/2006/04/long-tail-is-chunky.html"
	},
	{
		"cluster": 6,
		"tags": [
			"marx",
			"IP",
			"fictitious",
			"capital",
			"economics",
			"intellectual",
			"property",
			"copyright",
			"patent",
			"claims"
		],
		"y": 6.830403867033405,
		"x": 6.0650520558011625,
		"extended": "Wikipedia article on 'Fictitious Capital' - a marxist concept that I found by chance when looking to see if Marx wrote anything specifically about IP. Filed for later reference!\n",
		"description": "Fictitious capital - Wikipedia, the free encyclopedia",
		"time": "2006-04-23T17:15:52Z",
		"href": "http://en.wikipedia.org/wiki/Fictitious_capital"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"term",
			"extension",
			"pension",
			"music",
			"YRO",
			"free",
			"public",
			"domain"
		],
		"y": -4.814182864434341,
		"x": 9.461614443115113,
		"extended": "",
		"description": "Miles writes about extension to copyright terms.",
		"time": "2006-04-22T13:46:32Z",
		"href": "http://blogs.rave.ac.uk/blojsom/blog/mmetcalfe/?month=1&day=24&year=2006"
	},
	{
		"cluster": 1,
		"tags": [
			"art",
			"culture",
			"free",
			"internet",
			"mp3",
			"music",
			"outsider",
			"found",
			"sound",
			"thrift",
			"audio",
			"recording",
			"speech"
		],
		"y": -10.532242717930334,
		"x": 2.3673700577247225,
		"extended": "A collection of 365 recordings of outsider music and found sounds - one for each day of the year. Lots of idiosyncratic gems....\n",
		"description": "U B U W E B :: 365 Days Project",
		"time": "2006-04-19T17:33:24Z",
		"href": "http://www.ubu.com/outsiders/365/index.html"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"term",
			"extension",
			"bpi",
			"copyleft",
			"music",
			"culture",
			"rights",
			"consumer",
			"freeCulture",
			"free",
			"freedom",
			"publicDomain"
		],
		"y": -5.291547586301864,
		"x": 9.269141640840704,
		"extended": "A musician's perspective on copyright term extension\n",
		"description": "LouisBarfe.com - Music copyright (slight return)",
		"time": "2006-04-19T10:49:33Z",
		"href": "http://www.louisbarfe.com/muscop.htm"
	},
	{
		"cluster": 6,
		"tags": [
			"privacy",
			"IDcards",
			"ID",
			"cards",
			"No2ID",
			"DRM",
			"free",
			"open",
			"Software",
			"patent",
			"copyright",
			"copyleft",
			"softwarepatent",
			"activism"
		],
		"y": -2.5349890171204805,
		"x": 6.429490976721128,
		"extended": "..Are a fantastic organisation. I am also testing the blojsom delicious daily posting plugin, btw.\n",
		"description": "The Open Rights Group",
		"time": "2006-04-13T07:39:20Z",
		"href": "http://openrightsgroup.org.uk/"
	},
	{
		"cluster": 9,
		"tags": [
			"debian",
			"linux",
			"webdav",
			"apache",
			"apache2"
		],
		"y": -5.092844996612081,
		"x": 4.803631909535057,
		"extended": "installing a webDAV sever on debian with apache2\n",
		"description": "WebDav on Apache2",
		"time": "2006-04-10T15:52:11Z",
		"href": "http://www.debian-administration.org/articles/285"
	},
	{
		"cluster": 11,
		"tags": [
			"mac",
			"ical",
			"iCalendar",
			"webDav",
			"apache",
			"apple"
		],
		"y": -3.996681951823916,
		"x": 4.621303669796114,
		"extended": "a tutorial from onMac\n",
		"description": "Sharing iCal calenders with webDav",
		"time": "2006-04-10T15:51:13Z",
		"href": "http://www.macdevcenter.com/pub/a/mac/2002/09/20/ical_webdav.html"
	},
	{
		"cluster": 9,
		"tags": [
			"ruby",
			"rail",
			"apache2",
			"debian",
			"HOWTO",
			"tutorial",
			"linux",
			"web",
			"development"
		],
		"y": 8.342213678370838,
		"x": -7.977347899163053,
		"extended": "decent quick tutorial.\n",
		"description": "Install Rails on Debian with Apache2",
		"time": "2006-04-10T14:55:23Z",
		"href": "http://www.trpn-online.com/article/12"
	},
	{
		"cluster": 2,
		"tags": [
			"blojsom",
			"delicious",
			"tagging",
			"blog",
			"jsp",
			"servlet",
			"java"
		],
		"y": -2.395938208916913,
		"x": 3.406731432841184,
		"extended": "",
		"description": "testing the blojsom delicious daily posting plugin",
		"time": "2006-04-03T14:45:39Z",
		"href": "http://www.blojsom.org/"
	},
	{
		"cluster": 8,
		"tags": [
			"blog",
			"web",
			"social",
			"semantic",
			"community",
			"internet",
			"2.0",
			"software",
			"socialSoftware",
			"semanticWeb",
			"media",
			"freedom",
			"geek",
			"readWriteWeb",
			"open",
			"free",
			"culture"
		],
		"y": 4.480627209327458,
		"x": 2.7245588119076,
		"extended": "Property developer has big ideas for a 'community' website for a new development, invloving discounted online shopping, PA services, and other money-making schemes. This never materialises, but the residents of the development instead prodduces their own\n",
		"description": "BBC - Action Network - The Myjamfactory.com Virtual Community Website",
		"time": "2006-03-31T09:29:04Z",
		"href": "http://www.bbc.co.uk/dna/actionnetwork/A10415567"
	},
	{
		"cluster": 6,
		"tags": [
			"DRM",
			"iTunes",
			"RIAA",
			"MPAA",
			"apple",
			"jobs",
			"download",
			"copyright"
		],
		"y": -2.795803469158749,
		"x": 5.903737304853979,
		"extended": "Insightful comment on the iTunes / Fairplay business model.\n",
		"description": "Download-to-own Films Coming Soon",
		"time": "2006-03-24T12:10:26Z",
		"href": "http://slashdot.org/comments.pl?sid=181154&threshold=1&commentsort=0&mode=thread&cid=14985666"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"culture",
			"internet",
			"law",
			"p2p",
			"piracy",
			"Copyleft",
			"copyfighters",
			"patent",
			"software"
		],
		"y": -8.273521211051236,
		"x": 2.3804501357732994,
		"extended": "A list of notable IP law abuses\n",
		"description": "Intellectual Property Run Amok",
		"time": "2006-03-24T10:25:39Z",
		"href": "http://motherjones.com/news/exhibit/2006/03/intellectual_property.html"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"howto",
			"web",
			"webdesign",
			"tutoria",
			"Rails",
			"rubyonrails",
			"introduction",
			"ruby",
			"MVCparadigm",
			"MVC"
		],
		"y": 10.58542154481662,
		"x": -7.437161846817462,
		"extended": "A guide to designing the front-end for rby on rails apps\n",
		"description": "Rails for Designers",
		"time": "2006-03-23T14:52:41Z",
		"href": "http://glu.ttono.us/articles/2006/03/21/rails-for-designers"
	},
	{
		"cluster": 12,
		"tags": [
			"css",
			"design",
			"standards",
			"web",
			"development",
			"xhtml",
			"html",
			"em"
		],
		"y": 10.585740766365808,
		"x": 0.4409643467134305,
		"extended": "more CSS Tips and Tricks\n",
		"description": "The Amazing Em Unit and Other CSS Best Practices > The Amazing Em Unit and Other Best Practices",
		"time": "2006-03-21T15:20:48Z",
		"href": "http://www.awprofessional.com/articles/article.asp?p=397663&rl=1"
	},
	{
		"cluster": 12,
		"tags": [
			"CSS",
			"XHTML",
			"web",
			"design",
			"development",
			"em",
			"typography",
			"type",
			"standards",
			"compliant"
		],
		"y": 10.549285559067947,
		"x": 0.4785950238594005,
		"extended": "A guide to using te em unit of type measurement in CSS based web design\n",
		"description": "Effective Style with em | Monday By Noon",
		"time": "2006-03-21T14:48:36Z",
		"href": "http://www.mondaybynoon.com/2006/03/13/effective-style-with-em/"
	},
	{
		"cluster": 3,
		"tags": [
			"architecture",
			"art",
			"criticism",
			"culture",
			"essays",
			"information",
			"media",
			"reading",
			"theory",
			"Walter",
			"Benjamin",
			"philosophy",
			"technology",
			"reproduction",
			"photography",
			"hypermedia",
			"internet",
			"www",
			"copyright",
			"copyleft",
			"YRO",
			"piracy",
			"p2p",
			"copyfighters"
		],
		"y": -11.78531507306371,
		"x": 2.628484288151596,
		"extended": "Walter Benjamin's seminal essay 'The Work of Art in the age of mechanical reproduction' which predated contemporary concerns about authorship, intellectual property ad piacy by seventy-odd years.\n",
		"description": "Walter Benjamin",
		"time": "2006-03-21T13:59:07Z",
		"href": "http://www.marxists.org/reference/subject/philosophy/works/ge/benjamin.htm"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"IP",
			"copyleft",
			"culture",
			"culturalStudies",
			"studies",
			"society",
			"social",
			"science",
			"socialScience",
			"computer",
			"computing",
			"ComputerScience",
			"Information",
			"Critical",
			"Siva",
			"Vaidhyanathan",
			"law",
			"NYU",
			"criticism"
		],
		"y": -3.713277441616621,
		"x": 9.416133687298615,
		"extended": "NYU Professor Siva Vaidhyanathan (who is also the 'paradox' guy from Demetri Martin's Daily Show spot about myspace) proposes the existance of a new academic discipliene incorporating cultural studies, social sciences, computer science and law, under whic\n",
		"description": "SIVACRACY.NET: Critical Information Studies: A Bibliographic Manifesto",
		"time": "2006-03-21T13:56:33Z",
		"href": "http://www.nyu.edu/classes/siva/archives/002930.html#CIT0020"
	},
	{
		"cluster": 6,
		"tags": [
			"copyright",
			"ip",
			"culture",
			"media",
			"politics",
			"extension",
			"gowers",
			"musicIndustry",
			"term",
			"sonnyBono",
			"BPI",
			"EMI",
			"BMG",
			"ORG",
			"YRO"
		],
		"y": -4.395842566360305,
		"x": 9.758414112124598,
		"extended": "Article arguing against the extension to the copyright term and explaining the need for a public domain.\n",
		"description": "The Times Online guest contributors Opinion",
		"time": "2006-03-20T10:29:11Z",
		"href": "http://www.timesonline.co.uk/article/0,,1072-1657575,00.html"
	},
	{
		"cluster": 6,
		"tags": [
			"privacy",
			"web",
			"ORG",
			"open",
			"rights",
			"group",
			"free",
			"culture",
			"p2p",
			"yro",
			"trustedComputing",
			"society",
			"AnalogueHole",
			"",
			"copy",
			"copyright",
			"copyleft",
			"DRM",
			"DigitalRightsManagement",
			"freedom"
		],
		"y": -3.8754569095526645,
		"x": 8.840753263373669,
		"extended": "Interview with Suw Charman of ORG\n",
		"description": "Technolotics: Interview with Suw Charman of The Open Rights Group - Google Video",
		"time": "2006-03-14T17:57:45Z",
		"href": "http://video.google.com/videoplay?docid=-8665749013609782771"
	},
	{
		"cluster": 14,
		"tags": [
			"screenprinting",
			"silkscreen",
			"art",
			"design",
			"crafts",
			"craft",
			"howTo",
			"tutorial",
			"printing",
			"diy"
		],
		"y": -8.89337412874957,
		"x": 0.5363612687716012,
		"extended": "Comprehensive guide to screenprinting\n",
		"description": "How to Screen Print a Poster. Start to Finish! || FECAL FACE",
		"time": "2006-03-14T17:34:44Z",
		"href": "http://www.fecalface.com/content/archives/004648.html"
	},
	{
		"cluster": 6,
		"tags": [
			"DRM",
			"trustedComputing",
			"IP",
			"piracy",
			"p2p",
			"Copyleft",
			"corporateAuthorship",
			"copyright",
			"freeCulture",
			"freedom",
			"open",
			"free"
		],
		"y": -3.758770502279947,
		"x": 8.741795255249537,
		"extended": "Article explaining why DRM can harm business for content providors rather than protecting it\n",
		"description": "The big DRM mistake",
		"time": "2006-03-09T11:24:01Z",
		"href": "http://www.securityfocus.com/columnists/390?ref=rss"
	},
	{
		"cluster": 1,
		"tags": [
			"DRM",
			"CD",
			"Audio",
			"Music",
			"musicIndustry",
			"BPI",
			"RIAA",
			"Copy",
			"Protection",
			"P2P",
			"piracy",
			"trustedComputing"
		],
		"y": -8.897612218912204,
		"x": 3.991920854067104,
		"extended": "non-exhaustive list of UK CD-Audio releases (and discs available on import in the UK) that use any form of Digital Rights Management Software.\n",
		"description": "Campaign for Digital Rights - Corrupt audio disc information",
		"time": "2006-03-09T11:20:46Z",
		"href": "http://ukcdr.org/issues/cd/bad/#iox+6YSD"
	},
	{
		"cluster": 12,
		"tags": [
			"design",
			"geek",
			"howto",
			"internet",
			"javascript",
			"html",
			"web",
			"tutorials",
			"css",
			"webdesign",
			"development",
			"webdevelopment"
		],
		"y": 10.900650159938495,
		"x": 0.4734170552048606,
		"extended": "Web design and development tutorial site with GREAT tutorial and resources on Javascript, teaching usability, accesibility and standards-based web design and development\n",
		"description": "How To Create",
		"time": "2006-03-07T14:52:25Z",
		"href": "http://www.howtocreate.co.uk/"
	},
	{
		"cluster": 2,
		"tags": [
			"furniture",
			"DIY",
			"make",
			"desk",
			"cart",
			"computer",
			"bed",
			"laptop",
			"project"
		],
		"y": -2.6586066504715395,
		"x": 4.409567344494174,
		"extended": "DIY furniture to provide a 'desk' like surface to work from your bed!\n",
		"description": "Over-the-bed Computer Cart",
		"time": "2006-03-07T14:27:40Z",
		"href": "http://www.instructables.com/ex/i/88296FFCFE97102880EC001143E7E506/?ALLSTEPS"
	},
	{
		"cluster": 19,
		"tags": [
			"systems",
			"administration",
			"admin",
			"sysadmin",
			"debian",
			"linux",
			"web",
			"services",
			"webservices",
			"java",
			"jakarta",
			"tomcat",
			"apache",
			"SQL",
			"JDBC",
			"howto",
			"tutorial"
		],
		"y": -6.269670584816108,
		"x": 3.995801093592433,
		"extended": "",
		"description": "HOWTO : Installing Web Services with Linux / Tomcat / Apache / Struts / Postgresql / Openssl / JDBC",
		"time": "2006-03-06T22:34:55Z",
		"href": "http://www.linuxjava.net/howto/webapp/#tomcat_mod_jk"
	},
	{
		"cluster": 19,
		"tags": [
			"apache",
			"debian",
			"howto",
			"imap",
			"linux",
			"server",
			"setup",
			"sysadmin",
			"Software",
			"tutorials",
			"mail",
			"web",
			"systems",
			"administration",
			"tutorial"
		],
		"y": -6.351430685484873,
		"x": 4.023730038871078,
		"extended": "quick and dirty guide to setting up debian with some common services\n",
		"description": "The Perfect Setup - Debian Woody (3.0)",
		"time": "2006-03-06T22:33:21Z",
		"href": "http://www.projektfarm.com/en/support/debian_setup/"
	},
	{
		"cluster": 9,
		"tags": [
			"postfix",
			"debian",
			"linux",
			"systems",
			"administration",
			"mail",
			"server",
			"exim",
			"sendmail",
			"sysadmin"
		],
		"y": -6.224856129337554,
		"x": 4.162562235037803,
		"extended": "",
		"description": "Unix Review > Installing Postfix on Debian Sarge systems",
		"time": "2006-03-06T22:28:42Z",
		"href": "http://www.unixreview.com/documents/s=9772/ur0505k/ur0505k.html"
	},
	{
		"cluster": 9,
		"tags": [
			"debian",
			"howto",
			"linux",
			"sysadmin",
			"systems",
			"administration",
			"admin",
			"server",
			"setup"
		],
		"y": -6.226696640422106,
		"x": 4.170044868142885,
		"extended": "Article on adding services to init.d\n",
		"description": "Debian Administration :: Making scripts run at boot time with Debian",
		"time": "2006-03-06T21:50:29Z",
		"href": "http://www.debian-administration.org/articles/28"
	},
	{
		"cluster": 2,
		"tags": [
			"flat",
			"islington",
			"holloway",
			"£290"
		],
		"y": -2.852910396423756,
		"x": 5.028163865752449,
		"extended": "",
		"description": "myspace Islington office London N7 England UK 3 bedroom maisonette",
		"time": "2006-03-03T16:38:00Z",
		"href": "http://www.findaproperty.net/agent.aspx?agentid=3928&opt=prop&pid=057463&photo=3#photo"
	},
	{
		"cluster": 19,
		"tags": [
			"debian",
			"linux",
			"Admin",
			"apache",
			"hosting",
			"howto",
			"php",
			"sarge",
			"server",
			"Software",
			"sysadmin",
			"web",
			"install",
			"setup",
			"sendmail",
			"postfix",
			"mySQL",
			"suexec"
		],
		"y": -6.402199701160601,
		"x": 3.936965454991719,
		"extended": "Setting up a web and mail server on debian - an idiots (!) guide.\n",
		"description": "The Perfect Setup - Debian Sarge (3.1) | HowtoForge - Linux Howtos and Tutorials",
		"time": "2006-03-03T14:50:18Z",
		"href": "http://www.howtoforge.com/perfect_setup_debian_sarge"
	},
	{
		"cluster": 19,
		"tags": [
			"web",
			"apache",
			"httpd",
			"http",
			"php",
			"perl",
			"cgi",
			"sendmail",
			"imap",
			"pop",
			"debian",
			"linux",
			"sysadmin",
			"systems",
			"administration",
			"HOWTO",
			"server"
		],
		"y": -6.344883493224923,
		"x": 4.039396240007281,
		"extended": "quick and dirty guide to setting up a debian box as a web and email server.\n",
		"description": "Internet Linux Servers - How To Set Up and Configure A Linux Web Server and Linux E-mail Server",
		"time": "2006-03-03T14:16:29Z",
		"href": "http://www.aboutdebian.com/internet.htm"
	},
	{
		"cluster": 9,
		"tags": [
			"linux",
			"VPS",
			"security",
			"howto",
			"hosting",
			"administration",
			"sysadmin"
		],
		"y": -5.655447094333811,
		"x": 4.154803375265486,
		"extended": "Guide to setting up a VPS securely\n",
		"description": "Handbook Table of Contents - Application Virtual Server - Provider of small business web hosting and web design",
		"time": "2006-03-03T13:55:23Z",
		"href": "http://www.2kweb.net/support/solutionc/handbook/"
	},
	{
		"cluster": 9,
		"tags": [
			"security",
			"linux",
			"debian",
			"HOWTO",
			"guide",
			"intro",
			"systems",
			"administration",
			"sysadmin",
			"admin",
			"gnu",
			"sarge"
		],
		"y": -6.175356067888344,
		"x": 4.149762430938008,
		"extended": "Good article on securing a debian linux server.\n",
		"description": "Securing Debian HOWTO - After Installation",
		"time": "2006-03-03T00:31:39Z",
		"href": "http://www.linuxsecurity.com/resource_files/host_security/securing-debian-howto/ch4.en.html#s4.5"
	},
	{
		"cluster": 2,
		"tags": [
			"London",
			"StanhopeCentre"
		],
		"y": -2.0782950366601876,
		"x": 5.945943985140349,
		"extended": "",
		"description": "Stanhope Centre for Communications Policy Research",
		"time": "2006-02-28T22:41:06Z",
		"href": "http://stanhopecentre.org/"
	},
	{
		"cluster": 2,
		"tags": [
			"corporateAuthorship",
			"",
			"DRM",
			"DMCA",
			"Veil",
			"Watermarking",
			"Copyleft",
			"FreeCulture",
			"YRO",
			"A-hole",
			"AnalogueHole",
			"DigitalRightsManagement",
			"coyright",
			"piracy",
			"p2p"
		],
		"y": -3.823954933475462,
		"x": 8.311152793208587,
		"extended": "Article arguing that watermarking of digital media files, rather than combating piracy,  can be used to sustain a business model based on corporate authorship.\n",
		"description": "Kathryn Cramer: Watermarking as a Strategy for Insisting on Corporate \"Creators\": Is DRM the Killer App for Corporate Authorship?",
		"time": "2006-02-26T22:31:34Z",
		"href": "http://www.kathryncramer.com/kathryn_cramer/2006/02/watermarking_as.html"
	},
	{
		"cluster": 6,
		"tags": [
			"p2p",
			"fileSharing",
			"music",
			"musicIndustry",
			"internet",
			"YRO",
			"free",
			"freeCulture",
			"DRM",
			"VCL",
			"voluntaryCollectiveLicensing"
		],
		"y": -8.348569620368806,
		"x": 4.6695969895468785,
		"extended": "",
		"description": "P2P, Online File-Sharing, and the Music Industry",
		"time": "2006-02-23T23:20:54Z",
		"href": "http://www.thefactz.org/economics/p2p_summary.html"
	},
	{
		"cluster": 8,
		"tags": [
			"rights",
			"online",
			"internet",
			"privacy",
			"computers",
			"freedom",
			"DRM",
			"surveillance",
			"echelon"
		],
		"y": -7.832754006281493,
		"x": 1.3299540485924373,
		"extended": "",
		"description": "Computers, Freedoms and Privacy",
		"time": "2005-05-24T13:59:38Z",
		"href": "http://www.cfp.org/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"music",
			"technology",
			"blog",
			"me"
		],
		"y": -8.452541633744737,
		"x": 5.641905508843444,
		"extended": "",
		"description": "Tim Cowlishaw's Blog",
		"time": "2005-05-20T12:56:58Z",
		"href": "http://timcowlishaw.co.uk/"
	},
	{
		"cluster": 2,
		"tags": [
			"podcast",
			"wired",
			"curry",
			"blogging"
		],
		"y": -1.7248875101067092,
		"x": 5.3841506856164205,
		"extended": "",
		"description": "Wired 13.03: Adam Curry Wants to Make You an iPod Radio Star",
		"time": "2005-03-16T12:21:59Z",
		"href": "http://www.wired.com/wired/archive/13.03/curry.html?pg=1"
	},
	{
		"cluster": 1,
		"tags": [
			"indie",
			"music",
			"alternative",
			"podcast",
			"rock",
			"radio",
			"streaming",
			"mp3",
			"rss",
			"free"
		],
		"y": -9.759024356115114,
		"x": 4.875241724401526,
		"extended": "",
		"description": "Alternative Music podcasts",
		"time": "2005-03-10T11:26:57Z",
		"href": "http://blindingflashes.blogs.com/indie_feed/"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"download",
			"indie",
			"rock",
			"rockAndRoll",
			"mp3",
			"legal"
		],
		"y": -9.905966921828634,
		"x": 4.954483585522147,
		"extended": "",
		"description": "artrocker downloads",
		"time": "2005-03-09T23:29:44Z",
		"href": "http://www.artrocker.com/mp3s/index.shtml"
	},
	{
		"cluster": 14,
		"tags": [
			"poynor",
			"rick",
			"design",
			"advertising",
			"culturejamming",
			"chris",
			"morriss",
			"brass",
			"eye",
			"satire",
			"nathan",
			"barley",
			"toBlog"
		],
		"y": -7.915636842601951,
		"x": 0.6846502045743527,
		"extended": "",
		"description": "Rick Poynor critique of Nathan Barley ads",
		"time": "2005-02-10T11:00:02Z",
		"href": "http://www.eyemagazine.com/critique.php?cid=284"
	},
	{
		"cluster": 2,
		"tags": [
			"photography",
			"darkroom",
			"developing",
			"film",
			"processing",
			"blackAndWhite"
		],
		"y": -8.368709854562397,
		"x": 1.1123436141771468,
		"extended": "",
		"description": "The Massive Dev Chart: B/W Film Development Times, Processing Data",
		"time": "2005-01-30T23:18:57Z",
		"href": "http://www.digitaltruth.com/devchart.html"
	},
	{
		"cluster": 11,
		"tags": [
			"ipod",
			"hack",
			"notes",
			"apple",
			"mac"
		],
		"y": -3.9016888447917517,
		"x": 4.703147998694439,
		"extended": "",
		"description": "Macworld: Hack the iPod's Notes",
		"time": "2005-01-26T18:49:28Z",
		"href": "http://www.macworld.com/2004/09/secrets/septgeekfactor/index.php"
	},
	{
		"cluster": 14,
		"tags": [
			"graphicDesign",
			"Design",
			"designResponsibility",
			"art",
			"fashion"
		],
		"y": -8.914330936102692,
		"x": 0.5651510337908705,
		"extended": "",
		"description": "2blowhards.com: Graphic Design",
		"time": "2005-01-20T14:46:24Z",
		"href": "http://www.2blowhards.com/archives/001798.html"
	},
	{
		"cluster": 2,
		"tags": [
			"socialSoftware",
			"Identity",
			"Blogging"
		],
		"y": -1.8099643512373202,
		"x": 5.3647686277563364,
		"extended": "",
		"description": "Joho the Blog: LID - Lightweight identity solution?",
		"time": "2005-01-20T14:45:18Z",
		"href": "http://www.hyperorg.com/blogger/mtarchive/003548.html"
	},
	{
		"cluster": 14,
		"tags": [
			"life",
			"organisation",
			"design"
		],
		"y": -4.145809460820454,
		"x": 6.180669358996055,
		"extended": "",
		"description": "Design Observer: writings about design & culture: New Year’s Housecleaning / Emulation of Life",
		"time": "2005-01-20T14:44:29Z",
		"href": "http://www.designobserver.com/archives/000271.html"
	},
	{
		"cluster": 14,
		"tags": [
			"Promotion",
			"Advertising",
			"Design",
			"Marketing",
			"ViralMarketing"
		],
		"y": -7.631766252127639,
		"x": 0.912931010153223,
		"extended": "",
		"description": "James Archer - The Sneaky Side of Viral Marketing",
		"time": "2005-01-20T14:44:06Z",
		"href": "http://www.jamesarcher.net/content/8/"
	},
	{
		"cluster": 2,
		"tags": [
			"Life",
			"Relationships",
			"Technology",
			"Geek"
		],
		"y": -3.892781670663053,
		"x": 6.001164957080743,
		"extended": "",
		"description": "Wired News: Geek Love, or Lack Thereof",
		"time": "2005-01-20T13:24:52Z",
		"href": "http://www.wired.com/news/culture/0,1284,66337,00.html"
	},
	{
		"cluster": 2,
		"tags": [
			"dissertation",
			"digitalMedia",
			"McLuhan",
			"WBenjamin",
			"photography"
		],
		"y": -7.978164117544787,
		"x": 1.2321571465667487,
		"extended": "",
		"description": "2blowhards.com: Bryan on Digital Originals",
		"time": "2005-01-20T13:23:02Z",
		"href": "http://www.2blowhards.com/archives/001829.html"
	},
	{
		"cluster": 1,
		"tags": [
			"music",
			"radio"
		],
		"y": -9.356848368125288,
		"x": 4.31877179745187,
		"extended": "",
		"description": "woxy.com > Home",
		"time": "2005-01-18T11:15:27Z",
		"href": "http://www.woxy.com/"
	},
	{
		"cluster": 2,
		"tags": [
			"blogging",
			"major2",
			"projects",
			"news",
			"journalism",
			"blog",
			"bloggers"
		],
		"y": -1.6776677645778513,
		"x": 5.377629542239904,
		"extended": "",
		"description": "SimonWaldman.net » Slasdot debates the future of internet news",
		"time": "2005-01-18T11:13:51Z",
		"href": "http://www.simonwaldman.net/slasdot-debates-the-future-of-internet-news"
	},
	{
		"cluster": 1,
		"tags": [
			"Indie",
			"IndiePop",
			"Music",
			"twee"
		],
		"y": -9.361431457517677,
		"x": 4.3209623431841075,
		"extended": "",
		"description": "TweeNet Home-Page",
		"time": "2005-01-18T11:03:56Z",
		"href": "http://www.twee.net/"
	},
	{
		"cluster": 14,
		"tags": [
			"MichaelBierut",
			"Bierut",
			"Michael",
			"Design",
			"designobserver.com",
			"pentagram",
			"interview",
			"observer",
			"designobserver"
		],
		"y": -4.260614620684499,
		"x": 6.192338968423228,
		"extended": "",
		"description": "Fast Company | Parsing Pentagram",
		"time": "2005-01-18T01:00:23Z",
		"href": "http://www.fastcompany.com/articles/2004/12/bierut-pentagram.html"
	},
	{
		"cluster": 2,
		"tags": [
			"technorati",
			"socialSoftware",
			"metadata"
		],
		"y": -1.9954275897250624,
		"x": 5.296579634399399,
		"extended": "",
		"description": "oddiophile » Technorati Tags Bookmarklet",
		"time": "2005-01-15T01:15:59Z",
		"href": "http://oddiophile.com/index.php?p=29"
	},
	{
		"cluster": 2,
		"tags": [
			"life",
			"relationships"
		],
		"y": -3.836199406851387,
		"x": 5.957082831175126,
		"extended": "",
		"description": "Slightly Outraged",
		"time": "2005-01-15T01:09:18Z",
		"href": "http://adrenalin-online.demon.co.uk/blojsom/blog/sarah/Randomness/?permalink=B21123026AFC28238FFA9741366555D9.txt"
	},
	{
		"cluster": 2,
		"tags": [
			"bookbinding",
			"restoration",
			"books",
			"book",
			"binding"
		],
		"y": -3.6345991263841313,
		"x": 3.4583805581355604,
		"extended": "",
		"description": "Cowlishaw Bookbinding",
		"time": "2005-01-05T22:57:14Z",
		"href": "http://www.cowlishawbookbinding.co.uk/"
	},
	{
		"cluster": 14,
		"tags": [
			"BMD",
			"CABE",
			"architecture",
			"design",
			"downsview",
			"environment",
			"mau",
			"park",
			"space",
			"toronto"
		],
		"y": -0.6603665741862826,
		"x": 1.1156512716226583,
		"extended": "",
		"description": "::Parc Downsview Park: Home::",
		"time": "2004-12-03T03:36:39Z",
		"href": "http://www.pdp.ca/Home.464.0.html"
	},
	{
		"cluster": 14,
		"tags": [
			"academia",
			"design",
			"essays",
			"research",
			"theory",
			"typography"
		],
		"y": -4.942329403970029,
		"x": 6.751043038971441,
		"extended": "",
		"description": "TypeCulture™ - Academic Resource Home",
		"time": "2004-12-02T14:45:17Z",
		"href": "http://www.typeculture.com/academic_resource/"
	},
	{
		"cluster": 14,
		"tags": [
			"design",
			"essays",
			"theory",
			"typography"
		],
		"y": -4.871567276139197,
		"x": 6.718457164517011,
		"extended": "",
		"description": "Articles: texts on graphic design and typography",
		"time": "2004-12-02T14:31:11Z",
		"href": "http://www.typotheque.com/articles/index.html"
	},
	{
		"cluster": 1,
		"tags": [
			"download",
			"legal",
			"music",
			"share"
		],
		"y": -9.816632644689282,
		"x": 4.838755126205553,
		"extended": "",
		"description": "3hive - sharing the sharing",
		"time": "2004-12-02T00:12:12Z",
		"href": "http://www.3hive.com/"
	},
	{
		"cluster": 2,
		"tags": [
			"blogging",
			"gilmore",
			"media",
			"reading",
			"society"
		],
		"y": -1.3045869838213104,
		"x": 6.006390374097409,
		"extended": "",
		"description": "We The Media: Web Site Directory",
		"time": "2004-12-01T20:40:27Z",
		"href": "http://mcallister.ws/wtm-directory.html"
	},
	{
		"cluster": 8,
		"tags": [
			"censorship",
			"dissertation",
			"feminism",
			"internet",
			"pornography",
			"sexuality"
		],
		"y": -0.7391002774485008,
		"x": 6.082220837795854,
		"extended": "",
		"description": "Wired News: Porn Prohibitionists Miss Point",
		"time": "2004-12-01T17:45:34Z",
		"href": "http://www.wired.com/news/culture/0,1284,65831,00.html"
	},
	{
		"cluster": 2,
		"tags": [
			"Blogging",
			"CurrentProjects",
			"Journalism",
			"Social",
			"Software",
			"Technology"
		],
		"y": 4.320733413824414,
		"x": 3.2619293896903163,
		"extended": "",
		"description": "Wired News",
		"time": "2004-11-30T17:22:50Z",
		"href": "http://www.wired.com/news/culture/0,1284,65819,00.html"
	},
	{
		"cluster": 14,
		"tags": [
			"authoring",
			"design",
			"tutorials",
			"web",
			"xml"
		],
		"y": 9.571073433784065,
		"x": 1.1246398674613938,
		"extended": "",
		"description": "exploring XML - The Webmaster's Reference on XML: Free Tutorials, Tools, Standards Talk, and Product Reviews - www.exploringxml.com",
		"time": "2004-11-29T02:55:00Z",
		"href": "http://www.webreference.com/xml/"
	},
	{
		"cluster": 14,
		"tags": [
			"college",
			"competitions",
			"design",
			"environment",
			"projects"
		],
		"y": -4.229482683869087,
		"x": 6.240726524647086,
		"extended": "CABEspace competition brief\n",
		"description": "ycn/Home",
		"time": "2004-11-28T14:12:38Z",
		"href": "http://www.ycnonline.com/05_cabe.php"
	},
	{
		"cluster": 2,
		"tags": [
			"BSL",
			"deaf",
			"education",
			"literacy"
		],
		"y": -5.755819004335065,
		"x": -1.1498394821602795,
		"extended": "",
		"description": "Teachernet, Teaching literacy",
		"time": "2004-11-25T15:27:20Z",
		"href": "http://www.teachernet.gov.uk/teachingandlearning/subjects/english/teachingliteracy/"
	},
	{
		"cluster": 2,
		"tags": [
			"BSL",
			"education",
			"language"
		],
		"y": -5.730900506121885,
		"x": -1.1721596178427107,
		"extended": "",
		"description": "The Standards Site: Helping deaf children succeed in the literacy hour",
		"time": "2004-11-25T15:00:29Z",
		"href": "http://www.standards.dfes.gov.uk/primary/features/inclusion/942579/942587"
	},
	{
		"cluster": 14,
		"tags": [
			"CurrentProjects",
			"Design",
			"Typography"
		],
		"y": -4.678431008593517,
		"x": 6.567781270905515,
		"extended": "ISTD.org.uk\n",
		"description": "ISTD.org.uk",
		"time": "2004-11-24T03:59:16Z",
		"href": "http://www.istd.org.uk/"
	},
	{
		"cluster": 2,
		"tags": [
			"BSL",
			"Technology",
			"iDTV"
		],
		"y": -3.736020846430471,
		"x": 5.51485594886332,
		"extended": "",
		"description": "http://www.visicast.sys.uea.ac.uk/",
		"time": "2004-11-24T03:49:18Z",
		"href": "http://www.visicast.sys.uea.ac.uk/"
	}
];

/***/ }),
/* 98 */
/***/ (function(module, exports) {

module.exports = [
	{
		"entries": 65,
		"top_tags": [
			[
				"operations",
				38
			],
			[
				"sysadmin",
				35
			],
			[
				"devops",
				27
			],
			[
				"ops",
				26
			],
			[
				"docker",
				25
			]
		]
	},
	{
		"entries": 255,
		"top_tags": [
			[
				"culture",
				135
			],
			[
				"art",
				127
			],
			[
				"music",
				120
			],
			[
				"technology",
				67
			],
			[
				"society",
				36
			]
		]
	},
	{
		"entries": 623,
		"top_tags": [
			[
				"machinelearning",
				67
			],
			[
				"computerscience",
				45
			],
			[
				"business",
				32
			],
			[
				"scala",
				32
			],
			[
				"database",
				32
			]
		]
	},
	{
		"entries": 94,
		"top_tags": [
			[
				"culture",
				83
			],
			[
				"criticism",
				64
			],
			[
				"art",
				59
			],
			[
				"politics",
				54
			],
			[
				"theory",
				41
			]
		]
	},
	{
		"entries": 230,
		"top_tags": [
			[
				"haskell",
				225
			],
			[
				"programming",
				223
			],
			[
				"functional",
				209
			],
			[
				"computerscience",
				130
			],
			[
				"types",
				45
			]
		]
	},
	{
		"entries": 200,
		"top_tags": [
			[
				"statistics",
				199
			],
			[
				"machinelearning",
				85
			],
			[
				"computerscience",
				64
			],
			[
				"mathematics",
				59
			],
			[
				"programming",
				41
			]
		]
	},
	{
		"entries": 90,
		"top_tags": [
			[
				"copyright",
				88
			],
			[
				"law",
				39
			],
			[
				"internet",
				30
			],
			[
				"music",
				27
			],
			[
				"politics",
				26
			]
		]
	},
	{
		"entries": 302,
		"top_tags": [
			[
				"programming",
				281
			],
			[
				"development",
				257
			],
			[
				"ruby",
				208
			],
			[
				"rails",
				71
			],
			[
				"web",
				57
			]
		]
	},
	{
		"entries": 125,
		"top_tags": [
			[
				"internet",
				124
			],
			[
				"technology",
				41
			],
			[
				"web",
				40
			],
			[
				"culture",
				34
			],
			[
				"art",
				25
			]
		]
	},
	{
		"entries": 108,
		"top_tags": [
			[
				"linux",
				108
			],
			[
				"ubuntu",
				36
			],
			[
				"sysadmin",
				28
			],
			[
				"debian",
				28
			],
			[
				"howto",
				21
			]
		]
	},
	{
		"entries": 478,
		"top_tags": [
			[
				"politics",
				478
			],
			[
				"society",
				134
			],
			[
				"culture",
				105
			],
			[
				"socialism",
				84
			],
			[
				"capitalism",
				52
			]
		]
	},
	{
		"entries": 59,
		"top_tags": [
			[
				"mac",
				54
			],
			[
				"osx",
				44
			],
			[
				"apple",
				28
			],
			[
				"development",
				14
			],
			[
				"programming",
				13
			]
		]
	},
	{
		"entries": 175,
		"top_tags": [
			[
				"web",
				173
			],
			[
				"development",
				167
			],
			[
				"programming",
				93
			],
			[
				"javascript",
				60
			],
			[
				"design",
				46
			]
		]
	},
	{
		"entries": 264,
		"top_tags": [
			[
				"economics",
				264
			],
			[
				"politics",
				198
			],
			[
				"finance",
				45
			],
			[
				"business",
				40
			],
			[
				"society",
				35
			]
		]
	},
	{
		"entries": 126,
		"top_tags": [
			[
				"design",
				120
			],
			[
				"ux",
				49
			],
			[
				"web",
				29
			],
			[
				"ui",
				21
			],
			[
				"interaction",
				19
			]
		]
	},
	{
		"entries": 212,
		"top_tags": [
			[
				"mathematics",
				203
			],
			[
				"computerscience",
				99
			],
			[
				"learning",
				60
			],
			[
				"programming",
				54
			],
			[
				"education",
				43
			]
		]
	},
	{
		"entries": 165,
		"top_tags": [
			[
				"data",
				162
			],
			[
				"analysis",
				50
			],
			[
				"statistics",
				43
			],
			[
				"programming",
				34
			],
			[
				"machinelearning",
				28
			]
		]
	},
	{
		"entries": 475,
		"top_tags": [
			[
				"programming",
				474
			],
			[
				"computerscience",
				251
			],
			[
				"scala",
				154
			],
			[
				"functional",
				146
			],
			[
				"ruby",
				41
			]
		]
	},
	{
		"entries": 153,
		"top_tags": [
			[
				"software",
				122
			],
			[
				"programming",
				113
			],
			[
				"engineering",
				94
			],
			[
				"development",
				66
			],
			[
				"architecture",
				60
			]
		]
	},
	{
		"entries": 11,
		"top_tags": [
			[
				"apache",
				11
			],
			[
				"web",
				9
			],
			[
				"server",
				9
			],
			[
				"linux",
				8
			],
			[
				"tutorial",
				8
			]
		]
	}
];

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _constants = __webpack_require__(61);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClusterList = function (_React$Component) {
    _inherits(ClusterList, _React$Component);

    function ClusterList(props) {
        _classCallCheck(this, ClusterList);

        var _this = _possibleConstructorReturn(this, (ClusterList.__proto__ || Object.getPrototypeOf(ClusterList)).call(this, props));

        _this.state = {
            clusters: props.clusters,
            vis: props.vis
        };
        return _this;
    }

    _createClass(ClusterList, [{
        key: "selectCluster",
        value: function selectCluster(id) {
            this.state.vis.selectCluster(id);
        }
    }, {
        key: "listItems",
        value: function listItems() {
            var _this2 = this;

            return this.state.clusters.map(function (cluster, ix) {
                var color = _constants.PALLETTE[ix];
                var top_tags = cluster["top_tags"].sort(function (tag) {
                    return tag[1];
                }).reverse();
                var title = top_tags.slice(0, 3).map(function (_ref) {
                    var _ref2 = _slicedToArray(_ref, 2),
                        name = _ref2[0],
                        _ = _ref2[1];

                    return name;
                }).join(", ");
                return _react2.default.createElement(
                    "li",
                    { className: "cluster", key: ix },
                    _react2.default.createElement(
                        "span",
                        { className: "chip", style: {
                                backgroundColor: color
                            } },
                        "\xA0"
                    ),
                    _react2.default.createElement(
                        "a",
                        { href: "#", onClick: function onClick() {
                                return _this2.selectCluster(ix);
                            } },
                        title
                    )
                );
            });
        }
    }, {
        key: "render",
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                "ul",
                null,
                _react2.default.createElement(
                    "li",
                    { className: "cluster", key: "all" },
                    _react2.default.createElement(
                        "span",
                        { className: "chip", style: {
                                backgroundColor: "#ddd"
                            } },
                        "\xA0"
                    ),
                    _react2.default.createElement(
                        "a",
                        { href: "#", onClick: function onClick() {
                                return _this3.selectCluster(null);
                            } },
                        "Everything"
                    )
                ),
                this.listItems()
            );
        }
    }]);

    return ClusterList;
}(_react2.default.Component);

module.exports.ClusterList = ClusterList;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactGoogleCharts = __webpack_require__(87);

var _jquery = __webpack_require__(118);

var _jquery2 = _interopRequireDefault(_jquery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EqualHeightChart = function (_Chart) {
    _inherits(EqualHeightChart, _Chart);

    function EqualHeightChart() {
        _classCallCheck(this, EqualHeightChart);

        return _possibleConstructorReturn(this, (EqualHeightChart.__proto__ || Object.getPrototypeOf(EqualHeightChart)).apply(this, arguments));
    }

    _createClass(EqualHeightChart, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            _get(EqualHeightChart.prototype.__proto__ || Object.getPrototypeOf(EqualHeightChart.prototype), 'componentDidMount', this).call(this);
            var chartDiv = (0, _jquery2.default)('#' + this.state.graphID);
            chartDiv.height(chartDiv.width());
        }
    }]);

    return EqualHeightChart;
}(_reactGoogleCharts.Chart);

module.exports.EqualHeightChart = EqualHeightChart;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactGoogleCharts = __webpack_require__(87);

var _reactMaterialize = __webpack_require__(227);

var _constants = __webpack_require__(61);

var _equal_height_chart = __webpack_require__(100);

var _cluster_list = __webpack_require__(99);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Vis = function (_React$Component) {
    _inherits(Vis, _React$Component);

    function Vis(props) {
        _classCallCheck(this, Vis);

        var _this = _possibleConstructorReturn(this, (Vis.__proto__ || Object.getPrototypeOf(Vis)).call(this, props));

        var xs = props.bookmarks.map(function (_ref) {
            var x = _ref.x;
            return x;
        });
        var ys = props.bookmarks.map(function (_ref2) {
            var y = _ref2.y;
            return y;
        });

        _this.state = {
            scatterMinX: Math.min.apply(Math, _toConsumableArray(xs)),
            scatterMaxX: Math.max.apply(Math, _toConsumableArray(xs)),
            scatterMinY: Math.min.apply(Math, _toConsumableArray(ys)),
            scatterMaxY: Math.max.apply(Math, _toConsumableArray(ys)),
            histColor: "#ddd",
            bookmarks: props.bookmarks,
            allBookmarks: props.bookmarks,
            clusters: props.clusters
        };
        return _this;
    }

    _createClass(Vis, [{
        key: 'selectCluster',
        value: function selectCluster(id) {
            var bookmarks;
            var histColor;
            if (id != undefined) {
                bookmarks = this.state.allBookmarks.filter(function (_ref3) {
                    var cluster = _ref3.cluster;
                    return cluster == id;
                });
                histColor = _constants.PALLETTE[id];
            } else {
                bookmarks = this.state.allBookmarks;
                histColor = "#ddd";
            }
            this.setState({
                bookmarks: bookmarks,
                histColor: histColor
            });
        }
    }, {
        key: 'rows',
        value: function rows() {
            return this.state.bookmarks.map(function (_ref4) {
                var x = _ref4.x,
                    y = _ref4.y,
                    cluster = _ref4.cluster,
                    description = _ref4.description;

                var color = _constants.PALLETTE[cluster];
                var style = '{ fill-color: ' + color + '; }';
                return [x, y, style, description];
            });
        }
    }, {
        key: 'columns',
        value: function columns() {
            return [{
                type: "number",
                label: "X"
            }, {
                type: "number",
                label: "Y"
            }, {
                type: "string",
                role: "style"
            }, {
                type: "string",
                role: "tooltip",
                label: "Title"
            }];
        }
    }, {
        key: 'colors',
        value: function colors() {
            return this.state.bookmarks.map(function (_ref5) {
                var cluster = _ref5.cluster;
                return _constants.PALLETTE[cluster];
            });
        }
    }, {
        key: 'histogramTicks',
        value: function histogramTicks() {
            var years = this.state.allBookmarks.map(function (_ref6) {
                var time = _ref6.time;
                return new Date(Date.parse(time)).getFullYear();
            }).filter(function (v, i, a) {
                return a.indexOf(v) === i;
            }).sort();
            return years.map(function (y) {
                return { v: new Date(y, 1).valueOf(), f: y.toString() };
            });
        }
    }, {
        key: 'histogramData',
        value: function histogramData() {
            return this.state.bookmarks.map(function (_ref7) {
                var description = _ref7.description,
                    time = _ref7.time;
                return [description, Date.parse(time)];
            });
        }
    }, {
        key: 'extendedString',
        value: function extendedString(extended) {
            if (extended) {
                return _react2.default.createElement(
                    'span',
                    { className: 'description' },
                    '\u2014 ',
                    extended
                );
            }
        }
    }, {
        key: 'bookmarkItems',
        value: function bookmarkItems() {
            var _this2 = this;

            console.log(this.state.bookmarks[0]);
            return this.state.bookmarks.map(function (_ref8, ix) {
                var cluster = _ref8.cluster,
                    description = _ref8.description,
                    extended = _ref8.extended,
                    href = _ref8.href,
                    time = _ref8.time;

                var color = _constants.PALLETTE[cluster];
                var date = new Date(time).toDateString();
                return _react2.default.createElement(
                    'li',
                    { className: 'bookmark', key: "bookmark-" + ix },
                    _react2.default.createElement(
                        'span',
                        { className: 'chip', style: {
                                backgroundColor: color
                            } },
                        '\xA0'
                    ),
                    _react2.default.createElement(
                        'span',
                        { className: 'date' },
                        date,
                        ':'
                    ),
                    ' ',
                    _react2.default.createElement(
                        'a',
                        { target: '_blank', href: href },
                        description
                    ),
                    ' ',
                    _this2.extendedString(extended)
                );
            });
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'div',
                { id: "container" },
                _react2.default.createElement(
                    _reactMaterialize.Row,
                    null,
                    _react2.default.createElement(
                        _reactMaterialize.Col,
                        { s: 8 },
                        _react2.default.createElement(
                            _reactMaterialize.Card,
                            null,
                            _react2.default.createElement(_equal_height_chart.EqualHeightChart, {
                                chartType: 'ScatterChart',
                                columns: this.columns(),
                                rows: this.rows(),
                                options: {
                                    legend: {
                                        position: 'none'
                                    },
                                    chartArea: {
                                        width: "90%",
                                        height: "90%"
                                    },
                                    hAxis: {
                                        minValue: this.state.scatterMinX,
                                        maxValue: this.state.scatterMaxX
                                    },
                                    vAxis: {
                                        minValue: this.state.scatterMinY,
                                        maxValue: this.state.scatterMaxY
                                    }
                                },
                                graph_id: 'ScatterChart',
                                width: '100%',
                                height: '400px'
                            })
                        ),
                        _react2.default.createElement(
                            _reactMaterialize.Card,
                            null,
                            _react2.default.createElement(_reactGoogleCharts.Chart, {
                                chartType: 'Histogram',
                                graph_id: 'Histogram',
                                rows: this.histogramData(),
                                options: {
                                    colors: [this.state.histColor],
                                    legend: {
                                        position: 'none'
                                    },
                                    chartArea: {
                                        width: "90%",
                                        height: "75%"
                                    },
                                    hAxis: {
                                        ticks: this.histogramTicks(),
                                        slantedText: true,
                                        slantedTextAngle: 90
                                    }
                                },
                                columns: [{ type: 'string' }, { type: 'number' }],
                                width: '100%'
                            })
                        )
                    ),
                    _react2.default.createElement(
                        _reactMaterialize.Col,
                        { s: 4 },
                        _react2.default.createElement(
                            _reactMaterialize.Card,
                            null,
                            _react2.default.createElement(_cluster_list.ClusterList, {
                                clusters: this.state.clusters,
                                vis: this
                            })
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactMaterialize.Row,
                    null,
                    _react2.default.createElement(
                        _reactMaterialize.Col,
                        { s: 12 },
                        _react2.default.createElement(
                            _reactMaterialize.Card,
                            null,
                            _react2.default.createElement(
                                'ul',
                                null,
                                this.bookmarkItems()
                            )
                        )
                    )
                )
            );
        }
    }]);

    return Vis;
}(_react2.default.Component);

module.exports.Vis = Vis;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global, setImmediate) {/* @preserve
 * The MIT License (MIT)
 * 
 * Copyright (c) 2013-2015 Petka Antonov
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
 */
/**
 * bluebird build version 3.4.7
 * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each
*/
!function(e){if(true)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_=="function"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_=="function"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
var SomePromiseArray = Promise._SomePromiseArray;
function any(promises) {
    var ret = new SomePromiseArray(promises);
    var promise = ret.promise();
    ret.setHowMany(1);
    ret.setUnwrap();
    ret.init();
    return promise;
}

Promise.any = function (promises) {
    return any(promises);
};

Promise.prototype.any = function () {
    return any(this);
};

};

},{}],2:[function(_dereq_,module,exports){
"use strict";
var firstLineError;
try {throw new Error(); } catch (e) {firstLineError = e;}
var schedule = _dereq_("./schedule");
var Queue = _dereq_("./queue");
var util = _dereq_("./util");

function Async() {
    this._customScheduler = false;
    this._isTickUsed = false;
    this._lateQueue = new Queue(16);
    this._normalQueue = new Queue(16);
    this._haveDrainedQueues = false;
    this._trampolineEnabled = true;
    var self = this;
    this.drainQueues = function () {
        self._drainQueues();
    };
    this._schedule = schedule;
}

Async.prototype.setScheduler = function(fn) {
    var prev = this._schedule;
    this._schedule = fn;
    this._customScheduler = true;
    return prev;
};

Async.prototype.hasCustomScheduler = function() {
    return this._customScheduler;
};

Async.prototype.enableTrampoline = function() {
    this._trampolineEnabled = true;
};

Async.prototype.disableTrampolineIfNecessary = function() {
    if (util.hasDevTools) {
        this._trampolineEnabled = false;
    }
};

Async.prototype.haveItemsQueued = function () {
    return this._isTickUsed || this._haveDrainedQueues;
};


Async.prototype.fatalError = function(e, isNode) {
    if (isNode) {
        process.stderr.write("Fatal " + (e instanceof Error ? e.stack : e) +
            "\n");
        process.exit(2);
    } else {
        this.throwLater(e);
    }
};

Async.prototype.throwLater = function(fn, arg) {
    if (arguments.length === 1) {
        arg = fn;
        fn = function () { throw arg; };
    }
    if (typeof setTimeout !== "undefined") {
        setTimeout(function() {
            fn(arg);
        }, 0);
    } else try {
        this._schedule(function() {
            fn(arg);
        });
    } catch (e) {
        throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
};

function AsyncInvokeLater(fn, receiver, arg) {
    this._lateQueue.push(fn, receiver, arg);
    this._queueTick();
}

function AsyncInvoke(fn, receiver, arg) {
    this._normalQueue.push(fn, receiver, arg);
    this._queueTick();
}

function AsyncSettlePromises(promise) {
    this._normalQueue._pushOne(promise);
    this._queueTick();
}

if (!util.hasDevTools) {
    Async.prototype.invokeLater = AsyncInvokeLater;
    Async.prototype.invoke = AsyncInvoke;
    Async.prototype.settlePromises = AsyncSettlePromises;
} else {
    Async.prototype.invokeLater = function (fn, receiver, arg) {
        if (this._trampolineEnabled) {
            AsyncInvokeLater.call(this, fn, receiver, arg);
        } else {
            this._schedule(function() {
                setTimeout(function() {
                    fn.call(receiver, arg);
                }, 100);
            });
        }
    };

    Async.prototype.invoke = function (fn, receiver, arg) {
        if (this._trampolineEnabled) {
            AsyncInvoke.call(this, fn, receiver, arg);
        } else {
            this._schedule(function() {
                fn.call(receiver, arg);
            });
        }
    };

    Async.prototype.settlePromises = function(promise) {
        if (this._trampolineEnabled) {
            AsyncSettlePromises.call(this, promise);
        } else {
            this._schedule(function() {
                promise._settlePromises();
            });
        }
    };
}

Async.prototype._drainQueue = function(queue) {
    while (queue.length() > 0) {
        var fn = queue.shift();
        if (typeof fn !== "function") {
            fn._settlePromises();
            continue;
        }
        var receiver = queue.shift();
        var arg = queue.shift();
        fn.call(receiver, arg);
    }
};

Async.prototype._drainQueues = function () {
    this._drainQueue(this._normalQueue);
    this._reset();
    this._haveDrainedQueues = true;
    this._drainQueue(this._lateQueue);
};

Async.prototype._queueTick = function () {
    if (!this._isTickUsed) {
        this._isTickUsed = true;
        this._schedule(this.drainQueues);
    }
};

Async.prototype._reset = function () {
    this._isTickUsed = false;
};

module.exports = Async;
module.exports.firstLineError = firstLineError;

},{"./queue":26,"./schedule":29,"./util":36}],3:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {
var calledBind = false;
var rejectThis = function(_, e) {
    this._reject(e);
};

var targetRejected = function(e, context) {
    context.promiseRejectionQueued = true;
    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);
};

var bindingResolved = function(thisArg, context) {
    if (((this._bitField & 50397184) === 0)) {
        this._resolveCallback(context.target);
    }
};

var bindingRejected = function(e, context) {
    if (!context.promiseRejectionQueued) this._reject(e);
};

Promise.prototype.bind = function (thisArg) {
    if (!calledBind) {
        calledBind = true;
        Promise.prototype._propagateFrom = debug.propagateFromFunction();
        Promise.prototype._boundValue = debug.boundValueFunction();
    }
    var maybePromise = tryConvertToPromise(thisArg);
    var ret = new Promise(INTERNAL);
    ret._propagateFrom(this, 1);
    var target = this._target();
    ret._setBoundTo(maybePromise);
    if (maybePromise instanceof Promise) {
        var context = {
            promiseRejectionQueued: false,
            promise: ret,
            target: target,
            bindingPromise: maybePromise
        };
        target._then(INTERNAL, targetRejected, undefined, ret, context);
        maybePromise._then(
            bindingResolved, bindingRejected, undefined, ret, context);
        ret._setOnCancel(maybePromise);
    } else {
        ret._resolveCallback(target);
    }
    return ret;
};

Promise.prototype._setBoundTo = function (obj) {
    if (obj !== undefined) {
        this._bitField = this._bitField | 2097152;
        this._boundTo = obj;
    } else {
        this._bitField = this._bitField & (~2097152);
    }
};

Promise.prototype._isBound = function () {
    return (this._bitField & 2097152) === 2097152;
};

Promise.bind = function (thisArg, value) {
    return Promise.resolve(value).bind(thisArg);
};
};

},{}],4:[function(_dereq_,module,exports){
"use strict";
var old;
if (typeof Promise !== "undefined") old = Promise;
function noConflict() {
    try { if (Promise === bluebird) Promise = old; }
    catch (e) {}
    return bluebird;
}
var bluebird = _dereq_("./promise")();
bluebird.noConflict = noConflict;
module.exports = bluebird;

},{"./promise":22}],5:[function(_dereq_,module,exports){
"use strict";
var cr = Object.create;
if (cr) {
    var callerCache = cr(null);
    var getterCache = cr(null);
    callerCache[" size"] = getterCache[" size"] = 0;
}

module.exports = function(Promise) {
var util = _dereq_("./util");
var canEvaluate = util.canEvaluate;
var isIdentifier = util.isIdentifier;

var getMethodCaller;
var getGetter;
if (false) {
var makeMethodCaller = function (methodName) {
    return new Function("ensureMethod", "                                    \n\
        return function(obj) {                                               \n\
            'use strict'                                                     \n\
            var len = this.length;                                           \n\
            ensureMethod(obj, 'methodName');                                 \n\
            switch(len) {                                                    \n\
                case 1: return obj.methodName(this[0]);                      \n\
                case 2: return obj.methodName(this[0], this[1]);             \n\
                case 3: return obj.methodName(this[0], this[1], this[2]);    \n\
                case 0: return obj.methodName();                             \n\
                default:                                                     \n\
                    return obj.methodName.apply(obj, this);                  \n\
            }                                                                \n\
        };                                                                   \n\
        ".replace(/methodName/g, methodName))(ensureMethod);
};

var makeGetter = function (propertyName) {
    return new Function("obj", "                                             \n\
        'use strict';                                                        \n\
        return obj.propertyName;                                             \n\
        ".replace("propertyName", propertyName));
};

var getCompiled = function(name, compiler, cache) {
    var ret = cache[name];
    if (typeof ret !== "function") {
        if (!isIdentifier(name)) {
            return null;
        }
        ret = compiler(name);
        cache[name] = ret;
        cache[" size"]++;
        if (cache[" size"] > 512) {
            var keys = Object.keys(cache);
            for (var i = 0; i < 256; ++i) delete cache[keys[i]];
            cache[" size"] = keys.length - 256;
        }
    }
    return ret;
};

getMethodCaller = function(name) {
    return getCompiled(name, makeMethodCaller, callerCache);
};

getGetter = function(name) {
    return getCompiled(name, makeGetter, getterCache);
};
}

function ensureMethod(obj, methodName) {
    var fn;
    if (obj != null) fn = obj[methodName];
    if (typeof fn !== "function") {
        var message = "Object " + util.classString(obj) + " has no method '" +
            util.toString(methodName) + "'";
        throw new Promise.TypeError(message);
    }
    return fn;
}

function caller(obj) {
    var methodName = this.pop();
    var fn = ensureMethod(obj, methodName);
    return fn.apply(obj, this);
}
Promise.prototype.call = function (methodName) {
    var args = [].slice.call(arguments, 1);;
    if (false) {
        if (canEvaluate) {
            var maybeCaller = getMethodCaller(methodName);
            if (maybeCaller !== null) {
                return this._then(
                    maybeCaller, undefined, undefined, args, undefined);
            }
        }
    }
    args.push(methodName);
    return this._then(caller, undefined, undefined, args, undefined);
};

function namedGetter(obj) {
    return obj[this];
}
function indexedGetter(obj) {
    var index = +this;
    if (index < 0) index = Math.max(0, index + obj.length);
    return obj[index];
}
Promise.prototype.get = function (propertyName) {
    var isIndex = (typeof propertyName === "number");
    var getter;
    if (!isIndex) {
        if (canEvaluate) {
            var maybeGetter = getGetter(propertyName);
            getter = maybeGetter !== null ? maybeGetter : namedGetter;
        } else {
            getter = namedGetter;
        }
    } else {
        getter = indexedGetter;
    }
    return this._then(getter, undefined, undefined, propertyName, undefined);
};
};

},{"./util":36}],6:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, PromiseArray, apiRejection, debug) {
var util = _dereq_("./util");
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;
var async = Promise._async;

Promise.prototype["break"] = Promise.prototype.cancel = function() {
    if (!debug.cancellation()) return this._warn("cancellation is disabled");

    var promise = this;
    var child = promise;
    while (promise._isCancellable()) {
        if (!promise._cancelBy(child)) {
            if (child._isFollowing()) {
                child._followee().cancel();
            } else {
                child._cancelBranched();
            }
            break;
        }

        var parent = promise._cancellationParent;
        if (parent == null || !parent._isCancellable()) {
            if (promise._isFollowing()) {
                promise._followee().cancel();
            } else {
                promise._cancelBranched();
            }
            break;
        } else {
            if (promise._isFollowing()) promise._followee().cancel();
            promise._setWillBeCancelled();
            child = promise;
            promise = parent;
        }
    }
};

Promise.prototype._branchHasCancelled = function() {
    this._branchesRemainingToCancel--;
};

Promise.prototype._enoughBranchesHaveCancelled = function() {
    return this._branchesRemainingToCancel === undefined ||
           this._branchesRemainingToCancel <= 0;
};

Promise.prototype._cancelBy = function(canceller) {
    if (canceller === this) {
        this._branchesRemainingToCancel = 0;
        this._invokeOnCancel();
        return true;
    } else {
        this._branchHasCancelled();
        if (this._enoughBranchesHaveCancelled()) {
            this._invokeOnCancel();
            return true;
        }
    }
    return false;
};

Promise.prototype._cancelBranched = function() {
    if (this._enoughBranchesHaveCancelled()) {
        this._cancel();
    }
};

Promise.prototype._cancel = function() {
    if (!this._isCancellable()) return;
    this._setCancelled();
    async.invoke(this._cancelPromises, this, undefined);
};

Promise.prototype._cancelPromises = function() {
    if (this._length() > 0) this._settlePromises();
};

Promise.prototype._unsetOnCancel = function() {
    this._onCancelField = undefined;
};

Promise.prototype._isCancellable = function() {
    return this.isPending() && !this._isCancelled();
};

Promise.prototype.isCancellable = function() {
    return this.isPending() && !this.isCancelled();
};

Promise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {
    if (util.isArray(onCancelCallback)) {
        for (var i = 0; i < onCancelCallback.length; ++i) {
            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);
        }
    } else if (onCancelCallback !== undefined) {
        if (typeof onCancelCallback === "function") {
            if (!internalOnly) {
                var e = tryCatch(onCancelCallback).call(this._boundValue());
                if (e === errorObj) {
                    this._attachExtraTrace(e.e);
                    async.throwLater(e.e);
                }
            }
        } else {
            onCancelCallback._resultCancelled(this);
        }
    }
};

Promise.prototype._invokeOnCancel = function() {
    var onCancelCallback = this._onCancel();
    this._unsetOnCancel();
    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);
};

Promise.prototype._invokeInternalOnCancel = function() {
    if (this._isCancellable()) {
        this._doInvokeOnCancel(this._onCancel(), true);
        this._unsetOnCancel();
    }
};

Promise.prototype._resultCancelled = function() {
    this.cancel();
};

};

},{"./util":36}],7:[function(_dereq_,module,exports){
"use strict";
module.exports = function(NEXT_FILTER) {
var util = _dereq_("./util");
var getKeys = _dereq_("./es5").keys;
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;

function catchFilter(instances, cb, promise) {
    return function(e) {
        var boundTo = promise._boundValue();
        predicateLoop: for (var i = 0; i < instances.length; ++i) {
            var item = instances[i];

            if (item === Error ||
                (item != null && item.prototype instanceof Error)) {
                if (e instanceof item) {
                    return tryCatch(cb).call(boundTo, e);
                }
            } else if (typeof item === "function") {
                var matchesPredicate = tryCatch(item).call(boundTo, e);
                if (matchesPredicate === errorObj) {
                    return matchesPredicate;
                } else if (matchesPredicate) {
                    return tryCatch(cb).call(boundTo, e);
                }
            } else if (util.isObject(e)) {
                var keys = getKeys(item);
                for (var j = 0; j < keys.length; ++j) {
                    var key = keys[j];
                    if (item[key] != e[key]) {
                        continue predicateLoop;
                    }
                }
                return tryCatch(cb).call(boundTo, e);
            }
        }
        return NEXT_FILTER;
    };
}

return catchFilter;
};

},{"./es5":13,"./util":36}],8:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
var longStackTraces = false;
var contextStack = [];

Promise.prototype._promiseCreated = function() {};
Promise.prototype._pushContext = function() {};
Promise.prototype._popContext = function() {return null;};
Promise._peekContext = Promise.prototype._peekContext = function() {};

function Context() {
    this._trace = new Context.CapturedTrace(peekContext());
}
Context.prototype._pushContext = function () {
    if (this._trace !== undefined) {
        this._trace._promiseCreated = null;
        contextStack.push(this._trace);
    }
};

Context.prototype._popContext = function () {
    if (this._trace !== undefined) {
        var trace = contextStack.pop();
        var ret = trace._promiseCreated;
        trace._promiseCreated = null;
        return ret;
    }
    return null;
};

function createContext() {
    if (longStackTraces) return new Context();
}

function peekContext() {
    var lastIndex = contextStack.length - 1;
    if (lastIndex >= 0) {
        return contextStack[lastIndex];
    }
    return undefined;
}
Context.CapturedTrace = null;
Context.create = createContext;
Context.deactivateLongStackTraces = function() {};
Context.activateLongStackTraces = function() {
    var Promise_pushContext = Promise.prototype._pushContext;
    var Promise_popContext = Promise.prototype._popContext;
    var Promise_PeekContext = Promise._peekContext;
    var Promise_peekContext = Promise.prototype._peekContext;
    var Promise_promiseCreated = Promise.prototype._promiseCreated;
    Context.deactivateLongStackTraces = function() {
        Promise.prototype._pushContext = Promise_pushContext;
        Promise.prototype._popContext = Promise_popContext;
        Promise._peekContext = Promise_PeekContext;
        Promise.prototype._peekContext = Promise_peekContext;
        Promise.prototype._promiseCreated = Promise_promiseCreated;
        longStackTraces = false;
    };
    longStackTraces = true;
    Promise.prototype._pushContext = Context.prototype._pushContext;
    Promise.prototype._popContext = Context.prototype._popContext;
    Promise._peekContext = Promise.prototype._peekContext = peekContext;
    Promise.prototype._promiseCreated = function() {
        var ctx = this._peekContext();
        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;
    };
};
return Context;
};

},{}],9:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, Context) {
var getDomain = Promise._getDomain;
var async = Promise._async;
var Warning = _dereq_("./errors").Warning;
var util = _dereq_("./util");
var canAttachTrace = util.canAttachTrace;
var unhandledRejectionHandled;
var possiblyUnhandledRejection;
var bluebirdFramePattern =
    /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/;
var nodeFramePattern = /\((?:timers\.js):\d+:\d+\)/;
var parseLinePattern = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/;
var stackFramePattern = null;
var formatStack = null;
var indentStackFrames = false;
var printWarning;
var debugging = !!(util.env("BLUEBIRD_DEBUG") != 0 &&
                        (true ||
                         util.env("BLUEBIRD_DEBUG") ||
                         util.env("NODE_ENV") === "development"));

var warnings = !!(util.env("BLUEBIRD_WARNINGS") != 0 &&
    (debugging || util.env("BLUEBIRD_WARNINGS")));

var longStackTraces = !!(util.env("BLUEBIRD_LONG_STACK_TRACES") != 0 &&
    (debugging || util.env("BLUEBIRD_LONG_STACK_TRACES")));

var wForgottenReturn = util.env("BLUEBIRD_W_FORGOTTEN_RETURN") != 0 &&
    (warnings || !!util.env("BLUEBIRD_W_FORGOTTEN_RETURN"));

Promise.prototype.suppressUnhandledRejections = function() {
    var target = this._target();
    target._bitField = ((target._bitField & (~1048576)) |
                      524288);
};

Promise.prototype._ensurePossibleRejectionHandled = function () {
    if ((this._bitField & 524288) !== 0) return;
    this._setRejectionIsUnhandled();
    async.invokeLater(this._notifyUnhandledRejection, this, undefined);
};

Promise.prototype._notifyUnhandledRejectionIsHandled = function () {
    fireRejectionEvent("rejectionHandled",
                                  unhandledRejectionHandled, undefined, this);
};

Promise.prototype._setReturnedNonUndefined = function() {
    this._bitField = this._bitField | 268435456;
};

Promise.prototype._returnedNonUndefined = function() {
    return (this._bitField & 268435456) !== 0;
};

Promise.prototype._notifyUnhandledRejection = function () {
    if (this._isRejectionUnhandled()) {
        var reason = this._settledValue();
        this._setUnhandledRejectionIsNotified();
        fireRejectionEvent("unhandledRejection",
                                      possiblyUnhandledRejection, reason, this);
    }
};

Promise.prototype._setUnhandledRejectionIsNotified = function () {
    this._bitField = this._bitField | 262144;
};

Promise.prototype._unsetUnhandledRejectionIsNotified = function () {
    this._bitField = this._bitField & (~262144);
};

Promise.prototype._isUnhandledRejectionNotified = function () {
    return (this._bitField & 262144) > 0;
};

Promise.prototype._setRejectionIsUnhandled = function () {
    this._bitField = this._bitField | 1048576;
};

Promise.prototype._unsetRejectionIsUnhandled = function () {
    this._bitField = this._bitField & (~1048576);
    if (this._isUnhandledRejectionNotified()) {
        this._unsetUnhandledRejectionIsNotified();
        this._notifyUnhandledRejectionIsHandled();
    }
};

Promise.prototype._isRejectionUnhandled = function () {
    return (this._bitField & 1048576) > 0;
};

Promise.prototype._warn = function(message, shouldUseOwnTrace, promise) {
    return warn(message, shouldUseOwnTrace, promise || this);
};

Promise.onPossiblyUnhandledRejection = function (fn) {
    var domain = getDomain();
    possiblyUnhandledRejection =
        typeof fn === "function" ? (domain === null ?
                                            fn : util.domainBind(domain, fn))
                                 : undefined;
};

Promise.onUnhandledRejectionHandled = function (fn) {
    var domain = getDomain();
    unhandledRejectionHandled =
        typeof fn === "function" ? (domain === null ?
                                            fn : util.domainBind(domain, fn))
                                 : undefined;
};

var disableLongStackTraces = function() {};
Promise.longStackTraces = function () {
    if (async.haveItemsQueued() && !config.longStackTraces) {
        throw new Error("cannot enable long stack traces after promises have been created\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    if (!config.longStackTraces && longStackTracesIsSupported()) {
        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;
        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;
        config.longStackTraces = true;
        disableLongStackTraces = function() {
            if (async.haveItemsQueued() && !config.longStackTraces) {
                throw new Error("cannot enable long stack traces after promises have been created\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
            }
            Promise.prototype._captureStackTrace = Promise_captureStackTrace;
            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;
            Context.deactivateLongStackTraces();
            async.enableTrampoline();
            config.longStackTraces = false;
        };
        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;
        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;
        Context.activateLongStackTraces();
        async.disableTrampolineIfNecessary();
    }
};

Promise.hasLongStackTraces = function () {
    return config.longStackTraces && longStackTracesIsSupported();
};

var fireDomEvent = (function() {
    try {
        if (typeof CustomEvent === "function") {
            var event = new CustomEvent("CustomEvent");
            util.global.dispatchEvent(event);
            return function(name, event) {
                var domEvent = new CustomEvent(name.toLowerCase(), {
                    detail: event,
                    cancelable: true
                });
                return !util.global.dispatchEvent(domEvent);
            };
        } else if (typeof Event === "function") {
            var event = new Event("CustomEvent");
            util.global.dispatchEvent(event);
            return function(name, event) {
                var domEvent = new Event(name.toLowerCase(), {
                    cancelable: true
                });
                domEvent.detail = event;
                return !util.global.dispatchEvent(domEvent);
            };
        } else {
            var event = document.createEvent("CustomEvent");
            event.initCustomEvent("testingtheevent", false, true, {});
            util.global.dispatchEvent(event);
            return function(name, event) {
                var domEvent = document.createEvent("CustomEvent");
                domEvent.initCustomEvent(name.toLowerCase(), false, true,
                    event);
                return !util.global.dispatchEvent(domEvent);
            };
        }
    } catch (e) {}
    return function() {
        return false;
    };
})();

var fireGlobalEvent = (function() {
    if (util.isNode) {
        return function() {
            return process.emit.apply(process, arguments);
        };
    } else {
        if (!util.global) {
            return function() {
                return false;
            };
        }
        return function(name) {
            var methodName = "on" + name.toLowerCase();
            var method = util.global[methodName];
            if (!method) return false;
            method.apply(util.global, [].slice.call(arguments, 1));
            return true;
        };
    }
})();

function generatePromiseLifecycleEventObject(name, promise) {
    return {promise: promise};
}

var eventToObjectGenerator = {
    promiseCreated: generatePromiseLifecycleEventObject,
    promiseFulfilled: generatePromiseLifecycleEventObject,
    promiseRejected: generatePromiseLifecycleEventObject,
    promiseResolved: generatePromiseLifecycleEventObject,
    promiseCancelled: generatePromiseLifecycleEventObject,
    promiseChained: function(name, promise, child) {
        return {promise: promise, child: child};
    },
    warning: function(name, warning) {
        return {warning: warning};
    },
    unhandledRejection: function (name, reason, promise) {
        return {reason: reason, promise: promise};
    },
    rejectionHandled: generatePromiseLifecycleEventObject
};

var activeFireEvent = function (name) {
    var globalEventFired = false;
    try {
        globalEventFired = fireGlobalEvent.apply(null, arguments);
    } catch (e) {
        async.throwLater(e);
        globalEventFired = true;
    }

    var domEventFired = false;
    try {
        domEventFired = fireDomEvent(name,
                    eventToObjectGenerator[name].apply(null, arguments));
    } catch (e) {
        async.throwLater(e);
        domEventFired = true;
    }

    return domEventFired || globalEventFired;
};

Promise.config = function(opts) {
    opts = Object(opts);
    if ("longStackTraces" in opts) {
        if (opts.longStackTraces) {
            Promise.longStackTraces();
        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {
            disableLongStackTraces();
        }
    }
    if ("warnings" in opts) {
        var warningsOption = opts.warnings;
        config.warnings = !!warningsOption;
        wForgottenReturn = config.warnings;

        if (util.isObject(warningsOption)) {
            if ("wForgottenReturn" in warningsOption) {
                wForgottenReturn = !!warningsOption.wForgottenReturn;
            }
        }
    }
    if ("cancellation" in opts && opts.cancellation && !config.cancellation) {
        if (async.haveItemsQueued()) {
            throw new Error(
                "cannot enable cancellation after promises are in use");
        }
        Promise.prototype._clearCancellationData =
            cancellationClearCancellationData;
        Promise.prototype._propagateFrom = cancellationPropagateFrom;
        Promise.prototype._onCancel = cancellationOnCancel;
        Promise.prototype._setOnCancel = cancellationSetOnCancel;
        Promise.prototype._attachCancellationCallback =
            cancellationAttachCancellationCallback;
        Promise.prototype._execute = cancellationExecute;
        propagateFromFunction = cancellationPropagateFrom;
        config.cancellation = true;
    }
    if ("monitoring" in opts) {
        if (opts.monitoring && !config.monitoring) {
            config.monitoring = true;
            Promise.prototype._fireEvent = activeFireEvent;
        } else if (!opts.monitoring && config.monitoring) {
            config.monitoring = false;
            Promise.prototype._fireEvent = defaultFireEvent;
        }
    }
    return Promise;
};

function defaultFireEvent() { return false; }

Promise.prototype._fireEvent = defaultFireEvent;
Promise.prototype._execute = function(executor, resolve, reject) {
    try {
        executor(resolve, reject);
    } catch (e) {
        return e;
    }
};
Promise.prototype._onCancel = function () {};
Promise.prototype._setOnCancel = function (handler) { ; };
Promise.prototype._attachCancellationCallback = function(onCancel) {
    ;
};
Promise.prototype._captureStackTrace = function () {};
Promise.prototype._attachExtraTrace = function () {};
Promise.prototype._clearCancellationData = function() {};
Promise.prototype._propagateFrom = function (parent, flags) {
    ;
    ;
};

function cancellationExecute(executor, resolve, reject) {
    var promise = this;
    try {
        executor(resolve, reject, function(onCancel) {
            if (typeof onCancel !== "function") {
                throw new TypeError("onCancel must be a function, got: " +
                                    util.toString(onCancel));
            }
            promise._attachCancellationCallback(onCancel);
        });
    } catch (e) {
        return e;
    }
}

function cancellationAttachCancellationCallback(onCancel) {
    if (!this._isCancellable()) return this;

    var previousOnCancel = this._onCancel();
    if (previousOnCancel !== undefined) {
        if (util.isArray(previousOnCancel)) {
            previousOnCancel.push(onCancel);
        } else {
            this._setOnCancel([previousOnCancel, onCancel]);
        }
    } else {
        this._setOnCancel(onCancel);
    }
}

function cancellationOnCancel() {
    return this._onCancelField;
}

function cancellationSetOnCancel(onCancel) {
    this._onCancelField = onCancel;
}

function cancellationClearCancellationData() {
    this._cancellationParent = undefined;
    this._onCancelField = undefined;
}

function cancellationPropagateFrom(parent, flags) {
    if ((flags & 1) !== 0) {
        this._cancellationParent = parent;
        var branchesRemainingToCancel = parent._branchesRemainingToCancel;
        if (branchesRemainingToCancel === undefined) {
            branchesRemainingToCancel = 0;
        }
        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;
    }
    if ((flags & 2) !== 0 && parent._isBound()) {
        this._setBoundTo(parent._boundTo);
    }
}

function bindingPropagateFrom(parent, flags) {
    if ((flags & 2) !== 0 && parent._isBound()) {
        this._setBoundTo(parent._boundTo);
    }
}
var propagateFromFunction = bindingPropagateFrom;

function boundValueFunction() {
    var ret = this._boundTo;
    if (ret !== undefined) {
        if (ret instanceof Promise) {
            if (ret.isFulfilled()) {
                return ret.value();
            } else {
                return undefined;
            }
        }
    }
    return ret;
}

function longStackTracesCaptureStackTrace() {
    this._trace = new CapturedTrace(this._peekContext());
}

function longStackTracesAttachExtraTrace(error, ignoreSelf) {
    if (canAttachTrace(error)) {
        var trace = this._trace;
        if (trace !== undefined) {
            if (ignoreSelf) trace = trace._parent;
        }
        if (trace !== undefined) {
            trace.attachExtraTrace(error);
        } else if (!error.__stackCleaned__) {
            var parsed = parseStackAndMessage(error);
            util.notEnumerableProp(error, "stack",
                parsed.message + "\n" + parsed.stack.join("\n"));
            util.notEnumerableProp(error, "__stackCleaned__", true);
        }
    }
}

function checkForgottenReturns(returnValue, promiseCreated, name, promise,
                               parent) {
    if (returnValue === undefined && promiseCreated !== null &&
        wForgottenReturn) {
        if (parent !== undefined && parent._returnedNonUndefined()) return;
        if ((promise._bitField & 65535) === 0) return;

        if (name) name = name + " ";
        var handlerLine = "";
        var creatorLine = "";
        if (promiseCreated._trace) {
            var traceLines = promiseCreated._trace.stack.split("\n");
            var stack = cleanStack(traceLines);
            for (var i = stack.length - 1; i >= 0; --i) {
                var line = stack[i];
                if (!nodeFramePattern.test(line)) {
                    var lineMatches = line.match(parseLinePattern);
                    if (lineMatches) {
                        handlerLine  = "at " + lineMatches[1] +
                            ":" + lineMatches[2] + ":" + lineMatches[3] + " ";
                    }
                    break;
                }
            }

            if (stack.length > 0) {
                var firstUserLine = stack[0];
                for (var i = 0; i < traceLines.length; ++i) {

                    if (traceLines[i] === firstUserLine) {
                        if (i > 0) {
                            creatorLine = "\n" + traceLines[i - 1];
                        }
                        break;
                    }
                }

            }
        }
        var msg = "a promise was created in a " + name +
            "handler " + handlerLine + "but was not returned from it, " +
            "see http://goo.gl/rRqMUw" +
            creatorLine;
        promise._warn(msg, true, promiseCreated);
    }
}

function deprecated(name, replacement) {
    var message = name +
        " is deprecated and will be removed in a future version.";
    if (replacement) message += " Use " + replacement + " instead.";
    return warn(message);
}

function warn(message, shouldUseOwnTrace, promise) {
    if (!config.warnings) return;
    var warning = new Warning(message);
    var ctx;
    if (shouldUseOwnTrace) {
        promise._attachExtraTrace(warning);
    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {
        ctx.attachExtraTrace(warning);
    } else {
        var parsed = parseStackAndMessage(warning);
        warning.stack = parsed.message + "\n" + parsed.stack.join("\n");
    }

    if (!activeFireEvent("warning", warning)) {
        formatAndLogError(warning, "", true);
    }
}

function reconstructStack(message, stacks) {
    for (var i = 0; i < stacks.length - 1; ++i) {
        stacks[i].push("From previous event:");
        stacks[i] = stacks[i].join("\n");
    }
    if (i < stacks.length) {
        stacks[i] = stacks[i].join("\n");
    }
    return message + "\n" + stacks.join("\n");
}

function removeDuplicateOrEmptyJumps(stacks) {
    for (var i = 0; i < stacks.length; ++i) {
        if (stacks[i].length === 0 ||
            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {
            stacks.splice(i, 1);
            i--;
        }
    }
}

function removeCommonRoots(stacks) {
    var current = stacks[0];
    for (var i = 1; i < stacks.length; ++i) {
        var prev = stacks[i];
        var currentLastIndex = current.length - 1;
        var currentLastLine = current[currentLastIndex];
        var commonRootMeetPoint = -1;

        for (var j = prev.length - 1; j >= 0; --j) {
            if (prev[j] === currentLastLine) {
                commonRootMeetPoint = j;
                break;
            }
        }

        for (var j = commonRootMeetPoint; j >= 0; --j) {
            var line = prev[j];
            if (current[currentLastIndex] === line) {
                current.pop();
                currentLastIndex--;
            } else {
                break;
            }
        }
        current = prev;
    }
}

function cleanStack(stack) {
    var ret = [];
    for (var i = 0; i < stack.length; ++i) {
        var line = stack[i];
        var isTraceLine = "    (No stack trace)" === line ||
            stackFramePattern.test(line);
        var isInternalFrame = isTraceLine && shouldIgnore(line);
        if (isTraceLine && !isInternalFrame) {
            if (indentStackFrames && line.charAt(0) !== " ") {
                line = "    " + line;
            }
            ret.push(line);
        }
    }
    return ret;
}

function stackFramesAsArray(error) {
    var stack = error.stack.replace(/\s+$/g, "").split("\n");
    for (var i = 0; i < stack.length; ++i) {
        var line = stack[i];
        if ("    (No stack trace)" === line || stackFramePattern.test(line)) {
            break;
        }
    }
    if (i > 0 && error.name != "SyntaxError") {
        stack = stack.slice(i);
    }
    return stack;
}

function parseStackAndMessage(error) {
    var stack = error.stack;
    var message = error.toString();
    stack = typeof stack === "string" && stack.length > 0
                ? stackFramesAsArray(error) : ["    (No stack trace)"];
    return {
        message: message,
        stack: error.name == "SyntaxError" ? stack : cleanStack(stack)
    };
}

function formatAndLogError(error, title, isSoft) {
    if (typeof console !== "undefined") {
        var message;
        if (util.isObject(error)) {
            var stack = error.stack;
            message = title + formatStack(stack, error);
        } else {
            message = title + String(error);
        }
        if (typeof printWarning === "function") {
            printWarning(message, isSoft);
        } else if (typeof console.log === "function" ||
            typeof console.log === "object") {
            console.log(message);
        }
    }
}

function fireRejectionEvent(name, localHandler, reason, promise) {
    var localEventFired = false;
    try {
        if (typeof localHandler === "function") {
            localEventFired = true;
            if (name === "rejectionHandled") {
                localHandler(promise);
            } else {
                localHandler(reason, promise);
            }
        }
    } catch (e) {
        async.throwLater(e);
    }

    if (name === "unhandledRejection") {
        if (!activeFireEvent(name, reason, promise) && !localEventFired) {
            formatAndLogError(reason, "Unhandled rejection ");
        }
    } else {
        activeFireEvent(name, promise);
    }
}

function formatNonError(obj) {
    var str;
    if (typeof obj === "function") {
        str = "[function " +
            (obj.name || "anonymous") +
            "]";
    } else {
        str = obj && typeof obj.toString === "function"
            ? obj.toString() : util.toString(obj);
        var ruselessToString = /\[object [a-zA-Z0-9$_]+\]/;
        if (ruselessToString.test(str)) {
            try {
                var newStr = JSON.stringify(obj);
                str = newStr;
            }
            catch(e) {

            }
        }
        if (str.length === 0) {
            str = "(empty array)";
        }
    }
    return ("(<" + snip(str) + ">, no stack trace)");
}

function snip(str) {
    var maxChars = 41;
    if (str.length < maxChars) {
        return str;
    }
    return str.substr(0, maxChars - 3) + "...";
}

function longStackTracesIsSupported() {
    return typeof captureStackTrace === "function";
}

var shouldIgnore = function() { return false; };
var parseLineInfoRegex = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
function parseLineInfo(line) {
    var matches = line.match(parseLineInfoRegex);
    if (matches) {
        return {
            fileName: matches[1],
            line: parseInt(matches[2], 10)
        };
    }
}

function setBounds(firstLineError, lastLineError) {
    if (!longStackTracesIsSupported()) return;
    var firstStackLines = firstLineError.stack.split("\n");
    var lastStackLines = lastLineError.stack.split("\n");
    var firstIndex = -1;
    var lastIndex = -1;
    var firstFileName;
    var lastFileName;
    for (var i = 0; i < firstStackLines.length; ++i) {
        var result = parseLineInfo(firstStackLines[i]);
        if (result) {
            firstFileName = result.fileName;
            firstIndex = result.line;
            break;
        }
    }
    for (var i = 0; i < lastStackLines.length; ++i) {
        var result = parseLineInfo(lastStackLines[i]);
        if (result) {
            lastFileName = result.fileName;
            lastIndex = result.line;
            break;
        }
    }
    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||
        firstFileName !== lastFileName || firstIndex >= lastIndex) {
        return;
    }

    shouldIgnore = function(line) {
        if (bluebirdFramePattern.test(line)) return true;
        var info = parseLineInfo(line);
        if (info) {
            if (info.fileName === firstFileName &&
                (firstIndex <= info.line && info.line <= lastIndex)) {
                return true;
            }
        }
        return false;
    };
}

function CapturedTrace(parent) {
    this._parent = parent;
    this._promisesCreated = 0;
    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);
    captureStackTrace(this, CapturedTrace);
    if (length > 32) this.uncycle();
}
util.inherits(CapturedTrace, Error);
Context.CapturedTrace = CapturedTrace;

CapturedTrace.prototype.uncycle = function() {
    var length = this._length;
    if (length < 2) return;
    var nodes = [];
    var stackToIndex = {};

    for (var i = 0, node = this; node !== undefined; ++i) {
        nodes.push(node);
        node = node._parent;
    }
    length = this._length = i;
    for (var i = length - 1; i >= 0; --i) {
        var stack = nodes[i].stack;
        if (stackToIndex[stack] === undefined) {
            stackToIndex[stack] = i;
        }
    }
    for (var i = 0; i < length; ++i) {
        var currentStack = nodes[i].stack;
        var index = stackToIndex[currentStack];
        if (index !== undefined && index !== i) {
            if (index > 0) {
                nodes[index - 1]._parent = undefined;
                nodes[index - 1]._length = 1;
            }
            nodes[i]._parent = undefined;
            nodes[i]._length = 1;
            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;

            if (index < length - 1) {
                cycleEdgeNode._parent = nodes[index + 1];
                cycleEdgeNode._parent.uncycle();
                cycleEdgeNode._length =
                    cycleEdgeNode._parent._length + 1;
            } else {
                cycleEdgeNode._parent = undefined;
                cycleEdgeNode._length = 1;
            }
            var currentChildLength = cycleEdgeNode._length + 1;
            for (var j = i - 2; j >= 0; --j) {
                nodes[j]._length = currentChildLength;
                currentChildLength++;
            }
            return;
        }
    }
};

CapturedTrace.prototype.attachExtraTrace = function(error) {
    if (error.__stackCleaned__) return;
    this.uncycle();
    var parsed = parseStackAndMessage(error);
    var message = parsed.message;
    var stacks = [parsed.stack];

    var trace = this;
    while (trace !== undefined) {
        stacks.push(cleanStack(trace.stack.split("\n")));
        trace = trace._parent;
    }
    removeCommonRoots(stacks);
    removeDuplicateOrEmptyJumps(stacks);
    util.notEnumerableProp(error, "stack", reconstructStack(message, stacks));
    util.notEnumerableProp(error, "__stackCleaned__", true);
};

var captureStackTrace = (function stackDetection() {
    var v8stackFramePattern = /^\s*at\s*/;
    var v8stackFormatter = function(stack, error) {
        if (typeof stack === "string") return stack;

        if (error.name !== undefined &&
            error.message !== undefined) {
            return error.toString();
        }
        return formatNonError(error);
    };

    if (typeof Error.stackTraceLimit === "number" &&
        typeof Error.captureStackTrace === "function") {
        Error.stackTraceLimit += 6;
        stackFramePattern = v8stackFramePattern;
        formatStack = v8stackFormatter;
        var captureStackTrace = Error.captureStackTrace;

        shouldIgnore = function(line) {
            return bluebirdFramePattern.test(line);
        };
        return function(receiver, ignoreUntil) {
            Error.stackTraceLimit += 6;
            captureStackTrace(receiver, ignoreUntil);
            Error.stackTraceLimit -= 6;
        };
    }
    var err = new Error();

    if (typeof err.stack === "string" &&
        err.stack.split("\n")[0].indexOf("stackDetection@") >= 0) {
        stackFramePattern = /@/;
        formatStack = v8stackFormatter;
        indentStackFrames = true;
        return function captureStackTrace(o) {
            o.stack = new Error().stack;
        };
    }

    var hasStackAfterThrow;
    try { throw new Error(); }
    catch(e) {
        hasStackAfterThrow = ("stack" in e);
    }
    if (!("stack" in err) && hasStackAfterThrow &&
        typeof Error.stackTraceLimit === "number") {
        stackFramePattern = v8stackFramePattern;
        formatStack = v8stackFormatter;
        return function captureStackTrace(o) {
            Error.stackTraceLimit += 6;
            try { throw new Error(); }
            catch(e) { o.stack = e.stack; }
            Error.stackTraceLimit -= 6;
        };
    }

    formatStack = function(stack, error) {
        if (typeof stack === "string") return stack;

        if ((typeof error === "object" ||
            typeof error === "function") &&
            error.name !== undefined &&
            error.message !== undefined) {
            return error.toString();
        }
        return formatNonError(error);
    };

    return null;

})([]);

if (typeof console !== "undefined" && typeof console.warn !== "undefined") {
    printWarning = function (message) {
        console.warn(message);
    };
    if (util.isNode && process.stderr.isTTY) {
        printWarning = function(message, isSoft) {
            var color = isSoft ? "\u001b[33m" : "\u001b[31m";
            console.warn(color + message + "\u001b[0m\n");
        };
    } else if (!util.isNode && typeof (new Error().stack) === "string") {
        printWarning = function(message, isSoft) {
            console.warn("%c" + message,
                        isSoft ? "color: darkorange" : "color: red");
        };
    }
}

var config = {
    warnings: warnings,
    longStackTraces: false,
    cancellation: false,
    monitoring: false
};

if (longStackTraces) Promise.longStackTraces();

return {
    longStackTraces: function() {
        return config.longStackTraces;
    },
    warnings: function() {
        return config.warnings;
    },
    cancellation: function() {
        return config.cancellation;
    },
    monitoring: function() {
        return config.monitoring;
    },
    propagateFromFunction: function() {
        return propagateFromFunction;
    },
    boundValueFunction: function() {
        return boundValueFunction;
    },
    checkForgottenReturns: checkForgottenReturns,
    setBounds: setBounds,
    warn: warn,
    deprecated: deprecated,
    CapturedTrace: CapturedTrace,
    fireDomEvent: fireDomEvent,
    fireGlobalEvent: fireGlobalEvent
};
};

},{"./errors":12,"./util":36}],10:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
function returner() {
    return this.value;
}
function thrower() {
    throw this.reason;
}

Promise.prototype["return"] =
Promise.prototype.thenReturn = function (value) {
    if (value instanceof Promise) value.suppressUnhandledRejections();
    return this._then(
        returner, undefined, undefined, {value: value}, undefined);
};

Promise.prototype["throw"] =
Promise.prototype.thenThrow = function (reason) {
    return this._then(
        thrower, undefined, undefined, {reason: reason}, undefined);
};

Promise.prototype.catchThrow = function (reason) {
    if (arguments.length <= 1) {
        return this._then(
            undefined, thrower, undefined, {reason: reason}, undefined);
    } else {
        var _reason = arguments[1];
        var handler = function() {throw _reason;};
        return this.caught(reason, handler);
    }
};

Promise.prototype.catchReturn = function (value) {
    if (arguments.length <= 1) {
        if (value instanceof Promise) value.suppressUnhandledRejections();
        return this._then(
            undefined, returner, undefined, {value: value}, undefined);
    } else {
        var _value = arguments[1];
        if (_value instanceof Promise) _value.suppressUnhandledRejections();
        var handler = function() {return _value;};
        return this.caught(value, handler);
    }
};
};

},{}],11:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL) {
var PromiseReduce = Promise.reduce;
var PromiseAll = Promise.all;

function promiseAllThis() {
    return PromiseAll(this);
}

function PromiseMapSeries(promises, fn) {
    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);
}

Promise.prototype.each = function (fn) {
    return PromiseReduce(this, fn, INTERNAL, 0)
              ._then(promiseAllThis, undefined, undefined, this, undefined);
};

Promise.prototype.mapSeries = function (fn) {
    return PromiseReduce(this, fn, INTERNAL, INTERNAL);
};

Promise.each = function (promises, fn) {
    return PromiseReduce(promises, fn, INTERNAL, 0)
              ._then(promiseAllThis, undefined, undefined, promises, undefined);
};

Promise.mapSeries = PromiseMapSeries;
};


},{}],12:[function(_dereq_,module,exports){
"use strict";
var es5 = _dereq_("./es5");
var Objectfreeze = es5.freeze;
var util = _dereq_("./util");
var inherits = util.inherits;
var notEnumerableProp = util.notEnumerableProp;

function subError(nameProperty, defaultMessage) {
    function SubError(message) {
        if (!(this instanceof SubError)) return new SubError(message);
        notEnumerableProp(this, "message",
            typeof message === "string" ? message : defaultMessage);
        notEnumerableProp(this, "name", nameProperty);
        if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
        } else {
            Error.call(this);
        }
    }
    inherits(SubError, Error);
    return SubError;
}

var _TypeError, _RangeError;
var Warning = subError("Warning", "warning");
var CancellationError = subError("CancellationError", "cancellation error");
var TimeoutError = subError("TimeoutError", "timeout error");
var AggregateError = subError("AggregateError", "aggregate error");
try {
    _TypeError = TypeError;
    _RangeError = RangeError;
} catch(e) {
    _TypeError = subError("TypeError", "type error");
    _RangeError = subError("RangeError", "range error");
}

var methods = ("join pop push shift unshift slice filter forEach some " +
    "every map indexOf lastIndexOf reduce reduceRight sort reverse").split(" ");

for (var i = 0; i < methods.length; ++i) {
    if (typeof Array.prototype[methods[i]] === "function") {
        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];
    }
}

es5.defineProperty(AggregateError.prototype, "length", {
    value: 0,
    configurable: false,
    writable: true,
    enumerable: true
});
AggregateError.prototype["isOperational"] = true;
var level = 0;
AggregateError.prototype.toString = function() {
    var indent = Array(level * 4 + 1).join(" ");
    var ret = "\n" + indent + "AggregateError of:" + "\n";
    level++;
    indent = Array(level * 4 + 1).join(" ");
    for (var i = 0; i < this.length; ++i) {
        var str = this[i] === this ? "[Circular AggregateError]" : this[i] + "";
        var lines = str.split("\n");
        for (var j = 0; j < lines.length; ++j) {
            lines[j] = indent + lines[j];
        }
        str = lines.join("\n");
        ret += str + "\n";
    }
    level--;
    return ret;
};

function OperationalError(message) {
    if (!(this instanceof OperationalError))
        return new OperationalError(message);
    notEnumerableProp(this, "name", "OperationalError");
    notEnumerableProp(this, "message", message);
    this.cause = message;
    this["isOperational"] = true;

    if (message instanceof Error) {
        notEnumerableProp(this, "message", message.message);
        notEnumerableProp(this, "stack", message.stack);
    } else if (Error.captureStackTrace) {
        Error.captureStackTrace(this, this.constructor);
    }

}
inherits(OperationalError, Error);

var errorTypes = Error["__BluebirdErrorTypes__"];
if (!errorTypes) {
    errorTypes = Objectfreeze({
        CancellationError: CancellationError,
        TimeoutError: TimeoutError,
        OperationalError: OperationalError,
        RejectionError: OperationalError,
        AggregateError: AggregateError
    });
    es5.defineProperty(Error, "__BluebirdErrorTypes__", {
        value: errorTypes,
        writable: false,
        enumerable: false,
        configurable: false
    });
}

module.exports = {
    Error: Error,
    TypeError: _TypeError,
    RangeError: _RangeError,
    CancellationError: errorTypes.CancellationError,
    OperationalError: errorTypes.OperationalError,
    TimeoutError: errorTypes.TimeoutError,
    AggregateError: errorTypes.AggregateError,
    Warning: Warning
};

},{"./es5":13,"./util":36}],13:[function(_dereq_,module,exports){
var isES5 = (function(){
    "use strict";
    return this === undefined;
})();

if (isES5) {
    module.exports = {
        freeze: Object.freeze,
        defineProperty: Object.defineProperty,
        getDescriptor: Object.getOwnPropertyDescriptor,
        keys: Object.keys,
        names: Object.getOwnPropertyNames,
        getPrototypeOf: Object.getPrototypeOf,
        isArray: Array.isArray,
        isES5: isES5,
        propertyIsWritable: function(obj, prop) {
            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
            return !!(!descriptor || descriptor.writable || descriptor.set);
        }
    };
} else {
    var has = {}.hasOwnProperty;
    var str = {}.toString;
    var proto = {}.constructor.prototype;

    var ObjectKeys = function (o) {
        var ret = [];
        for (var key in o) {
            if (has.call(o, key)) {
                ret.push(key);
            }
        }
        return ret;
    };

    var ObjectGetDescriptor = function(o, key) {
        return {value: o[key]};
    };

    var ObjectDefineProperty = function (o, key, desc) {
        o[key] = desc.value;
        return o;
    };

    var ObjectFreeze = function (obj) {
        return obj;
    };

    var ObjectGetPrototypeOf = function (obj) {
        try {
            return Object(obj).constructor.prototype;
        }
        catch (e) {
            return proto;
        }
    };

    var ArrayIsArray = function (obj) {
        try {
            return str.call(obj) === "[object Array]";
        }
        catch(e) {
            return false;
        }
    };

    module.exports = {
        isArray: ArrayIsArray,
        keys: ObjectKeys,
        names: ObjectKeys,
        defineProperty: ObjectDefineProperty,
        getDescriptor: ObjectGetDescriptor,
        freeze: ObjectFreeze,
        getPrototypeOf: ObjectGetPrototypeOf,
        isES5: isES5,
        propertyIsWritable: function() {
            return true;
        }
    };
}

},{}],14:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL) {
var PromiseMap = Promise.map;

Promise.prototype.filter = function (fn, options) {
    return PromiseMap(this, fn, options, INTERNAL);
};

Promise.filter = function (promises, fn, options) {
    return PromiseMap(promises, fn, options, INTERNAL);
};
};

},{}],15:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, tryConvertToPromise) {
var util = _dereq_("./util");
var CancellationError = Promise.CancellationError;
var errorObj = util.errorObj;

function PassThroughHandlerContext(promise, type, handler) {
    this.promise = promise;
    this.type = type;
    this.handler = handler;
    this.called = false;
    this.cancelPromise = null;
}

PassThroughHandlerContext.prototype.isFinallyHandler = function() {
    return this.type === 0;
};

function FinallyHandlerCancelReaction(finallyHandler) {
    this.finallyHandler = finallyHandler;
}

FinallyHandlerCancelReaction.prototype._resultCancelled = function() {
    checkCancel(this.finallyHandler);
};

function checkCancel(ctx, reason) {
    if (ctx.cancelPromise != null) {
        if (arguments.length > 1) {
            ctx.cancelPromise._reject(reason);
        } else {
            ctx.cancelPromise._cancel();
        }
        ctx.cancelPromise = null;
        return true;
    }
    return false;
}

function succeed() {
    return finallyHandler.call(this, this.promise._target()._settledValue());
}
function fail(reason) {
    if (checkCancel(this, reason)) return;
    errorObj.e = reason;
    return errorObj;
}
function finallyHandler(reasonOrValue) {
    var promise = this.promise;
    var handler = this.handler;

    if (!this.called) {
        this.called = true;
        var ret = this.isFinallyHandler()
            ? handler.call(promise._boundValue())
            : handler.call(promise._boundValue(), reasonOrValue);
        if (ret !== undefined) {
            promise._setReturnedNonUndefined();
            var maybePromise = tryConvertToPromise(ret, promise);
            if (maybePromise instanceof Promise) {
                if (this.cancelPromise != null) {
                    if (maybePromise._isCancelled()) {
                        var reason =
                            new CancellationError("late cancellation observer");
                        promise._attachExtraTrace(reason);
                        errorObj.e = reason;
                        return errorObj;
                    } else if (maybePromise.isPending()) {
                        maybePromise._attachCancellationCallback(
                            new FinallyHandlerCancelReaction(this));
                    }
                }
                return maybePromise._then(
                    succeed, fail, undefined, this, undefined);
            }
        }
    }

    if (promise.isRejected()) {
        checkCancel(this);
        errorObj.e = reasonOrValue;
        return errorObj;
    } else {
        checkCancel(this);
        return reasonOrValue;
    }
}

Promise.prototype._passThrough = function(handler, type, success, fail) {
    if (typeof handler !== "function") return this.then();
    return this._then(success,
                      fail,
                      undefined,
                      new PassThroughHandlerContext(this, type, handler),
                      undefined);
};

Promise.prototype.lastly =
Promise.prototype["finally"] = function (handler) {
    return this._passThrough(handler,
                             0,
                             finallyHandler,
                             finallyHandler);
};

Promise.prototype.tap = function (handler) {
    return this._passThrough(handler, 1, finallyHandler);
};

return PassThroughHandlerContext;
};

},{"./util":36}],16:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise,
                          apiRejection,
                          INTERNAL,
                          tryConvertToPromise,
                          Proxyable,
                          debug) {
var errors = _dereq_("./errors");
var TypeError = errors.TypeError;
var util = _dereq_("./util");
var errorObj = util.errorObj;
var tryCatch = util.tryCatch;
var yieldHandlers = [];

function promiseFromYieldHandler(value, yieldHandlers, traceParent) {
    for (var i = 0; i < yieldHandlers.length; ++i) {
        traceParent._pushContext();
        var result = tryCatch(yieldHandlers[i])(value);
        traceParent._popContext();
        if (result === errorObj) {
            traceParent._pushContext();
            var ret = Promise.reject(errorObj.e);
            traceParent._popContext();
            return ret;
        }
        var maybePromise = tryConvertToPromise(result, traceParent);
        if (maybePromise instanceof Promise) return maybePromise;
    }
    return null;
}

function PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {
    if (debug.cancellation()) {
        var internal = new Promise(INTERNAL);
        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);
        this._promise = internal.lastly(function() {
            return _finallyPromise;
        });
        internal._captureStackTrace();
        internal._setOnCancel(this);
    } else {
        var promise = this._promise = new Promise(INTERNAL);
        promise._captureStackTrace();
    }
    this._stack = stack;
    this._generatorFunction = generatorFunction;
    this._receiver = receiver;
    this._generator = undefined;
    this._yieldHandlers = typeof yieldHandler === "function"
        ? [yieldHandler].concat(yieldHandlers)
        : yieldHandlers;
    this._yieldedPromise = null;
    this._cancellationPhase = false;
}
util.inherits(PromiseSpawn, Proxyable);

PromiseSpawn.prototype._isResolved = function() {
    return this._promise === null;
};

PromiseSpawn.prototype._cleanup = function() {
    this._promise = this._generator = null;
    if (debug.cancellation() && this._finallyPromise !== null) {
        this._finallyPromise._fulfill();
        this._finallyPromise = null;
    }
};

PromiseSpawn.prototype._promiseCancelled = function() {
    if (this._isResolved()) return;
    var implementsReturn = typeof this._generator["return"] !== "undefined";

    var result;
    if (!implementsReturn) {
        var reason = new Promise.CancellationError(
            "generator .return() sentinel");
        Promise.coroutine.returnSentinel = reason;
        this._promise._attachExtraTrace(reason);
        this._promise._pushContext();
        result = tryCatch(this._generator["throw"]).call(this._generator,
                                                         reason);
        this._promise._popContext();
    } else {
        this._promise._pushContext();
        result = tryCatch(this._generator["return"]).call(this._generator,
                                                          undefined);
        this._promise._popContext();
    }
    this._cancellationPhase = true;
    this._yieldedPromise = null;
    this._continue(result);
};

PromiseSpawn.prototype._promiseFulfilled = function(value) {
    this._yieldedPromise = null;
    this._promise._pushContext();
    var result = tryCatch(this._generator.next).call(this._generator, value);
    this._promise._popContext();
    this._continue(result);
};

PromiseSpawn.prototype._promiseRejected = function(reason) {
    this._yieldedPromise = null;
    this._promise._attachExtraTrace(reason);
    this._promise._pushContext();
    var result = tryCatch(this._generator["throw"])
        .call(this._generator, reason);
    this._promise._popContext();
    this._continue(result);
};

PromiseSpawn.prototype._resultCancelled = function() {
    if (this._yieldedPromise instanceof Promise) {
        var promise = this._yieldedPromise;
        this._yieldedPromise = null;
        promise.cancel();
    }
};

PromiseSpawn.prototype.promise = function () {
    return this._promise;
};

PromiseSpawn.prototype._run = function () {
    this._generator = this._generatorFunction.call(this._receiver);
    this._receiver =
        this._generatorFunction = undefined;
    this._promiseFulfilled(undefined);
};

PromiseSpawn.prototype._continue = function (result) {
    var promise = this._promise;
    if (result === errorObj) {
        this._cleanup();
        if (this._cancellationPhase) {
            return promise.cancel();
        } else {
            return promise._rejectCallback(result.e, false);
        }
    }

    var value = result.value;
    if (result.done === true) {
        this._cleanup();
        if (this._cancellationPhase) {
            return promise.cancel();
        } else {
            return promise._resolveCallback(value);
        }
    } else {
        var maybePromise = tryConvertToPromise(value, this._promise);
        if (!(maybePromise instanceof Promise)) {
            maybePromise =
                promiseFromYieldHandler(maybePromise,
                                        this._yieldHandlers,
                                        this._promise);
            if (maybePromise === null) {
                this._promiseRejected(
                    new TypeError(
                        "A value %s was yielded that could not be treated as a promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a\u000a".replace("%s", value) +
                        "From coroutine:\u000a" +
                        this._stack.split("\n").slice(1, -7).join("\n")
                    )
                );
                return;
            }
        }
        maybePromise = maybePromise._target();
        var bitField = maybePromise._bitField;
        ;
        if (((bitField & 50397184) === 0)) {
            this._yieldedPromise = maybePromise;
            maybePromise._proxy(this, null);
        } else if (((bitField & 33554432) !== 0)) {
            Promise._async.invoke(
                this._promiseFulfilled, this, maybePromise._value()
            );
        } else if (((bitField & 16777216) !== 0)) {
            Promise._async.invoke(
                this._promiseRejected, this, maybePromise._reason()
            );
        } else {
            this._promiseCancelled();
        }
    }
};

Promise.coroutine = function (generatorFunction, options) {
    if (typeof generatorFunction !== "function") {
        throw new TypeError("generatorFunction must be a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    var yieldHandler = Object(options).yieldHandler;
    var PromiseSpawn$ = PromiseSpawn;
    var stack = new Error().stack;
    return function () {
        var generator = generatorFunction.apply(this, arguments);
        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,
                                      stack);
        var ret = spawn.promise();
        spawn._generator = generator;
        spawn._promiseFulfilled(undefined);
        return ret;
    };
};

Promise.coroutine.addYieldHandler = function(fn) {
    if (typeof fn !== "function") {
        throw new TypeError("expecting a function but got " + util.classString(fn));
    }
    yieldHandlers.push(fn);
};

Promise.spawn = function (generatorFunction) {
    debug.deprecated("Promise.spawn()", "Promise.coroutine()");
    if (typeof generatorFunction !== "function") {
        return apiRejection("generatorFunction must be a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    var spawn = new PromiseSpawn(generatorFunction, this);
    var ret = spawn.promise();
    spawn._run(Promise.spawn);
    return ret;
};
};

},{"./errors":12,"./util":36}],17:[function(_dereq_,module,exports){
"use strict";
module.exports =
function(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,
         getDomain) {
var util = _dereq_("./util");
var canEvaluate = util.canEvaluate;
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;
var reject;

if (false) {
if (canEvaluate) {
    var thenCallback = function(i) {
        return new Function("value", "holder", "                             \n\
            'use strict';                                                    \n\
            holder.pIndex = value;                                           \n\
            holder.checkFulfillment(this);                                   \n\
            ".replace(/Index/g, i));
    };

    var promiseSetter = function(i) {
        return new Function("promise", "holder", "                           \n\
            'use strict';                                                    \n\
            holder.pIndex = promise;                                         \n\
            ".replace(/Index/g, i));
    };

    var generateHolderClass = function(total) {
        var props = new Array(total);
        for (var i = 0; i < props.length; ++i) {
            props[i] = "this.p" + (i+1);
        }
        var assignment = props.join(" = ") + " = null;";
        var cancellationCode= "var promise;\n" + props.map(function(prop) {
            return "                                                         \n\
                promise = " + prop + ";                                      \n\
                if (promise instanceof Promise) {                            \n\
                    promise.cancel();                                        \n\
                }                                                            \n\
            ";
        }).join("\n");
        var passedArguments = props.join(", ");
        var name = "Holder$" + total;


        var code = "return function(tryCatch, errorObj, Promise, async) {    \n\
            'use strict';                                                    \n\
            function [TheName](fn) {                                         \n\
                [TheProperties]                                              \n\
                this.fn = fn;                                                \n\
                this.asyncNeeded = true;                                     \n\
                this.now = 0;                                                \n\
            }                                                                \n\
                                                                             \n\
            [TheName].prototype._callFunction = function(promise) {          \n\
                promise._pushContext();                                      \n\
                var ret = tryCatch(this.fn)([ThePassedArguments]);           \n\
                promise._popContext();                                       \n\
                if (ret === errorObj) {                                      \n\
                    promise._rejectCallback(ret.e, false);                   \n\
                } else {                                                     \n\
                    promise._resolveCallback(ret);                           \n\
                }                                                            \n\
            };                                                               \n\
                                                                             \n\
            [TheName].prototype.checkFulfillment = function(promise) {       \n\
                var now = ++this.now;                                        \n\
                if (now === [TheTotal]) {                                    \n\
                    if (this.asyncNeeded) {                                  \n\
                        async.invoke(this._callFunction, this, promise);     \n\
                    } else {                                                 \n\
                        this._callFunction(promise);                         \n\
                    }                                                        \n\
                                                                             \n\
                }                                                            \n\
            };                                                               \n\
                                                                             \n\
            [TheName].prototype._resultCancelled = function() {              \n\
                [CancellationCode]                                           \n\
            };                                                               \n\
                                                                             \n\
            return [TheName];                                                \n\
        }(tryCatch, errorObj, Promise, async);                               \n\
        ";

        code = code.replace(/\[TheName\]/g, name)
            .replace(/\[TheTotal\]/g, total)
            .replace(/\[ThePassedArguments\]/g, passedArguments)
            .replace(/\[TheProperties\]/g, assignment)
            .replace(/\[CancellationCode\]/g, cancellationCode);

        return new Function("tryCatch", "errorObj", "Promise", "async", code)
                           (tryCatch, errorObj, Promise, async);
    };

    var holderClasses = [];
    var thenCallbacks = [];
    var promiseSetters = [];

    for (var i = 0; i < 8; ++i) {
        holderClasses.push(generateHolderClass(i + 1));
        thenCallbacks.push(thenCallback(i + 1));
        promiseSetters.push(promiseSetter(i + 1));
    }

    reject = function (reason) {
        this._reject(reason);
    };
}}

Promise.join = function () {
    var last = arguments.length - 1;
    var fn;
    if (last > 0 && typeof arguments[last] === "function") {
        fn = arguments[last];
        if (false) {
            if (last <= 8 && canEvaluate) {
                var ret = new Promise(INTERNAL);
                ret._captureStackTrace();
                var HolderClass = holderClasses[last - 1];
                var holder = new HolderClass(fn);
                var callbacks = thenCallbacks;

                for (var i = 0; i < last; ++i) {
                    var maybePromise = tryConvertToPromise(arguments[i], ret);
                    if (maybePromise instanceof Promise) {
                        maybePromise = maybePromise._target();
                        var bitField = maybePromise._bitField;
                        ;
                        if (((bitField & 50397184) === 0)) {
                            maybePromise._then(callbacks[i], reject,
                                               undefined, ret, holder);
                            promiseSetters[i](maybePromise, holder);
                            holder.asyncNeeded = false;
                        } else if (((bitField & 33554432) !== 0)) {
                            callbacks[i].call(ret,
                                              maybePromise._value(), holder);
                        } else if (((bitField & 16777216) !== 0)) {
                            ret._reject(maybePromise._reason());
                        } else {
                            ret._cancel();
                        }
                    } else {
                        callbacks[i].call(ret, maybePromise, holder);
                    }
                }

                if (!ret._isFateSealed()) {
                    if (holder.asyncNeeded) {
                        var domain = getDomain();
                        if (domain !== null) {
                            holder.fn = util.domainBind(domain, holder.fn);
                        }
                    }
                    ret._setAsyncGuaranteed();
                    ret._setOnCancel(holder);
                }
                return ret;
            }
        }
    }
    var args = [].slice.call(arguments);;
    if (fn) args.pop();
    var ret = new PromiseArray(args).promise();
    return fn !== undefined ? ret.spread(fn) : ret;
};

};

},{"./util":36}],18:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise,
                          PromiseArray,
                          apiRejection,
                          tryConvertToPromise,
                          INTERNAL,
                          debug) {
var getDomain = Promise._getDomain;
var util = _dereq_("./util");
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;
var async = Promise._async;

function MappingPromiseArray(promises, fn, limit, _filter) {
    this.constructor$(promises);
    this._promise._captureStackTrace();
    var domain = getDomain();
    this._callback = domain === null ? fn : util.domainBind(domain, fn);
    this._preservedValues = _filter === INTERNAL
        ? new Array(this.length())
        : null;
    this._limit = limit;
    this._inFlight = 0;
    this._queue = [];
    async.invoke(this._asyncInit, this, undefined);
}
util.inherits(MappingPromiseArray, PromiseArray);

MappingPromiseArray.prototype._asyncInit = function() {
    this._init$(undefined, -2);
};

MappingPromiseArray.prototype._init = function () {};

MappingPromiseArray.prototype._promiseFulfilled = function (value, index) {
    var values = this._values;
    var length = this.length();
    var preservedValues = this._preservedValues;
    var limit = this._limit;

    if (index < 0) {
        index = (index * -1) - 1;
        values[index] = value;
        if (limit >= 1) {
            this._inFlight--;
            this._drainQueue();
            if (this._isResolved()) return true;
        }
    } else {
        if (limit >= 1 && this._inFlight >= limit) {
            values[index] = value;
            this._queue.push(index);
            return false;
        }
        if (preservedValues !== null) preservedValues[index] = value;

        var promise = this._promise;
        var callback = this._callback;
        var receiver = promise._boundValue();
        promise._pushContext();
        var ret = tryCatch(callback).call(receiver, value, index, length);
        var promiseCreated = promise._popContext();
        debug.checkForgottenReturns(
            ret,
            promiseCreated,
            preservedValues !== null ? "Promise.filter" : "Promise.map",
            promise
        );
        if (ret === errorObj) {
            this._reject(ret.e);
            return true;
        }

        var maybePromise = tryConvertToPromise(ret, this._promise);
        if (maybePromise instanceof Promise) {
            maybePromise = maybePromise._target();
            var bitField = maybePromise._bitField;
            ;
            if (((bitField & 50397184) === 0)) {
                if (limit >= 1) this._inFlight++;
                values[index] = maybePromise;
                maybePromise._proxy(this, (index + 1) * -1);
                return false;
            } else if (((bitField & 33554432) !== 0)) {
                ret = maybePromise._value();
            } else if (((bitField & 16777216) !== 0)) {
                this._reject(maybePromise._reason());
                return true;
            } else {
                this._cancel();
                return true;
            }
        }
        values[index] = ret;
    }
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= length) {
        if (preservedValues !== null) {
            this._filter(values, preservedValues);
        } else {
            this._resolve(values);
        }
        return true;
    }
    return false;
};

MappingPromiseArray.prototype._drainQueue = function () {
    var queue = this._queue;
    var limit = this._limit;
    var values = this._values;
    while (queue.length > 0 && this._inFlight < limit) {
        if (this._isResolved()) return;
        var index = queue.pop();
        this._promiseFulfilled(values[index], index);
    }
};

MappingPromiseArray.prototype._filter = function (booleans, values) {
    var len = values.length;
    var ret = new Array(len);
    var j = 0;
    for (var i = 0; i < len; ++i) {
        if (booleans[i]) ret[j++] = values[i];
    }
    ret.length = j;
    this._resolve(ret);
};

MappingPromiseArray.prototype.preservedValues = function () {
    return this._preservedValues;
};

function map(promises, fn, options, _filter) {
    if (typeof fn !== "function") {
        return apiRejection("expecting a function but got " + util.classString(fn));
    }

    var limit = 0;
    if (options !== undefined) {
        if (typeof options === "object" && options !== null) {
            if (typeof options.concurrency !== "number") {
                return Promise.reject(
                    new TypeError("'concurrency' must be a number but it is " +
                                    util.classString(options.concurrency)));
            }
            limit = options.concurrency;
        } else {
            return Promise.reject(new TypeError(
                            "options argument must be an object but it is " +
                             util.classString(options)));
        }
    }
    limit = typeof limit === "number" &&
        isFinite(limit) && limit >= 1 ? limit : 0;
    return new MappingPromiseArray(promises, fn, limit, _filter).promise();
}

Promise.prototype.map = function (fn, options) {
    return map(this, fn, options, null);
};

Promise.map = function (promises, fn, options, _filter) {
    return map(promises, fn, options, _filter);
};


};

},{"./util":36}],19:[function(_dereq_,module,exports){
"use strict";
module.exports =
function(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {
var util = _dereq_("./util");
var tryCatch = util.tryCatch;

Promise.method = function (fn) {
    if (typeof fn !== "function") {
        throw new Promise.TypeError("expecting a function but got " + util.classString(fn));
    }
    return function () {
        var ret = new Promise(INTERNAL);
        ret._captureStackTrace();
        ret._pushContext();
        var value = tryCatch(fn).apply(this, arguments);
        var promiseCreated = ret._popContext();
        debug.checkForgottenReturns(
            value, promiseCreated, "Promise.method", ret);
        ret._resolveFromSyncValue(value);
        return ret;
    };
};

Promise.attempt = Promise["try"] = function (fn) {
    if (typeof fn !== "function") {
        return apiRejection("expecting a function but got " + util.classString(fn));
    }
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    ret._pushContext();
    var value;
    if (arguments.length > 1) {
        debug.deprecated("calling Promise.try with more than 1 argument");
        var arg = arguments[1];
        var ctx = arguments[2];
        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)
                                  : tryCatch(fn).call(ctx, arg);
    } else {
        value = tryCatch(fn)();
    }
    var promiseCreated = ret._popContext();
    debug.checkForgottenReturns(
        value, promiseCreated, "Promise.try", ret);
    ret._resolveFromSyncValue(value);
    return ret;
};

Promise.prototype._resolveFromSyncValue = function (value) {
    if (value === util.errorObj) {
        this._rejectCallback(value.e, false);
    } else {
        this._resolveCallback(value, true);
    }
};
};

},{"./util":36}],20:[function(_dereq_,module,exports){
"use strict";
var util = _dereq_("./util");
var maybeWrapAsError = util.maybeWrapAsError;
var errors = _dereq_("./errors");
var OperationalError = errors.OperationalError;
var es5 = _dereq_("./es5");

function isUntypedError(obj) {
    return obj instanceof Error &&
        es5.getPrototypeOf(obj) === Error.prototype;
}

var rErrorKey = /^(?:name|message|stack|cause)$/;
function wrapAsOperationalError(obj) {
    var ret;
    if (isUntypedError(obj)) {
        ret = new OperationalError(obj);
        ret.name = obj.name;
        ret.message = obj.message;
        ret.stack = obj.stack;
        var keys = es5.keys(obj);
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            if (!rErrorKey.test(key)) {
                ret[key] = obj[key];
            }
        }
        return ret;
    }
    util.markAsOriginatingFromRejection(obj);
    return obj;
}

function nodebackForPromise(promise, multiArgs) {
    return function(err, value) {
        if (promise === null) return;
        if (err) {
            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));
            promise._attachExtraTrace(wrapped);
            promise._reject(wrapped);
        } else if (!multiArgs) {
            promise._fulfill(value);
        } else {
            var args = [].slice.call(arguments, 1);;
            promise._fulfill(args);
        }
        promise = null;
    };
}

module.exports = nodebackForPromise;

},{"./errors":12,"./es5":13,"./util":36}],21:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
var util = _dereq_("./util");
var async = Promise._async;
var tryCatch = util.tryCatch;
var errorObj = util.errorObj;

function spreadAdapter(val, nodeback) {
    var promise = this;
    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);
    var ret =
        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));
    if (ret === errorObj) {
        async.throwLater(ret.e);
    }
}

function successAdapter(val, nodeback) {
    var promise = this;
    var receiver = promise._boundValue();
    var ret = val === undefined
        ? tryCatch(nodeback).call(receiver, null)
        : tryCatch(nodeback).call(receiver, null, val);
    if (ret === errorObj) {
        async.throwLater(ret.e);
    }
}
function errorAdapter(reason, nodeback) {
    var promise = this;
    if (!reason) {
        var newReason = new Error(reason + "");
        newReason.cause = reason;
        reason = newReason;
    }
    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);
    if (ret === errorObj) {
        async.throwLater(ret.e);
    }
}

Promise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,
                                                                     options) {
    if (typeof nodeback == "function") {
        var adapter = successAdapter;
        if (options !== undefined && Object(options).spread) {
            adapter = spreadAdapter;
        }
        this._then(
            adapter,
            errorAdapter,
            undefined,
            this,
            nodeback
        );
    }
    return this;
};
};

},{"./util":36}],22:[function(_dereq_,module,exports){
"use strict";
module.exports = function() {
var makeSelfResolutionError = function () {
    return new TypeError("circular promise resolution chain\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
};
var reflectHandler = function() {
    return new Promise.PromiseInspection(this._target());
};
var apiRejection = function(msg) {
    return Promise.reject(new TypeError(msg));
};
function Proxyable() {}
var UNDEFINED_BINDING = {};
var util = _dereq_("./util");

var getDomain;
if (util.isNode) {
    getDomain = function() {
        var ret = process.domain;
        if (ret === undefined) ret = null;
        return ret;
    };
} else {
    getDomain = function() {
        return null;
    };
}
util.notEnumerableProp(Promise, "_getDomain", getDomain);

var es5 = _dereq_("./es5");
var Async = _dereq_("./async");
var async = new Async();
es5.defineProperty(Promise, "_async", {value: async});
var errors = _dereq_("./errors");
var TypeError = Promise.TypeError = errors.TypeError;
Promise.RangeError = errors.RangeError;
var CancellationError = Promise.CancellationError = errors.CancellationError;
Promise.TimeoutError = errors.TimeoutError;
Promise.OperationalError = errors.OperationalError;
Promise.RejectionError = errors.OperationalError;
Promise.AggregateError = errors.AggregateError;
var INTERNAL = function(){};
var APPLY = {};
var NEXT_FILTER = {};
var tryConvertToPromise = _dereq_("./thenables")(Promise, INTERNAL);
var PromiseArray =
    _dereq_("./promise_array")(Promise, INTERNAL,
                               tryConvertToPromise, apiRejection, Proxyable);
var Context = _dereq_("./context")(Promise);
 /*jshint unused:false*/
var createContext = Context.create;
var debug = _dereq_("./debuggability")(Promise, Context);
var CapturedTrace = debug.CapturedTrace;
var PassThroughHandlerContext =
    _dereq_("./finally")(Promise, tryConvertToPromise);
var catchFilter = _dereq_("./catch_filter")(NEXT_FILTER);
var nodebackForPromise = _dereq_("./nodeback");
var errorObj = util.errorObj;
var tryCatch = util.tryCatch;
function check(self, executor) {
    if (typeof executor !== "function") {
        throw new TypeError("expecting a function but got " + util.classString(executor));
    }
    if (self.constructor !== Promise) {
        throw new TypeError("the promise constructor cannot be invoked directly\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
}

function Promise(executor) {
    this._bitField = 0;
    this._fulfillmentHandler0 = undefined;
    this._rejectionHandler0 = undefined;
    this._promise0 = undefined;
    this._receiver0 = undefined;
    if (executor !== INTERNAL) {
        check(this, executor);
        this._resolveFromExecutor(executor);
    }
    this._promiseCreated();
    this._fireEvent("promiseCreated", this);
}

Promise.prototype.toString = function () {
    return "[object Promise]";
};

Promise.prototype.caught = Promise.prototype["catch"] = function (fn) {
    var len = arguments.length;
    if (len > 1) {
        var catchInstances = new Array(len - 1),
            j = 0, i;
        for (i = 0; i < len - 1; ++i) {
            var item = arguments[i];
            if (util.isObject(item)) {
                catchInstances[j++] = item;
            } else {
                return apiRejection("expecting an object but got " +
                    "A catch statement predicate " + util.classString(item));
            }
        }
        catchInstances.length = j;
        fn = arguments[i];
        return this.then(undefined, catchFilter(catchInstances, fn, this));
    }
    return this.then(undefined, fn);
};

Promise.prototype.reflect = function () {
    return this._then(reflectHandler,
        reflectHandler, undefined, this, undefined);
};

Promise.prototype.then = function (didFulfill, didReject) {
    if (debug.warnings() && arguments.length > 0 &&
        typeof didFulfill !== "function" &&
        typeof didReject !== "function") {
        var msg = ".then() only accepts functions but was passed: " +
                util.classString(didFulfill);
        if (arguments.length > 1) {
            msg += ", " + util.classString(didReject);
        }
        this._warn(msg);
    }
    return this._then(didFulfill, didReject, undefined, undefined, undefined);
};

Promise.prototype.done = function (didFulfill, didReject) {
    var promise =
        this._then(didFulfill, didReject, undefined, undefined, undefined);
    promise._setIsFinal();
};

Promise.prototype.spread = function (fn) {
    if (typeof fn !== "function") {
        return apiRejection("expecting a function but got " + util.classString(fn));
    }
    return this.all()._then(fn, undefined, undefined, APPLY, undefined);
};

Promise.prototype.toJSON = function () {
    var ret = {
        isFulfilled: false,
        isRejected: false,
        fulfillmentValue: undefined,
        rejectionReason: undefined
    };
    if (this.isFulfilled()) {
        ret.fulfillmentValue = this.value();
        ret.isFulfilled = true;
    } else if (this.isRejected()) {
        ret.rejectionReason = this.reason();
        ret.isRejected = true;
    }
    return ret;
};

Promise.prototype.all = function () {
    if (arguments.length > 0) {
        this._warn(".all() was passed arguments but it does not take any");
    }
    return new PromiseArray(this).promise();
};

Promise.prototype.error = function (fn) {
    return this.caught(util.originatesFromRejection, fn);
};

Promise.getNewLibraryCopy = module.exports;

Promise.is = function (val) {
    return val instanceof Promise;
};

Promise.fromNode = Promise.fromCallback = function(fn) {
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs
                                         : false;
    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));
    if (result === errorObj) {
        ret._rejectCallback(result.e, true);
    }
    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();
    return ret;
};

Promise.all = function (promises) {
    return new PromiseArray(promises).promise();
};

Promise.cast = function (obj) {
    var ret = tryConvertToPromise(obj);
    if (!(ret instanceof Promise)) {
        ret = new Promise(INTERNAL);
        ret._captureStackTrace();
        ret._setFulfilled();
        ret._rejectionHandler0 = obj;
    }
    return ret;
};

Promise.resolve = Promise.fulfilled = Promise.cast;

Promise.reject = Promise.rejected = function (reason) {
    var ret = new Promise(INTERNAL);
    ret._captureStackTrace();
    ret._rejectCallback(reason, true);
    return ret;
};

Promise.setScheduler = function(fn) {
    if (typeof fn !== "function") {
        throw new TypeError("expecting a function but got " + util.classString(fn));
    }
    return async.setScheduler(fn);
};

Promise.prototype._then = function (
    didFulfill,
    didReject,
    _,    receiver,
    internalData
) {
    var haveInternalData = internalData !== undefined;
    var promise = haveInternalData ? internalData : new Promise(INTERNAL);
    var target = this._target();
    var bitField = target._bitField;

    if (!haveInternalData) {
        promise._propagateFrom(this, 3);
        promise._captureStackTrace();
        if (receiver === undefined &&
            ((this._bitField & 2097152) !== 0)) {
            if (!((bitField & 50397184) === 0)) {
                receiver = this._boundValue();
            } else {
                receiver = target === this ? undefined : this._boundTo;
            }
        }
        this._fireEvent("promiseChained", this, promise);
    }

    var domain = getDomain();
    if (!((bitField & 50397184) === 0)) {
        var handler, value, settler = target._settlePromiseCtx;
        if (((bitField & 33554432) !== 0)) {
            value = target._rejectionHandler0;
            handler = didFulfill;
        } else if (((bitField & 16777216) !== 0)) {
            value = target._fulfillmentHandler0;
            handler = didReject;
            target._unsetRejectionIsUnhandled();
        } else {
            settler = target._settlePromiseLateCancellationObserver;
            value = new CancellationError("late cancellation observer");
            target._attachExtraTrace(value);
            handler = didReject;
        }

        async.invoke(settler, target, {
            handler: domain === null ? handler
                : (typeof handler === "function" &&
                    util.domainBind(domain, handler)),
            promise: promise,
            receiver: receiver,
            value: value
        });
    } else {
        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);
    }

    return promise;
};

Promise.prototype._length = function () {
    return this._bitField & 65535;
};

Promise.prototype._isFateSealed = function () {
    return (this._bitField & 117506048) !== 0;
};

Promise.prototype._isFollowing = function () {
    return (this._bitField & 67108864) === 67108864;
};

Promise.prototype._setLength = function (len) {
    this._bitField = (this._bitField & -65536) |
        (len & 65535);
};

Promise.prototype._setFulfilled = function () {
    this._bitField = this._bitField | 33554432;
    this._fireEvent("promiseFulfilled", this);
};

Promise.prototype._setRejected = function () {
    this._bitField = this._bitField | 16777216;
    this._fireEvent("promiseRejected", this);
};

Promise.prototype._setFollowing = function () {
    this._bitField = this._bitField | 67108864;
    this._fireEvent("promiseResolved", this);
};

Promise.prototype._setIsFinal = function () {
    this._bitField = this._bitField | 4194304;
};

Promise.prototype._isFinal = function () {
    return (this._bitField & 4194304) > 0;
};

Promise.prototype._unsetCancelled = function() {
    this._bitField = this._bitField & (~65536);
};

Promise.prototype._setCancelled = function() {
    this._bitField = this._bitField | 65536;
    this._fireEvent("promiseCancelled", this);
};

Promise.prototype._setWillBeCancelled = function() {
    this._bitField = this._bitField | 8388608;
};

Promise.prototype._setAsyncGuaranteed = function() {
    if (async.hasCustomScheduler()) return;
    this._bitField = this._bitField | 134217728;
};

Promise.prototype._receiverAt = function (index) {
    var ret = index === 0 ? this._receiver0 : this[
            index * 4 - 4 + 3];
    if (ret === UNDEFINED_BINDING) {
        return undefined;
    } else if (ret === undefined && this._isBound()) {
        return this._boundValue();
    }
    return ret;
};

Promise.prototype._promiseAt = function (index) {
    return this[
            index * 4 - 4 + 2];
};

Promise.prototype._fulfillmentHandlerAt = function (index) {
    return this[
            index * 4 - 4 + 0];
};

Promise.prototype._rejectionHandlerAt = function (index) {
    return this[
            index * 4 - 4 + 1];
};

Promise.prototype._boundValue = function() {};

Promise.prototype._migrateCallback0 = function (follower) {
    var bitField = follower._bitField;
    var fulfill = follower._fulfillmentHandler0;
    var reject = follower._rejectionHandler0;
    var promise = follower._promise0;
    var receiver = follower._receiverAt(0);
    if (receiver === undefined) receiver = UNDEFINED_BINDING;
    this._addCallbacks(fulfill, reject, promise, receiver, null);
};

Promise.prototype._migrateCallbackAt = function (follower, index) {
    var fulfill = follower._fulfillmentHandlerAt(index);
    var reject = follower._rejectionHandlerAt(index);
    var promise = follower._promiseAt(index);
    var receiver = follower._receiverAt(index);
    if (receiver === undefined) receiver = UNDEFINED_BINDING;
    this._addCallbacks(fulfill, reject, promise, receiver, null);
};

Promise.prototype._addCallbacks = function (
    fulfill,
    reject,
    promise,
    receiver,
    domain
) {
    var index = this._length();

    if (index >= 65535 - 4) {
        index = 0;
        this._setLength(0);
    }

    if (index === 0) {
        this._promise0 = promise;
        this._receiver0 = receiver;
        if (typeof fulfill === "function") {
            this._fulfillmentHandler0 =
                domain === null ? fulfill : util.domainBind(domain, fulfill);
        }
        if (typeof reject === "function") {
            this._rejectionHandler0 =
                domain === null ? reject : util.domainBind(domain, reject);
        }
    } else {
        var base = index * 4 - 4;
        this[base + 2] = promise;
        this[base + 3] = receiver;
        if (typeof fulfill === "function") {
            this[base + 0] =
                domain === null ? fulfill : util.domainBind(domain, fulfill);
        }
        if (typeof reject === "function") {
            this[base + 1] =
                domain === null ? reject : util.domainBind(domain, reject);
        }
    }
    this._setLength(index + 1);
    return index;
};

Promise.prototype._proxy = function (proxyable, arg) {
    this._addCallbacks(undefined, undefined, arg, proxyable, null);
};

Promise.prototype._resolveCallback = function(value, shouldBind) {
    if (((this._bitField & 117506048) !== 0)) return;
    if (value === this)
        return this._rejectCallback(makeSelfResolutionError(), false);
    var maybePromise = tryConvertToPromise(value, this);
    if (!(maybePromise instanceof Promise)) return this._fulfill(value);

    if (shouldBind) this._propagateFrom(maybePromise, 2);

    var promise = maybePromise._target();

    if (promise === this) {
        this._reject(makeSelfResolutionError());
        return;
    }

    var bitField = promise._bitField;
    if (((bitField & 50397184) === 0)) {
        var len = this._length();
        if (len > 0) promise._migrateCallback0(this);
        for (var i = 1; i < len; ++i) {
            promise._migrateCallbackAt(this, i);
        }
        this._setFollowing();
        this._setLength(0);
        this._setFollowee(promise);
    } else if (((bitField & 33554432) !== 0)) {
        this._fulfill(promise._value());
    } else if (((bitField & 16777216) !== 0)) {
        this._reject(promise._reason());
    } else {
        var reason = new CancellationError("late cancellation observer");
        promise._attachExtraTrace(reason);
        this._reject(reason);
    }
};

Promise.prototype._rejectCallback =
function(reason, synchronous, ignoreNonErrorWarnings) {
    var trace = util.ensureErrorObject(reason);
    var hasStack = trace === reason;
    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {
        var message = "a promise was rejected with a non-error: " +
            util.classString(reason);
        this._warn(message, true);
    }
    this._attachExtraTrace(trace, synchronous ? hasStack : false);
    this._reject(reason);
};

Promise.prototype._resolveFromExecutor = function (executor) {
    var promise = this;
    this._captureStackTrace();
    this._pushContext();
    var synchronous = true;
    var r = this._execute(executor, function(value) {
        promise._resolveCallback(value);
    }, function (reason) {
        promise._rejectCallback(reason, synchronous);
    });
    synchronous = false;
    this._popContext();

    if (r !== undefined) {
        promise._rejectCallback(r, true);
    }
};

Promise.prototype._settlePromiseFromHandler = function (
    handler, receiver, value, promise
) {
    var bitField = promise._bitField;
    if (((bitField & 65536) !== 0)) return;
    promise._pushContext();
    var x;
    if (receiver === APPLY) {
        if (!value || typeof value.length !== "number") {
            x = errorObj;
            x.e = new TypeError("cannot .spread() a non-array: " +
                                    util.classString(value));
        } else {
            x = tryCatch(handler).apply(this._boundValue(), value);
        }
    } else {
        x = tryCatch(handler).call(receiver, value);
    }
    var promiseCreated = promise._popContext();
    bitField = promise._bitField;
    if (((bitField & 65536) !== 0)) return;

    if (x === NEXT_FILTER) {
        promise._reject(value);
    } else if (x === errorObj) {
        promise._rejectCallback(x.e, false);
    } else {
        debug.checkForgottenReturns(x, promiseCreated, "",  promise, this);
        promise._resolveCallback(x);
    }
};

Promise.prototype._target = function() {
    var ret = this;
    while (ret._isFollowing()) ret = ret._followee();
    return ret;
};

Promise.prototype._followee = function() {
    return this._rejectionHandler0;
};

Promise.prototype._setFollowee = function(promise) {
    this._rejectionHandler0 = promise;
};

Promise.prototype._settlePromise = function(promise, handler, receiver, value) {
    var isPromise = promise instanceof Promise;
    var bitField = this._bitField;
    var asyncGuaranteed = ((bitField & 134217728) !== 0);
    if (((bitField & 65536) !== 0)) {
        if (isPromise) promise._invokeInternalOnCancel();

        if (receiver instanceof PassThroughHandlerContext &&
            receiver.isFinallyHandler()) {
            receiver.cancelPromise = promise;
            if (tryCatch(handler).call(receiver, value) === errorObj) {
                promise._reject(errorObj.e);
            }
        } else if (handler === reflectHandler) {
            promise._fulfill(reflectHandler.call(receiver));
        } else if (receiver instanceof Proxyable) {
            receiver._promiseCancelled(promise);
        } else if (isPromise || promise instanceof PromiseArray) {
            promise._cancel();
        } else {
            receiver.cancel();
        }
    } else if (typeof handler === "function") {
        if (!isPromise) {
            handler.call(receiver, value, promise);
        } else {
            if (asyncGuaranteed) promise._setAsyncGuaranteed();
            this._settlePromiseFromHandler(handler, receiver, value, promise);
        }
    } else if (receiver instanceof Proxyable) {
        if (!receiver._isResolved()) {
            if (((bitField & 33554432) !== 0)) {
                receiver._promiseFulfilled(value, promise);
            } else {
                receiver._promiseRejected(value, promise);
            }
        }
    } else if (isPromise) {
        if (asyncGuaranteed) promise._setAsyncGuaranteed();
        if (((bitField & 33554432) !== 0)) {
            promise._fulfill(value);
        } else {
            promise._reject(value);
        }
    }
};

Promise.prototype._settlePromiseLateCancellationObserver = function(ctx) {
    var handler = ctx.handler;
    var promise = ctx.promise;
    var receiver = ctx.receiver;
    var value = ctx.value;
    if (typeof handler === "function") {
        if (!(promise instanceof Promise)) {
            handler.call(receiver, value, promise);
        } else {
            this._settlePromiseFromHandler(handler, receiver, value, promise);
        }
    } else if (promise instanceof Promise) {
        promise._reject(value);
    }
};

Promise.prototype._settlePromiseCtx = function(ctx) {
    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);
};

Promise.prototype._settlePromise0 = function(handler, value, bitField) {
    var promise = this._promise0;
    var receiver = this._receiverAt(0);
    this._promise0 = undefined;
    this._receiver0 = undefined;
    this._settlePromise(promise, handler, receiver, value);
};

Promise.prototype._clearCallbackDataAtIndex = function(index) {
    var base = index * 4 - 4;
    this[base + 2] =
    this[base + 3] =
    this[base + 0] =
    this[base + 1] = undefined;
};

Promise.prototype._fulfill = function (value) {
    var bitField = this._bitField;
    if (((bitField & 117506048) >>> 16)) return;
    if (value === this) {
        var err = makeSelfResolutionError();
        this._attachExtraTrace(err);
        return this._reject(err);
    }
    this._setFulfilled();
    this._rejectionHandler0 = value;

    if ((bitField & 65535) > 0) {
        if (((bitField & 134217728) !== 0)) {
            this._settlePromises();
        } else {
            async.settlePromises(this);
        }
    }
};

Promise.prototype._reject = function (reason) {
    var bitField = this._bitField;
    if (((bitField & 117506048) >>> 16)) return;
    this._setRejected();
    this._fulfillmentHandler0 = reason;

    if (this._isFinal()) {
        return async.fatalError(reason, util.isNode);
    }

    if ((bitField & 65535) > 0) {
        async.settlePromises(this);
    } else {
        this._ensurePossibleRejectionHandled();
    }
};

Promise.prototype._fulfillPromises = function (len, value) {
    for (var i = 1; i < len; i++) {
        var handler = this._fulfillmentHandlerAt(i);
        var promise = this._promiseAt(i);
        var receiver = this._receiverAt(i);
        this._clearCallbackDataAtIndex(i);
        this._settlePromise(promise, handler, receiver, value);
    }
};

Promise.prototype._rejectPromises = function (len, reason) {
    for (var i = 1; i < len; i++) {
        var handler = this._rejectionHandlerAt(i);
        var promise = this._promiseAt(i);
        var receiver = this._receiverAt(i);
        this._clearCallbackDataAtIndex(i);
        this._settlePromise(promise, handler, receiver, reason);
    }
};

Promise.prototype._settlePromises = function () {
    var bitField = this._bitField;
    var len = (bitField & 65535);

    if (len > 0) {
        if (((bitField & 16842752) !== 0)) {
            var reason = this._fulfillmentHandler0;
            this._settlePromise0(this._rejectionHandler0, reason, bitField);
            this._rejectPromises(len, reason);
        } else {
            var value = this._rejectionHandler0;
            this._settlePromise0(this._fulfillmentHandler0, value, bitField);
            this._fulfillPromises(len, value);
        }
        this._setLength(0);
    }
    this._clearCancellationData();
};

Promise.prototype._settledValue = function() {
    var bitField = this._bitField;
    if (((bitField & 33554432) !== 0)) {
        return this._rejectionHandler0;
    } else if (((bitField & 16777216) !== 0)) {
        return this._fulfillmentHandler0;
    }
};

function deferResolve(v) {this.promise._resolveCallback(v);}
function deferReject(v) {this.promise._rejectCallback(v, false);}

Promise.defer = Promise.pending = function() {
    debug.deprecated("Promise.defer", "new Promise");
    var promise = new Promise(INTERNAL);
    return {
        promise: promise,
        resolve: deferResolve,
        reject: deferReject
    };
};

util.notEnumerableProp(Promise,
                       "_makeSelfResolutionError",
                       makeSelfResolutionError);

_dereq_("./method")(Promise, INTERNAL, tryConvertToPromise, apiRejection,
    debug);
_dereq_("./bind")(Promise, INTERNAL, tryConvertToPromise, debug);
_dereq_("./cancel")(Promise, PromiseArray, apiRejection, debug);
_dereq_("./direct_resolve")(Promise);
_dereq_("./synchronous_inspection")(Promise);
_dereq_("./join")(
    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);
Promise.Promise = Promise;
Promise.version = "3.4.7";
_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
_dereq_('./call_get.js')(Promise);
_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);
_dereq_('./timers.js')(Promise, INTERNAL, debug);
_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);
_dereq_('./nodeify.js')(Promise);
_dereq_('./promisify.js')(Promise, INTERNAL);
_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);
_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);
_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);
_dereq_('./settle.js')(Promise, PromiseArray, debug);
_dereq_('./some.js')(Promise, PromiseArray, apiRejection);
_dereq_('./filter.js')(Promise, INTERNAL);
_dereq_('./each.js')(Promise, INTERNAL);
_dereq_('./any.js')(Promise);
                                                         
    util.toFastProperties(Promise);                                          
    util.toFastProperties(Promise.prototype);                                
    function fillTypes(value) {                                              
        var p = new Promise(INTERNAL);                                       
        p._fulfillmentHandler0 = value;                                      
        p._rejectionHandler0 = value;                                        
        p._promise0 = value;                                                 
        p._receiver0 = value;                                                
    }                                                                        
    // Complete slack tracking, opt out of field-type tracking and           
    // stabilize map                                                         
    fillTypes({a: 1});                                                       
    fillTypes({b: 2});                                                       
    fillTypes({c: 3});                                                       
    fillTypes(1);                                                            
    fillTypes(function(){});                                                 
    fillTypes(undefined);                                                    
    fillTypes(false);                                                        
    fillTypes(new Promise(INTERNAL));                                        
    debug.setBounds(Async.firstLineError, util.lastLineError);               
    return Promise;                                                          

};

},{"./any.js":1,"./async":2,"./bind":3,"./call_get.js":5,"./cancel":6,"./catch_filter":7,"./context":8,"./debuggability":9,"./direct_resolve":10,"./each.js":11,"./errors":12,"./es5":13,"./filter.js":14,"./finally":15,"./generators.js":16,"./join":17,"./map.js":18,"./method":19,"./nodeback":20,"./nodeify.js":21,"./promise_array":23,"./promisify.js":24,"./props.js":25,"./race.js":27,"./reduce.js":28,"./settle.js":30,"./some.js":31,"./synchronous_inspection":32,"./thenables":33,"./timers.js":34,"./using.js":35,"./util":36}],23:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL, tryConvertToPromise,
    apiRejection, Proxyable) {
var util = _dereq_("./util");
var isArray = util.isArray;

function toResolutionValue(val) {
    switch(val) {
    case -2: return [];
    case -3: return {};
    }
}

function PromiseArray(values) {
    var promise = this._promise = new Promise(INTERNAL);
    if (values instanceof Promise) {
        promise._propagateFrom(values, 3);
    }
    promise._setOnCancel(this);
    this._values = values;
    this._length = 0;
    this._totalResolved = 0;
    this._init(undefined, -2);
}
util.inherits(PromiseArray, Proxyable);

PromiseArray.prototype.length = function () {
    return this._length;
};

PromiseArray.prototype.promise = function () {
    return this._promise;
};

PromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {
    var values = tryConvertToPromise(this._values, this._promise);
    if (values instanceof Promise) {
        values = values._target();
        var bitField = values._bitField;
        ;
        this._values = values;

        if (((bitField & 50397184) === 0)) {
            this._promise._setAsyncGuaranteed();
            return values._then(
                init,
                this._reject,
                undefined,
                this,
                resolveValueIfEmpty
           );
        } else if (((bitField & 33554432) !== 0)) {
            values = values._value();
        } else if (((bitField & 16777216) !== 0)) {
            return this._reject(values._reason());
        } else {
            return this._cancel();
        }
    }
    values = util.asArray(values);
    if (values === null) {
        var err = apiRejection(
            "expecting an array or an iterable object but got " + util.classString(values)).reason();
        this._promise._rejectCallback(err, false);
        return;
    }

    if (values.length === 0) {
        if (resolveValueIfEmpty === -5) {
            this._resolveEmptyArray();
        }
        else {
            this._resolve(toResolutionValue(resolveValueIfEmpty));
        }
        return;
    }
    this._iterate(values);
};

PromiseArray.prototype._iterate = function(values) {
    var len = this.getActualLength(values.length);
    this._length = len;
    this._values = this.shouldCopyValues() ? new Array(len) : this._values;
    var result = this._promise;
    var isResolved = false;
    var bitField = null;
    for (var i = 0; i < len; ++i) {
        var maybePromise = tryConvertToPromise(values[i], result);

        if (maybePromise instanceof Promise) {
            maybePromise = maybePromise._target();
            bitField = maybePromise._bitField;
        } else {
            bitField = null;
        }

        if (isResolved) {
            if (bitField !== null) {
                maybePromise.suppressUnhandledRejections();
            }
        } else if (bitField !== null) {
            if (((bitField & 50397184) === 0)) {
                maybePromise._proxy(this, i);
                this._values[i] = maybePromise;
            } else if (((bitField & 33554432) !== 0)) {
                isResolved = this._promiseFulfilled(maybePromise._value(), i);
            } else if (((bitField & 16777216) !== 0)) {
                isResolved = this._promiseRejected(maybePromise._reason(), i);
            } else {
                isResolved = this._promiseCancelled(i);
            }
        } else {
            isResolved = this._promiseFulfilled(maybePromise, i);
        }
    }
    if (!isResolved) result._setAsyncGuaranteed();
};

PromiseArray.prototype._isResolved = function () {
    return this._values === null;
};

PromiseArray.prototype._resolve = function (value) {
    this._values = null;
    this._promise._fulfill(value);
};

PromiseArray.prototype._cancel = function() {
    if (this._isResolved() || !this._promise._isCancellable()) return;
    this._values = null;
    this._promise._cancel();
};

PromiseArray.prototype._reject = function (reason) {
    this._values = null;
    this._promise._rejectCallback(reason, false);
};

PromiseArray.prototype._promiseFulfilled = function (value, index) {
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
        return true;
    }
    return false;
};

PromiseArray.prototype._promiseCancelled = function() {
    this._cancel();
    return true;
};

PromiseArray.prototype._promiseRejected = function (reason) {
    this._totalResolved++;
    this._reject(reason);
    return true;
};

PromiseArray.prototype._resultCancelled = function() {
    if (this._isResolved()) return;
    var values = this._values;
    this._cancel();
    if (values instanceof Promise) {
        values.cancel();
    } else {
        for (var i = 0; i < values.length; ++i) {
            if (values[i] instanceof Promise) {
                values[i].cancel();
            }
        }
    }
};

PromiseArray.prototype.shouldCopyValues = function () {
    return true;
};

PromiseArray.prototype.getActualLength = function (len) {
    return len;
};

return PromiseArray;
};

},{"./util":36}],24:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL) {
var THIS = {};
var util = _dereq_("./util");
var nodebackForPromise = _dereq_("./nodeback");
var withAppended = util.withAppended;
var maybeWrapAsError = util.maybeWrapAsError;
var canEvaluate = util.canEvaluate;
var TypeError = _dereq_("./errors").TypeError;
var defaultSuffix = "Async";
var defaultPromisified = {__isPromisified__: true};
var noCopyProps = [
    "arity",    "length",
    "name",
    "arguments",
    "caller",
    "callee",
    "prototype",
    "__isPromisified__"
];
var noCopyPropsPattern = new RegExp("^(?:" + noCopyProps.join("|") + ")$");

var defaultFilter = function(name) {
    return util.isIdentifier(name) &&
        name.charAt(0) !== "_" &&
        name !== "constructor";
};

function propsFilter(key) {
    return !noCopyPropsPattern.test(key);
}

function isPromisified(fn) {
    try {
        return fn.__isPromisified__ === true;
    }
    catch (e) {
        return false;
    }
}

function hasPromisified(obj, key, suffix) {
    var val = util.getDataPropertyOrDefault(obj, key + suffix,
                                            defaultPromisified);
    return val ? isPromisified(val) : false;
}
function checkValid(ret, suffix, suffixRegexp) {
    for (var i = 0; i < ret.length; i += 2) {
        var key = ret[i];
        if (suffixRegexp.test(key)) {
            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, "");
            for (var j = 0; j < ret.length; j += 2) {
                if (ret[j] === keyWithoutAsyncSuffix) {
                    throw new TypeError("Cannot promisify an API that has normal methods with '%s'-suffix\u000a\u000a    See http://goo.gl/MqrFmX\u000a"
                        .replace("%s", suffix));
                }
            }
        }
    }
}

function promisifiableMethods(obj, suffix, suffixRegexp, filter) {
    var keys = util.inheritedDataKeys(obj);
    var ret = [];
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var value = obj[key];
        var passesDefaultFilter = filter === defaultFilter
            ? true : defaultFilter(key, value, obj);
        if (typeof value === "function" &&
            !isPromisified(value) &&
            !hasPromisified(obj, key, suffix) &&
            filter(key, value, obj, passesDefaultFilter)) {
            ret.push(key, value);
        }
    }
    checkValid(ret, suffix, suffixRegexp);
    return ret;
}

var escapeIdentRegex = function(str) {
    return str.replace(/([$])/, "\\$");
};

var makeNodePromisifiedEval;
if (false) {
var switchCaseArgumentOrder = function(likelyArgumentCount) {
    var ret = [likelyArgumentCount];
    var min = Math.max(0, likelyArgumentCount - 1 - 3);
    for(var i = likelyArgumentCount - 1; i >= min; --i) {
        ret.push(i);
    }
    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {
        ret.push(i);
    }
    return ret;
};

var argumentSequence = function(argumentCount) {
    return util.filledRange(argumentCount, "_arg", "");
};

var parameterDeclaration = function(parameterCount) {
    return util.filledRange(
        Math.max(parameterCount, 3), "_arg", "");
};

var parameterCount = function(fn) {
    if (typeof fn.length === "number") {
        return Math.max(Math.min(fn.length, 1023 + 1), 0);
    }
    return 0;
};

makeNodePromisifiedEval =
function(callback, receiver, originalName, fn, _, multiArgs) {
    var newParameterCount = Math.max(0, parameterCount(fn) - 1);
    var argumentOrder = switchCaseArgumentOrder(newParameterCount);
    var shouldProxyThis = typeof callback === "string" || receiver === THIS;

    function generateCallForArgumentCount(count) {
        var args = argumentSequence(count).join(", ");
        var comma = count > 0 ? ", " : "";
        var ret;
        if (shouldProxyThis) {
            ret = "ret = callback.call(this, {{args}}, nodeback); break;\n";
        } else {
            ret = receiver === undefined
                ? "ret = callback({{args}}, nodeback); break;\n"
                : "ret = callback.call(receiver, {{args}}, nodeback); break;\n";
        }
        return ret.replace("{{args}}", args).replace(", ", comma);
    }

    function generateArgumentSwitchCase() {
        var ret = "";
        for (var i = 0; i < argumentOrder.length; ++i) {
            ret += "case " + argumentOrder[i] +":" +
                generateCallForArgumentCount(argumentOrder[i]);
        }

        ret += "                                                             \n\
        default:                                                             \n\
            var args = new Array(len + 1);                                   \n\
            var i = 0;                                                       \n\
            for (var i = 0; i < len; ++i) {                                  \n\
               args[i] = arguments[i];                                       \n\
            }                                                                \n\
            args[i] = nodeback;                                              \n\
            [CodeForCall]                                                    \n\
            break;                                                           \n\
        ".replace("[CodeForCall]", (shouldProxyThis
                                ? "ret = callback.apply(this, args);\n"
                                : "ret = callback.apply(receiver, args);\n"));
        return ret;
    }

    var getFunctionCode = typeof callback === "string"
                                ? ("this != null ? this['"+callback+"'] : fn")
                                : "fn";
    var body = "'use strict';                                                \n\
        var ret = function (Parameters) {                                    \n\
            'use strict';                                                    \n\
            var len = arguments.length;                                      \n\
            var promise = new Promise(INTERNAL);                             \n\
            promise._captureStackTrace();                                    \n\
            var nodeback = nodebackForPromise(promise, " + multiArgs + ");   \n\
            var ret;                                                         \n\
            var callback = tryCatch([GetFunctionCode]);                      \n\
            switch(len) {                                                    \n\
                [CodeForSwitchCase]                                          \n\
            }                                                                \n\
            if (ret === errorObj) {                                          \n\
                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\n\
            }                                                                \n\
            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \n\
            return promise;                                                  \n\
        };                                                                   \n\
        notEnumerableProp(ret, '__isPromisified__', true);                   \n\
        return ret;                                                          \n\
    ".replace("[CodeForSwitchCase]", generateArgumentSwitchCase())
        .replace("[GetFunctionCode]", getFunctionCode);
    body = body.replace("Parameters", parameterDeclaration(newParameterCount));
    return new Function("Promise",
                        "fn",
                        "receiver",
                        "withAppended",
                        "maybeWrapAsError",
                        "nodebackForPromise",
                        "tryCatch",
                        "errorObj",
                        "notEnumerableProp",
                        "INTERNAL",
                        body)(
                    Promise,
                    fn,
                    receiver,
                    withAppended,
                    maybeWrapAsError,
                    nodebackForPromise,
                    util.tryCatch,
                    util.errorObj,
                    util.notEnumerableProp,
                    INTERNAL);
};
}

function makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {
    var defaultThis = (function() {return this;})();
    var method = callback;
    if (typeof method === "string") {
        callback = fn;
    }
    function promisified() {
        var _receiver = receiver;
        if (receiver === THIS) _receiver = this;
        var promise = new Promise(INTERNAL);
        promise._captureStackTrace();
        var cb = typeof method === "string" && this !== defaultThis
            ? this[method] : callback;
        var fn = nodebackForPromise(promise, multiArgs);
        try {
            cb.apply(_receiver, withAppended(arguments, fn));
        } catch(e) {
            promise._rejectCallback(maybeWrapAsError(e), true, true);
        }
        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();
        return promise;
    }
    util.notEnumerableProp(promisified, "__isPromisified__", true);
    return promisified;
}

var makeNodePromisified = canEvaluate
    ? makeNodePromisifiedEval
    : makeNodePromisifiedClosure;

function promisifyAll(obj, suffix, filter, promisifier, multiArgs) {
    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + "$");
    var methods =
        promisifiableMethods(obj, suffix, suffixRegexp, filter);

    for (var i = 0, len = methods.length; i < len; i+= 2) {
        var key = methods[i];
        var fn = methods[i+1];
        var promisifiedKey = key + suffix;
        if (promisifier === makeNodePromisified) {
            obj[promisifiedKey] =
                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);
        } else {
            var promisified = promisifier(fn, function() {
                return makeNodePromisified(key, THIS, key,
                                           fn, suffix, multiArgs);
            });
            util.notEnumerableProp(promisified, "__isPromisified__", true);
            obj[promisifiedKey] = promisified;
        }
    }
    util.toFastProperties(obj);
    return obj;
}

function promisify(callback, receiver, multiArgs) {
    return makeNodePromisified(callback, receiver, undefined,
                                callback, null, multiArgs);
}

Promise.promisify = function (fn, options) {
    if (typeof fn !== "function") {
        throw new TypeError("expecting a function but got " + util.classString(fn));
    }
    if (isPromisified(fn)) {
        return fn;
    }
    options = Object(options);
    var receiver = options.context === undefined ? THIS : options.context;
    var multiArgs = !!options.multiArgs;
    var ret = promisify(fn, receiver, multiArgs);
    util.copyDescriptors(fn, ret, propsFilter);
    return ret;
};

Promise.promisifyAll = function (target, options) {
    if (typeof target !== "function" && typeof target !== "object") {
        throw new TypeError("the target of promisifyAll must be an object or a function\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    options = Object(options);
    var multiArgs = !!options.multiArgs;
    var suffix = options.suffix;
    if (typeof suffix !== "string") suffix = defaultSuffix;
    var filter = options.filter;
    if (typeof filter !== "function") filter = defaultFilter;
    var promisifier = options.promisifier;
    if (typeof promisifier !== "function") promisifier = makeNodePromisified;

    if (!util.isIdentifier(suffix)) {
        throw new RangeError("suffix must be a valid identifier\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }

    var keys = util.inheritedDataKeys(target);
    for (var i = 0; i < keys.length; ++i) {
        var value = target[keys[i]];
        if (keys[i] !== "constructor" &&
            util.isClass(value)) {
            promisifyAll(value.prototype, suffix, filter, promisifier,
                multiArgs);
            promisifyAll(value, suffix, filter, promisifier, multiArgs);
        }
    }

    return promisifyAll(target, suffix, filter, promisifier, multiArgs);
};
};


},{"./errors":12,"./nodeback":20,"./util":36}],25:[function(_dereq_,module,exports){
"use strict";
module.exports = function(
    Promise, PromiseArray, tryConvertToPromise, apiRejection) {
var util = _dereq_("./util");
var isObject = util.isObject;
var es5 = _dereq_("./es5");
var Es6Map;
if (typeof Map === "function") Es6Map = Map;

var mapToEntries = (function() {
    var index = 0;
    var size = 0;

    function extractEntry(value, key) {
        this[index] = value;
        this[index + size] = key;
        index++;
    }

    return function mapToEntries(map) {
        size = map.size;
        index = 0;
        var ret = new Array(map.size * 2);
        map.forEach(extractEntry, ret);
        return ret;
    };
})();

var entriesToMap = function(entries) {
    var ret = new Es6Map();
    var length = entries.length / 2 | 0;
    for (var i = 0; i < length; ++i) {
        var key = entries[length + i];
        var value = entries[i];
        ret.set(key, value);
    }
    return ret;
};

function PropertiesPromiseArray(obj) {
    var isMap = false;
    var entries;
    if (Es6Map !== undefined && obj instanceof Es6Map) {
        entries = mapToEntries(obj);
        isMap = true;
    } else {
        var keys = es5.keys(obj);
        var len = keys.length;
        entries = new Array(len * 2);
        for (var i = 0; i < len; ++i) {
            var key = keys[i];
            entries[i] = obj[key];
            entries[i + len] = key;
        }
    }
    this.constructor$(entries);
    this._isMap = isMap;
    this._init$(undefined, -3);
}
util.inherits(PropertiesPromiseArray, PromiseArray);

PropertiesPromiseArray.prototype._init = function () {};

PropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {
    this._values[index] = value;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        var val;
        if (this._isMap) {
            val = entriesToMap(this._values);
        } else {
            val = {};
            var keyOffset = this.length();
            for (var i = 0, len = this.length(); i < len; ++i) {
                val[this._values[i + keyOffset]] = this._values[i];
            }
        }
        this._resolve(val);
        return true;
    }
    return false;
};

PropertiesPromiseArray.prototype.shouldCopyValues = function () {
    return false;
};

PropertiesPromiseArray.prototype.getActualLength = function (len) {
    return len >> 1;
};

function props(promises) {
    var ret;
    var castValue = tryConvertToPromise(promises);

    if (!isObject(castValue)) {
        return apiRejection("cannot await properties of a non-object\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    } else if (castValue instanceof Promise) {
        ret = castValue._then(
            Promise.props, undefined, undefined, undefined, undefined);
    } else {
        ret = new PropertiesPromiseArray(castValue).promise();
    }

    if (castValue instanceof Promise) {
        ret._propagateFrom(castValue, 2);
    }
    return ret;
}

Promise.prototype.props = function () {
    return props(this);
};

Promise.props = function (promises) {
    return props(promises);
};
};

},{"./es5":13,"./util":36}],26:[function(_dereq_,module,exports){
"use strict";
function arrayMove(src, srcIndex, dst, dstIndex, len) {
    for (var j = 0; j < len; ++j) {
        dst[j + dstIndex] = src[j + srcIndex];
        src[j + srcIndex] = void 0;
    }
}

function Queue(capacity) {
    this._capacity = capacity;
    this._length = 0;
    this._front = 0;
}

Queue.prototype._willBeOverCapacity = function (size) {
    return this._capacity < size;
};

Queue.prototype._pushOne = function (arg) {
    var length = this.length();
    this._checkCapacity(length + 1);
    var i = (this._front + length) & (this._capacity - 1);
    this[i] = arg;
    this._length = length + 1;
};

Queue.prototype.push = function (fn, receiver, arg) {
    var length = this.length() + 3;
    if (this._willBeOverCapacity(length)) {
        this._pushOne(fn);
        this._pushOne(receiver);
        this._pushOne(arg);
        return;
    }
    var j = this._front + length - 3;
    this._checkCapacity(length);
    var wrapMask = this._capacity - 1;
    this[(j + 0) & wrapMask] = fn;
    this[(j + 1) & wrapMask] = receiver;
    this[(j + 2) & wrapMask] = arg;
    this._length = length;
};

Queue.prototype.shift = function () {
    var front = this._front,
        ret = this[front];

    this[front] = undefined;
    this._front = (front + 1) & (this._capacity - 1);
    this._length--;
    return ret;
};

Queue.prototype.length = function () {
    return this._length;
};

Queue.prototype._checkCapacity = function (size) {
    if (this._capacity < size) {
        this._resizeTo(this._capacity << 1);
    }
};

Queue.prototype._resizeTo = function (capacity) {
    var oldCapacity = this._capacity;
    this._capacity = capacity;
    var front = this._front;
    var length = this._length;
    var moveItemsCount = (front + length) & (oldCapacity - 1);
    arrayMove(this, 0, this, oldCapacity, moveItemsCount);
};

module.exports = Queue;

},{}],27:[function(_dereq_,module,exports){
"use strict";
module.exports = function(
    Promise, INTERNAL, tryConvertToPromise, apiRejection) {
var util = _dereq_("./util");

var raceLater = function (promise) {
    return promise.then(function(array) {
        return race(array, promise);
    });
};

function race(promises, parent) {
    var maybePromise = tryConvertToPromise(promises);

    if (maybePromise instanceof Promise) {
        return raceLater(maybePromise);
    } else {
        promises = util.asArray(promises);
        if (promises === null)
            return apiRejection("expecting an array or an iterable object but got " + util.classString(promises));
    }

    var ret = new Promise(INTERNAL);
    if (parent !== undefined) {
        ret._propagateFrom(parent, 3);
    }
    var fulfill = ret._fulfill;
    var reject = ret._reject;
    for (var i = 0, len = promises.length; i < len; ++i) {
        var val = promises[i];

        if (val === undefined && !(i in promises)) {
            continue;
        }

        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);
    }
    return ret;
}

Promise.race = function (promises) {
    return race(promises, undefined);
};

Promise.prototype.race = function () {
    return race(this, undefined);
};

};

},{"./util":36}],28:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise,
                          PromiseArray,
                          apiRejection,
                          tryConvertToPromise,
                          INTERNAL,
                          debug) {
var getDomain = Promise._getDomain;
var util = _dereq_("./util");
var tryCatch = util.tryCatch;

function ReductionPromiseArray(promises, fn, initialValue, _each) {
    this.constructor$(promises);
    var domain = getDomain();
    this._fn = domain === null ? fn : util.domainBind(domain, fn);
    if (initialValue !== undefined) {
        initialValue = Promise.resolve(initialValue);
        initialValue._attachCancellationCallback(this);
    }
    this._initialValue = initialValue;
    this._currentCancellable = null;
    if(_each === INTERNAL) {
        this._eachValues = Array(this._length);
    } else if (_each === 0) {
        this._eachValues = null;
    } else {
        this._eachValues = undefined;
    }
    this._promise._captureStackTrace();
    this._init$(undefined, -5);
}
util.inherits(ReductionPromiseArray, PromiseArray);

ReductionPromiseArray.prototype._gotAccum = function(accum) {
    if (this._eachValues !== undefined && 
        this._eachValues !== null && 
        accum !== INTERNAL) {
        this._eachValues.push(accum);
    }
};

ReductionPromiseArray.prototype._eachComplete = function(value) {
    if (this._eachValues !== null) {
        this._eachValues.push(value);
    }
    return this._eachValues;
};

ReductionPromiseArray.prototype._init = function() {};

ReductionPromiseArray.prototype._resolveEmptyArray = function() {
    this._resolve(this._eachValues !== undefined ? this._eachValues
                                                 : this._initialValue);
};

ReductionPromiseArray.prototype.shouldCopyValues = function () {
    return false;
};

ReductionPromiseArray.prototype._resolve = function(value) {
    this._promise._resolveCallback(value);
    this._values = null;
};

ReductionPromiseArray.prototype._resultCancelled = function(sender) {
    if (sender === this._initialValue) return this._cancel();
    if (this._isResolved()) return;
    this._resultCancelled$();
    if (this._currentCancellable instanceof Promise) {
        this._currentCancellable.cancel();
    }
    if (this._initialValue instanceof Promise) {
        this._initialValue.cancel();
    }
};

ReductionPromiseArray.prototype._iterate = function (values) {
    this._values = values;
    var value;
    var i;
    var length = values.length;
    if (this._initialValue !== undefined) {
        value = this._initialValue;
        i = 0;
    } else {
        value = Promise.resolve(values[0]);
        i = 1;
    }

    this._currentCancellable = value;

    if (!value.isRejected()) {
        for (; i < length; ++i) {
            var ctx = {
                accum: null,
                value: values[i],
                index: i,
                length: length,
                array: this
            };
            value = value._then(gotAccum, undefined, undefined, ctx, undefined);
        }
    }

    if (this._eachValues !== undefined) {
        value = value
            ._then(this._eachComplete, undefined, undefined, this, undefined);
    }
    value._then(completed, completed, undefined, value, this);
};

Promise.prototype.reduce = function (fn, initialValue) {
    return reduce(this, fn, initialValue, null);
};

Promise.reduce = function (promises, fn, initialValue, _each) {
    return reduce(promises, fn, initialValue, _each);
};

function completed(valueOrReason, array) {
    if (this.isFulfilled()) {
        array._resolve(valueOrReason);
    } else {
        array._reject(valueOrReason);
    }
}

function reduce(promises, fn, initialValue, _each) {
    if (typeof fn !== "function") {
        return apiRejection("expecting a function but got " + util.classString(fn));
    }
    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);
    return array.promise();
}

function gotAccum(accum) {
    this.accum = accum;
    this.array._gotAccum(accum);
    var value = tryConvertToPromise(this.value, this.array._promise);
    if (value instanceof Promise) {
        this.array._currentCancellable = value;
        return value._then(gotValue, undefined, undefined, this, undefined);
    } else {
        return gotValue.call(this, value);
    }
}

function gotValue(value) {
    var array = this.array;
    var promise = array._promise;
    var fn = tryCatch(array._fn);
    promise._pushContext();
    var ret;
    if (array._eachValues !== undefined) {
        ret = fn.call(promise._boundValue(), value, this.index, this.length);
    } else {
        ret = fn.call(promise._boundValue(),
                              this.accum, value, this.index, this.length);
    }
    if (ret instanceof Promise) {
        array._currentCancellable = ret;
    }
    var promiseCreated = promise._popContext();
    debug.checkForgottenReturns(
        ret,
        promiseCreated,
        array._eachValues !== undefined ? "Promise.each" : "Promise.reduce",
        promise
    );
    return ret;
}
};

},{"./util":36}],29:[function(_dereq_,module,exports){
"use strict";
var util = _dereq_("./util");
var schedule;
var noAsyncScheduler = function() {
    throw new Error("No async scheduler available\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
};
var NativePromise = util.getNativePromise();
if (util.isNode && typeof MutationObserver === "undefined") {
    var GlobalSetImmediate = global.setImmediate;
    var ProcessNextTick = process.nextTick;
    schedule = util.isRecentNode
                ? function(fn) { GlobalSetImmediate.call(global, fn); }
                : function(fn) { ProcessNextTick.call(process, fn); };
} else if (typeof NativePromise === "function" &&
           typeof NativePromise.resolve === "function") {
    var nativePromise = NativePromise.resolve();
    schedule = function(fn) {
        nativePromise.then(fn);
    };
} else if ((typeof MutationObserver !== "undefined") &&
          !(typeof window !== "undefined" &&
            window.navigator &&
            (window.navigator.standalone || window.cordova))) {
    schedule = (function() {
        var div = document.createElement("div");
        var opts = {attributes: true};
        var toggleScheduled = false;
        var div2 = document.createElement("div");
        var o2 = new MutationObserver(function() {
            div.classList.toggle("foo");
            toggleScheduled = false;
        });
        o2.observe(div2, opts);

        var scheduleToggle = function() {
            if (toggleScheduled) return;
                toggleScheduled = true;
                div2.classList.toggle("foo");
            };

            return function schedule(fn) {
            var o = new MutationObserver(function() {
                o.disconnect();
                fn();
            });
            o.observe(div, opts);
            scheduleToggle();
        };
    })();
} else if (typeof setImmediate !== "undefined") {
    schedule = function (fn) {
        setImmediate(fn);
    };
} else if (typeof setTimeout !== "undefined") {
    schedule = function (fn) {
        setTimeout(fn, 0);
    };
} else {
    schedule = noAsyncScheduler;
}
module.exports = schedule;

},{"./util":36}],30:[function(_dereq_,module,exports){
"use strict";
module.exports =
    function(Promise, PromiseArray, debug) {
var PromiseInspection = Promise.PromiseInspection;
var util = _dereq_("./util");

function SettledPromiseArray(values) {
    this.constructor$(values);
}
util.inherits(SettledPromiseArray, PromiseArray);

SettledPromiseArray.prototype._promiseResolved = function (index, inspection) {
    this._values[index] = inspection;
    var totalResolved = ++this._totalResolved;
    if (totalResolved >= this._length) {
        this._resolve(this._values);
        return true;
    }
    return false;
};

SettledPromiseArray.prototype._promiseFulfilled = function (value, index) {
    var ret = new PromiseInspection();
    ret._bitField = 33554432;
    ret._settledValueField = value;
    return this._promiseResolved(index, ret);
};
SettledPromiseArray.prototype._promiseRejected = function (reason, index) {
    var ret = new PromiseInspection();
    ret._bitField = 16777216;
    ret._settledValueField = reason;
    return this._promiseResolved(index, ret);
};

Promise.settle = function (promises) {
    debug.deprecated(".settle()", ".reflect()");
    return new SettledPromiseArray(promises).promise();
};

Promise.prototype.settle = function () {
    return Promise.settle(this);
};
};

},{"./util":36}],31:[function(_dereq_,module,exports){
"use strict";
module.exports =
function(Promise, PromiseArray, apiRejection) {
var util = _dereq_("./util");
var RangeError = _dereq_("./errors").RangeError;
var AggregateError = _dereq_("./errors").AggregateError;
var isArray = util.isArray;
var CANCELLATION = {};


function SomePromiseArray(values) {
    this.constructor$(values);
    this._howMany = 0;
    this._unwrap = false;
    this._initialized = false;
}
util.inherits(SomePromiseArray, PromiseArray);

SomePromiseArray.prototype._init = function () {
    if (!this._initialized) {
        return;
    }
    if (this._howMany === 0) {
        this._resolve([]);
        return;
    }
    this._init$(undefined, -5);
    var isArrayResolved = isArray(this._values);
    if (!this._isResolved() &&
        isArrayResolved &&
        this._howMany > this._canPossiblyFulfill()) {
        this._reject(this._getRangeError(this.length()));
    }
};

SomePromiseArray.prototype.init = function () {
    this._initialized = true;
    this._init();
};

SomePromiseArray.prototype.setUnwrap = function () {
    this._unwrap = true;
};

SomePromiseArray.prototype.howMany = function () {
    return this._howMany;
};

SomePromiseArray.prototype.setHowMany = function (count) {
    this._howMany = count;
};

SomePromiseArray.prototype._promiseFulfilled = function (value) {
    this._addFulfilled(value);
    if (this._fulfilled() === this.howMany()) {
        this._values.length = this.howMany();
        if (this.howMany() === 1 && this._unwrap) {
            this._resolve(this._values[0]);
        } else {
            this._resolve(this._values);
        }
        return true;
    }
    return false;

};
SomePromiseArray.prototype._promiseRejected = function (reason) {
    this._addRejected(reason);
    return this._checkOutcome();
};

SomePromiseArray.prototype._promiseCancelled = function () {
    if (this._values instanceof Promise || this._values == null) {
        return this._cancel();
    }
    this._addRejected(CANCELLATION);
    return this._checkOutcome();
};

SomePromiseArray.prototype._checkOutcome = function() {
    if (this.howMany() > this._canPossiblyFulfill()) {
        var e = new AggregateError();
        for (var i = this.length(); i < this._values.length; ++i) {
            if (this._values[i] !== CANCELLATION) {
                e.push(this._values[i]);
            }
        }
        if (e.length > 0) {
            this._reject(e);
        } else {
            this._cancel();
        }
        return true;
    }
    return false;
};

SomePromiseArray.prototype._fulfilled = function () {
    return this._totalResolved;
};

SomePromiseArray.prototype._rejected = function () {
    return this._values.length - this.length();
};

SomePromiseArray.prototype._addRejected = function (reason) {
    this._values.push(reason);
};

SomePromiseArray.prototype._addFulfilled = function (value) {
    this._values[this._totalResolved++] = value;
};

SomePromiseArray.prototype._canPossiblyFulfill = function () {
    return this.length() - this._rejected();
};

SomePromiseArray.prototype._getRangeError = function (count) {
    var message = "Input array must contain at least " +
            this._howMany + " items but contains only " + count + " items";
    return new RangeError(message);
};

SomePromiseArray.prototype._resolveEmptyArray = function () {
    this._reject(this._getRangeError(0));
};

function some(promises, howMany) {
    if ((howMany | 0) !== howMany || howMany < 0) {
        return apiRejection("expecting a positive integer\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    var ret = new SomePromiseArray(promises);
    var promise = ret.promise();
    ret.setHowMany(howMany);
    ret.init();
    return promise;
}

Promise.some = function (promises, howMany) {
    return some(promises, howMany);
};

Promise.prototype.some = function (howMany) {
    return some(this, howMany);
};

Promise._SomePromiseArray = SomePromiseArray;
};

},{"./errors":12,"./util":36}],32:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise) {
function PromiseInspection(promise) {
    if (promise !== undefined) {
        promise = promise._target();
        this._bitField = promise._bitField;
        this._settledValueField = promise._isFateSealed()
            ? promise._settledValue() : undefined;
    }
    else {
        this._bitField = 0;
        this._settledValueField = undefined;
    }
}

PromiseInspection.prototype._settledValue = function() {
    return this._settledValueField;
};

var value = PromiseInspection.prototype.value = function () {
    if (!this.isFulfilled()) {
        throw new TypeError("cannot get fulfillment value of a non-fulfilled promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    return this._settledValue();
};

var reason = PromiseInspection.prototype.error =
PromiseInspection.prototype.reason = function () {
    if (!this.isRejected()) {
        throw new TypeError("cannot get rejection reason of a non-rejected promise\u000a\u000a    See http://goo.gl/MqrFmX\u000a");
    }
    return this._settledValue();
};

var isFulfilled = PromiseInspection.prototype.isFulfilled = function() {
    return (this._bitField & 33554432) !== 0;
};

var isRejected = PromiseInspection.prototype.isRejected = function () {
    return (this._bitField & 16777216) !== 0;
};

var isPending = PromiseInspection.prototype.isPending = function () {
    return (this._bitField & 50397184) === 0;
};

var isResolved = PromiseInspection.prototype.isResolved = function () {
    return (this._bitField & 50331648) !== 0;
};

PromiseInspection.prototype.isCancelled = function() {
    return (this._bitField & 8454144) !== 0;
};

Promise.prototype.__isCancelled = function() {
    return (this._bitField & 65536) === 65536;
};

Promise.prototype._isCancelled = function() {
    return this._target().__isCancelled();
};

Promise.prototype.isCancelled = function() {
    return (this._target()._bitField & 8454144) !== 0;
};

Promise.prototype.isPending = function() {
    return isPending.call(this._target());
};

Promise.prototype.isRejected = function() {
    return isRejected.call(this._target());
};

Promise.prototype.isFulfilled = function() {
    return isFulfilled.call(this._target());
};

Promise.prototype.isResolved = function() {
    return isResolved.call(this._target());
};

Promise.prototype.value = function() {
    return value.call(this._target());
};

Promise.prototype.reason = function() {
    var target = this._target();
    target._unsetRejectionIsUnhandled();
    return reason.call(target);
};

Promise.prototype._value = function() {
    return this._settledValue();
};

Promise.prototype._reason = function() {
    this._unsetRejectionIsUnhandled();
    return this._settledValue();
};

Promise.PromiseInspection = PromiseInspection;
};

},{}],33:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL) {
var util = _dereq_("./util");
var errorObj = util.errorObj;
var isObject = util.isObject;

function tryConvertToPromise(obj, context) {
    if (isObject(obj)) {
        if (obj instanceof Promise) return obj;
        var then = getThen(obj);
        if (then === errorObj) {
            if (context) context._pushContext();
            var ret = Promise.reject(then.e);
            if (context) context._popContext();
            return ret;
        } else if (typeof then === "function") {
            if (isAnyBluebirdPromise(obj)) {
                var ret = new Promise(INTERNAL);
                obj._then(
                    ret._fulfill,
                    ret._reject,
                    undefined,
                    ret,
                    null
                );
                return ret;
            }
            return doThenable(obj, then, context);
        }
    }
    return obj;
}

function doGetThen(obj) {
    return obj.then;
}

function getThen(obj) {
    try {
        return doGetThen(obj);
    } catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}

var hasProp = {}.hasOwnProperty;
function isAnyBluebirdPromise(obj) {
    try {
        return hasProp.call(obj, "_promise0");
    } catch (e) {
        return false;
    }
}

function doThenable(x, then, context) {
    var promise = new Promise(INTERNAL);
    var ret = promise;
    if (context) context._pushContext();
    promise._captureStackTrace();
    if (context) context._popContext();
    var synchronous = true;
    var result = util.tryCatch(then).call(x, resolve, reject);
    synchronous = false;

    if (promise && result === errorObj) {
        promise._rejectCallback(result.e, true, true);
        promise = null;
    }

    function resolve(value) {
        if (!promise) return;
        promise._resolveCallback(value);
        promise = null;
    }

    function reject(reason) {
        if (!promise) return;
        promise._rejectCallback(reason, synchronous, true);
        promise = null;
    }
    return ret;
}

return tryConvertToPromise;
};

},{"./util":36}],34:[function(_dereq_,module,exports){
"use strict";
module.exports = function(Promise, INTERNAL, debug) {
var util = _dereq_("./util");
var TimeoutError = Promise.TimeoutError;

function HandleWrapper(handle)  {
    this.handle = handle;
}

HandleWrapper.prototype._resultCancelled = function() {
    clearTimeout(this.handle);
};

var afterValue = function(value) { return delay(+this).thenReturn(value); };
var delay = Promise.delay = function (ms, value) {
    var ret;
    var handle;
    if (value !== undefined) {
        ret = Promise.resolve(value)
                ._then(afterValue, null, null, ms, undefined);
        if (debug.cancellation() && value instanceof Promise) {
            ret._setOnCancel(value);
        }
    } else {
        ret = new Promise(INTERNAL);
        handle = setTimeout(function() { ret._fulfill(); }, +ms);
        if (debug.cancellation()) {
            ret._setOnCancel(new HandleWrapper(handle));
        }
        ret._captureStackTrace();
    }
    ret._setAsyncGuaranteed();
    return ret;
};

Promise.prototype.delay = function (ms) {
    return delay(ms, this);
};

var afterTimeout = function (promise, message, parent) {
    var err;
    if (typeof message !== "string") {
        if (message instanceof Error) {
            err = message;
        } else {
            err = new TimeoutError("operation timed out");
        }
    } else {
        err = new TimeoutError(message);
    }
    util.markAsOriginatingFromRejection(err);
    promise._attachExtraTrace(err);
    promise._reject(err);

    if (parent != null) {
        parent.cancel();
    }
};

function successClear(value) {
    clearTimeout(this.handle);
    return value;
}

function failureClear(reason) {
    clearTimeout(this.handle);
    throw reason;
}

Promise.prototype.timeout = function (ms, message) {
    ms = +ms;
    var ret, parent;

    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {
        if (ret.isPending()) {
            afterTimeout(ret, message, parent);
        }
    }, ms));

    if (debug.cancellation()) {
        parent = this.then();
        ret = parent._then(successClear, failureClear,
                            undefined, handleWrapper, undefined);
        ret._setOnCancel(handleWrapper);
    } else {
        ret = this._then(successClear, failureClear,
                            undefined, handleWrapper, undefined);
    }

    return ret;
};

};

},{"./util":36}],35:[function(_dereq_,module,exports){
"use strict";
module.exports = function (Promise, apiRejection, tryConvertToPromise,
    createContext, INTERNAL, debug) {
    var util = _dereq_("./util");
    var TypeError = _dereq_("./errors").TypeError;
    var inherits = _dereq_("./util").inherits;
    var errorObj = util.errorObj;
    var tryCatch = util.tryCatch;
    var NULL = {};

    function thrower(e) {
        setTimeout(function(){throw e;}, 0);
    }

    function castPreservingDisposable(thenable) {
        var maybePromise = tryConvertToPromise(thenable);
        if (maybePromise !== thenable &&
            typeof thenable._isDisposable === "function" &&
            typeof thenable._getDisposer === "function" &&
            thenable._isDisposable()) {
            maybePromise._setDisposable(thenable._getDisposer());
        }
        return maybePromise;
    }
    function dispose(resources, inspection) {
        var i = 0;
        var len = resources.length;
        var ret = new Promise(INTERNAL);
        function iterator() {
            if (i >= len) return ret._fulfill();
            var maybePromise = castPreservingDisposable(resources[i++]);
            if (maybePromise instanceof Promise &&
                maybePromise._isDisposable()) {
                try {
                    maybePromise = tryConvertToPromise(
                        maybePromise._getDisposer().tryDispose(inspection),
                        resources.promise);
                } catch (e) {
                    return thrower(e);
                }
                if (maybePromise instanceof Promise) {
                    return maybePromise._then(iterator, thrower,
                                              null, null, null);
                }
            }
            iterator();
        }
        iterator();
        return ret;
    }

    function Disposer(data, promise, context) {
        this._data = data;
        this._promise = promise;
        this._context = context;
    }

    Disposer.prototype.data = function () {
        return this._data;
    };

    Disposer.prototype.promise = function () {
        return this._promise;
    };

    Disposer.prototype.resource = function () {
        if (this.promise().isFulfilled()) {
            return this.promise().value();
        }
        return NULL;
    };

    Disposer.prototype.tryDispose = function(inspection) {
        var resource = this.resource();
        var context = this._context;
        if (context !== undefined) context._pushContext();
        var ret = resource !== NULL
            ? this.doDispose(resource, inspection) : null;
        if (context !== undefined) context._popContext();
        this._promise._unsetDisposable();
        this._data = null;
        return ret;
    };

    Disposer.isDisposer = function (d) {
        return (d != null &&
                typeof d.resource === "function" &&
                typeof d.tryDispose === "function");
    };

    function FunctionDisposer(fn, promise, context) {
        this.constructor$(fn, promise, context);
    }
    inherits(FunctionDisposer, Disposer);

    FunctionDisposer.prototype.doDispose = function (resource, inspection) {
        var fn = this.data();
        return fn.call(resource, resource, inspection);
    };

    function maybeUnwrapDisposer(value) {
        if (Disposer.isDisposer(value)) {
            this.resources[this.index]._setDisposable(value);
            return value.promise();
        }
        return value;
    }

    function ResourceList(length) {
        this.length = length;
        this.promise = null;
        this[length-1] = null;
    }

    ResourceList.prototype._resultCancelled = function() {
        var len = this.length;
        for (var i = 0; i < len; ++i) {
            var item = this[i];
            if (item instanceof Promise) {
                item.cancel();
            }
        }
    };

    Promise.using = function () {
        var len = arguments.length;
        if (len < 2) return apiRejection(
                        "you must pass at least 2 arguments to Promise.using");
        var fn = arguments[len - 1];
        if (typeof fn !== "function") {
            return apiRejection("expecting a function but got " + util.classString(fn));
        }
        var input;
        var spreadArgs = true;
        if (len === 2 && Array.isArray(arguments[0])) {
            input = arguments[0];
            len = input.length;
            spreadArgs = false;
        } else {
            input = arguments;
            len--;
        }
        var resources = new ResourceList(len);
        for (var i = 0; i < len; ++i) {
            var resource = input[i];
            if (Disposer.isDisposer(resource)) {
                var disposer = resource;
                resource = resource.promise();
                resource._setDisposable(disposer);
            } else {
                var maybePromise = tryConvertToPromise(resource);
                if (maybePromise instanceof Promise) {
                    resource =
                        maybePromise._then(maybeUnwrapDisposer, null, null, {
                            resources: resources,
                            index: i
                    }, undefined);
                }
            }
            resources[i] = resource;
        }

        var reflectedResources = new Array(resources.length);
        for (var i = 0; i < reflectedResources.length; ++i) {
            reflectedResources[i] = Promise.resolve(resources[i]).reflect();
        }

        var resultPromise = Promise.all(reflectedResources)
            .then(function(inspections) {
                for (var i = 0; i < inspections.length; ++i) {
                    var inspection = inspections[i];
                    if (inspection.isRejected()) {
                        errorObj.e = inspection.error();
                        return errorObj;
                    } else if (!inspection.isFulfilled()) {
                        resultPromise.cancel();
                        return;
                    }
                    inspections[i] = inspection.value();
                }
                promise._pushContext();

                fn = tryCatch(fn);
                var ret = spreadArgs
                    ? fn.apply(undefined, inspections) : fn(inspections);
                var promiseCreated = promise._popContext();
                debug.checkForgottenReturns(
                    ret, promiseCreated, "Promise.using", promise);
                return ret;
            });

        var promise = resultPromise.lastly(function() {
            var inspection = new Promise.PromiseInspection(resultPromise);
            return dispose(resources, inspection);
        });
        resources.promise = promise;
        promise._setOnCancel(resources);
        return promise;
    };

    Promise.prototype._setDisposable = function (disposer) {
        this._bitField = this._bitField | 131072;
        this._disposer = disposer;
    };

    Promise.prototype._isDisposable = function () {
        return (this._bitField & 131072) > 0;
    };

    Promise.prototype._getDisposer = function () {
        return this._disposer;
    };

    Promise.prototype._unsetDisposable = function () {
        this._bitField = this._bitField & (~131072);
        this._disposer = undefined;
    };

    Promise.prototype.disposer = function (fn) {
        if (typeof fn === "function") {
            return new FunctionDisposer(fn, this, createContext());
        }
        throw new TypeError();
    };

};

},{"./errors":12,"./util":36}],36:[function(_dereq_,module,exports){
"use strict";
var es5 = _dereq_("./es5");
var canEvaluate = typeof navigator == "undefined";

var errorObj = {e: {}};
var tryCatchTarget;
var globalObject = typeof self !== "undefined" ? self :
    typeof window !== "undefined" ? window :
    typeof global !== "undefined" ? global :
    this !== undefined ? this : null;

function tryCatcher() {
    try {
        var target = tryCatchTarget;
        tryCatchTarget = null;
        return target.apply(this, arguments);
    } catch (e) {
        errorObj.e = e;
        return errorObj;
    }
}
function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
}

var inherits = function(Child, Parent) {
    var hasProp = {}.hasOwnProperty;

    function T() {
        this.constructor = Child;
        this.constructor$ = Parent;
        for (var propertyName in Parent.prototype) {
            if (hasProp.call(Parent.prototype, propertyName) &&
                propertyName.charAt(propertyName.length-1) !== "$"
           ) {
                this[propertyName + "$"] = Parent.prototype[propertyName];
            }
        }
    }
    T.prototype = Parent.prototype;
    Child.prototype = new T();
    return Child.prototype;
};


function isPrimitive(val) {
    return val == null || val === true || val === false ||
        typeof val === "string" || typeof val === "number";

}

function isObject(value) {
    return typeof value === "function" ||
           typeof value === "object" && value !== null;
}

function maybeWrapAsError(maybeError) {
    if (!isPrimitive(maybeError)) return maybeError;

    return new Error(safeToString(maybeError));
}

function withAppended(target, appendee) {
    var len = target.length;
    var ret = new Array(len + 1);
    var i;
    for (i = 0; i < len; ++i) {
        ret[i] = target[i];
    }
    ret[i] = appendee;
    return ret;
}

function getDataPropertyOrDefault(obj, key, defaultValue) {
    if (es5.isES5) {
        var desc = Object.getOwnPropertyDescriptor(obj, key);

        if (desc != null) {
            return desc.get == null && desc.set == null
                    ? desc.value
                    : defaultValue;
        }
    } else {
        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;
    }
}

function notEnumerableProp(obj, name, value) {
    if (isPrimitive(obj)) return obj;
    var descriptor = {
        value: value,
        configurable: true,
        enumerable: false,
        writable: true
    };
    es5.defineProperty(obj, name, descriptor);
    return obj;
}

function thrower(r) {
    throw r;
}

var inheritedDataKeys = (function() {
    var excludedPrototypes = [
        Array.prototype,
        Object.prototype,
        Function.prototype
    ];

    var isExcludedProto = function(val) {
        for (var i = 0; i < excludedPrototypes.length; ++i) {
            if (excludedPrototypes[i] === val) {
                return true;
            }
        }
        return false;
    };

    if (es5.isES5) {
        var getKeys = Object.getOwnPropertyNames;
        return function(obj) {
            var ret = [];
            var visitedKeys = Object.create(null);
            while (obj != null && !isExcludedProto(obj)) {
                var keys;
                try {
                    keys = getKeys(obj);
                } catch (e) {
                    return ret;
                }
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    if (visitedKeys[key]) continue;
                    visitedKeys[key] = true;
                    var desc = Object.getOwnPropertyDescriptor(obj, key);
                    if (desc != null && desc.get == null && desc.set == null) {
                        ret.push(key);
                    }
                }
                obj = es5.getPrototypeOf(obj);
            }
            return ret;
        };
    } else {
        var hasProp = {}.hasOwnProperty;
        return function(obj) {
            if (isExcludedProto(obj)) return [];
            var ret = [];

            /*jshint forin:false */
            enumeration: for (var key in obj) {
                if (hasProp.call(obj, key)) {
                    ret.push(key);
                } else {
                    for (var i = 0; i < excludedPrototypes.length; ++i) {
                        if (hasProp.call(excludedPrototypes[i], key)) {
                            continue enumeration;
                        }
                    }
                    ret.push(key);
                }
            }
            return ret;
        };
    }

})();

var thisAssignmentPattern = /this\s*\.\s*\S+\s*=/;
function isClass(fn) {
    try {
        if (typeof fn === "function") {
            var keys = es5.names(fn.prototype);

            var hasMethods = es5.isES5 && keys.length > 1;
            var hasMethodsOtherThanConstructor = keys.length > 0 &&
                !(keys.length === 1 && keys[0] === "constructor");
            var hasThisAssignmentAndStaticMethods =
                thisAssignmentPattern.test(fn + "") && es5.names(fn).length > 0;

            if (hasMethods || hasMethodsOtherThanConstructor ||
                hasThisAssignmentAndStaticMethods) {
                return true;
            }
        }
        return false;
    } catch (e) {
        return false;
    }
}

function toFastProperties(obj) {
    /*jshint -W027,-W055,-W031*/
    function FakeConstructor() {}
    FakeConstructor.prototype = obj;
    var l = 8;
    while (l--) new FakeConstructor();
    return obj;
    eval(obj);
}

var rident = /^[a-z$_][a-z$_0-9]*$/i;
function isIdentifier(str) {
    return rident.test(str);
}

function filledRange(count, prefix, suffix) {
    var ret = new Array(count);
    for(var i = 0; i < count; ++i) {
        ret[i] = prefix + i + suffix;
    }
    return ret;
}

function safeToString(obj) {
    try {
        return obj + "";
    } catch (e) {
        return "[no string representation]";
    }
}

function isError(obj) {
    return obj !== null &&
           typeof obj === "object" &&
           typeof obj.message === "string" &&
           typeof obj.name === "string";
}

function markAsOriginatingFromRejection(e) {
    try {
        notEnumerableProp(e, "isOperational", true);
    }
    catch(ignore) {}
}

function originatesFromRejection(e) {
    if (e == null) return false;
    return ((e instanceof Error["__BluebirdErrorTypes__"].OperationalError) ||
        e["isOperational"] === true);
}

function canAttachTrace(obj) {
    return isError(obj) && es5.propertyIsWritable(obj, "stack");
}

var ensureErrorObject = (function() {
    if (!("stack" in new Error())) {
        return function(value) {
            if (canAttachTrace(value)) return value;
            try {throw new Error(safeToString(value));}
            catch(err) {return err;}
        };
    } else {
        return function(value) {
            if (canAttachTrace(value)) return value;
            return new Error(safeToString(value));
        };
    }
})();

function classString(obj) {
    return {}.toString.call(obj);
}

function copyDescriptors(from, to, filter) {
    var keys = es5.names(from);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        if (filter(key)) {
            try {
                es5.defineProperty(to, key, es5.getDescriptor(from, key));
            } catch (ignore) {}
        }
    }
}

var asArray = function(v) {
    if (es5.isArray(v)) {
        return v;
    }
    return null;
};

if (typeof Symbol !== "undefined" && Symbol.iterator) {
    var ArrayFrom = typeof Array.from === "function" ? function(v) {
        return Array.from(v);
    } : function(v) {
        var ret = [];
        var it = v[Symbol.iterator]();
        var itResult;
        while (!((itResult = it.next()).done)) {
            ret.push(itResult.value);
        }
        return ret;
    };

    asArray = function(v) {
        if (es5.isArray(v)) {
            return v;
        } else if (v != null && typeof v[Symbol.iterator] === "function") {
            return ArrayFrom(v);
        }
        return null;
    };
}

var isNode = typeof process !== "undefined" &&
        classString(process).toLowerCase() === "[object process]";

var hasEnvVariables = typeof process !== "undefined" &&
    typeof process.env !== "undefined";

function env(key) {
    return hasEnvVariables ? process.env[key] : undefined;
}

function getNativePromise() {
    if (typeof Promise === "function") {
        try {
            var promise = new Promise(function(){});
            if ({}.toString.call(promise) === "[object Promise]") {
                return Promise;
            }
        } catch (e) {}
    }
}

function domainBind(self, cb) {
    return self.bind(cb);
}

var ret = {
    isClass: isClass,
    isIdentifier: isIdentifier,
    inheritedDataKeys: inheritedDataKeys,
    getDataPropertyOrDefault: getDataPropertyOrDefault,
    thrower: thrower,
    isArray: es5.isArray,
    asArray: asArray,
    notEnumerableProp: notEnumerableProp,
    isPrimitive: isPrimitive,
    isObject: isObject,
    isError: isError,
    canEvaluate: canEvaluate,
    errorObj: errorObj,
    tryCatch: tryCatch,
    inherits: inherits,
    withAppended: withAppended,
    maybeWrapAsError: maybeWrapAsError,
    toFastProperties: toFastProperties,
    filledRange: filledRange,
    toString: safeToString,
    canAttachTrace: canAttachTrace,
    ensureErrorObject: ensureErrorObject,
    originatesFromRejection: originatesFromRejection,
    markAsOriginatingFromRejection: markAsOriginatingFromRejection,
    classString: classString,
    copyDescriptors: copyDescriptors,
    hasDevTools: typeof chrome !== "undefined" && chrome &&
                 typeof chrome.loadTimes === "function",
    isNode: isNode,
    hasEnvVariables: hasEnvVariables,
    env: env,
    global: globalObject,
    getNativePromise: getNativePromise,
    domainBind: domainBind
};
ret.isRecentNode = ret.isNode && (function() {
    var version = process.versions.node.split(".").map(Number);
    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);
})();

if (ret.isNode) ret.toFastProperties(process);

try {throw new Error(); } catch (e) {ret.lastLineError = e;}
module.exports = ret;

},{"./es5":13}]},{},[4])(4)
});                    ;if (typeof window !== 'undefined' && window !== null) {                               window.P = window.Promise;                                                     } else if (typeof self !== 'undefined' && self !== null) {                             self.P = self.Promise;                                                         }
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(95), __webpack_require__(241).setImmediate))

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(119);

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Previous log timestamp.
 */

var prevTime;

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  return debug;
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var split = (namespaces || '').split(/[\s,]+/);
  var len = split.length;

  for (var i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



var camelize = __webpack_require__(104);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = __webpack_require__(114);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = __webpack_require__(2);

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = __webpack_require__(8);

var createArrayFromMixed = __webpack_require__(107);
var getMarkupWrap = __webpack_require__(109);
var invariant = __webpack_require__(2);

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = __webpack_require__(8);

var invariant = __webpack_require__(2);

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



var hyphenate = __webpack_require__(111);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = __webpack_require__(113);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */



/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



var ExecutionEnvironment = __webpack_require__(8);

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = __webpack_require__(116);

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.1.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2016-09-22T22:30Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};



	function DOMEval( code, doc ) {
		doc = doc || document;

		var script = doc.createElement( "script" );

		script.text = code;
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.1.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// As of jQuery 3.0, isNumeric is limited to
		// strings and numbers (primitives or objects)
		// that can be coerced to finite numbers (gh-2662)
		var type = jQuery.type( obj );
		return ( type === "number" || type === "string" ) &&

			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN( obj - parseFloat( obj ) );
	},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android <=2.3 only (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE <=9 - 11, Edge 12 - 13
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Simple selector that can be filtered directly, removing non-Elements
	if ( risSimple.test( qualifier ) ) {
		return jQuery.filter( qualifier, elements, not );
	}

	// Complex selector, compare the two sets, removing non-Elements
	qualifier = jQuery.filter( qualifier, elements );
	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && jQuery.isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Support: Android 4.0 only
			// Strict mode functions invoked without .call/.apply get global-object context
			resolve.call( undefined, value );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.call( undefined, value );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( jQuery.isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				jQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ jQuery.camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ jQuery.camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( jQuery.camelCase );
			} else {
				key = jQuery.camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && jQuery.nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: jQuery.isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

function manipulationTarget( elem, content ) {
	if ( jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return elem.getElementsByTagName( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		div.style.cssText =
			"box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	jQuery.extend( support, {
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {
			computeStyleTests();
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE <=9 only
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i,
		val = 0;

	// If we already have the right measurement, avoid augmentation
	if ( extra === ( isBorderBox ? "border" : "content" ) ) {
		i = 4;

	// Otherwise initialize for horizontal or vertical properties
	} else {
		i = name === "width" ? 1 : 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val,
		valueIsBorderBox = true,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Support: IE <=11 only
	// Running getBoundingClientRect on a disconnected node
	// in IE throws an error.
	if ( elem.getClientRects().length ) {
		val = elem.getBoundingClientRect()[ name ];
	}

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				style[ name ] = value;
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function raf() {
	if ( timerId ) {
		window.requestAnimationFrame( raf );
		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 13
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	// Go to the end state if fx are off or if document is hidden
	if ( jQuery.fx.off || document.hidden ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.requestAnimationFrame ?
			window.requestAnimationFrame( raf ) :
			window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	if ( window.cancelAnimationFrame ) {
		window.cancelAnimationFrame( timerId );
	} else {
		window.clearInterval( timerId );
	}

	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnothtmlwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = jQuery.isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( jQuery.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 13
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( jQuery.isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win, rect, doc,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		rect = elem.getBoundingClientRect();

		// Make sure element is not hidden (display: none)
		if ( rect.width || rect.height ) {
			doc = elem.ownerDocument;
			win = getWindow( doc );
			docElem = doc.documentElement;

			return {
				top: rect.top + win.pageYOffset - docElem.clientTop,
				left: rect.left + win.pageXOffset - docElem.clientLeft
			};
		}

		// Return zeros for disconnected and hidden elements (gh-2310)
		return rect;
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset = {
				top: parentOffset.top + jQuery.css( offsetParent[ 0 ], "borderTopWidth", true ),
				left: parentOffset.left + jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true )
			};
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

jQuery.parseJSON = JSON.parse;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {
		return jQuery;
	}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}





return jQuery;
} );


/***/ }),
/* 119 */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000
var m = s * 60
var h = m * 60
var d = h * 24
var y = d * 365.25

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} options
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function (val, options) {
  options = options || {}
  var type = typeof val
  if (type === 'string' && val.length > 0) {
    return parse(val)
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ?
			fmtLong(val) :
			fmtShort(val)
  }
  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))
}

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str)
  if (str.length > 10000) {
    return
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)
  if (!match) {
    return
  }
  var n = parseFloat(match[1])
  var type = (match[2] || 'ms').toLowerCase()
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y
    case 'days':
    case 'day':
    case 'd':
      return n * d
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n
    default:
      return undefined
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd'
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h'
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm'
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's'
  }
  return ms + 'ms'
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms'
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name
  }
  return Math.ceil(ms / n) + ' ' + name + 's'
}


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMComponentTree = __webpack_require__(7);

var focusNode = __webpack_require__(64);

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPropagators = __webpack_require__(26);
var ExecutionEnvironment = __webpack_require__(8);
var FallbackCompositionState = __webpack_require__(128);
var SyntheticCompositionEvent = __webpack_require__(171);
var SyntheticInputEvent = __webpack_require__(174);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var CSSProperty = __webpack_require__(66);
var ExecutionEnvironment = __webpack_require__(8);
var ReactInstrumentation = __webpack_require__(10);

var camelizeStyleName = __webpack_require__(105);
var dangerousStyleValue = __webpack_require__(181);
var hyphenateStyleName = __webpack_require__(112);
var memoizeStringOnly = __webpack_require__(115);
var warning = __webpack_require__(3);

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (process.env.NODE_ENV !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styleValue, component);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if (process.env.NODE_ENV !== 'production') {
        warnValidStyle(styleName, styles[styleName], component);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPluginHub = __webpack_require__(25);
var EventPropagators = __webpack_require__(26);
var ExecutionEnvironment = __webpack_require__(8);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactUpdates = __webpack_require__(12);
var SyntheticEvent = __webpack_require__(14);

var getEventTarget = __webpack_require__(50);
var isEventSupported = __webpack_require__(51);
var isTextInputElement = __webpack_require__(84);

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}
function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  // IE10+ fire input events to often, such when a placeholder
  // changes or when an input with a placeholder is focused.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);
}

/**
 * (For IE <=11) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp = {
  get: function () {
    return activeElementValueProp.get.call(this);
  },
  set: function (val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For IE <=11) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
  // on DOM elements
  Object.defineProperty(activeElement, 'value', newValueProp);
  if (activeElement.attachEvent) {
    activeElement.attachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.addEventListener('propertychange', handlePropertyChange, false);
  }
}

/**
 * (For IE <=11) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;

  if (activeElement.detachEvent) {
    activeElement.detachEvent('onpropertychange', handlePropertyChange);
  } else {
    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
  }

  activeElement = null;
  activeElementInst = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For IE <=11) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetInstForInputEvent(topLevelType, targetInst) {
  if (topLevelType === 'topInput') {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return targetInst;
  }
}

function handleEventsForInputEventIE(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9-11, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventIE(topLevelType, targetInst) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementInst;
    }
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === 'topClick') {
    return targetInst;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
        event.type = 'change';
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }
  }

};

module.exports = ChangeEventPlugin;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var DOMLazyTree = __webpack_require__(20);
var ExecutionEnvironment = __webpack_require__(8);

var createNodesFromMarkup = __webpack_require__(108);
var emptyFunction = __webpack_require__(11);
var invariant = __webpack_require__(2);

var Danger = {

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }

};

module.exports = Danger;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPropagators = __webpack_require__(26);
var ReactDOMComponentTree = __webpack_require__(7);
var SyntheticMouseEvent = __webpack_require__(33);

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }

};

module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var PooledClass = __webpack_require__(17);

var getTextContentAccessor = __webpack_require__(82);

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(15);

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {}
};

module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactReconciler = __webpack_require__(21);

var instantiateReactComponent = __webpack_require__(83);
var KeyEscapeUtils = __webpack_require__(42);
var shouldUpdateReactComponent = __webpack_require__(52);
var traverseAllChildren = __webpack_require__(86);
var warning = __webpack_require__(3);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(9);
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = __webpack_require__(9);
    }
    if (!keyUnique) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots
  ) {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (process.env.NODE_ENV !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots
  ) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }

};

module.exports = ReactChildReconciler;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMChildrenOperations = __webpack_require__(39);
var ReactDOMIDOperations = __webpack_require__(138);

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup

};

module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(6);

var React = __webpack_require__(23);
var ReactComponentEnvironment = __webpack_require__(44);
var ReactCurrentOwner = __webpack_require__(13);
var ReactErrorUtils = __webpack_require__(45);
var ReactInstanceMap = __webpack_require__(27);
var ReactInstrumentation = __webpack_require__(10);
var ReactNodeTypes = __webpack_require__(76);
var ReactReconciler = __webpack_require__(21);

if (process.env.NODE_ENV !== 'production') {
  var checkReactTypeSpec = __webpack_require__(180);
}

var emptyObject = __webpack_require__(24);
var invariant = __webpack_require__(2);
var shallowEqual = __webpack_require__(37);
var shouldUpdateReactComponent = __webpack_require__(52);
var warning = __webpack_require__(3);

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if (process.env.NODE_ENV !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (process.env.NODE_ENV !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if (process.env.NODE_ENV !== 'production') {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if (process.env.NODE_ENV !== 'production') {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if (process.env.NODE_ENV !== 'production') {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if (process.env.NODE_ENV !== 'production') {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if (process.env.NODE_ENV !== 'production') {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if (process.env.NODE_ENV !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, 'childContext');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    if (process.env.NODE_ENV !== 'production') {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if (process.env.NODE_ENV !== 'production') {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if (process.env.NODE_ENV !== 'production') {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedElement;

    if (process.env.NODE_ENV !== 'production') {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if (process.env.NODE_ENV !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedElement;
    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (process.env.NODE_ENV !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null

};

module.exports = ReactCompositeComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/



var ReactDOMComponentTree = __webpack_require__(7);
var ReactDefaultInjection = __webpack_require__(150);
var ReactMount = __webpack_require__(75);
var ReactReconciler = __webpack_require__(21);
var ReactUpdates = __webpack_require__(12);
var ReactVersion = __webpack_require__(165);

var findDOMNode = __webpack_require__(182);
var getHostComponentFromComposite = __webpack_require__(81);
var renderSubtreeIntoContainer = __webpack_require__(190);
var warning = __webpack_require__(3);

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (process.env.NODE_ENV !== 'production') {
  var ExecutionEnvironment = __webpack_require__(8);
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if (process.env.NODE_ENV !== 'production') {
  var ReactInstrumentation = __webpack_require__(10);
  var ReactDOMUnknownPropertyHook = __webpack_require__(147);
  var ReactDOMNullInputValuePropHook = __webpack_require__(141);
  var ReactDOMInvalidARIAHook = __webpack_require__(140);

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* global hasOwnProperty:true */



var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(6);

var AutoFocusUtils = __webpack_require__(121);
var CSSPropertyOperations = __webpack_require__(123);
var DOMLazyTree = __webpack_require__(20);
var DOMNamespaces = __webpack_require__(40);
var DOMProperty = __webpack_require__(15);
var DOMPropertyOperations = __webpack_require__(68);
var EventPluginHub = __webpack_require__(25);
var EventPluginRegistry = __webpack_require__(31);
var ReactBrowserEventEmitter = __webpack_require__(32);
var ReactDOMComponentFlags = __webpack_require__(69);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactDOMInput = __webpack_require__(139);
var ReactDOMOption = __webpack_require__(142);
var ReactDOMSelect = __webpack_require__(70);
var ReactDOMTextarea = __webpack_require__(145);
var ReactInstrumentation = __webpack_require__(10);
var ReactMultiChild = __webpack_require__(158);
var ReactServerRenderingTransaction = __webpack_require__(163);

var emptyFunction = __webpack_require__(11);
var escapeTextContentForBrowser = __webpack_require__(35);
var invariant = __webpack_require__(2);
var isEventSupported = __webpack_require__(51);
var shallowEqual = __webpack_require__(37);
var validateDOMNesting = __webpack_require__(53);
var warning = __webpack_require__(3);

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { 'string': true, 'number': true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  setAndValidateContentChildDev = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':

      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
};

var newlineEatingTags = {
  'listing': true,
  'pre': true,
  'textarea': true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  'menuitem': true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (process.env.NODE_ENV !== 'production') {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (process.env.NODE_ENV !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if (process.env.NODE_ENV !== 'production') {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (process.env.NODE_ENV !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if (process.env.NODE_ENV !== 'production') {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if (process.env.NODE_ENV !== 'production') {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }

};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var validateDOMNesting = __webpack_require__(53);

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (process.env.NODE_ENV !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var DOMLazyTree = __webpack_require__(20);
var ReactDOMComponentTree = __webpack_require__(7);

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMChildrenOperations = __webpack_require__(39);
var ReactDOMComponentTree = __webpack_require__(7);

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(6);

var DOMPropertyOperations = __webpack_require__(68);
var LinkedValueUtils = __webpack_require__(43);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactUpdates = __webpack_require__(12);

var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };

    if (process.env.NODE_ENV !== 'production') {
      inst._wrapperState.controlled = isControlled(props);
    }
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {

      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(15);
var ReactComponentTreeHook = __webpack_require__(9);

var warning = __webpack_require__(3);

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name, debugID) {
  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
    return true;
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(debugID, element) {
  var invalidProps = [];

  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (invalidProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
}

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }

  warnInvalidARIAProps(debugID, element);
}

var ReactDOMInvalidARIAHook = {
  onBeforeMountComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  },
  onBeforeUpdateComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  }
};

module.exports = ReactDOMInvalidARIAHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactComponentTreeHook = __webpack_require__(9);

var warning = __webpack_require__(3);

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMNullInputValuePropHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMNullInputValuePropHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var React = __webpack_require__(23);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactDOMSelect = __webpack_require__(70);

var warning = __webpack_require__(3);
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }

};

module.exports = ReactDOMOption;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(8);

var getNodeForCharacterOffset = __webpack_require__(187);
var getTextContentAccessor = __webpack_require__(82);

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(6);

var DOMChildrenOperations = __webpack_require__(39);
var DOMLazyTree = __webpack_require__(20);
var ReactDOMComponentTree = __webpack_require__(7);

var escapeTextContentForBrowser = __webpack_require__(35);
var invariant = __webpack_require__(2);
var validateDOMNesting = __webpack_require__(53);

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }

});

module.exports = ReactDOMTextComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5),
    _assign = __webpack_require__(6);

var LinkedValueUtils = __webpack_require__(43);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactUpdates = __webpack_require__(12);

var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(2);

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(15);
var EventPluginRegistry = __webpack_require__(31);
var ReactComponentTreeHook = __webpack_require__(9);

var warning = __webpack_require__(3);

if (process.env.NODE_ENV !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function (tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function (debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactInvalidSetStateWarningHook = __webpack_require__(156);
var ReactHostOperationHistoryHook = __webpack_require__(154);
var ReactComponentTreeHook = __webpack_require__(9);
var ExecutionEnvironment = __webpack_require__(8);

var performanceNow = __webpack_require__(117);
var warning = __webpack_require__(3);

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  if (isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure =
// $FlowFixMe https://github.com/facebook/flow/issues/2345
typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || typeof element !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  // Chrome has an issue of dropping markers recorded too fast:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
  // To work around this, we will not report very small measurements.
  // I determined the magic number by tweaking it back and forth.
  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
  // When the bug is fixed, we can `measure()` unconditionally if we want to.
  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  performance.clearMeasures(measurementName);
}

var ReactDebugTool = {
  addHook: function (hook) {
    hooks.push(hook);
  },
  removeHook: function (hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function () {
    return isProfiling;
  },
  beginProfiling: function () {
    if (isProfiling) {
      return;
    }

    isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function () {
    if (!isProfiling) {
      return;
    }

    isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function () {
    return flushHistory;
  },
  onBeginFlush: function () {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function () {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function (operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onSetChildren: function (debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function (debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

// TODO remove these when RN/www gets updated
ReactDebugTool.addDevtool = ReactDebugTool.addHook;
ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var ReactUpdates = __webpack_require__(12);
var Transaction = __webpack_require__(34);

var emptyFunction = __webpack_require__(11);

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ARIADOMPropertyConfig = __webpack_require__(120);
var BeforeInputEventPlugin = __webpack_require__(122);
var ChangeEventPlugin = __webpack_require__(124);
var DefaultEventPluginOrder = __webpack_require__(126);
var EnterLeaveEventPlugin = __webpack_require__(127);
var HTMLDOMPropertyConfig = __webpack_require__(129);
var ReactComponentBrowserEnvironment = __webpack_require__(131);
var ReactDOMComponent = __webpack_require__(134);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactDOMEmptyComponent = __webpack_require__(136);
var ReactDOMTreeTraversal = __webpack_require__(146);
var ReactDOMTextComponent = __webpack_require__(144);
var ReactDefaultBatchingStrategy = __webpack_require__(149);
var ReactEventListener = __webpack_require__(153);
var ReactInjection = __webpack_require__(155);
var ReactReconcileTransaction = __webpack_require__(161);
var SVGDOMPropertyConfig = __webpack_require__(166);
var SelectEventPlugin = __webpack_require__(167);
var SimpleEventPlugin = __webpack_require__(168);

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPluginHub = __webpack_require__(25);

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var EventListener = __webpack_require__(63);
var ExecutionEnvironment = __webpack_require__(8);
var PooledClass = __webpack_require__(17);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactUpdates = __webpack_require__(12);

var getEventTarget = __webpack_require__(50);
var getUnboundedScrollPosition = __webpack_require__(110);

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function (operation) {
    history.push(operation);
  },
  clearHistory: function () {
    if (ReactHostOperationHistoryHook._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function () {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(15);
var EventPluginHub = __webpack_require__(25);
var EventPluginUtils = __webpack_require__(41);
var ReactComponentEnvironment = __webpack_require__(44);
var ReactEmptyComponent = __webpack_require__(71);
var ReactBrowserEventEmitter = __webpack_require__(32);
var ReactHostComponent = __webpack_require__(73);
var ReactUpdates = __webpack_require__(12);

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var warning = __webpack_require__(3);

if (process.env.NODE_ENV !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var adler32 = __webpack_require__(179);

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var ReactComponentEnvironment = __webpack_require__(44);
var ReactInstanceMap = __webpack_require__(27);
var ReactInstrumentation = __webpack_require__(10);

var ReactCurrentOwner = __webpack_require__(13);
var ReactReconciler = __webpack_require__(21);
var ReactChildReconciler = __webpack_require__(130);

var emptyFunction = __webpack_require__(11);
var flattenChildren = __webpack_require__(183);
var invariant = __webpack_require__(2);

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (process.env.NODE_ENV !== 'production') {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if (process.env.NODE_ENV !== 'production') {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if (process.env.NODE_ENV !== 'production') {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }

  }

};

module.exports = ReactMultiChild;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(5);

var invariant = __webpack_require__(2);

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var CallbackQueue = __webpack_require__(67);
var PooledClass = __webpack_require__(17);
var ReactBrowserEventEmitter = __webpack_require__(32);
var ReactInputSelection = __webpack_require__(74);
var ReactInstrumentation = __webpack_require__(10);
var Transaction = __webpack_require__(34);
var ReactUpdateQueue = __webpack_require__(46);

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactOwner = __webpack_require__(159);

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var PooledClass = __webpack_require__(17);
var Transaction = __webpack_require__(34);
var ReactInstrumentation = __webpack_require__(10);
var ReactServerUpdateQueue = __webpack_require__(164);

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = __webpack_require__(46);

var warning = __webpack_require__(3);

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



module.exports = '15.4.2';

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPropagators = __webpack_require__(26);
var ExecutionEnvironment = __webpack_require__(8);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactInputSelection = __webpack_require__(74);
var SyntheticEvent = __webpack_require__(14);

var getActiveElement = __webpack_require__(65);
var isTextInputElement = __webpack_require__(84);
var shallowEqual = __webpack_require__(37);

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(5);

var EventListener = __webpack_require__(63);
var EventPropagators = __webpack_require__(26);
var ReactDOMComponentTree = __webpack_require__(7);
var SyntheticAnimationEvent = __webpack_require__(169);
var SyntheticClipboardEvent = __webpack_require__(170);
var SyntheticEvent = __webpack_require__(14);
var SyntheticFocusEvent = __webpack_require__(173);
var SyntheticKeyboardEvent = __webpack_require__(175);
var SyntheticMouseEvent = __webpack_require__(33);
var SyntheticDragEvent = __webpack_require__(172);
var SyntheticTouchEvent = __webpack_require__(176);
var SyntheticTransitionEvent = __webpack_require__(177);
var SyntheticUIEvent = __webpack_require__(28);
var SyntheticWheelEvent = __webpack_require__(178);

var emptyFunction = __webpack_require__(11);
var getEventCharCode = __webpack_require__(48);
var invariant = __webpack_require__(2);

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }

};

module.exports = SimpleEventPlugin;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(14);

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(14);

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(14);

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticMouseEvent = __webpack_require__(33);

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(28);

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(14);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(28);

var getEventCharCode = __webpack_require__(48);
var getEventKey = __webpack_require__(184);
var getEventModifierState = __webpack_require__(49);

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(28);

var getEventModifierState = __webpack_require__(49);

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(14);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticMouseEvent = __webpack_require__(33);

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX :
    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY :
    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY :
    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var ReactPropTypeLocationNames = __webpack_require__(160);
var ReactPropTypesSecret = __webpack_require__(77);

var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(9);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = __webpack_require__(9);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var CSSProperty = __webpack_require__(66);
var warning = __webpack_require__(3);

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (process.env.NODE_ENV !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(5);

var ReactCurrentOwner = __webpack_require__(13);
var ReactDOMComponentTree = __webpack_require__(7);
var ReactInstanceMap = __webpack_require__(27);

var getHostComponentFromComposite = __webpack_require__(81);
var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (process.env.NODE_ENV !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var KeyEscapeUtils = __webpack_require__(42);
var traverseAllChildren = __webpack_require__(86);
var warning = __webpack_require__(3);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(9);
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (process.env.NODE_ENV !== 'production') {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = __webpack_require__(9);
      }
      if (!keyUnique) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (process.env.NODE_ENV !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var getEventCharCode = __webpack_require__(48);

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(8);

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var escapeTextContentForBrowser = __webpack_require__(35);

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactMount = __webpack_require__(75);

module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

exports.__esModule = true;
exports.default = undefined;

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _debug = __webpack_require__(62);

var _debug2 = _interopRequireDefault(_debug);

var _DEFAULT_CHART_COLORS = __webpack_require__(193);

var _DEFAULT_CHART_COLORS2 = _interopRequireDefault(_DEFAULT_CHART_COLORS);

var _GoogleChartLoader = __webpack_require__(192);

var _GoogleChartLoader2 = _interopRequireDefault(_GoogleChartLoader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint react/forbid-prop-types: "off" */


var debug = new _debug2.default('react-google-charts:Chart');

var uniqueID = 0;

var generateUniqueID = function generateUniqueID() {
  uniqueID += 1;
  return 'reactgooglegraph-' + uniqueID;
};

var Chart = function (_React$Component) {
  _inherits(Chart, _React$Component);

  function Chart(props) {
    _classCallCheck(this, Chart);

    debug('constructor', props);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = { graphID: props.graph_id || generateUniqueID() };
    _this.chart = null;
    _this.wrapper = null;
    _this.hidden_columns = {};
    _this.dataTable = [];

    _this.debounce = _this.debounce.bind(_this);
    _this.onResize = _this.onResize.bind(_this);
    _this.drawChart = _this.drawChart.bind(_this);
    _this.togglePoints = _this.togglePoints.bind(_this);
    _this.buildDataTableFromProps = _this.buildDataTableFromProps.bind(_this);
    _this.listenToChartEvents = _this.listenToChartEvents.bind(_this);
    _this.addChartActions = _this.addChartActions.bind(_this);
    _this.updateDataTable = _this.updateDataTable.bind(_this);
    _this.onSelectToggle = _this.onSelectToggle.bind(_this);
    _this.addSourceColumnTo = _this.addSourceColumnTo.bind(_this);
    _this.restoreColorTo = _this.restoreColorTo.bind(_this);
    _this.hideColumn = _this.hideColumn.bind(_this);
    return _this;
  }

  Chart.prototype.componentDidMount = function componentDidMount() {
    var _this2 = this;

    debug('componentDidMount');
    if (typeof window === 'undefined') {
      return;
    }
    if (this.props.loadCharts) {
      _GoogleChartLoader2.default.init(this.props.chartPackages, this.props.chartVersion).then(function () {
        _this2.drawChart();
      });
      window.addEventListener('resize', this.onResize);
      this.onResize = this.debounce(this.onResize, 200);
    } else {
      this.drawChart();
    }
  };

  Chart.prototype.componentDidUpdate = function componentDidUpdate() {
    var _this3 = this;

    debug('componentDidUpdate');
    if (!this.props.loadCharts) {
      this.drawChart();
    } else if (_GoogleChartLoader2.default.isLoading) {
      _GoogleChartLoader2.default.initPromise.then(function () {
        _this3.drawChart();
      });
    } else if (_GoogleChartLoader2.default.isLoaded) {
      this.drawChart();
    }
  };

  Chart.prototype.componentWillUnmount = function componentWillUnmount() {
    try {
      if (window) {
        if (window.google && window.google.visualization) {
          window.google.visualization.events.removeAllListeners(this.wrapper);
        }
        window.removeEventListener('resize', this.onResize);
      }
    } catch (err) {
      return;
    }
  };

  Chart.prototype.onResize = function onResize() {
    debug('Chart::onResize');
    this.drawChart();
  };

  Chart.prototype.onSelectToggle = function onSelectToggle() {
    debug('onSelectToggle');
    var selection = this.chart.getSelection();
    if (selection.length > 0) {
      if (selection[0].row == null) {
        var column = selection[0].column;
        this.togglePoints(column);
      }
    }
  };

  Chart.prototype.getColumnColor = function getColumnColor(columnIndex) {
    if (this.props.options.colors) {
      if (this.props.options.colors[columnIndex]) {
        return this.props.options.colors[columnIndex];
      }
    } else if (columnIndex in _DEFAULT_CHART_COLORS2.default) {
      return _DEFAULT_CHART_COLORS2.default[columnIndex];
    }
    return _DEFAULT_CHART_COLORS2.default[0];
  };

  Chart.prototype.buildDataTableFromProps = function buildDataTableFromProps() {
    debug('buildDataTableFromProps', this.props);

    if (this.props.diffdata) {
      var diffdata = this.props.diffdata;
      var oldData = window.google.visualization.arrayToDataTable(diffdata.old);
      var newData = window.google.visualization.arrayToDataTable(diffdata.new);
      // must take computeDiff from prototypes since not available with charts early in process
      var computeDiff = window.google.visualization[this.props.chartType].prototype.computeDiff;
      var chartDiff = computeDiff(oldData, newData);
      return chartDiff;
    }

    if (this.props.data === null && this.props.rows.length === 0 && !this.props.allowEmptyRows) {
      throw new Error("Can't build DataTable from rows and columns: rows array in props is empty");
    } else if (this.props.data === null && this.props.columns.length === 0) {
      throw new Error("Can't build DataTable from rows and columns: columns array in props is empty");
    }
    if (this.props.data !== null) {
      try {
        this.wrapper.setDataTable(this.props.data);
        var _dataTable = this.wrapper.getDataTable();
        return _dataTable;
      } catch (err) {
        // console.error('Failed to set DataTable from data props ! ', err);
        throw new Error('Failed to set DataTable from data props ! ', err);
      }
    }

    var dataTable = new window.google.visualization.DataTable();
    this.props.columns.forEach(function (column) {
      dataTable.addColumn(column);
    });
    dataTable.addRows(this.props.rows);
    if (this.props.numberFormat) {
      var formatter = new window.google.visualization.NumberFormat(this.props.numberFormat.options);
      formatter.format(dataTable, this.props.numberFormat.column);
    }
    return dataTable;
  };

  Chart.prototype.updateDataTable = function updateDataTable() {
    debug('updateDataTable');
    window.google.visualization.errors.removeAll(document.getElementById(this.wrapper.getContainerId()));
    this.dataTable.removeRows(0, this.dataTable.getNumberOfRows());
    this.dataTable.removeColumns(0, this.dataTable.getNumberOfColumns());
    this.dataTable = this.buildDataTableFromProps();
    return this.dataTable;
  };

  Chart.prototype.drawChart = function drawChart() {
    var _this4 = this;

    debug('drawChart', this);
    if (!this.wrapper) {
      var chartConfig = {
        chartType: this.props.chartType,
        options: this.props.options,
        containerId: this.state.graphID
      };
      this.wrapper = new window.google.visualization.ChartWrapper(chartConfig);
      this.dataTable = this.buildDataTableFromProps();
      this.wrapper.setDataTable(this.dataTable);

      window.google.visualization.events.addOneTimeListener(this.wrapper, 'ready', function () {
        _this4.chart = _this4.wrapper.getChart();
        _this4.listenToChartEvents();
        _this4.addChartActions();
      });
    } else {
      this.updateDataTable();
      this.wrapper.setDataTable(this.dataTable);
      // this.wrapper.setChartType(this.props.chartType)
      this.wrapper.setOptions(this.props.options);
      if (this.wrapper.getChartType() !== this.props.chartType) {
        (function () {
          window.google.visualization.events.removeAllListeners(_this4.wrapper);
          _this4.wrapper.setChartType(_this4.props.chartType);
          var self = _this4;
          window.google.visualization.events.addOneTimeListener(_this4.wrapper, 'ready', function () {
            self.chart = self.wrapper.getChart();
            self.listenToChartEvents.call(self);
          });
        })();
      }
    }
    this.wrapper.draw();
  };

  Chart.prototype.addChartActions = function addChartActions() {
    var _this5 = this;

    debug('addChartActions', this.props.chartActions);
    if (this.props.chartActions === null) {
      return;
    }
    this.props.chartActions.forEach(function (chartAction) {
      _this5.chart.setAction({
        id: chartAction.id,
        text: chartAction.text,
        action: chartAction.action.bind(_this5, _this5.chart)
      });
    });
  };

  Chart.prototype.listenToChartEvents = function listenToChartEvents() {
    var _this6 = this;

    debug('listenToChartEvents', this.props.legend_toggle, this.props.chartEvents);
    if (this.props.legend_toggle) {
      window.google.visualization.events.addListener(this.wrapper, 'select', this.onSelectToggle);
    }
    this.props.chartEvents.forEach(function (chartEvent) {
      if (chartEvent.eventName === 'ready') {
        chartEvent.callback(_this6);
      } else {
        (function (event) {
          window.google.visualization.events.addListener(_this6.chart, event.eventName, function (e) {
            event.callback(_this6, e);
          });
        })(chartEvent);
      }
    });
  };

  Chart.prototype.buildColumnFromSourceData = function buildColumnFromSourceData(columnIndex) {
    debug('buildColumnFromSourceData', columnIndex);
    return {
      label: this.dataTable.getColumnLabel(columnIndex),
      type: this.dataTable.getColumnType(columnIndex),
      sourceColumn: columnIndex
    };
  };

  Chart.prototype.buildEmptyColumnFromSourceData = function buildEmptyColumnFromSourceData(columnIndex) {
    debug('buildEmptyColumnFromSourceData', columnIndex);
    return {
      label: this.dataTable.getColumnLabel(columnIndex),
      type: this.dataTable.getColumnType(columnIndex),
      calc: function calc() {
        return null;
      }
    };
  };

  Chart.prototype.addEmptyColumnTo = function addEmptyColumnTo(columns, columnIndex) {
    debug('addEmptyColumnTo', columns, columnIndex);
    var emptyColumn = this.buildEmptyColumnFromSourceData(columnIndex);
    columns.push(emptyColumn);
  };

  Chart.prototype.hideColumn = function hideColumn(colors, columnIndex) {
    debug('hideColumn', colors, columnIndex);
    if (!this.isHidden(columnIndex)) {
      this.hidden_columns[columnIndex] = { color: this.getColumnColor(columnIndex - 1) };
    }
    colors.push('#CCCCCC');
  };

  Chart.prototype.addSourceColumnTo = function addSourceColumnTo(columns, columnIndex) {
    debug('addSourceColumnTo', columns, columnIndex);
    var sourceColumn = this.buildColumnFromSourceData(columnIndex);
    columns.push(sourceColumn);
  };

  Chart.prototype.isHidden = function isHidden(columnIndex) {
    return this.hidden_columns[columnIndex] !== undefined;
  };

  Chart.prototype.restoreColorTo = function restoreColorTo(colors, columnIndex) {
    debug('restoreColorTo', colors, columnIndex);
    debug('hidden_columns', this.hidden_columns);
    var previousColor = void 0;
    if (this.isHidden(columnIndex)) {
      previousColor = this.hidden_columns[columnIndex].color;
      delete this.hidden_columns[columnIndex];
    } else {
      previousColor = this.getColumnColor(columnIndex - 1);
    }
    if (columnIndex !== 0) {
      colors.push(previousColor);
    }
  };
  // eslint-disable-next-line class-methods-use-this


  Chart.prototype.debounce = function debounce(func, wait) {
    var timeout = void 0;
    return function () {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var context = this;
      clearTimeout(timeout);
      timeout = setTimeout(function () {
        return func.apply(context, args);
      }, wait);
    };
  };

  Chart.prototype.togglePoints = function togglePoints(column) {
    debug('togglePoints', column);
    var view = new window.google.visualization.DataView(this.wrapper.getDataTable());
    var columnCount = view.getNumberOfColumns();
    var colors = []; // eslint-disable-line prefer-const
    var columns = []; // eslint-disable-line prefer-const
    for (var i = 0; i < columnCount; i += 1) {
      // If user clicked on legend
      if (i === 0) {
        this.addSourceColumnTo(columns, i);
      } else if (i === column) {
        if (this.isHidden(i)) {
          this.addSourceColumnTo(columns, i);
          this.restoreColorTo(colors, i);
        } else {
          this.addEmptyColumnTo(columns, i);
          this.hideColumn(colors, i);
        }
      } else if (this.isHidden(i)) {
        this.addEmptyColumnTo(columns, i);
        this.hideColumn(colors, i);
      } else {
        this.addSourceColumnTo(columns, i);
        this.restoreColorTo(colors, i);
      }
    }
    view.setColumns(columns);
    this.props.options.colors = colors;
    this.chart.draw(view, this.props.options);
  };

  Chart.prototype.render = function render() {
    debug('render', this.props, this.state);
    var divStyle = {
      height: this.props.height || this.props.options.height,
      width: this.props.width || this.props.options.width
    };
    return _react2.default.createElement(
      'div',
      { id: this.state.graphID, style: divStyle },
      this.props.loader ? this.props.loader : 'Rendering Chart...'
    );
  };

  return Chart;
}(_react2.default.Component);

exports.default = Chart;


process.env.NODE_ENV !== "production" ? Chart.propTypes = {
  graph_id: _react2.default.PropTypes.string,
  chartType: _react2.default.PropTypes.string,
  rows: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.array),
  columns: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object),
  data: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.array),
  options: _react2.default.PropTypes.any,
  width: _react2.default.PropTypes.string,
  height: _react2.default.PropTypes.string,
  chartEvents: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape({
    // https://github.com/yannickcr/eslint-plugin-react/issues/819
    eventName: _react2.default.PropTypes.string, // eslint-disable-line react/no-unused-prop-types
    callback: _react2.default.PropTypes.func })),
  chartActions: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape({
    id: _react2.default.PropTypes.string, // eslint-disable-line react/no-unused-prop-types
    text: _react2.default.PropTypes.string, // eslint-disable-line react/no-unused-prop-types
    action: _react2.default.PropTypes.func })),
  loadCharts: _react2.default.PropTypes.bool,
  loader: _react2.default.PropTypes.node,
  legend_toggle: _react2.default.PropTypes.bool,
  allowEmptyRows: _react2.default.PropTypes.bool,
  chartPackages: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.string),
  chartVersion: _react2.default.PropTypes.string,
  numberFormat: _react2.default.PropTypes.shape({
    column: _react2.default.PropTypes.number, // eslint-disable-line react/no-unused-prop-types
    options: _react2.default.PropTypes.shape({
      decimalSymbol: _react2.default.PropTypes.string, // eslint-disable-line react/no-unused-prop-types
      fractionDigits: _react2.default.PropTypes.number, // eslint-disable-line react/no-unused-prop-types
      groupingSymbol: _react2.default.PropTypes.string, // eslint-disable-line react/no-unused-prop-types
      negativeColor: _react2.default.PropTypes.string, // eslint-disable-line react/no-unused-prop-types
      negativeParens: _react2.default.PropTypes.bool, // eslint-disable-line react/no-unused-prop-types
      pattern: _react2.default.PropTypes.string, // eslint-disable-line react/no-unused-prop-types
      prefix: _react2.default.PropTypes.string, // eslint-disable-line react/no-unused-prop-types
      suffix: _react2.default.PropTypes.string })
  }),
  diffdata: _react2.default.PropTypes.shape({
    on: _react2.default.PropTypes.array, // eslint-disable-line react/no-unused-prop-types
    off: _react2.default.PropTypes.array })
} : void 0;

Chart.defaultProps = {
  chartType: 'LineChart',
  rows: [],
  columns: [],
  options: {
    chart: {
      title: 'Chart Title',
      subtitle: 'Subtitle'
    },
    hAxis: { title: 'X Label' },
    vAxis: { title: 'Y Label' },
    width: '400px',
    height: '300px'
  },
  width: '400px',
  height: '300px',
  chartEvents: [],
  chartActions: null,
  data: null,
  legend_toggle: false,
  allowEmptyRows: false,
  loadCharts: true,
  loader: _react2.default.createElement(
    'div',
    null,
    'Rendering Chart'
  ),
  chartPackages: ['corechart'],
  chartVersion: 'current',
  numberFormat: null,
  diffdata: null
};
module.exports = exports['default'];
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _bluebird = __webpack_require__(102);

var _bluebird2 = _interopRequireDefault(_bluebird);

var _debug = __webpack_require__(62);

var _debug2 = _interopRequireDefault(_debug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// GoogleChartLoader Singleton

// Based on http://blog.arkency.com/2014/09/react-dot-js-and-google-charts/

var debug = new _debug2.default('react-google-charts:GoogleChartLoader');
var script = typeof window !== 'undefined' ? __webpack_require__(239) : function (link, callback) {
  return callback();
};

var googleChartLoader = {
  isLoaded: false,
  isLoading: false,
  initPromise: {},
  init: function init(packages, version) {
    var _this = this;

    debug('init', packages, version);
    if (this.isLoading || this.isLoaded) {
      return this.initPromise;
    }
    this.isLoading = true;
    this.initPromise = new _bluebird2.default(function (resolve) {
      script('https://www.gstatic.com/charts/loader.js', function () {
        window.google.charts.load(version || 'current', { packages: packages || ['corechart'] });
        window.google.charts.setOnLoadCallback(function () {
          debug('Chart Loaded');
          _this.isLoaded = true;
          _this.isLoading = false;
          resolve();
        });
      });
    });
    return this.initPromise;
  }
};

exports.default = googleChartLoader;
module.exports = exports['default'];

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Taken from http://there4development.com/blog/2012/05/02/google-chart-color-list/

module.exports = ['#3366CC', '#DC3912', '#FF9900', '#109618', '#990099', '#3B3EAC', '#0099C6', '#DD4477', '#66AA00', '#B82E2E', '#316395', '#994499', '#22AA99', '#AAAA11', '#6633CC', '#E67300', '#8B0707', '#329262', '#5574A6', '#3B3EAC'];

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Badge = function Badge(_ref) {
  var className = _ref.className,
      newIcon = _ref.newIcon,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['className', 'newIcon', 'children']);

  var classes = {
    badge: true,
    'new': newIcon
  };
  return _react2.default.createElement(
    'span',
    _extends({}, props, { className: (0, _classnames2.default)(classes, className) }),
    children
  );
};

Badge.propTypes = {
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  /**
   * Add the <b>new</b> class name
   */
  newIcon: _react.PropTypes.bool
};

exports.default = Badge;

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _Col = __webpack_require__(29);

var _Col2 = _interopRequireDefault(_Col);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Breadcrumb = function Breadcrumb(_ref) {
  var children = _ref.children;
  return _react2.default.createElement(
    'nav',
    { className: 'row' },
    _react2.default.createElement(
      'div',
      { className: 'nav-wrapper' },
      _react2.default.createElement(
        _Col2.default,
        { s: 12 },
        renderChildren(children)
      )
    )
  );
};

var renderChildren = function renderChildren(children) {
  return _react2.default.Children.map(children, function (item) {
    return _react2.default.cloneElement(item, { className: 'breadcrumb' });
  });
};

Breadcrumb.propTypes = {
  children: _react2.default.PropTypes.node,
  cols: _react2.default.PropTypes.number
};

exports.default = Breadcrumb;

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = __webpack_require__(16);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Card = function (_Component) {
  _inherits(Card, _Component);

  function Card(props) {
    _classCallCheck(this, Card);

    var _this = _possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).call(this, props));

    _this.renderTitle = _this.renderTitle.bind(_this);
    return _this;
  }

  _createClass(Card, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          title = _props.title,
          header = _props.header,
          className = _props.className,
          textClassName = _props.textClassName,
          actions = _props.actions,
          reveal = _props.reveal,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['title', 'header', 'className', 'textClassName', 'actions', 'reveal', 'children']);

      var classes = { card: true };
      return _react2.default.createElement(
        'div',
        _extends({}, props, {
          className: (0, _classnames2.default)(className, classes) }),
        header,
        _react2.default.createElement(
          'div',
          { className: (0, _classnames2.default)('card-content', textClassName) },
          title ? this.renderTitle(title, reveal) : null,
          _react2.default.createElement(
            'div',
            null,
            children
          )
        ),
        this.renderReveal(title, reveal),
        actions ? this.renderAction(actions) : null
      );
    }
  }, {
    key: 'renderTitle',
    value: function renderTitle(title, reveal) {
      var revealIcon = null;
      if (reveal) {
        revealIcon = _react2.default.createElement(
          _Icon2.default,
          { right: true },
          'more_vert'
        );
      }
      var classes = {
        'card-title': true,
        'grey-text': true,
        'text-darken-4': true,
        'activator': reveal
      };
      return _react2.default.createElement(
        'span',
        { className: (0, _classnames2.default)(classes) },
        title,
        revealIcon
      );
    }
  }, {
    key: 'renderReveal',
    value: function renderReveal(title, reveal) {
      return _react2.default.createElement(
        'div',
        { className: 'card-reveal' },
        _react2.default.createElement(
          'span',
          { className: 'card-title grey-text text-darken-4' },
          title,
          _react2.default.createElement(
            _Icon2.default,
            { right: true },
            'close'
          )
        ),
        reveal
      );
    }
  }, {
    key: 'renderAction',
    value: function renderAction(actions) {
      return _react2.default.createElement(
        'div',
        { className: 'card-action' },
        actions
      );
    }
  }]);

  return Card;
}(_react.Component);

Card.propTypes = {
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  title: _react.PropTypes.string,
  textClassName: _react.PropTypes.string,
  reveal: _react.PropTypes.element,
  header: _react.PropTypes.element,
  // The buttons to be displayed at the action area
  actions: _react.PropTypes.arrayOf(_react2.default.PropTypes.element)
};

exports.default = Card;

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var CardPanel = function CardPanel(_ref) {
  var className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['className', 'children']);

  var classes = {
    'card-panel': true
  };

  return _react2.default.createElement(
    'div',
    _extends({ className: (0, _classnames2.default)(classes, className) }, props),
    children
  );
};

CardPanel.propTypes = {
  className: _react.PropTypes.string,
  children: _react.PropTypes.node
};

exports.default = CardPanel;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _constants = __webpack_require__(22);

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CardTitle = function (_Component) {
  _inherits(CardTitle, _Component);

  function CardTitle() {
    _classCallCheck(this, CardTitle);

    return _possibleConstructorReturn(this, (CardTitle.__proto__ || Object.getPrototypeOf(CardTitle)).apply(this, arguments));
  }

  _createClass(CardTitle, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          image = _props.image,
          reveal = _props.reveal,
          waves = _props.waves,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['image', 'reveal', 'waves', 'children']);

      var classes = {
        'card-image': true
      };
      if (waves) {
        classes['waves-effect'] = true;
        classes['waves-' + waves] = true;
        classes['waves-block'] = true;
      }
      var imgClasses = { 'activator': reveal };
      var titleClasses = {
        'card-title': true
      };
      return _react2.default.createElement(
        'div',
        _extends({ className: (0, _classnames2.default)(classes) }, props),
        _react2.default.createElement('img', { className: (0, _classnames2.default)(imgClasses), src: image }),
        _react2.default.createElement(
          'span',
          { className: (0, _classnames2.default)(titleClasses) },
          children
        )
      );
    }
  }]);

  return CardTitle;
}(_react.Component);

CardTitle.propTypes = {
  children: _react.PropTypes.node,
  // Whether the image serves as activator for the reveal
  reveal: _react.PropTypes.bool,
  // the waves effect
  waves: _react.PropTypes.oneOf(_constants2.default.WAVES),
  // The path to the image
  image: _react.PropTypes.string.isRequired
};

exports.default = CardTitle;

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Collapsible = function (_Component) {
  _inherits(Collapsible, _Component);

  function Collapsible(props) {
    _classCallCheck(this, Collapsible);

    var _this = _possibleConstructorReturn(this, (Collapsible.__proto__ || Object.getPrototypeOf(Collapsible)).call(this, props));

    _this.renderItem = _this.renderItem.bind(_this);
    _this.handleSelect = _this.handleSelect.bind(_this);
    _this.state = {
      activeKey: _this.props.defaultActiveKey
    };
    return _this;
  }

  _createClass(Collapsible, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          accordion = _props.accordion,
          popout = _props.popout,
          className = _props.className,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['accordion', 'popout', 'className', 'children']);

      delete props.defaultActiveKey;

      var classes = {
        collapsible: true,
        popout: popout
      };
      var collapsible = accordion ? 'accordion' : 'expandable';

      return _react2.default.createElement(
        'ul',
        _extends({ className: (0, _classnames2.default)(className, classes) }, props, { 'data-collapsible': collapsible }),
        _react2.default.Children.map(children, this.renderItem)
      );
    }
  }, {
    key: 'renderItem',
    value: function renderItem(child) {
      if (!child) return null;

      var props = {};

      if (this.props.accordion) {
        props.expanded = child.props.eventKey === this.state.activeKey;
        props.onSelect = this.handleSelect;
      }

      return _react2.default.cloneElement(child, props);
    }
  }, {
    key: 'handleSelect',
    value: function handleSelect(key) {
      var onSelect = this.props.onSelect;


      if (onSelect) {
        onSelect(key);
      }
      if (this.state.activeKey === key) {
        key = null;
      }

      this.setState({ activeKey: key });
    }
  }]);

  return Collapsible;
}(_react.Component);

Collapsible.propTypes = {
  /**
   * There are two ways a collapsible can behave. It can either allow multiple sections to stay open,
   * or it can only allow one section to stay open at a time, which is called an accordion.
   * @default false
   */
  accordion: _react.PropTypes.bool,
  className: _react.PropTypes.string,
  children: _react.PropTypes.node,
  /**
   * Enable popout style
   */
  popout: _react.PropTypes.bool,
  /**
   * The default CollapsibleItem that should be expanded. This value should match the specified
   * item's eventKey value. Ignored if accordion is false.
   */
  defaultActiveKey: _react.PropTypes.any,
  onSelect: _react.PropTypes.func
};

Collapsible.defaultProps = {
  accordion: false
};

exports.default = Collapsible;

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(38);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = __webpack_require__(16);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CollapsibleItem = function (_Component) {
  _inherits(CollapsibleItem, _Component);

  function CollapsibleItem(props) {
    _classCallCheck(this, CollapsibleItem);

    var _this = _possibleConstructorReturn(this, (CollapsibleItem.__proto__ || Object.getPrototypeOf(CollapsibleItem)).call(this, props));

    _this.state = {
      expanded: props.expanded
    };

    _this.handleClick = _this.handleClick.bind(_this);
    _this.renderBody = _this.renderBody.bind(_this);
    _this.renderIcon = _this.renderIcon.bind(_this);
    return _this;
  }

  _createClass(CollapsibleItem, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var _props = this.props,
          scroll = _props.scroll,
          expanded = _props.expanded;


      if (expanded) {
        _reactDom2.default.findDOMNode(this).scrollIntoView({ behavior: scroll });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          node = _props2.node,
          header = _props2.header,
          icon = _props2.icon,
          iconClassName = _props2.iconClassName,
          className = _props2.className,
          props = _objectWithoutProperties(_props2, ['node', 'header', 'icon', 'iconClassName', 'className']);

      var expanded = this.state.expanded;


      delete props.expanded;
      delete props.eventKey;

      var C = node;
      var liClasses = {
        active: expanded
      };
      var headerClasses = {
        'collapsible-header': true,
        active: expanded
      };

      return _react2.default.createElement(
        'li',
        _extends({ className: (0, _classnames2.default)(liClasses, className) }, props),
        _react2.default.createElement(
          C,
          { className: (0, _classnames2.default)(headerClasses), onClick: this.handleClick },
          icon && this.renderIcon(icon, iconClassName),
          header
        ),
        expanded && this.renderBody()
      );
    }
  }, {
    key: 'handleClick',
    value: function handleClick() {
      var _props3 = this.props,
          onSelect = _props3.onSelect,
          eventKey = _props3.eventKey;


      if (onSelect) {
        onSelect(eventKey);
      } else {
        this.setState({ expanded: !this.state.expanded });
      }
    }
  }, {
    key: 'renderBody',
    value: function renderBody() {
      return _react2.default.createElement(
        'div',
        { className: 'collapsible-body', style: { display: 'block' } },
        this.props.children
      );
    }
  }, {
    key: 'renderIcon',
    value: function renderIcon(icon, iconClassName) {
      return _react2.default.createElement(
        _Icon2.default,
        { className: iconClassName },
        icon
      );
    }
  }]);

  return CollapsibleItem;
}(_react.Component);

CollapsibleItem.propTypes = {
  header: _react.PropTypes.string.isRequired,
  icon: _react.PropTypes.string,
  iconClassName: _react.PropTypes.string,
  children: _react.PropTypes.node,
  onSelect: _react.PropTypes.func,
  /**
   * If the item is expanded by default. Overridden if the parent Collapsible is an accordion.
   * @default false
   */
  expanded: _react.PropTypes.bool,
  /**
   * The value to pass to the onSelect callback.
   */
  eventKey: _react.PropTypes.any,
  className: _react.PropTypes.string,
  /**
   * The node type of the header
   * @default a
   */
  node: _react.PropTypes.node,
  /**
   * The scroll behavior for scrollIntoView
   */
  scroll: _react.PropTypes.oneOf(['auto', 'instant', 'smooth'])
};

CollapsibleItem.defaultProps = {
  expanded: false,
  node: 'a'
};

exports.default = CollapsibleItem;

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Collection = function (_Component) {
  _inherits(Collection, _Component);

  function Collection(props) {
    _classCallCheck(this, Collection);

    var _this = _possibleConstructorReturn(this, (Collection.__proto__ || Object.getPrototypeOf(Collection)).call(this, props));

    _this.renderHeader = _this.renderHeader.bind(_this);
    return _this;
  }

  _createClass(Collection, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          header = _props.header;


      var classes = {
        collection: true,
        'with-header': !!header
      };
      var C = 'ul';
      _react2.default.Children.forEach(children, function (child) {
        if (child.props.href) {
          C = 'div';
        }
      });
      return _react2.default.createElement(
        C,
        { className: (0, _classnames2.default)(classes) },
        header ? this.renderHeader() : null,
        children
      );
    }
  }, {
    key: 'renderHeader',
    value: function renderHeader() {
      var header = void 0;
      if (this.props.header) {
        if (_react2.default.isValidElement(this.props.header)) {
          header = this.props.header;
        } else {
          header = _react2.default.createElement(
            'h4',
            null,
            this.props.header
          );
        }
        return _react2.default.createElement(
          'li',
          { className: 'collection-header' },
          header
        );
      }
    }
  }]);

  return Collection;
}(_react.Component);

Collection.propTypes = {
  children: _react.PropTypes.node,
  header: _react.PropTypes.node
};

exports.default = Collection;

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CollectionItem = function (_Component) {
  _inherits(CollectionItem, _Component);

  function CollectionItem() {
    _classCallCheck(this, CollectionItem);

    return _possibleConstructorReturn(this, (CollectionItem.__proto__ || Object.getPrototypeOf(CollectionItem)).apply(this, arguments));
  }

  _createClass(CollectionItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          active = _props.active,
          children = _props.children,
          className = _props.className,
          other = _objectWithoutProperties(_props, ['active', 'children', 'className']);

      var classes = {
        'collection-item': true,
        active: active
      };

      var C = this.props.href ? 'a' : 'li';

      return _react2.default.createElement(
        C,
        _extends({}, other, { className: (0, _classnames2.default)(className, classes) }),
        children
      );
    }
  }]);

  return CollectionItem;
}(_react.Component);

CollectionItem.propTypes = {
  active: _react.PropTypes.bool,
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  href: _react.PropTypes.string
};

exports.default = CollectionItem;

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _idgen = __webpack_require__(30);

var _idgen2 = _interopRequireDefault(_idgen);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var classes = {
  'dropdown-content': true
};

var Dropdown = function (_Component) {
  _inherits(Dropdown, _Component);

  function Dropdown(props) {
    _classCallCheck(this, Dropdown);

    var _this = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, props));

    _this.renderTrigger = _this.renderTrigger.bind(_this);
    return _this;
  }

  _createClass(Dropdown, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var options = this.props.options || {};

      $(this._trigger).dropdown(options);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      $(this._trigger).off();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className,
          props = _objectWithoutProperties(_props, ['children', 'className']);

      this.idx = 'dropdown_' + (0, _idgen2.default)();
      delete props.trigger;
      delete props.options;

      return _react2.default.createElement(
        'span',
        null,
        this.renderTrigger(),
        _react2.default.createElement(
          'ul',
          _extends({}, props, { className: (0, _classnames2.default)(classes, className), id: this.idx }),
          children
        )
      );
    }
  }, {
    key: 'renderTrigger',
    value: function renderTrigger() {
      var _this2 = this;

      var trigger = this.props.trigger;


      return _react2.default.cloneElement(trigger, {
        ref: function ref(t) {
          return _this2._trigger = '[data-activates=' + _this2.idx + ']';
        },
        className: 'dropdown-button',
        'data-activates': this.idx
      });
    }
  }]);

  return Dropdown;
}(_react.Component);

Dropdown.propTypes = {
  /**
   * The node to trigger the dropdown
   */
  trigger: _react.PropTypes.node.isRequired,
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  /**
   * Options hash for the dropdown
   * more info: http://materializecss.com/dropdown.html#options
   */
  options: _react.PropTypes.shape({
    inDuration: _react.PropTypes.number,
    outDuration: _react.PropTypes.number,
    constrain_width: _react.PropTypes.bool,
    hover: _react.PropTypes.bool,
    gutter: _react.PropTypes.number,
    belowOrigin: _react.PropTypes.bool,
    alignment: _react.PropTypes.oneOf(['left', 'right'])
  })
};

exports.default = Dropdown;

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Row = __webpack_require__(55);

var _Row2 = _interopRequireDefault(_Row);

var _Col = __webpack_require__(29);

var _Col2 = _interopRequireDefault(_Col);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Footer = function (_Component) {
  _inherits(Footer, _Component);

  function Footer() {
    _classCallCheck(this, Footer);

    return _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).apply(this, arguments));
  }

  _createClass(Footer, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className,
          copyrights = _props.copyrights,
          links = _props.links,
          moreLinks = _props.moreLinks,
          props = _objectWithoutProperties(_props, ['children', 'className', 'copyrights', 'links', 'moreLinks']);

      var classes = {
        'page-footer': true
      };

      return _react2.default.createElement(
        'footer',
        _extends({ className: (0, _classnames2.default)(classes, className) }, props),
        _react2.default.createElement(
          'div',
          { className: 'container' },
          _react2.default.createElement(
            _Row2.default,
            null,
            _react2.default.createElement(
              _Col2.default,
              { l: 6, s: 12 },
              children
            ),
            _react2.default.createElement(
              _Col2.default,
              { l: 4, s: 12, offset: 'l2' },
              links
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'footer-copyright' },
          _react2.default.createElement(
            'div',
            { className: 'container' },
            copyrights,
            moreLinks
          )
        )
      );
    }
  }]);

  return Footer;
}(_react.Component);

Footer.propTypes = {
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  copyrights: _react.PropTypes.string,
  links: _react.PropTypes.node,
  moreLinks: _react.PropTypes.node
};

exports.default = Footer;

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _idgen = __webpack_require__(30);

var _idgen2 = _interopRequireDefault(_idgen);

var _constants = __webpack_require__(22);

var _constants2 = _interopRequireDefault(_constants);

var _Icon = __webpack_require__(16);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Input = function (_Component) {
  _inherits(Input, _Component);

  function Input(props) {
    _classCallCheck(this, Input);

    var _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));

    _this.state = {
      value: props.defaultValue
    };

    _this._onChange = _this._onChange.bind(_this);
    _this.getMultipleValues = _this.getMultipleValues.bind(_this);
    _this.isSelect = _this.isSelect.bind(_this);
    return _this;
  }

  _createClass(Input, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.isMaterialSelect()) {
        $(this.selectInput).material_select();
        $(this.selectInput).on('change', this._onChange);
      }
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.isMaterialSelect() && !this.props.multiple) {
        $(this.selectInput).material_select();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (this.isMaterialSelect()) {
        this.setState({
          value: nextProps.defaultValue
        }, function () {
          return $(_this2.selectInput).material_select();
        });
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.isMaterialSelect()) {
        $(this.selectInput).off('change', this._onChange);
      }
    }
  }, {
    key: 'getMultipleValues',
    value: function getMultipleValues(_ref) {
      var options = _ref.options;

      if (!options) {
        return;
      }

      return Array.from(options).filter(function (opt) {
        return opt.selected;
      }).map(function (opt) {
        return opt.value;
      });
    }
  }, {
    key: '_onChange',
    value: function _onChange(e) {
      var onChange = this.props.onChange;

      var types = {
        'checkbox': e.target.checked,
        'select-multiple': this.getMultipleValues(e.target),
        'default': e.target.value
      };
      var value = types[e.target.type] || types['default'];
      if (onChange) {
        onChange(e);
      }

      this.setState({ value: value });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var _props = this.props,
          browserDefault = _props.browserDefault,
          children = _props.children,
          className = _props.className,
          defaultValue = _props.defaultValue,
          error = _props.error,
          label = _props.label,
          multiple = _props.multiple,
          placeholder = _props.placeholder,
          success = _props.success,
          s = _props.s,
          m = _props.m,
          l = _props.l,
          type = _props.type,
          validate = _props.validate,
          onLabel = _props.onLabel,
          offLabel = _props.offLabel,
          other = _objectWithoutProperties(_props, ['browserDefault', 'children', 'className', 'defaultValue', 'error', 'label', 'multiple', 'placeholder', 'success', 's', 'm', 'l', 'type', 'validate', 'onLabel', 'offLabel']);

      var sizes = { s: s, m: m, l: l };
      this._id = this._id || this.props.id || 'input_' + (0, _idgen2.default)();
      var classes = {
        col: true,
        'input-field': type !== 'checkbox' && type !== 'radio'
      };
      _constants2.default.SIZES.forEach(function (size) {
        classes[size + sizes[size]] = sizes[size];
      });
      var inputClasses = {
        validate: validate,
        invalid: error,
        valid: success,
        'browser-default': browserDefault && this.isSelect()
      };
      var C = void 0,
          inputType = void 0;
      switch (type) {
        case 'textarea':
          C = 'textarea';
          inputClasses['materialize-textarea'] = true;
          break;
        case 'switch':
          C = 'input';
          inputType = 'checkbox';
          break;
        default:
          C = 'input';
          inputType = type || 'text';
      }
      var labelClasses = {
        active: this.state.value || this.isSelect()
      };

      var htmlLabel = label || inputType === 'radio' ? _react2.default.createElement(
        'label',
        {
          className: (0, _classnames2.default)(labelClasses),
          'data-success': success,
          'data-error': error,
          htmlFor: this._id
        },
        label
      ) : null;

      if (this.isSelect()) {
        var options = placeholder && !defaultValue ? [_react2.default.createElement(
          'option',
          { disabled: true, key: (0, _idgen2.default)() },
          placeholder
        )] : [];
        options = options.concat(_react2.default.Children.map(children, function (child) {
          return _react2.default.cloneElement(child, { 'key': child.props.value });
        }));

        return _react2.default.createElement(
          'div',
          { className: (0, _classnames2.default)(classes) },
          htmlLabel,
          _react2.default.createElement(
            'select',
            _extends({}, other, {
              multiple: multiple,
              id: this._id,
              className: (0, _classnames2.default)(className, inputClasses),
              ref: function ref(_ref2) {
                return _this3.selectInput = _ref2;
              },
              defaultValue: defaultValue
            }),
            options
          )
        );
      } else if (type === 'switch') {
        return _react2.default.createElement(
          'div',
          { className: 'switch' },
          _react2.default.createElement(
            'label',
            null,
            offLabel || 'Off',
            _react2.default.createElement('input', _extends({}, other, {
              onChange: this._onChange,
              type: 'checkbox'
            })),
            _react2.default.createElement('span', { className: 'lever' }),
            onLabel || 'On'
          )
        );
      } else {
        var _defaultValue = inputType !== 'checkbox' && inputType !== 'radio' ? this.state.value : _defaultValue;

        return _react2.default.createElement(
          'div',
          { className: (0, _classnames2.default)(classes) },
          this.renderIcon(),
          _react2.default.createElement(C, _extends({}, other, {
            className: (0, _classnames2.default)(className, inputClasses),
            defaultValue: _defaultValue,
            id: this._id,
            onChange: this._onChange,
            placeholder: placeholder,
            type: inputType
          })),
          htmlLabel
        );
      }
    }
  }, {
    key: 'renderIcon',
    value: function renderIcon() {
      var _props2 = this.props,
          icon = _props2.icon,
          children = _props2.children;

      if (icon) {
        return _react2.default.createElement(
          _Icon2.default,
          { className: 'prefix' },
          icon
        );
      } else {
        var _icon = null;
        if (_react2.default.Children.count(children) === 1) {
          _icon = _react2.default.Children.only(children);
        }
        return _icon === null ? null : _react2.default.cloneElement(_icon, { className: 'prefix' });
      }
    }
  }, {
    key: 'isSelect',
    value: function isSelect() {
      return this.props.type === 'select';
    }
  }, {
    key: 'isMaterialSelect',
    value: function isMaterialSelect() {
      return this.props.type === 'select' && !this.props.browserDefault && typeof $ !== 'undefined';
    }
  }]);

  return Input;
}(_react.Component);

Input.propTypes = {
  s: _react.PropTypes.number,
  m: _react.PropTypes.number,
  l: _react.PropTypes.number,
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  label: _react.PropTypes.node,
  error: _react.PropTypes.string,
  success: _react.PropTypes.string,
  /**
   * Input field type, e.g. select, checkbox, radio, text, tel, email
   * @default 'text'
   */
  type: _react.PropTypes.string,
  defaultValue: _react.PropTypes.any,
  placeholder: _react.PropTypes.string,
  id: _react.PropTypes.string,
  icon: _react.PropTypes.string,
  name: _react.PropTypes.string,
  validate: _react.PropTypes.bool,
  multiple: _react.PropTypes.bool,
  browserDefault: _react.PropTypes.bool,
  onLabel: _react.PropTypes.string,
  offLabel: _react.PropTypes.string,
  onChange: _react.PropTypes.func
};

Input.defaultProps = { type: 'text' };

exports.default = Input;

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var MediaBox = function MediaBox(_ref) {
  var src = _ref.src,
      className = _ref.className,
      caption = _ref.caption,
      props = _objectWithoutProperties(_ref, ['src', 'className', 'caption']);

  return _react2.default.createElement('img', _extends({ className: (0, _classnames2.default)('materialboxed', className), 'data-caption': caption, src: src }, props));
};

MediaBox.propTypes = {
  className: _react.PropTypes.string,
  /**
   * The caption shown below the image when opened
   */
  caption: _react.PropTypes.string,
  /**
   * The path to the image
   */
  src: _react.PropTypes.string.isRequired
};

exports.default = MediaBox;

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// This should be used within any component that has a menu like interface
var MenuItem = function (_Component) {
  _inherits(MenuItem, _Component);

  function MenuItem() {
    _classCallCheck(this, MenuItem);

    return _possibleConstructorReturn(this, (MenuItem.__proto__ || Object.getPrototypeOf(MenuItem)).apply(this, arguments));
  }

  _createClass(MenuItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          href = _props.href,
          breadcrumbItem = _props.breadcrumbItem,
          children = _props.children,
          className = _props.className,
          props = _objectWithoutProperties(_props, ['href', 'breadcrumbItem', 'children', 'className']);

      var classes = {
        breadcrumb: breadcrumbItem
      };
      return _react2.default.createElement(
        'a',
        _extends({ href: href }, props, { className: (0, _classnames2.default)(classes, className) }),
        children
      );
    }
  }]);

  return MenuItem;
}(_react.Component);

MenuItem.propTypes = {
  className: _react.PropTypes.string,
  children: _react.PropTypes.node,
  // internal
  breadcrumbItem: _react.PropTypes.bool,
  /**
   * The link for the anchor
   */
  href: _react.PropTypes.string
};

exports.default = MenuItem;

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _Button = __webpack_require__(54);

var _Button2 = _interopRequireDefault(_Button);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _OverlayTrigger = __webpack_require__(90);

var _OverlayTrigger2 = _interopRequireDefault(_OverlayTrigger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Modal = function (_Component) {
  _inherits(Modal, _Component);

  function Modal() {
    _classCallCheck(this, Modal);

    return _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).apply(this, arguments));
  }

  _createClass(Modal, [{
    key: 'renderOverlay',
    value: function renderOverlay() {
      var _props = this.props,
          actions = _props.actions,
          bottomSheet = _props.bottomSheet,
          children = _props.children,
          fixedFooter = _props.fixedFooter,
          header = _props.header,
          other = _objectWithoutProperties(_props, ['actions', 'bottomSheet', 'children', 'fixedFooter', 'header']);

      delete other.modalOptions;
      delete other.trigger;

      var classes = (0, _classnames2.default)({
        'modal': true,
        'modal-fixed-footer': fixedFooter,
        'bottom-sheet': bottomSheet
      });

      return _react2.default.createElement(
        'div',
        _extends({}, other, { className: classes }),
        _react2.default.createElement(
          'div',
          { className: 'modal-content' },
          _react2.default.createElement(
            'h4',
            null,
            header
          ),
          children
        ),
        _react2.default.createElement(
          'div',
          { className: 'modal-footer' },
          _react2.default.Children.toArray(actions)
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          modalOptions = _props2.modalOptions,
          trigger = _props2.trigger;


      return _react2.default.createElement(
        _OverlayTrigger2.default,
        {
          modalOptions: modalOptions,
          overlay: this.renderOverlay()
        },
        trigger
      );
    }
  }]);

  return Modal;
}(_react.Component);

Modal.propTypes = {
  modalOptions: _react.PropTypes.object,
  /**
  * BottomSheet styled modal
  * @default false
  */
  bottomSheet: _react.PropTypes.bool,
  /**
   * Component children
   */
  children: _react.PropTypes.node,
  /**
  * FixedFooter styled modal
  * @default false
  */
  fixedFooter: _react.PropTypes.bool,
  /**
   * Text to shown in the header of the modal
   */
  header: _react.PropTypes.string,
  /**
   * The button to trigger the display of the modal
   */
  trigger: _react.PropTypes.node.isRequired,
  /**
   * The buttons to show in the footer of the modal
   */
  actions: _react.PropTypes.node
};

Modal.defaultProps = {
  fixedFooter: false,
  bottomSheet: false,
  actions: [_react2.default.createElement(
    _Button2.default,
    { waves: 'light', modal: 'close', flat: true },
    'Close'
  )]
};

exports.default = Modal;

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NavItem = function (_Component) {
  _inherits(NavItem, _Component);

  function NavItem() {
    _classCallCheck(this, NavItem);

    return _possibleConstructorReturn(this, (NavItem.__proto__ || Object.getPrototypeOf(NavItem)).apply(this, arguments));
  }

  _createClass(NavItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          divider = _props.divider,
          href = _props.href,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['divider', 'href', 'children']);

      if (divider) {
        return _react2.default.createElement('li', { className: 'divider' });
      } else {
        return _react2.default.createElement(
          'li',
          props,
          _react2.default.createElement(
            'a',
            { href: href },
            children
          )
        );
      }
    }
  }]);

  return NavItem;
}(_react.Component);

NavItem.propTypes = {
  children: _react.PropTypes.node,
  divider: _react.PropTypes.bool,
  href: _react.PropTypes.string
};

exports.default = NavItem;

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Col = __webpack_require__(29);

var _Col2 = _interopRequireDefault(_Col);

var _Icon = __webpack_require__(16);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Navbar = function (_Component) {
  _inherits(Navbar, _Component);

  function Navbar(props) {
    _classCallCheck(this, Navbar);

    var _this = _possibleConstructorReturn(this, (Navbar.__proto__ || Object.getPrototypeOf(Navbar)).call(this, props));

    _this.renderSideNav = _this.renderSideNav.bind(_this);
    return _this;
  }

  _createClass(Navbar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if ($ !== undefined) {
        $('.button-collapse').sideNav();
      }
    }
  }, {
    key: 'renderSideNav',
    value: function renderSideNav() {
      return _react2.default.createElement(
        'ul',
        { id: 'nav-mobile', className: 'side-nav' },
        this.props.children
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          brand = _props.brand,
          className = _props.className,
          left = _props.left,
          right = _props.right,
          href = _props.href,
          other = _objectWithoutProperties(_props, ['brand', 'className', 'left', 'right', 'href']);

      var classes = {
        right: right,
        'hide-on-med-and-down': true
      };

      var brandClasses = {
        'brand-logo': true,
        right: left
      };

      return _react2.default.createElement(
        'nav',
        _extends({}, other, { className: className }),
        _react2.default.createElement(
          'div',
          { className: 'nav-wrapper' },
          _react2.default.createElement(
            _Col2.default,
            { s: 12 },
            _react2.default.createElement(
              'a',
              { href: href, className: (0, _classnames2.default)(brandClasses) },
              brand
            ),
            _react2.default.createElement(
              'ul',
              { className: (0, _classnames2.default)(className, classes) },
              this.props.children
            ),
            this.renderSideNav(),
            _react2.default.createElement(
              'a',
              { className: 'button-collapse', href: '#', 'data-activates': 'nav-mobile' },
              _react2.default.createElement(
                _Icon2.default,
                null,
                'view_headline'
              )
            )
          )
        )
      );
    }
  }]);

  return Navbar;
}(_react.Component);

Navbar.propTypes = {
  brand: _react.PropTypes.node,
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  left: _react.PropTypes.bool,
  right: _react.PropTypes.bool,
  href: _react.PropTypes.string
};

Navbar.defaultProps = {
  href: '/'
};

exports.default = Navbar;

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Icon = __webpack_require__(16);

var _Icon2 = _interopRequireDefault(_Icon);

var _PaginationButton = __webpack_require__(91);

var _PaginationButton2 = _interopRequireDefault(_PaginationButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Pagination = function (_Component) {
  _inherits(Pagination, _Component);

  function Pagination(props) {
    _classCallCheck(this, Pagination);

    var _this = _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).call(this, props));

    var activePage = props.activePage,
        items = props.items;


    _this.state = {
      activePage: activePage > 0 && activePage <= items ? activePage : 1
    };

    _this.renderButtons = _this.renderButtons.bind(_this);
    _this._onClick = _this._onClick.bind(_this);
    return _this;
  }

  _createClass(Pagination, [{
    key: '_onClick',
    value: function _onClick(i) {
      var _this2 = this;

      var _props = this.props,
          items = _props.items,
          onSelect = _props.onSelect;


      return function () {
        if (i > 0 && i <= items) {
          if (onSelect) {
            onSelect(i);
          }
          _this2.setState({ activePage: i });
        }
      };
    }
  }, {
    key: 'renderButtons',
    value: function renderButtons() {
      var _props2 = this.props,
          items = _props2.items,
          children = _props2.children,
          _props2$maxButtons = _props2.maxButtons,
          maxButtons = _props2$maxButtons === undefined ? items : _props2$maxButtons;
      var activePage = this.state.activePage;


      if (children) return children;

      var buttonsCount = Math.min(maxButtons, items);

      var maxPos = items - buttonsCount;
      var halfButtons = parseInt(buttonsCount / 2, 10);

      var hiddenPagesBefore = activePage - halfButtons;
      if (hiddenPagesBefore > maxPos) {
        hiddenPagesBefore = maxPos + 1;
      }

      var from = Math.max(hiddenPagesBefore, 1);
      var to = Math.min(items, from + maxButtons - 1);

      var buttons = [_react2.default.createElement(
        _PaginationButton2.default,
        {
          disabled: activePage === 1,
          key: 'pagination-0',
          onSelect: this._onClick(activePage - 1)
        },
        _react2.default.createElement(
          _Icon2.default,
          null,
          'chevron_left'
        )
      )];

      for (var i = from; i <= to; i++) {
        buttons.push(_react2.default.createElement(
          _PaginationButton2.default,
          {
            active: i === activePage,
            key: 'pagination-' + i,
            onSelect: this._onClick(i)
          },
          i
        ));
      }

      buttons.push(_react2.default.createElement(
        _PaginationButton2.default,
        {
          key: 'pagination-' + (items + 1),
          disabled: activePage === items,
          onSelect: this._onClick(activePage + 1)
        },
        _react2.default.createElement(
          _Icon2.default,
          null,
          'chevron_right'
        )
      ));

      return buttons;
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'ul',
        { className: (0, _classnames2.default)('pagination', this.props.className) },
        this.renderButtons()
      );
    }
  }]);

  return Pagination;
}(_react.Component);

Pagination.propTypes = {
  /**
   * Number of items in the component
   */
  items: _react.PropTypes.number.isRequired,
  /**
   * The initial activePage
   */
  activePage: _react.PropTypes.number,
  children: _react.PropTypes.node,
  className: _react.PropTypes.string,
  maxButtons: _react.PropTypes.number,
  onSelect: _react.PropTypes.func
};

Pagination.defaultProps = {
  activePage: 1,
  items: 10
};

exports.default = Pagination;

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Parallax = function (_Component) {
  _inherits(Parallax, _Component);

  function Parallax() {
    _classCallCheck(this, Parallax);

    return _possibleConstructorReturn(this, (Parallax.__proto__ || Object.getPrototypeOf(Parallax)).apply(this, arguments));
  }

  _createClass(Parallax, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      $('.parallax').parallax();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          imageSrc = _props.imageSrc;

      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('parallax-container', className) },
        _react2.default.createElement(
          'div',
          { className: 'parallax' },
          _react2.default.createElement('img', { src: imageSrc })
        )
      );
    }
  }]);

  return Parallax;
}(_react.Component);

Parallax.propTypes = {
  className: _react.PropTypes.string,
  /**
  * The image path which will be used for the background of the parallax
  */
  imageSrc: _react.PropTypes.string
};
exports.default = Parallax;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Spinner = __webpack_require__(220);

var _Spinner2 = _interopRequireDefault(_Spinner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var colors = ['blue', 'red', 'yellow', 'green'];

var Preloader = function (_Component) {
  _inherits(Preloader, _Component);

  function Preloader() {
    _classCallCheck(this, Preloader);

    return _possibleConstructorReturn(this, (Preloader.__proto__ || Object.getPrototypeOf(Preloader)).apply(this, arguments));
  }

  _createClass(Preloader, [{
    key: 'render',
    value: function render() {
      var classes = {
        'preloader-wrapper': true,
        active: this.props.active
      };

      if (this.props.size) {
        classes[this.props.size] = true;
      }

      var spinners = void 0;
      if (this.props.flashing) {
        spinners = [];
        colors.map(function (color) {
          spinners.push(_react2.default.createElement(_Spinner2.default, { color: color, only: false, key: color }));
        });
      } else {
        spinners = _react2.default.createElement(_Spinner2.default, { color: this.props.color });
      }
      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)(this.props.className, classes) },
        spinners
      );
    }
  }]);

  return Preloader;
}(_react.Component);

Preloader.propTypes = {
  className: _react.PropTypes.string,
  /**
   * The scale of the circle
   * @default 'medium'
   */
  size: _react.PropTypes.oneOf(['big', 'small', 'medium']),
  /**
   * Whether to spin
   * @default true
   */
  active: _react.PropTypes.bool,
  /**
   * The color of the circle, if not flashing
   * @default 'blue'
   */
  color: _react.PropTypes.oneOf(['blue', 'red', 'yellow', 'green']),
  /**
   * Wheter to circle four different colors
   * @default false
   */
  flashing: _react.PropTypes.bool
};

Preloader.defaultProps = {
  active: true,
  flashing: false,
  color: 'blue'
};

exports.default = Preloader;

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ProgressBar = function ProgressBar(_ref) {
  var progress = _ref.progress,
      className = _ref.className;

  var style = void 0;
  var classes = {
    indeterminate: progress === undefined,
    determinate: !!progress
  };
  if (progress) {
    style = {
      width: progress + '%'
    };
  }

  return _react2.default.createElement(
    'div',
    { className: (0, _classnames2.default)('progress lighten-5', className) },
    _react2.default.createElement('div', { className: (0, _classnames2.default)(classes, className), style: style })
  );
};

ProgressBar.propTypes = {
  className: _react.PropTypes.string,
  /**
   * A number between 0..100 that indicates the current progress,
   * when provided, a determinate bar with the progress is displayed,
   * otherwise a indeterminate bar is shown
   */
  progress: _react.PropTypes.number
};

exports.default = ProgressBar;

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _Icon = __webpack_require__(16);

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SearchForm = function SearchForm() {
  return _react2.default.createElement(
    'form',
    null,
    _react2.default.createElement(
      'div',
      { className: 'input-field' },
      _react2.default.createElement('input', { id: 'search', type: 'search', required: true }),
      _react2.default.createElement(
        'label',
        { htmlFor: 'search' },
        _react2.default.createElement(
          _Icon2.default,
          null,
          'search'
        )
      ),
      _react2.default.createElement(
        _Icon2.default,
        null,
        'close'
      )
    )
  );
};

exports.default = SearchForm;

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _idgen = __webpack_require__(30);

var _idgen2 = _interopRequireDefault(_idgen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SideNav = function (_Component) {
  _inherits(SideNav, _Component);

  function SideNav(props) {
    _classCallCheck(this, SideNav);

    var _this = _possibleConstructorReturn(this, (SideNav.__proto__ || Object.getPrototypeOf(SideNav)).call(this, props));

    _this.id = props.id || 'sidenav_' + (0, _idgen2.default)();
    return _this;
  }

  _createClass(SideNav, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props$options = this.props.options,
          options = _props$options === undefined ? {} : _props$options;

      $(this._trigger).sideNav(options);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['children']);

      delete props.id;
      delete props.trigger;
      delete props.options;
      return _react2.default.createElement(
        'span',
        null,
        this.renderTrigger(),
        _react2.default.createElement(
          'ul',
          _extends({ id: this.id, className: 'side-nav' }, props),
          children
        )
      );
    }
  }, {
    key: 'renderTrigger',
    value: function renderTrigger() {
      var _this2 = this;

      var trigger = this.props.trigger;

      return _react2.default.cloneElement(trigger, {
        ref: function ref(t) {
          return _this2._trigger = '[data-activates=' + _this2.id + ']';
        },
        'data-activates': this.id
      });
    }
  }]);

  return SideNav;
}(_react.Component);

SideNav.propTypes = {
  /**
   * sidenav id. If none is passed, an id will be generated.
   */
  id: _react.PropTypes.string,
  /**
   * Component that is rendered to trigger the sidenav
   */
  trigger: _react.PropTypes.node.isRequired,
  /**
   * Options hash for the sidenav.
   * More info: http://materializecss.com/side-nav.html#options
   */
  options: _react.PropTypes.shape({
    menuWidth: _react.PropTypes.number,
    edge: _react.PropTypes.oneOf(['left', 'right']),
    closeOnClick: _react.PropTypes.bool,
    draggable: _react.PropTypes.bool
  }),
  children: _react.PropTypes.node
};

exports.default = SideNav;

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _UserView = __webpack_require__(226);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SideNavItem = function (_Component) {
  _inherits(SideNavItem, _Component);

  function SideNavItem() {
    _classCallCheck(this, SideNavItem);

    return _possibleConstructorReturn(this, (SideNavItem.__proto__ || Object.getPrototypeOf(SideNavItem)).apply(this, arguments));
  }

  _createClass(SideNavItem, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          divider = _props.divider,
          subheader = _props.subheader,
          userView = _props.userView,
          icon = _props.icon,
          _props$href = _props.href,
          href = _props$href === undefined ? '#!' : _props$href,
          waves = _props.waves,
          _props$user = _props.user,
          user = _props$user === undefined ? {} : _props$user,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['divider', 'subheader', 'userView', 'icon', 'href', 'waves', 'user', 'children']);

      var itemClasses = {
        'divider': divider
      };
      var linkClasses = {
        'subheader': subheader,
        'waves-effect': waves
      };

      return _react2.default.createElement(
        'li',
        _extends({ className: (0, _classnames2.default)(itemClasses) }, props),
        userView && user && _react2.default.createElement(_UserView.UserView, user),
        !userView && _react2.default.createElement(
          'a',
          { className: (0, _classnames2.default)(linkClasses), href: href },
          icon && _react2.default.createElement(
            'i',
            { className: 'material-icons' },
            icon
          ),
          children
        )
      );
    }
  }]);

  return SideNavItem;
}(_react.Component);

SideNavItem.propTypes = {
  children: _react.PropTypes.node,
  divider: _react.PropTypes.bool,
  subheader: _react.PropTypes.bool,
  userView: _react.PropTypes.bool,
  waves: _react.PropTypes.bool,
  href: _react.PropTypes.string,
  icon: _react.PropTypes.string,
  user: _react.PropTypes.shape(_UserView.UserShape)
};

exports.default = SideNavItem;

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _constants = __webpack_require__(22);

var _constants2 = _interopRequireDefault(_constants);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Slide = function (_Component) {
  _inherits(Slide, _Component);

  function Slide(props) {
    _classCallCheck(this, Slide);

    var _this = _possibleConstructorReturn(this, (Slide.__proto__ || Object.getPrototypeOf(Slide)).call(this, props));

    _this.renderCaption = _this.renderCaption.bind(_this);
    return _this;
  }

  _createClass(Slide, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'li',
        null,
        _react2.default.createElement('img', { src: this.props.src }),
        this.renderCaption()
      );
    }
  }, {
    key: 'renderCaption',
    value: function renderCaption() {
      var _props = this.props,
          title = _props.title,
          className = _props.className,
          alignment = _props.alignment,
          children = _props.children,
          props = _objectWithoutProperties(_props, ['title', 'className', 'alignment', 'children']);

      delete props.placement;

      var classes = _defineProperty({
        caption: true
      }, alignment + '-align', alignment);

      if (typeof title !== 'undefined' || typeof children !== 'undefined') {
        return _react2.default.createElement(
          'div',
          _extends({ className: (0, _classnames2.default)(classes) }, props),
          _react2.default.createElement(
            'h3',
            null,
            title
          ),
          _react2.default.createElement(
            'h5',
            { className: className },
            children
          )
        );
      } else return null;
    }
  }]);

  return Slide;
}(_react.Component);

Slide.propTypes = {
  /**
  * Aliment of the caption
  * @default 'center'
  */
  alignment: _react.PropTypes.oneOf(_constants2.default.PLACEMENTS),
  className: _react.PropTypes.string,
  children: _react.PropTypes.node,
  /**
  * The tagline of the caption
  */
  title: _react.PropTypes.string,
  /**
   * The path of the background image
   */
  src: _react.PropTypes.string.isRequired
};

Slide.defaultProps = {
  placement: 'center'
};

exports.default = Slide;

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Slider = function (_Component) {
  _inherits(Slider, _Component);

  function Slider() {
    _classCallCheck(this, Slider);

    return _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).apply(this, arguments));
  }

  _createClass(Slider, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          fullscreen = _props.fullscreen,
          indicators = _props.indicators,
          interval = _props.interval,
          transition = _props.transition;


      $('.slider').slider({
        full_width: fullscreen,
        indicators: indicators,
        interval: interval,
        transition: transition
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          fullscreen = _props2.fullscreen,
          children = _props2.children,
          className = _props2.className;

      var classes = {
        fullscreen: fullscreen,
        slider: true
      };

      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)(classes, className) },
        _react2.default.createElement(
          'ul',
          { className: 'slides' },
          children
        )
      );
    }
  }]);

  return Slider;
}(_react.Component);

Slider.propTypes = {
  className: _react.PropTypes.string,
  children: _react.PropTypes.node,
  fullscreen: _react.PropTypes.bool,
  /**
  * Set to false to hide slide indicators
  * @default true
  */
  indicators: _react.PropTypes.bool,
  /**
  * The interval between transitions in ms
  * @default 6000
  */
  interval: _react.PropTypes.number,
  /**
  * The duration of the transation animation in ms
  * @default 500
  */
  transition: _react.PropTypes.number
};

Slider.defaultProps = {
  fullscreen: false,
  indicators: true,
  interval: 6000
};

exports.default = Slider;

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Spinner = function Spinner(_ref) {
  var color = _ref.color,
      only = _ref.only;

  var spinnerClasses = {
    'spinner-layer': true
  };
  if (only) {
    spinnerClasses['spinner-' + color + '-only'] = true;
  } else {
    spinnerClasses['spinner-' + color] = true;
  }
  return _react2.default.createElement(
    'div',
    { className: (0, _classnames2.default)(spinnerClasses) },
    _react2.default.createElement(
      'div',
      { className: 'circle-clipper left' },
      _react2.default.createElement('div', { className: 'circle' })
    ),
    _react2.default.createElement(
      'div',
      { className: 'gap-patch' },
      _react2.default.createElement('div', { className: 'circle' })
    ),
    _react2.default.createElement(
      'div',
      { className: 'circle-clipper right' },
      _react2.default.createElement('div', { className: 'circle' })
    )
  );
};

Spinner.defaultProps = {
  only: true
};

Spinner.propTypes = {
  color: _react.PropTypes.string,
  only: _react.PropTypes.bool
};

exports.default = Spinner;

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// This is just a holder for the props and children for tab, thus
// there is no logic here.
var Tab = function (_React$Component) {
  _inherits(Tab, _React$Component);

  function Tab() {
    _classCallCheck(this, Tab);

    return _possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).apply(this, arguments));
  }

  _createClass(Tab, [{
    key: 'render',
    value: function render() {
      return null;
    }
  }]);

  return Tab;
}(_react2.default.Component);

Tab.propTypes = {
  /**
  * The title shown in the tabs list
  */
  title: _react2.default.PropTypes.node.isRequired,
  /**
  * The width of the Tab
  */
  tabWidth: _react2.default.PropTypes.number,
  /**
  * Pre-select the tab
  * @default false
  */
  active: _react2.default.PropTypes.bool,
  /**
  * Disable the tab
  * @default false
  */
  disabled: _react2.default.PropTypes.bool
};

Tab.defaultProps = {
  active: false,
  disabled: false
};

exports.default = Tab;

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Table = function (_Component) {
  _inherits(Table, _Component);

  function Table() {
    _classCallCheck(this, Table);

    return _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).apply(this, arguments));
  }

  _createClass(Table, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          bordered = _props.bordered,
          centered = _props.centered,
          children = _props.children,
          className = _props.className,
          hoverable = _props.hoverable,
          responsive = _props.responsive,
          stripped = _props.stripped,
          props = _objectWithoutProperties(_props, ['bordered', 'centered', 'children', 'className', 'hoverable', 'responsive', 'stripped']);

      var classes = {
        centered: centered,
        highlight: hoverable,
        'responsive-table': responsive,
        stripped: stripped,
        bordered: bordered
      };

      return _react2.default.createElement(
        'table',
        _extends({ className: (0, _classnames2.default)(classes, className) }, props),
        children
      );
    }
  }]);

  return Table;
}(_react.Component);

Table.propTypes = {
  className: _react.PropTypes.string,
  children: _react.PropTypes.node,
  /**
  * Center align all the text in the table
  * @default false
  */
  centered: _react.PropTypes.bool,
  /**
  * Highlight the row that's hovered
  * @default false
  */
  hoverable: _react.PropTypes.bool,
  /**
  * Enable response to make the table horizontally scrollable on smaller screens
  * @default false
  */
  responsive: _react.PropTypes.bool,
  /**
  * Stripped style
  * @default false
  */
  stripped: _react.PropTypes.bool,
  /**
  * Add border to each row
  * @default false
  */
  bordered: _react.PropTypes.bool
};

exports.default = Table;

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Row = __webpack_require__(55);

var _Row2 = _interopRequireDefault(_Row);

var _Col = __webpack_require__(29);

var _Col2 = _interopRequireDefault(_Col);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tabs = function (_Component) {
  _inherits(Tabs, _Component);

  function Tabs() {
    _classCallCheck(this, Tabs);

    return _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).apply(this, arguments));
  }

  _createClass(Tabs, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (typeof $ !== 'undefined') {
        $(this._tabsEl).tabs();
      }
    }
  }, {
    key: '_onSelect',
    value: function _onSelect(idx, e) {
      var onChange = this.props.onChange;


      if (onChange) onChange(idx, e);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          className = _props.className,
          defaultValue = _props.defaultValue;


      return _react2.default.createElement(
        _Row2.default,
        null,
        _react2.default.createElement(
          _Col2.default,
          { s: 12 },
          _react2.default.createElement(
            'ul',
            { className: (0, _classnames2.default)('tabs', className), ref: function ref(el) {
                return _this2._tabsEl = el;
              } },
            _react2.default.Children.map(children, function (child, idx) {
              var _classes;

              var _child$props = child.props,
                  active = _child$props.active,
                  className = _child$props.className,
                  disabled = _child$props.disabled,
                  tabWidth = _child$props.tabWidth,
                  title = _child$props.title;


              var classes = (_classes = {}, _defineProperty(_classes, 's' + tabWidth, tabWidth), _defineProperty(_classes, 'tab', true), _defineProperty(_classes, 'disabled', disabled), _defineProperty(_classes, 'col', true), _classes);

              return _react2.default.createElement(
                'li',
                { className: (0, _classnames2.default)(classes, className), key: idx },
                _react2.default.createElement(
                  'a',
                  _extends({ href: '#tab_' + idx, className: active || defaultValue === idx ? 'active' : ''
                  }, disabled ? {} : { onClick: _this2._onSelect.bind(_this2, idx) }),
                  title
                )
              );
            })
          )
        ),
        _react2.default.Children.map(children, function (child, idx) {
          return _react2.default.createElement(
            _Col2.default,
            { id: 'tab_' + idx, s: 12, key: 'tab' + idx,
              style: { 'display': child.props.active || defaultValue === idx ? 'block' : 'none' } },
            child.props.children
          );
        })
      );
    }
  }]);

  return Tabs;
}(_react.Component);

Tabs.propTypes = {
  children: _react.PropTypes.node.isRequired,
  className: _react.PropTypes.string,
  defaultValue: _react.PropTypes.string,
  onChange: _react.PropTypes.func
};

exports.default = Tabs;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _Chip = __webpack_require__(88);

var _Chip2 = _interopRequireDefault(_Chip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Tag = function Tag(_ref) {
  var children = _ref.children;
  return _react2.default.createElement(
    _Chip2.default,
    { close: true },
    children
  );
};

Tag.propTypes = {
  children: _react.PropTypes.node
};

exports.default = Tag;

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

var _classnames = __webpack_require__(4);

var _classnames2 = _interopRequireDefault(_classnames);

var _Button = __webpack_require__(54);

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Toast = function (_Component) {
  _inherits(Toast, _Component);

  function Toast(props) {
    _classCallCheck(this, Toast);

    var _this = _possibleConstructorReturn(this, (Toast.__proto__ || Object.getPrototypeOf(Toast)).call(this, props));

    _this.onClick = _this.onClick.bind(_this);
    return _this;
  }

  _createClass(Toast, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          rounded = _props.rounded;

      var classes = { toast: true, rounded: rounded };

      return _react2.default.createElement(
        _Button2.default,
        { onClick: this.onClick, className: (0, _classnames2.default)(classes) },
        children
      );
    }
  }, {
    key: 'onClick',
    value: function onClick() {
      Materialize.toast(this.props.toast, 1000);
    }
  }]);

  return Toast;
}(_react.Component);

Toast.propTypes = {
  toast: _react.PropTypes.string.isRequired,
  children: _react.PropTypes.node,
  rounded: _react.PropTypes.bool
};

exports.default = Toast;

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserView = exports.UserShape = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(1);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UserShape = exports.UserShape = {
  background: _react.PropTypes.string,
  image: _react.PropTypes.string,
  name: _react.PropTypes.string,
  email: _react.PropTypes.string
};

var UserView = exports.UserView = function (_Component) {
  _inherits(UserView, _Component);

  function UserView() {
    _classCallCheck(this, UserView);

    return _possibleConstructorReturn(this, (UserView.__proto__ || Object.getPrototypeOf(UserView)).apply(this, arguments));
  }

  _createClass(UserView, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          background = _props.background,
          image = _props.image,
          name = _props.name,
          email = _props.email;

      return _react2.default.createElement(
        'div',
        { className: 'userView' },
        background && _react2.default.createElement(
          'div',
          { className: 'background' },
          _react2.default.createElement('img', { src: background })
        ),
        image && _react2.default.createElement(
          'a',
          { href: '#!user' },
          _react2.default.createElement('img', { className: 'circle', src: image })
        ),
        name && _react2.default.createElement(
          'a',
          { href: '#!name' },
          _react2.default.createElement(
            'span',
            { className: 'white-text name' },
            name
          )
        ),
        email && _react2.default.createElement(
          'a',
          { href: '#!email' },
          _react2.default.createElement(
            'span',
            { className: 'white-text email' },
            email
          )
        )
      );
    }
  }]);

  return UserView;
}(_react.Component);

;

UserView.propTypes = UserShape;

exports.default = UserView;

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Toast = exports.Tag = exports.Table = exports.Tabs = exports.Tab = exports.Slider = exports.Slide = exports.SideNavItem = exports.SideNav = exports.SearchForm = exports.Row = exports.ProgressBar = exports.Preloader = exports.PaginationButton = exports.Pagination = exports.Parallax = exports.OverlayTrigger = exports.Overlay = exports.NavItem = exports.Navbar = exports.Modal = exports.MenuItem = exports.MediaBox = exports.Input = exports.Icon = exports.Footer = exports.Dropdown = exports.CollectionItem = exports.Collection = exports.CollapsibleItem = exports.Collapsible = exports.Col = exports.Chip = exports.CardTitle = exports.CardPanel = exports.Card = exports.Button = exports.Breadcrumb = exports.Badge = undefined;

var _Badge = __webpack_require__(194);

var _Badge2 = _interopRequireDefault(_Badge);

var _Breadcrumb = __webpack_require__(195);

var _Breadcrumb2 = _interopRequireDefault(_Breadcrumb);

var _Button = __webpack_require__(54);

var _Button2 = _interopRequireDefault(_Button);

var _Card = __webpack_require__(196);

var _Card2 = _interopRequireDefault(_Card);

var _CardPanel = __webpack_require__(197);

var _CardPanel2 = _interopRequireDefault(_CardPanel);

var _CardTitle = __webpack_require__(198);

var _CardTitle2 = _interopRequireDefault(_CardTitle);

var _Chip = __webpack_require__(88);

var _Chip2 = _interopRequireDefault(_Chip);

var _Col = __webpack_require__(29);

var _Col2 = _interopRequireDefault(_Col);

var _Collapsible = __webpack_require__(199);

var _Collapsible2 = _interopRequireDefault(_Collapsible);

var _CollapsibleItem = __webpack_require__(200);

var _CollapsibleItem2 = _interopRequireDefault(_CollapsibleItem);

var _Collection = __webpack_require__(201);

var _Collection2 = _interopRequireDefault(_Collection);

var _CollectionItem = __webpack_require__(202);

var _CollectionItem2 = _interopRequireDefault(_CollectionItem);

var _Dropdown = __webpack_require__(203);

var _Dropdown2 = _interopRequireDefault(_Dropdown);

var _Parallax = __webpack_require__(212);

var _Parallax2 = _interopRequireDefault(_Parallax);

var _Footer = __webpack_require__(204);

var _Footer2 = _interopRequireDefault(_Footer);

var _Icon = __webpack_require__(16);

var _Icon2 = _interopRequireDefault(_Icon);

var _Input = __webpack_require__(205);

var _Input2 = _interopRequireDefault(_Input);

var _MediaBox = __webpack_require__(206);

var _MediaBox2 = _interopRequireDefault(_MediaBox);

var _MenuItem = __webpack_require__(207);

var _MenuItem2 = _interopRequireDefault(_MenuItem);

var _Modal = __webpack_require__(208);

var _Modal2 = _interopRequireDefault(_Modal);

var _Navbar = __webpack_require__(210);

var _Navbar2 = _interopRequireDefault(_Navbar);

var _NavItem = __webpack_require__(209);

var _NavItem2 = _interopRequireDefault(_NavItem);

var _Overlay = __webpack_require__(89);

var _Overlay2 = _interopRequireDefault(_Overlay);

var _OverlayTrigger = __webpack_require__(90);

var _OverlayTrigger2 = _interopRequireDefault(_OverlayTrigger);

var _Pagination = __webpack_require__(211);

var _Pagination2 = _interopRequireDefault(_Pagination);

var _PaginationButton = __webpack_require__(91);

var _PaginationButton2 = _interopRequireDefault(_PaginationButton);

var _Preloader = __webpack_require__(213);

var _Preloader2 = _interopRequireDefault(_Preloader);

var _ProgressBar = __webpack_require__(214);

var _ProgressBar2 = _interopRequireDefault(_ProgressBar);

var _Row = __webpack_require__(55);

var _Row2 = _interopRequireDefault(_Row);

var _SearchForm = __webpack_require__(215);

var _SearchForm2 = _interopRequireDefault(_SearchForm);

var _SideNav = __webpack_require__(216);

var _SideNav2 = _interopRequireDefault(_SideNav);

var _SideNavItem = __webpack_require__(217);

var _SideNavItem2 = _interopRequireDefault(_SideNavItem);

var _Slide = __webpack_require__(218);

var _Slide2 = _interopRequireDefault(_Slide);

var _Slider = __webpack_require__(219);

var _Slider2 = _interopRequireDefault(_Slider);

var _Tab = __webpack_require__(221);

var _Tab2 = _interopRequireDefault(_Tab);

var _Tabs = __webpack_require__(223);

var _Tabs2 = _interopRequireDefault(_Tabs);

var _Table = __webpack_require__(222);

var _Table2 = _interopRequireDefault(_Table);

var _Tag = __webpack_require__(224);

var _Tag2 = _interopRequireDefault(_Tag);

var _Toast = __webpack_require__(225);

var _Toast2 = _interopRequireDefault(_Toast);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Badge = _Badge2.default;
exports.Breadcrumb = _Breadcrumb2.default;
exports.Button = _Button2.default;
exports.Card = _Card2.default;
exports.CardPanel = _CardPanel2.default;
exports.CardTitle = _CardTitle2.default;
exports.Chip = _Chip2.default;
exports.Col = _Col2.default;
exports.Collapsible = _Collapsible2.default;
exports.CollapsibleItem = _CollapsibleItem2.default;
exports.Collection = _Collection2.default;
exports.CollectionItem = _CollectionItem2.default;
exports.Dropdown = _Dropdown2.default;
exports.Footer = _Footer2.default;
exports.Icon = _Icon2.default;
exports.Input = _Input2.default;
exports.MediaBox = _MediaBox2.default;
exports.MenuItem = _MenuItem2.default;
exports.Modal = _Modal2.default;
exports.Navbar = _Navbar2.default;
exports.NavItem = _NavItem2.default;
exports.Overlay = _Overlay2.default;
exports.OverlayTrigger = _OverlayTrigger2.default;
exports.Parallax = _Parallax2.default;
exports.Pagination = _Pagination2.default;
exports.PaginationButton = _PaginationButton2.default;
exports.Preloader = _Preloader2.default;
exports.ProgressBar = _ProgressBar2.default;
exports.Row = _Row2.default;
exports.SearchForm = _SearchForm2.default;
exports.SideNav = _SideNav2.default;
exports.SideNavItem = _SideNavItem2.default;
exports.Slide = _Slide2.default;
exports.Slider = _Slider2.default;
exports.Tab = _Tab2.default;
exports.Tabs = _Tabs2.default;
exports.Table = _Table2.default;
exports.Tag = _Tag2.default;
exports.Toast = _Toast2.default;

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(19);

var invariant = __webpack_require__(2);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var PooledClass = __webpack_require__(229);
var ReactElement = __webpack_require__(18);

var emptyFunction = __webpack_require__(11);
var traverseAllChildren = __webpack_require__(238);

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(19),
    _assign = __webpack_require__(6);

var ReactComponent = __webpack_require__(56);
var ReactElement = __webpack_require__(18);
var ReactPropTypeLocationNames = __webpack_require__(58);
var ReactNoopUpdateQueue = __webpack_require__(57);

var emptyObject = __webpack_require__(24);
var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

/**
 * Policies that describe methods in `ReactClassInterface`.
 */


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or host components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will be available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: 'DEFINE_MANY',

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: 'DEFINE_MANY',

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: 'DEFINE_MANY',

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: 'DEFINE_MANY',

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: 'DEFINE_MANY',

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: 'DEFINE_MANY_MERGED',

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: 'DEFINE_MANY_MERGED',

  /**
   * @return {object}
   * @optional
   */
  getChildContext: 'DEFINE_MANY_MERGED',

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: 'DEFINE_ONCE',

  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: 'DEFINE_MANY',

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: 'DEFINE_MANY',

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: 'DEFINE_MANY',

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: 'DEFINE_ONCE',

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: 'DEFINE_MANY',

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: 'DEFINE_MANY',

  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: 'OVERRIDE_BASE'

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function (Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function (Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function (Constructor, childContextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, childContextTypes, 'childContext');
    }
    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
  },
  contextTypes: function (Constructor, contextTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, contextTypes, 'context');
    }
    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function (Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function (Constructor, propTypes) {
    if (process.env.NODE_ENV !== 'production') {
      validateTypeDef(Constructor, propTypes, 'prop');
    }
    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
  },
  statics: function (Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  },
  autobind: function () {} };

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but only in __DEV__
      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
    }
  }
}

function validateMethodOverride(isAlreadyDefined, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (isAlreadyDefined) {
    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classes.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    if (process.env.NODE_ENV !== 'production') {
      var typeofSpec = typeof spec;
      var isMixinValid = typeofSpec === 'object' && spec !== null;

      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;
    }

    return;
  }

  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

  var proto = Constructor.prototype;
  var autoBindPairs = proto.__reactAutoBindPairs;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above.
      continue;
    }

    var property = spec[name];
    var isAlreadyDefined = proto.hasOwnProperty(name);
    validateMethodOverride(isAlreadyDefined, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
      var isFunction = typeof property === 'function';
      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

      if (shouldAutoBind) {
        autoBindPairs.push(name, property);
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride.
          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === 'DEFINE_MANY_MERGED') {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === 'DEFINE_MANY') {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if (process.env.NODE_ENV !== 'production') {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

    var isInherited = name in Constructor;
    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if (process.env.NODE_ENV !== 'production') {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    boundMethod.bind = function (newThis) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
      } else if (!args.length) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  var pairs = component.__reactAutoBindPairs;
  for (var i = 0; i < pairs.length; i += 2) {
    var autoBindKey = pairs[i];
    var method = pairs[i + 1];
    component[autoBindKey] = bindAutoBindMethod(component, method);
  }
}

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function (newState, callback) {
    this.updater.enqueueReplaceState(this, newState);
    if (callback) {
      this.updater.enqueueCallback(this, callback, 'replaceState');
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function () {
    return this.updater.isMounted(this);
  }
};

var ReactClassComponent = function () {};
_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function (spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function (props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (initialState === undefined && this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function (mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactElement = __webpack_require__(18);

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = __webpack_require__(93);
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactElement = __webpack_require__(18);
var ReactPropTypeLocationNames = __webpack_require__(58);
var ReactPropTypesSecret = __webpack_require__(94);

var emptyFunction = __webpack_require__(11);
var getIteratorFn = __webpack_require__(60);
var warning = __webpack_require__(3);

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),
  symbol: createPrimitiveTypeChecker('symbol'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: createElementTypeChecker(),
  instanceOf: createInstanceTypeChecker,
  node: createNodeChecker(),
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
/*eslint-disable no-self-compare*/
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return x !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}
/*eslint-enable no-self-compare*/

/**
 * We use an Error-like object for backward compatibility as people may call
 * PropTypes directly and inspect their output. However we don't use real
 * Errors anymore. We don't inspect their stack anyway, and creating them
 * is prohibitively expensive if they are created too often, such as what
 * happens in oneOfType() for any type before the one that matched.
 */
function PropTypeError(message) {
  this.message = message;
  this.stack = '';
}
// Make `instanceof Error` still work for returned errors.
PropTypeError.prototype = Error.prototype;

function createChainableTypeChecker(validate) {
  if (process.env.NODE_ENV !== 'production') {
    var manualPropTypeCallCache = {};
  }
  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
    componentName = componentName || ANONYMOUS;
    propFullName = propFullName || propName;
    if (process.env.NODE_ENV !== 'production') {
      if (secret !== ReactPropTypesSecret && typeof console !== 'undefined') {
        var cacheKey = componentName + ':' + propName;
        if (!manualPropTypeCallCache[cacheKey]) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will not work in production with the next major version. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName) : void 0;
          manualPropTypeCallCache[cacheKey] = true;
        }
      }
    }
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        if (props[propName] === null) {
          return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
        }
        return new PropTypeError('The ' + locationName + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
      }
      return null;
    } else {
      return validate(props, propName, componentName, location, propFullName);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location, propFullName, secret) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
    }
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    if (!ReactElement.isValidElement(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location, propFullName) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      var actualClassName = getClassName(props[propName]);
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  if (!Array.isArray(expectedValues)) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (is(propValue, expectedValues[i])) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location, propFullName) {
    if (typeof typeChecker !== 'function') {
      return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
    }
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  if (!Array.isArray(arrayOfTypeCheckers)) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
    return emptyFunction.thatReturnsNull;
  }

  function validate(props, propName, componentName, location, propFullName) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location, propFullName) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location, propFullName) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new PropTypeError('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }

      var iteratorFn = getIteratorFn(propValue);
      if (iteratorFn) {
        var iterator = iteratorFn.call(propValue);
        var step;
        if (iteratorFn !== propValue.entries) {
          while (!(step = iterator.next()).done) {
            if (!isNode(step.value)) {
              return false;
            }
          }
        } else {
          // Iterator will provide entry [k,v] tuples rather than values.
          while (!(step = iterator.next()).done) {
            var entry = step.value;
            if (entry) {
              if (!isNode(entry[1])) {
                return false;
              }
            }
          }
        }
      } else {
        return false;
      }

      return true;
    default:
      return false;
  }
}

function isSymbol(propType, propValue) {
  // Native Symbol.
  if (propType === 'symbol') {
    return true;
  }

  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
  if (propValue['@@toStringTag'] === 'Symbol') {
    return true;
  }

  // Fallback for non-spec compliant Symbols which are polyfilled.
  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
    return true;
  }

  return false;
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  if (isSymbol(propType, propValue)) {
    return 'symbol';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

// Returns class name of the object, if any.
function getClassName(propValue) {
  if (!propValue.constructor || !propValue.constructor.name) {
    return ANONYMOUS;
  }
  return propValue.constructor.name;
}

module.exports = ReactPropTypes;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(6);

var ReactComponent = __webpack_require__(56);
var ReactNoopUpdateQueue = __webpack_require__(57);

var emptyObject = __webpack_require__(24);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = ReactPureComponent;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



module.exports = '15.4.2';

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(19);

var ReactPropTypeLocationNames = __webpack_require__(58);
var ReactPropTypesSecret = __webpack_require__(94);

var invariant = __webpack_require__(2);
var warning = __webpack_require__(3);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(9);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = __webpack_require__(9);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */


var _prodInvariant = __webpack_require__(19);

var ReactElement = __webpack_require__(18);

var invariant = __webpack_require__(2);

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(19);

var ReactCurrentOwner = __webpack_require__(13);
var REACT_ELEMENT_TYPE = __webpack_require__(92);

var getIteratorFn = __webpack_require__(60);
var invariant = __webpack_require__(2);
var KeyEscapeUtils = __webpack_require__(228);
var warning = __webpack_require__(3);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  * $script.js JS loader & dependency manager
  * https://github.com/ded/script.js
  * (c) Dustin Diaz 2014 | License MIT
  */

(function (name, definition) {
  if (typeof module != 'undefined' && module.exports) module.exports = definition()
  else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
  else this[name] = definition()
})('$script', function () {
  var doc = document
    , head = doc.getElementsByTagName('head')[0]
    , s = 'string'
    , f = false
    , push = 'push'
    , readyState = 'readyState'
    , onreadystatechange = 'onreadystatechange'
    , list = {}
    , ids = {}
    , delay = {}
    , scripts = {}
    , scriptpath
    , urlArgs

  function every(ar, fn) {
    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f
    return 1
  }
  function each(ar, fn) {
    every(ar, function (el) {
      return !fn(el)
    })
  }

  function $script(paths, idOrDone, optDone) {
    paths = paths[push] ? paths : [paths]
    var idOrDoneIsDone = idOrDone && idOrDone.call
      , done = idOrDoneIsDone ? idOrDone : optDone
      , id = idOrDoneIsDone ? paths.join('') : idOrDone
      , queue = paths.length
    function loopFn(item) {
      return item.call ? item() : list[item]
    }
    function callback() {
      if (!--queue) {
        list[id] = 1
        done && done()
        for (var dset in delay) {
          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])
        }
      }
    }
    setTimeout(function () {
      each(paths, function loading(path, force) {
        if (path === null) return callback()
        
        if (!force && !/^https?:\/\//.test(path) && scriptpath) {
          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;
        }
        
        if (scripts[path]) {
          if (id) ids[id] = 1
          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)
        }

        scripts[path] = 1
        if (id) ids[id] = 1
        create(path, callback)
      })
    }, 0)
    return $script
  }

  function create(path, fn) {
    var el = doc.createElement('script'), loaded
    el.onload = el.onerror = el[onreadystatechange] = function () {
      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;
      el.onload = el[onreadystatechange] = null
      loaded = 1
      scripts[path] = 2
      fn()
    }
    el.async = 1
    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;
    head.insertBefore(el, head.lastChild)
  }

  $script.get = create

  $script.order = function (scripts, id, done) {
    (function callback(s) {
      s = scripts.shift()
      !scripts.length ? $script(s, id, done) : $script(s, callback)
    }())
  }

  $script.path = function (p) {
    scriptpath = p
  }
  $script.urlArgs = function (str) {
    urlArgs = str;
  }
  $script.ready = function (deps, ready, req) {
    deps = deps[push] ? deps : [deps]
    var missing = [];
    !each(deps, function (dep) {
      list[dep] || missing[push](dep);
    }) && every(deps, function (dep) {return list[dep]}) ?
      ready() : !function (key) {
      delay[key] = delay[key] || []
      delay[key][push](ready)
      req && req(missing)
    }(deps.join('|'))
    return $script
  }

  $script.done = function (idOrDone) {
    $script([null], idOrDone)
  }

  return $script
});


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(95), __webpack_require__(0)))

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(240);
exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(96);


/***/ })
/******/ ]);